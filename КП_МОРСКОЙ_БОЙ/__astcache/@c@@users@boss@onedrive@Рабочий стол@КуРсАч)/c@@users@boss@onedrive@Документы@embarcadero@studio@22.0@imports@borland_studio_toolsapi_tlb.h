// ************************************************************************ //
// WARNING                                                                    
// -------                                                                    
// The types declared in this file were generated from data read from a       
// Type Library. If this type library is explicitly or indirectly (via        
// another type library referring to this type library) re-imported, or the   
// 'Refresh' command of the Type Library Editor activated while editing the   
// Type Library, the contents of this file will be regenerated and all        
// manual modifications will be lost.                                         
// ************************************************************************ //

// $Rev: 98350 $
// File generated on 29.05.2022 15:36:41 from Type Library described below.

// ************************************************************************  //
// Type Lib: C:\Program Files (x86)\Embarcadero\Studio\21.0\bin\Borland.Studio.ToolsAPI.tlb (1)
// LIBID: {718062B4-5EB5-4171-AB94-80108322C37E}
// LCID: 0
// Helpfile: 
// HelpString: Embarcadero RAD Studio ToolsAPI Assembly
// DepndLst: 
//   (1) v2.0 stdole, (C:\Windows\SysWOW64\stdole2.tlb)
//   (2) v2.4 mscorlib, (C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.tlb)
//   (3) v2.0 System, (C:\WINDOWS\Microsoft.NET\Framework\v2.0.50727\System.tlb)
//   (4) v2.0 System_Windows_Forms, (C:\WINDOWS\Microsoft.NET\Framework\v2.0.50727\System.Windows.Forms.tlb)
//   (5) v2.0 System_Drawing, (C:\WINDOWS\Microsoft.NET\Framework\v2.0.50727\System.Drawing.tlb)
// SYS_KIND: SYS_WIN32
// ************************************************************************ //
#ifndef   Borland_Studio_ToolsAPI_TLBH
#define   Borland_Studio_ToolsAPI_TLBH

#pragma option push -b -w-inl -w-8118
#pragma pack(push, 4)

#if !defined(__UTILCLS_H)
#include <utilcls.h>
#endif
#if !defined(__UTILCLS_H_VERSION) || (__UTILCLS_H_VERSION < 0x0700)
//
// The code generated by the TLIBIMP utility or the Import|TypeLibrary 
// and Import|ActiveX feature of C++Builder rely on specific versions of
// the header file UTILCLS.H found in the INCLUDE\VCL directory. If an 
// older version of the file is detected, you probably need an update/patch.
//
#error "This file requires a newer version of the header UTILCLS.H" \
       "You need to apply an update/patch to your copy of C++Builder"
#endif
#include <olectl.h>
#include <ocidl.h>
#if defined(USING_ATLVCL) || defined(USING_ATL)
#if !defined(__TLB_NO_EVENT_WRAPPERS)
#include <atl/atlmod.h>
#endif
#endif
#include "mscorlib_TLB.h"
#include "System_TLB.h"
#include "System_Windows_Forms_TLB.h"
#include "System_Drawing_TLB.h"

#include <System.Win.StdVCL.hpp>

typedef TComInterface<System::Win::Stdvcl::IStrings> IStringsPtr;
typedef TComInterface<System::Win::Stdvcl::IStringsDisp> IStringsDispPtr;

namespace Borland_studio_toolsapi_tlb
{

// *********************************************************************//
// HelpString: Embarcadero RAD Studio ToolsAPI Assembly
// Version:    27.0
// *********************************************************************//


// *********************************************************************//
// GUIDS declared in the TypeLibrary. Following prefixes are used:        
//   Type Libraries     : LIBID_xxxx                                      
//   CoClasses          : CLSID_xxxx                                      
//   DISPInterfaces     : DIID_xxxx                                       
//   Non-DISP interfaces: IID_xxxx                                        
// *********************************************************************//
extern __declspec (package) const GUID LIBID_Borland_Studio_ToolsAPI;
extern __declspec (package) const GUID IID__CodeUpdater;
extern __declspec (package) const GUID IID_ILanguage;
extern __declspec (package) const GUID IID_IFileSymbols;
extern __declspec (package) const GUID IID_IFileParse;
extern __declspec (package) const GUID GUID_BlockCompleteType;
extern __declspec (package) const GUID IID_IBlockComplete;
extern __declspec (package) const GUID IID_IOTABrowserModule;
extern __declspec (package) const GUID GUID_MethodNavigateType;
extern __declspec (package) const GUID IID_IMethodNavigate;
extern __declspec (package) const GUID IID_IStringList;
extern __declspec (package) const GUID IID_IProject;
extern __declspec (package) const GUID GUID_TCodeCompletionContext;
extern __declspec (package) const GUID IID_ISymbolsInfo;
extern __declspec (package) const GUID GUID_SourceLocation;
extern __declspec (package) const GUID GUID_SymbolInfo;
extern __declspec (package) const GUID GUID_SymbolAccessFlags;
extern __declspec (package) const GUID GUID_SymbolKind;
extern __declspec (package) const GUID GUID_QueryFlags;
extern __declspec (package) const GUID IID_IInsite;
extern __declspec (package) const GUID GUID_Comment;
extern __declspec (package) const GUID IID_IComments;
extern __declspec (package) const GUID GUID_RegionKind;
extern __declspec (package) const GUID GUID_CodePos;
extern __declspec (package) const GUID GUID_Region;
extern __declspec (package) const GUID IID_IRegions;
extern __declspec (package) const GUID GUID_Error;
extern __declspec (package) const GUID IID_IErrors;
extern __declspec (package) const GUID IID_IModuleInfo;
extern __declspec (package) const GUID IID__StringCollectionAdapter;
extern __declspec (package) const GUID IID__DocumentationManager;
extern __declspec (package) const GUID IID_IRefactoring;
extern __declspec (package) const GUID IID__RefactoringException;
extern __declspec (package) const GUID IID__RefactoringKinds;
extern __declspec (package) const GUID IID__RefactoringHelpContextIds;
extern __declspec (package) const GUID IID_IRefactoringItem;
extern __declspec (package) const GUID IID_IDeclareVariableRefactoringItem;
extern __declspec (package) const GUID IID_IImportScopeRefactoringItem;
extern __declspec (package) const GUID IID_IRefactorable;
extern __declspec (package) const GUID IID__RefactoringEventArgs;
extern __declspec (package) const GUID IID__RefactoringEvent;
extern __declspec (package) const GUID IID_IRefactoringEngine;
extern __declspec (package) const GUID GUID_RefactoringIcon;
extern __declspec (package) const GUID IID_IRefactoringNode;
extern __declspec (package) const GUID IID_IBoldNode;
extern __declspec (package) const GUID IID_IRefactoringFileNode;
extern __declspec (package) const GUID GUID_NodeInsertType;
extern __declspec (package) const GUID IID_IBaseRefactoringUserInterface;
extern __declspec (package) const GUID IID_IRefactoringUserInterface;
extern __declspec (package) const GUID IID_IFindReferenceUserInterface;
extern __declspec (package) const GUID IID_IFindIdentifierRefactoring;
extern __declspec (package) const GUID IID_IRefactoringRegistrar;
extern __declspec (package) const GUID IID__RefactoringRegistrarEventHandler;
extern __declspec (package) const GUID IID__Platforms;
extern __declspec (package) const GUID IID_IOTAHelpInsight;
extern __declspec (package) const GUID IID_IOTAModuleServices;
extern __declspec (package) const GUID GUID_OTAEditPos;
extern __declspec (package) const GUID GUID_OTACharPos;
extern __declspec (package) const GUID GUID_OTASize;
extern __declspec (package) const GUID GUID_OTABlockType;
extern __declspec (package) const GUID IID_IOTAEditBlock;
extern __declspec (package) const GUID IID_IOTABufferOptions;
extern __declspec (package) const GUID IID__OTAEditorFileTypes;
extern __declspec (package) const GUID IID_IOTAEditorService;
extern __declspec (package) const GUID IID_IOTAEditOptions;
extern __declspec (package) const GUID IID_IOTAEditBuffer;
extern __declspec (package) const GUID GUID_OTASearchDirection;
extern __declspec (package) const GUID GUID_OTAMoveCursorMasks;
extern __declspec (package) const GUID IID_IOTASearchOptions;
extern __declspec (package) const GUID IID_IOTAReplaceOptions;
extern __declspec (package) const GUID GUID_OTARipFlags;
extern __declspec (package) const GUID IID_IOTAEditPosition;
extern __declspec (package) const GUID GUID_OTASyntaxAttributes;
extern __declspec (package) const GUID GUID_OTALineFlags;
extern __declspec (package) const GUID GUID_OTAOperation;
extern __declspec (package) const GUID IID_IOTAEditView;
extern __declspec (package) const GUID IID_IOTAElideActions;
extern __declspec (package) const GUID IID_IOTAEditor;
extern __declspec (package) const GUID IID_IOTAProjectResource;
extern __declspec (package) const GUID GUID_TOTAResHeaderValue;
extern __declspec (package) const GUID IID_IOTAResourceEntry;
extern __declspec (package) const GUID IID_IOTAEditorContent;
extern __declspec (package) const GUID IID__ViewActivatedEventArgs;
extern __declspec (package) const GUID IID__ViewNotificationEventArgs;
extern __declspec (package) const GUID IID__ViewActivatedEventHandler;
extern __declspec (package) const GUID IID__ViewNotificationEventHandler;
extern __declspec (package) const GUID IID_IOTASourceEditor;
extern __declspec (package) const GUID IID__RenameNotificationEventArgs;
extern __declspec (package) const GUID IID__RenameNotificationEventHandler;
extern __declspec (package) const GUID IID_IOTAModule;
extern __declspec (package) const GUID IID_IOTADotNetModule;
extern __declspec (package) const GUID IID_IOTADotNetProject;
extern __declspec (package) const GUID IID_IOTAReference;
extern __declspec (package) const GUID IID_IOTAReferences;
extern __declspec (package) const GUID IID_IOTAModuleInfo;
extern __declspec (package) const GUID IID_IOTACodeDomProvider;
extern __declspec (package) const GUID IID__ModuleAddedRemovedEventArgs;
extern __declspec (package) const GUID IID__ModuleRenamedEventArgs;
extern __declspec (package) const GUID IID__ModuleAddedRemovedEventHandler;
extern __declspec (package) const GUID IID__ModuleRenamedEventHandler;
extern __declspec (package) const GUID IID_IOTAProject;
extern __declspec (package) const GUID IID_IOTAProjectMainSource;
extern __declspec (package) const GUID IID_IOTAProjectLicenseProvider;
extern __declspec (package) const GUID IID_IOTAProjectConfigurationProvider;
extern __declspec (package) const GUID GUID_OTACompileMode;
extern __declspec (package) const GUID IID_IOTAProjectBuilder;
extern __declspec (package) const GUID GUID_OTATypeKind;
extern __declspec (package) const GUID IID_IOTAOptionNames;
extern __declspec (package) const GUID IID_IOTAOptions;
extern __declspec (package) const GUID IID_IOTAProjectOptions;
extern __declspec (package) const GUID IID_IOTABuildConfiguration;
extern __declspec (package) const GUID IID_IOTAProjectOptionsConfigurations;
extern __declspec (package) const GUID IID_IOTAProjectGroup;
extern __declspec (package) const GUID IID_IOTAProjectDependenciesList;
extern __declspec (package) const GUID IID_IOTAProjectGroupProjectDependencies;
extern __declspec (package) const GUID IID_IOTASearchPaths;
extern __declspec (package) const GUID IID_IOTAAssemblySearchPathService;
extern __declspec (package) const GUID IID_IOTAPersistenceManager;
extern __declspec (package) const GUID IID__ToolboxItemEventArgs;
extern __declspec (package) const GUID IID__ToolboxItemAddedEventArgs;
extern __declspec (package) const GUID IID__TOTAHandle;
extern __declspec (package) const GUID IID__gccEventArgs;
extern __declspec (package) const GUID IID__ToolboxItemEventHandler;
extern __declspec (package) const GUID IID__ToolboxItemAddedEventHandler;
extern __declspec (package) const GUID IID_IOTAToolboxServiceEvents;
extern __declspec (package) const GUID IID_IOTAEventMethodsService;
extern __declspec (package) const GUID IID_IBorlandIDEServices;
extern __declspec (package) const GUID CLSID_BorlandIDE;
extern __declspec (package) const GUID IID_IOTAVirtualFileService;
extern __declspec (package) const GUID IID_IOTAVirtualFile;
extern __declspec (package) const GUID IID_IOTAFileReader;
extern __declspec (package) const GUID IID_IOTAFileWriter;
extern __declspec (package) const GUID IID_IOTACodeDomGeneratorOptions;
extern __declspec (package) const GUID IID_IOTACodeDomFile;
extern __declspec (package) const GUID IID_IOTAInstalledToolboxItem;
extern __declspec (package) const GUID IID_IOTAComponentInstallService;
extern __declspec (package) const GUID IID_IOTAModuleHandlerGauntletMember;
extern __declspec (package) const GUID IID_IOTAModuleHandlerGauntletService;
extern __declspec (package) const GUID IID_IOTAAddReferenceDialog;
extern __declspec (package) const GUID IID_IOTAAddInService;
extern __declspec (package) const GUID IID_IOTABitmapService;
extern __declspec (package) const GUID IID__AssemblyUnloadedEventArgs;
extern __declspec (package) const GUID IID__AssemblyUnloadedEventHandler;
extern __declspec (package) const GUID IID_IOTAAssemblyUnloadedService;
extern __declspec (package) const GUID GUID_OTAMessageKind;
extern __declspec (package) const GUID IID_IOTAMessageGroup;
extern __declspec (package) const GUID IID__MessageGroupEventArgs;
extern __declspec (package) const GUID IID_IOTACustomMessage;
extern __declspec (package) const GUID IID__MessageGroupHandler;
extern __declspec (package) const GUID IID_IOTAMessageService;
extern __declspec (package) const GUID GUID_OTAFileNotification;
extern __declspec (package) const GUID IID_IOTAEnvironmentOptions;
extern __declspec (package) const GUID IID_IFileNotificationEventArgs;
extern __declspec (package) const GUID IID__FileNotificationEventArgs;
extern __declspec (package) const GUID IID_IBeforeCompileEventArgs;
extern __declspec (package) const GUID IID__BeforeCompileArgs;
extern __declspec (package) const GUID IID_IAfterCompileEventArgs;
extern __declspec (package) const GUID IID__AfterCompileArgs;
extern __declspec (package) const GUID IID__FileNotificationHandler;
extern __declspec (package) const GUID IID__BeforeCompileHandler;
extern __declspec (package) const GUID IID__AfterCompileHandler;
extern __declspec (package) const GUID IID_IOTAService;
extern __declspec (package) const GUID IID_IOTADotNetObjectInspectorService;
extern __declspec (package) const GUID IID_IOTACultureInfo;
extern __declspec (package) const GUID IID_IOTAMenuItem;
extern __declspec (package) const GUID IID__OTAContainerTypes;
extern __declspec (package) const GUID IID_IOTAProjectMenuCreatorNotifier;
extern __declspec (package) const GUID IID_IOTAProjectManagerMenuServices;
extern __declspec (package) const GUID IID_IOTAProjectManager;
extern __declspec (package) const GUID GUID_OTAMenuItemLocation;
extern __declspec (package) const GUID IID_IOTAMainMenuService;
extern __declspec (package) const GUID IID__OTADesignerTypes;
extern __declspec (package) const GUID IID__OTACreatorTypes;
extern __declspec (package) const GUID IID__OTAIDEPersonalities;
extern __declspec (package) const GUID IID__OTAGalleryCategories;
extern __declspec (package) const GUID IID_IOTAFile;
extern __declspec (package) const GUID IID_IOTACreator;
extern __declspec (package) const GUID IID_IOTAModuleCreator;
extern __declspec (package) const GUID IID_IOTAProjectCreator;
extern __declspec (package) const GUID IID_IOTAProjectGroupCreator;
extern __declspec (package) const GUID IID_IOTAActionService;
extern __declspec (package) const GUID GUID_OTACodeCompleteStyle;
extern __declspec (package) const GUID IID_IOTAEditActions;
extern __declspec (package) const GUID IID_IOTAWizard;
extern __declspec (package) const GUID IID_IOTARepositoryWizard;
extern __declspec (package) const GUID IID_IOTAGalleryCategory;
extern __declspec (package) const GUID IID_IOTAGalleryCategoryManager;
extern __declspec (package) const GUID IID_IOTAFormWizard;
extern __declspec (package) const GUID IID_IOTAProjectWizard;
extern __declspec (package) const GUID IID_IOTAMenuWizard;
extern __declspec (package) const GUID IID_IOTAWizardService;
extern __declspec (package) const GUID IID_IOTAAboutBoxService;
extern __declspec (package) const GUID IID_IOTASplashScreenService;
extern __declspec (package) const GUID IID_IOTAPersonalityService;
extern __declspec (package) const GUID IID__OTAFile;
extern __declspec (package) const GUID GUID_OTAAffect;
extern __declspec (package) const GUID GUID_OTASizeAffect;
extern __declspec (package) const GUID GUID_OTAAlignableState;
extern __declspec (package) const GUID IID_IOTAAlignable;
extern __declspec (package) const GUID IID_IOTAAlignableState;
extern __declspec (package) const GUID IID_IOTAScaleable;
extern __declspec (package) const GUID IID_IOTATabOrderable;
extern __declspec (package) const GUID IID_IOTACreateOrderable;
extern __declspec (package) const GUID IID_INTAComponent;
extern __declspec (package) const GUID IID_IOTAGetChildCallback;
extern __declspec (package) const GUID IID__TOTAGetChildCallback;
extern __declspec (package) const GUID IID_IOTAComponent;
extern __declspec (package) const GUID IID__ComponentRenamedEventArgs;
extern __declspec (package) const GUID IID__ComponentRenamedEventHandler;
extern __declspec (package) const GUID IID_IOTAFormEditor;
extern __declspec (package) const GUID IID_INTAFormEditor;
extern __declspec (package) const GUID IID_IOTAStreamModifyTime;
extern __declspec (package) const GUID IID_IOTAFileFilter;
extern __declspec (package) const GUID IID_IOTAFileSystem;
extern __declspec (package) const GUID GUID_NTAPaintIconSize;
extern __declspec (package) const GUID GUID_PalDragState;
extern __declspec (package) const GUID IID_INTAPalettePaintIcon;
extern __declspec (package) const GUID IID_IOTAPaletteDragAcceptor;
extern __declspec (package) const GUID IID_IOTADesignerDragAcceptor;
extern __declspec (package) const GUID IID_IOTACodeEditorDragAcceptor;
extern __declspec (package) const GUID IID_IOTAPaletteDragDropOp;
extern __declspec (package) const GUID IID_IOTABasePaletteItem;
extern __declspec (package) const GUID IID_IOTAComponentPaletteItem;
extern __declspec (package) const GUID IID_IOTAPaletteGroup;
extern __declspec (package) const GUID GUID_OTAPaletteColorItem;
extern __declspec (package) const GUID GUID_OTAPaletteButtonColors;
extern __declspec (package) const GUID IID_IOTAPaletteColorScheme;
extern __declspec (package) const GUID IID__ItemEventArgs;
extern __declspec (package) const GUID IID__SelectedEventArgs;
extern __declspec (package) const GUID IID__ItemEventHandler;
extern __declspec (package) const GUID IID__SelectedEventHandler;
extern __declspec (package) const GUID IID_IOTAPaletteServices;
extern __declspec (package) const GUID IID_IOTAPackageInstallService;
extern __declspec (package) const GUID IID_IOTAPackageInformation;
extern __declspec (package) const GUID GUID_OTAComponentImageSize;
extern __declspec (package) const GUID IID_IOTAPackageComponent;
extern __declspec (package) const GUID IID_IOTAComponentList;
extern __declspec (package) const GUID IID_IOTAPackageRequires;
extern __declspec (package) const GUID IID_IOTASymbolHelp;
extern __declspec (package) const GUID GUID_OTAChildUpdateKind;
extern __declspec (package) const GUID GUID_OTADragState;
extern __declspec (package) const GUID GUID_OTADropMode;
extern __declspec (package) const GUID GUID_OTANodePreservationMode;
extern __declspec (package) const GUID IID_IOTAStructureContext;
extern __declspec (package) const GUID IID_IOTAStructureNodeStatePreserver;
extern __declspec (package) const GUID IID_IOTAStructureContextToolbar;
extern __declspec (package) const GUID IID_IOTAStructureContextEditActions;
extern __declspec (package) const GUID IID_IOTAStructureContextKeyHandler;
extern __declspec (package) const GUID IID_IOTADragStructureContext;
extern __declspec (package) const GUID IID_IOTAStructureNode;
extern __declspec (package) const GUID IID_IOTASortableStructureNode;
extern __declspec (package) const GUID IID_IOTAEditableStructureNode;
extern __declspec (package) const GUID IID_IOTANavigableStructureNode;
extern __declspec (package) const GUID IID_IOTADragStructureNode;
extern __declspec (package) const GUID IID_IOTAStructureNodePopup;
extern __declspec (package) const GUID IID_IOTAStructureNodeMenuItem;
extern __declspec (package) const GUID IID__ContextEventArgs;
extern __declspec (package) const GUID IID__NodeEventArgs;
extern __declspec (package) const GUID IID__VisibleEventArgs;
extern __declspec (package) const GUID IID__OTAStructureType;
extern __declspec (package) const GUID IID__OTANodeType;
extern __declspec (package) const GUID IID__OTAStructureViewOptions;
extern __declspec (package) const GUID IID__ContextEventHandler;
extern __declspec (package) const GUID IID__NodeEventHandler;
extern __declspec (package) const GUID IID__VisibleEventHandler;
extern __declspec (package) const GUID IID_IOTAStructureView;
extern __declspec (package) const GUID GUID_TOTAHistoryStyle;
extern __declspec (package) const GUID IID_IOTAFileHistoryManager;
extern __declspec (package) const GUID IID_IOTAFileHistoryProvider;
extern __declspec (package) const GUID IID_IOTAFileHistory;
extern __declspec (package) const GUID IID_IInteropCodeEditorControl;
extern __declspec (package) const GUID IID_IInteropCodeEditorControlCreator;
extern __declspec (package) const GUID IID_IOTARegistrationService;
extern __declspec (package) const GUID IID_IOTAProjectFileStorageNotifier;
extern __declspec (package) const GUID IID_IOTAProjectFileStorage;
extern __declspec (package) const GUID IID_IOTACodeBrowsePreview;
extern __declspec (package) const GUID IID_IOTATimerServices;
extern __declspec (package) const GUID IID_IOTAHelpTrait;
extern __declspec (package) const GUID IID_IOTAPersonalityHelpTrait;
extern __declspec (package) const GUID IID_IOTAHelpServices;
extern __declspec (package) const GUID CLSID_CodeUpdater;
extern __declspec (package) const GUID CLSID_StringCollectionAdapter;
extern __declspec (package) const GUID CLSID_DocumentationManager;
extern __declspec (package) const GUID CLSID_RefactoringException;
extern __declspec (package) const GUID CLSID_RefactoringKinds;
extern __declspec (package) const GUID CLSID_RefactoringHelpContextIds;
extern __declspec (package) const GUID CLSID_RefactoringEventArgs;
extern __declspec (package) const GUID CLSID_RefactoringEvent;
extern __declspec (package) const GUID CLSID_RefactoringRegistrarEventHandler;
extern __declspec (package) const GUID CLSID_Platforms;
extern __declspec (package) const GUID CLSID_OTAEditorFileTypes;
extern __declspec (package) const GUID CLSID_ViewActivatedEventArgs;
extern __declspec (package) const GUID CLSID_ViewNotificationEventArgs;
extern __declspec (package) const GUID CLSID_ViewActivatedEventHandler;
extern __declspec (package) const GUID CLSID_ViewNotificationEventHandler;
extern __declspec (package) const GUID CLSID_RenameNotificationEventArgs;
extern __declspec (package) const GUID CLSID_RenameNotificationEventHandler;
extern __declspec (package) const GUID CLSID_ModuleAddedRemovedEventArgs;
extern __declspec (package) const GUID CLSID_ModuleRenamedEventArgs;
extern __declspec (package) const GUID CLSID_ModuleAddedRemovedEventHandler;
extern __declspec (package) const GUID CLSID_ModuleRenamedEventHandler;
extern __declspec (package) const GUID CLSID_ToolboxItemEventArgs;
extern __declspec (package) const GUID CLSID_ToolboxItemAddedEventArgs;
extern __declspec (package) const GUID CLSID_TOTAHandle;
extern __declspec (package) const GUID CLSID_gccEventArgs;
extern __declspec (package) const GUID CLSID_ToolboxItemEventHandler;
extern __declspec (package) const GUID CLSID_ToolboxItemAddedEventHandler;
extern __declspec (package) const GUID CLSID_AssemblyUnloadedEventArgs;
extern __declspec (package) const GUID CLSID_AssemblyUnloadedEventHandler;
extern __declspec (package) const GUID CLSID_MessageGroupEventArgs;
extern __declspec (package) const GUID CLSID_MessageGroupHandler;
extern __declspec (package) const GUID CLSID_FileNotificationEventArgs;
extern __declspec (package) const GUID CLSID_BeforeCompileArgs;
extern __declspec (package) const GUID CLSID_AfterCompileArgs;
extern __declspec (package) const GUID CLSID_FileNotificationHandler;
extern __declspec (package) const GUID CLSID_BeforeCompileHandler;
extern __declspec (package) const GUID CLSID_AfterCompileHandler;
extern __declspec (package) const GUID CLSID_OTAContainerTypes;
extern __declspec (package) const GUID CLSID_OTADesignerTypes;
extern __declspec (package) const GUID CLSID_OTACreatorTypes;
extern __declspec (package) const GUID CLSID_OTAIDEPersonalities;
extern __declspec (package) const GUID CLSID_OTAGalleryCategories;
extern __declspec (package) const GUID CLSID_OTAFile;
extern __declspec (package) const GUID CLSID_TOTAGetChildCallback;
extern __declspec (package) const GUID CLSID_ComponentRenamedEventArgs;
extern __declspec (package) const GUID CLSID_ComponentRenamedEventHandler;
extern __declspec (package) const GUID CLSID_ItemEventArgs;
extern __declspec (package) const GUID CLSID_SelectedEventArgs;
extern __declspec (package) const GUID CLSID_ItemEventHandler;
extern __declspec (package) const GUID CLSID_SelectedEventHandler;
extern __declspec (package) const GUID CLSID_ContextEventArgs;
extern __declspec (package) const GUID CLSID_NodeEventArgs;
extern __declspec (package) const GUID CLSID_VisibleEventArgs;
extern __declspec (package) const GUID CLSID_OTAStructureType;
extern __declspec (package) const GUID CLSID_OTANodeType;
extern __declspec (package) const GUID CLSID_OTAStructureViewOptions;
extern __declspec (package) const GUID CLSID_ContextEventHandler;
extern __declspec (package) const GUID CLSID_NodeEventHandler;
extern __declspec (package) const GUID CLSID_VisibleEventHandler;

// *********************************************************************//
// Forward declaration of types defined in TypeLibrary                    
// *********************************************************************//
enum class    BlockCompleteType;
enum class    MethodNavigateType;
enum class    TCodeCompletionContext;
struct    SourceLocation;
struct    SymbolInfo;
enum class    SymbolAccessFlags;
enum class    SymbolKind;
enum class    QueryFlags;
struct    Comment;
enum class    RegionKind;
struct    CodePos;
struct    Region;
struct    Error;
enum class    RefactoringIcon;
enum class    NodeInsertType;
struct    OTAEditPos;
struct    OTACharPos;
struct    OTASize;
enum class    OTABlockType;
enum class    OTASearchDirection;
enum class    OTAMoveCursorMasks;
enum class    OTARipFlags;
enum class    OTASyntaxAttributes;
enum class    OTALineFlags;
enum class    OTAOperation;
enum class    TOTAResHeaderValue;
enum class    OTACompileMode;
enum class    OTATypeKind;
enum class    OTAMessageKind;
enum class    OTAFileNotification;
enum class    OTAMenuItemLocation;
enum class    OTACodeCompleteStyle;
enum class    OTAAffect;
enum class    OTASizeAffect;
enum class    OTAAlignableState;
enum class    NTAPaintIconSize;
enum class    PalDragState;
struct    OTAPaletteColorItem;
struct    OTAPaletteButtonColors;
enum class    OTAComponentImageSize;
enum class    OTAChildUpdateKind;
enum class    OTADragState;
enum class    OTADropMode;
enum class    OTANodePreservationMode;
enum class    TOTAHistoryStyle;
interface DECLSPEC_UUID("{400786A2-A2FF-3714-AD36-1A87580A56B4}") _CodeUpdater;
typedef TComInterface<_CodeUpdater, &IID__CodeUpdater> _CodeUpdaterPtr;

interface DECLSPEC_UUID("{52140F24-D25C-399C-BB6C-EDF1625DA50A}") ILanguage;
typedef TComInterface<ILanguage, &IID_ILanguage> ILanguagePtr;

interface DECLSPEC_UUID("{4BC0FA96-F783-339A-9E65-21E2F36F0553}") IFileSymbols;
typedef TComInterface<IFileSymbols, &IID_IFileSymbols> IFileSymbolsPtr;

interface DECLSPEC_UUID("{325F8844-7EC5-3867-8281-BB3DD9934766}") IFileParse;
typedef TComInterface<IFileParse, &IID_IFileParse> IFileParsePtr;

interface DECLSPEC_UUID("{7AEB3A47-55DB-3E61-B114-30D8557FD3F2}") IBlockComplete;
typedef TComInterface<IBlockComplete, &IID_IBlockComplete> IBlockCompletePtr;

interface DECLSPEC_UUID("{10F40E7C-2D93-45B4-B776-36A50D7511F8}") IOTABrowserModule;
typedef TComInterface<IOTABrowserModule, &IID_IOTABrowserModule> IOTABrowserModulePtr;

interface DECLSPEC_UUID("{711E1D36-28A1-345B-9FB6-6814FF9005B5}") IMethodNavigate;
typedef TComInterface<IMethodNavigate, &IID_IMethodNavigate> IMethodNavigatePtr;

interface DECLSPEC_UUID("{A987910E-C8B2-3C42-8063-06E02F35351A}") IStringList;
typedef TComInterface<IStringList, &IID_IStringList> IStringListPtr;

interface DECLSPEC_UUID("{BF4941E6-EDBD-47BD-8839-B404170740F4}") IProject;
typedef TComInterface<IProject, &IID_IProject> IProjectPtr;

interface DECLSPEC_UUID("{379617BD-F801-3978-A81D-7D406B8CF047}") ISymbolsInfo;
typedef TComInterface<ISymbolsInfo, &IID_ISymbolsInfo> ISymbolsInfoPtr;

interface DECLSPEC_UUID("{529A4ED6-D770-3F07-89FA-4D5237BB1126}") IInsite;
typedef TComInterface<IInsite, &IID_IInsite> IInsitePtr;

interface DECLSPEC_UUID("{9B70D729-12E1-3161-84FA-18CD633683F9}") IComments;
typedef TComInterface<IComments, &IID_IComments> ICommentsPtr;

interface DECLSPEC_UUID("{5AD8A626-94F3-3EC9-839A-F4A509E2D38E}") IRegions;
typedef TComInterface<IRegions, &IID_IRegions> IRegionsPtr;

interface DECLSPEC_UUID("{7F2B5BB4-D61D-3E6A-A7B6-0F1EA4A5C2F5}") IErrors;
typedef TComInterface<IErrors, &IID_IErrors> IErrorsPtr;

interface DECLSPEC_UUID("{EE6AF2AE-D709-3996-BA89-5A604C4C0B3C}") IModuleInfo;
typedef TComInterface<IModuleInfo, &IID_IModuleInfo> IModuleInfoPtr;

interface DECLSPEC_UUID("{0BC2F4A5-350A-3882-B8B3-BA6DE48E200A}") _StringCollectionAdapter;
typedef TComInterface<_StringCollectionAdapter, &IID__StringCollectionAdapter> _StringCollectionAdapterPtr;

interface DECLSPEC_UUID("{82710262-BC20-34DE-B3DC-3343AB64A090}") _DocumentationManager;
typedef TComInterface<_DocumentationManager, &IID__DocumentationManager> _DocumentationManagerPtr;

interface DECLSPEC_UUID("{20163D8A-B5BB-39E5-90D3-6CED95A15A69}") IRefactoring;
typedef TComInterface<IRefactoring, &IID_IRefactoring> IRefactoringPtr;

interface DECLSPEC_UUID("{16926FE4-1BE2-3EFE-BB38-BFFEE9517BDB}") _RefactoringException;
typedef TComInterface<_RefactoringException, &IID__RefactoringException> _RefactoringExceptionPtr;

interface DECLSPEC_UUID("{A5B0C318-839F-3CC7-8507-8D73312BFE10}") _RefactoringKinds;
typedef TComInterface<_RefactoringKinds, &IID__RefactoringKinds> _RefactoringKindsPtr;

interface DECLSPEC_UUID("{D42A8462-B20E-3611-85A5-7086BD2690FF}") _RefactoringHelpContextIds;
typedef TComInterface<_RefactoringHelpContextIds, &IID__RefactoringHelpContextIds> _RefactoringHelpContextIdsPtr;

interface DECLSPEC_UUID("{AB8BE244-9291-3A05-9C56-29B82E1177A5}") IRefactoringItem;
typedef TComInterface<IRefactoringItem, &IID_IRefactoringItem> IRefactoringItemPtr;

interface DECLSPEC_UUID("{27AE3BC6-E171-33B9-8147-C5F74BA1F818}") IDeclareVariableRefactoringItem;
typedef TComInterface<IDeclareVariableRefactoringItem, &IID_IDeclareVariableRefactoringItem> IDeclareVariableRefactoringItemPtr;

interface DECLSPEC_UUID("{58411D13-D08E-3B57-A2D2-99B1C4974A9C}") IImportScopeRefactoringItem;
typedef TComInterface<IImportScopeRefactoringItem, &IID_IImportScopeRefactoringItem> IImportScopeRefactoringItemPtr;

interface DECLSPEC_UUID("{6F5BCCA3-04E2-3B07-AACC-709FC958278A}") IRefactorable;
typedef TComInterface<IRefactorable, &IID_IRefactorable> IRefactorablePtr;

interface DECLSPEC_UUID("{0C3D6B68-8238-3301-A34B-1F7806273B4E}") _RefactoringEventArgs;
typedef TComInterface<_RefactoringEventArgs, &IID__RefactoringEventArgs> _RefactoringEventArgsPtr;

interface DECLSPEC_UUID("{191DF914-7AFD-3E49-B4A9-0EA9EE0F800D}") _RefactoringEvent;
typedef TComInterface<_RefactoringEvent, &IID__RefactoringEvent> _RefactoringEventPtr;

interface DECLSPEC_UUID("{CB56BAD6-B387-39A8-8321-5CBC270DD7DD}") IRefactoringEngine;
typedef TComInterface<IRefactoringEngine, &IID_IRefactoringEngine> IRefactoringEnginePtr;

interface DECLSPEC_UUID("{98FD5A08-D076-36AF-A9C6-BDD9DA6ECC3B}") IRefactoringNode;
typedef TComInterface<IRefactoringNode, &IID_IRefactoringNode> IRefactoringNodePtr;

interface DECLSPEC_UUID("{F161CCE5-BF7B-3789-956C-24474506EC45}") IBoldNode;
typedef TComInterface<IBoldNode, &IID_IBoldNode> IBoldNodePtr;

interface DECLSPEC_UUID("{AD2C828B-04F2-3F73-AA1E-8423B34B1D5B}") IRefactoringFileNode;
typedef TComInterface<IRefactoringFileNode, &IID_IRefactoringFileNode> IRefactoringFileNodePtr;

interface DECLSPEC_UUID("{5BDA4177-24B2-3439-8566-FD3DA833A7C0}") IBaseRefactoringUserInterface;
typedef TComInterface<IBaseRefactoringUserInterface, &IID_IBaseRefactoringUserInterface> IBaseRefactoringUserInterfacePtr;

interface DECLSPEC_UUID("{CB03956A-3CDF-35F9-9457-D7F456A05BE4}") IRefactoringUserInterface;
typedef TComInterface<IRefactoringUserInterface, &IID_IRefactoringUserInterface> IRefactoringUserInterfacePtr;

interface DECLSPEC_UUID("{C06264F1-A014-3EA5-B09E-6C7D032764E2}") IFindReferenceUserInterface;
typedef TComInterface<IFindReferenceUserInterface, &IID_IFindReferenceUserInterface> IFindReferenceUserInterfacePtr;

interface DECLSPEC_UUID("{F542F4E7-4AF1-3BEE-A693-F20B3393A111}") IFindIdentifierRefactoring;
typedef TComInterface<IFindIdentifierRefactoring, &IID_IFindIdentifierRefactoring> IFindIdentifierRefactoringPtr;

interface DECLSPEC_UUID("{71BF7B07-B420-3E5A-979A-03BFF80FCCBE}") IRefactoringRegistrar;
typedef TComInterface<IRefactoringRegistrar, &IID_IRefactoringRegistrar> IRefactoringRegistrarPtr;

interface DECLSPEC_UUID("{E374BD1F-8457-30A6-9B09-B934711DDACF}") _RefactoringRegistrarEventHandler;
typedef TComInterface<_RefactoringRegistrarEventHandler, &IID__RefactoringRegistrarEventHandler> _RefactoringRegistrarEventHandlerPtr;

interface DECLSPEC_UUID("{78E17028-1AD5-3077-972A-189336D59753}") _Platforms;
typedef TComInterface<_Platforms, &IID__Platforms> _PlatformsPtr;

interface DECLSPEC_UUID("{D05FBF46-8468-4934-BF70-7EAE1AB8FEAB}") IOTAHelpInsight;
typedef TComInterface<IOTAHelpInsight, &IID_IOTAHelpInsight> IOTAHelpInsightPtr;

interface DECLSPEC_UUID("{D1FB17B4-C46C-4C65-97AF-1BA38016E80D}") IOTAModuleServices;
typedef TComInterface<IOTAModuleServices, &IID_IOTAModuleServices> IOTAModuleServicesPtr;

interface DECLSPEC_UUID("{F668E20A-7DCF-4D9D-82B1-EB5A6D32FD18}") IOTAEditBlock;
typedef TComInterface<IOTAEditBlock, &IID_IOTAEditBlock> IOTAEditBlockPtr;

interface DECLSPEC_UUID("{D724AD3A-A9A3-47CB-A160-B29BB427B34F}") IOTABufferOptions;
typedef TComInterface<IOTABufferOptions, &IID_IOTABufferOptions> IOTABufferOptionsPtr;

interface DECLSPEC_UUID("{D3BE9DD0-F947-3AC2-8F33-675A038E0E81}") _OTAEditorFileTypes;
typedef TComInterface<_OTAEditorFileTypes, &IID__OTAEditorFileTypes> _OTAEditorFileTypesPtr;

interface DECLSPEC_UUID("{B51B7655-F1F7-477D-9B35-395BFB5BA9AA}") IOTAEditorService;
typedef TComInterface<IOTAEditorService, &IID_IOTAEditorService> IOTAEditorServicePtr;

interface DECLSPEC_UUID("{CD847E36-EBE2-4448-9106-4D67835D4995}") IOTAEditOptions;
typedef TComInterface<IOTAEditOptions, &IID_IOTAEditOptions> IOTAEditOptionsPtr;

interface DECLSPEC_UUID("{7F71A0BA-1A6D-411C-B763-73434ACD7DF5}") IOTAEditBuffer;
typedef TComInterface<IOTAEditBuffer, &IID_IOTAEditBuffer> IOTAEditBufferPtr;

interface DECLSPEC_UUID("{29D0A5EE-10B9-4792-B7EE-8A462A28BDCE}") IOTASearchOptions;
typedef TComInterface<IOTASearchOptions, &IID_IOTASearchOptions> IOTASearchOptionsPtr;

interface DECLSPEC_UUID("{4FAFD11A-91B1-41D5-BCA7-8B0C2389D37C}") IOTAReplaceOptions;
typedef TComInterface<IOTAReplaceOptions, &IID_IOTAReplaceOptions> IOTAReplaceOptionsPtr;

interface DECLSPEC_UUID("{64962216-E0E1-458F-B984-38561573DE94}") IOTAEditPosition;
typedef TComInterface<IOTAEditPosition, &IID_IOTAEditPosition> IOTAEditPositionPtr;

interface DECLSPEC_UUID("{A97FEAE3-7BE3-458D-B6B2-4A9EF6400AFC}") IOTAEditView;
typedef TComInterface<IOTAEditView, &IID_IOTAEditView> IOTAEditViewPtr;

interface DECLSPEC_UUID("{BC19685E-1C37-4492-81E8-BDB8634C6F8C}") IOTAElideActions;
typedef TComInterface<IOTAElideActions, &IID_IOTAElideActions> IOTAElideActionsPtr;

interface DECLSPEC_UUID("{614847EC-D01E-4170-8F12-58E5A162F250}") IOTAEditor;
typedef TComInterface<IOTAEditor, &IID_IOTAEditor> IOTAEditorPtr;

interface DECLSPEC_UUID("{C706DF59-7EDF-4E70-98F5-765F195F930C}") IOTAProjectResource;
typedef TComInterface<IOTAProjectResource, &IID_IOTAProjectResource> IOTAProjectResourcePtr;

interface DECLSPEC_UUID("{C198D6D5-145C-40D0-8E4E-9261FCE5C21F}") IOTAResourceEntry;
typedef TComInterface<IOTAResourceEntry, &IID_IOTAResourceEntry> IOTAResourceEntryPtr;

interface DECLSPEC_UUID("{F203BC3F-2DA9-4F40-B05D-8EA610F24B2E}") IOTAEditorContent;
typedef TComInterface<IOTAEditorContent, &IID_IOTAEditorContent> IOTAEditorContentPtr;

interface DECLSPEC_UUID("{329F6CBF-1039-366A-8E14-57D7C3E7B0CB}") _ViewActivatedEventArgs;
typedef TComInterface<_ViewActivatedEventArgs, &IID__ViewActivatedEventArgs> _ViewActivatedEventArgsPtr;

interface DECLSPEC_UUID("{4A746E50-D362-3EEB-948F-70E30834C620}") _ViewNotificationEventArgs;
typedef TComInterface<_ViewNotificationEventArgs, &IID__ViewNotificationEventArgs> _ViewNotificationEventArgsPtr;

interface DECLSPEC_UUID("{8C5CE0CB-419E-372B-9730-345188F4FE46}") _ViewActivatedEventHandler;
typedef TComInterface<_ViewActivatedEventHandler, &IID__ViewActivatedEventHandler> _ViewActivatedEventHandlerPtr;

interface DECLSPEC_UUID("{21C2C2F6-77F7-342C-84D8-1ABBC6ECE631}") _ViewNotificationEventHandler;
typedef TComInterface<_ViewNotificationEventHandler, &IID__ViewNotificationEventHandler> _ViewNotificationEventHandlerPtr;

interface DECLSPEC_UUID("{FB7521C9-358F-4F81-AAE6-590B64A74107}") IOTASourceEditor;
typedef TComInterface<IOTASourceEditor, &IID_IOTASourceEditor> IOTASourceEditorPtr;

interface DECLSPEC_UUID("{12CB5FE4-DB0F-39B9-BB64-AF97C7B8C5D2}") _RenameNotificationEventArgs;
typedef TComInterface<_RenameNotificationEventArgs, &IID__RenameNotificationEventArgs> _RenameNotificationEventArgsPtr;

interface DECLSPEC_UUID("{D4246AF0-AA90-3FAD-9A4D-64E12E8609C4}") _RenameNotificationEventHandler;
typedef TComInterface<_RenameNotificationEventHandler, &IID__RenameNotificationEventHandler> _RenameNotificationEventHandlerPtr;

interface DECLSPEC_UUID("{9F18CD2A-DCEE-48D9-8507-4C45D3D1F551}") IOTAModule;
typedef TComInterface<IOTAModule, &IID_IOTAModule> IOTAModulePtr;

interface DECLSPEC_UUID("{DD4C2119-66FA-4166-A62A-22E3C9236291}") IOTADotNetModule;
typedef TComInterface<IOTADotNetModule, &IID_IOTADotNetModule> IOTADotNetModulePtr;

interface DECLSPEC_UUID("{7E063121-7FCB-406D-AF70-E07D618D88C8}") IOTADotNetProject;
typedef TComInterface<IOTADotNetProject, &IID_IOTADotNetProject> IOTADotNetProjectPtr;

interface DECLSPEC_UUID("{35BC768A-B1A2-4036-8F9E-8C2D986D831A}") IOTAReference;
typedef TComInterface<IOTAReference, &IID_IOTAReference> IOTAReferencePtr;

interface DECLSPEC_UUID("{6100CC1A-E0D4-4600-A889-5C510E8BC9EA}") IOTAReferences;
typedef TComInterface<IOTAReferences, &IID_IOTAReferences> IOTAReferencesPtr;

interface DECLSPEC_UUID("{D0787E83-F5A2-467E-A871-FDB50A5925F5}") IOTAModuleInfo;
typedef TComInterface<IOTAModuleInfo, &IID_IOTAModuleInfo> IOTAModuleInfoPtr;

interface DECLSPEC_UUID("{35501657-34C3-47A5-BE03-3E8AF77FD860}") IOTACodeDomProvider;
typedef TComInterface<IOTACodeDomProvider, &IID_IOTACodeDomProvider> IOTACodeDomProviderPtr;

interface DECLSPEC_UUID("{9A6F1634-F602-3669-AF26-975C6FC35DD2}") _ModuleAddedRemovedEventArgs;
typedef TComInterface<_ModuleAddedRemovedEventArgs, &IID__ModuleAddedRemovedEventArgs> _ModuleAddedRemovedEventArgsPtr;

interface DECLSPEC_UUID("{D5523F8B-9E2E-3D96-8228-D5FBEE2F00DB}") _ModuleRenamedEventArgs;
typedef TComInterface<_ModuleRenamedEventArgs, &IID__ModuleRenamedEventArgs> _ModuleRenamedEventArgsPtr;

interface DECLSPEC_UUID("{15165F5A-EEF4-3A67-8EE4-08B2BC7B33CE}") _ModuleAddedRemovedEventHandler;
typedef TComInterface<_ModuleAddedRemovedEventHandler, &IID__ModuleAddedRemovedEventHandler> _ModuleAddedRemovedEventHandlerPtr;

interface DECLSPEC_UUID("{E7410390-B6CF-3182-9610-BB1207CCA5BC}") _ModuleRenamedEventHandler;
typedef TComInterface<_ModuleRenamedEventHandler, &IID__ModuleRenamedEventHandler> _ModuleRenamedEventHandlerPtr;

interface DECLSPEC_UUID("{42B792B0-229C-4D53-A9B5-BF9C90630BE0}") IOTAProject;
typedef TComInterface<IOTAProject, &IID_IOTAProject> IOTAProjectPtr;

interface DECLSPEC_UUID("{0A4619FA-DE5E-4A25-A56F-C3D3DE1EA293}") IOTAProjectMainSource;
typedef TComInterface<IOTAProjectMainSource, &IID_IOTAProjectMainSource> IOTAProjectMainSourcePtr;

interface DECLSPEC_UUID("{637694C4-B01F-48F5-A06C-FC5FDF9F0951}") IOTAProjectLicenseProvider;
typedef TComInterface<IOTAProjectLicenseProvider, &IID_IOTAProjectLicenseProvider> IOTAProjectLicenseProviderPtr;

interface DECLSPEC_UUID("{40A6AFE4-E560-404A-AE84-586528C8D931}") IOTAProjectConfigurationProvider;
typedef TComInterface<IOTAProjectConfigurationProvider, &IID_IOTAProjectConfigurationProvider> IOTAProjectConfigurationProviderPtr;

interface DECLSPEC_UUID("{14D562B2-A1B4-41BC-B6A7-65878CE44DB6}") IOTAProjectBuilder;
typedef TComInterface<IOTAProjectBuilder, &IID_IOTAProjectBuilder> IOTAProjectBuilderPtr;

interface DECLSPEC_UUID("{2F0ACB55-2F39-483F-9046-1037790576AE}") IOTAOptionNames;
typedef TComInterface<IOTAOptionNames, &IID_IOTAOptionNames> IOTAOptionNamesPtr;

interface DECLSPEC_UUID("{BD8042B4-A87C-4816-A396-5B291C83F225}") IOTAOptions;
typedef TComInterface<IOTAOptions, &IID_IOTAOptions> IOTAOptionsPtr;

interface DECLSPEC_UUID("{41136635-A785-45F0-8DF3-3EB768DC0F22}") IOTAProjectOptions;
typedef TComInterface<IOTAProjectOptions, &IID_IOTAProjectOptions> IOTAProjectOptionsPtr;

interface DECLSPEC_UUID("{6C5B5235-01D0-48FD-B410-EF50F064687F}") IOTABuildConfiguration;
typedef TComInterface<IOTABuildConfiguration, &IID_IOTABuildConfiguration> IOTABuildConfigurationPtr;

interface DECLSPEC_UUID("{5A6F8603-F29B-461C-9EBB-D40DDDB7EADE}") IOTAProjectOptionsConfigurations;
typedef TComInterface<IOTAProjectOptionsConfigurations, &IID_IOTAProjectOptionsConfigurations> IOTAProjectOptionsConfigurationsPtr;

interface DECLSPEC_UUID("{B2C9049A-F958-4410-83DB-FE50C1D53A85}") IOTAProjectGroup;
typedef TComInterface<IOTAProjectGroup, &IID_IOTAProjectGroup> IOTAProjectGroupPtr;

interface DECLSPEC_UUID("{86002707-98C7-4791-9FE5-547C57AA6821}") IOTAProjectDependenciesList;
typedef TComInterface<IOTAProjectDependenciesList, &IID_IOTAProjectDependenciesList> IOTAProjectDependenciesListPtr;

interface DECLSPEC_UUID("{54370E82-8D3E-454A-A854-172C41E261DA}") IOTAProjectGroupProjectDependencies;
typedef TComInterface<IOTAProjectGroupProjectDependencies, &IID_IOTAProjectGroupProjectDependencies> IOTAProjectGroupProjectDependenciesPtr;

interface DECLSPEC_UUID("{756DF4C9-B22A-4095-866D-89E437B88750}") IOTASearchPaths;
typedef TComInterface<IOTASearchPaths, &IID_IOTASearchPaths> IOTASearchPathsPtr;

interface DECLSPEC_UUID("{9BA69737-335D-3A6D-A134-A3F61121A67C}") IOTAAssemblySearchPathService;
typedef TComInterface<IOTAAssemblySearchPathService, &IID_IOTAAssemblySearchPathService> IOTAAssemblySearchPathServicePtr;

interface DECLSPEC_UUID("{99243387-CCBE-4810-9D3C-D494DE468170}") IOTAPersistenceManager;
typedef TComInterface<IOTAPersistenceManager, &IID_IOTAPersistenceManager> IOTAPersistenceManagerPtr;

interface DECLSPEC_UUID("{6AA62B56-293C-334C-A809-5A6ED810D7A6}") _ToolboxItemEventArgs;
typedef TComInterface<_ToolboxItemEventArgs, &IID__ToolboxItemEventArgs> _ToolboxItemEventArgsPtr;

interface DECLSPEC_UUID("{BC0AC352-8549-3535-A516-9BD1DC25535E}") _ToolboxItemAddedEventArgs;
typedef TComInterface<_ToolboxItemAddedEventArgs, &IID__ToolboxItemAddedEventArgs> _ToolboxItemAddedEventArgsPtr;

interface DECLSPEC_UUID("{081F9B72-A1A0-3ED5-8965-AF2906DA90F6}") _TOTAHandle;
typedef TComInterface<_TOTAHandle, &IID__TOTAHandle> _TOTAHandlePtr;

interface DECLSPEC_UUID("{6402D97D-5DB3-37BA-934B-24796B16039B}") _gccEventArgs;
typedef TComInterface<_gccEventArgs, &IID__gccEventArgs> _gccEventArgsPtr;

interface DECLSPEC_UUID("{9347589F-F528-3A07-AF93-83CA95BBF553}") _ToolboxItemEventHandler;
typedef TComInterface<_ToolboxItemEventHandler, &IID__ToolboxItemEventHandler> _ToolboxItemEventHandlerPtr;

interface DECLSPEC_UUID("{74A6E330-3B11-35CB-A7AD-DDDCAD045DB8}") _ToolboxItemAddedEventHandler;
typedef TComInterface<_ToolboxItemAddedEventHandler, &IID__ToolboxItemAddedEventHandler> _ToolboxItemAddedEventHandlerPtr;

interface DECLSPEC_UUID("{DBFBBC7E-4AC1-4FB1-88B6-34DF77F48B14}") IOTAToolboxServiceEvents;
typedef TComInterface<IOTAToolboxServiceEvents, &IID_IOTAToolboxServiceEvents> IOTAToolboxServiceEventsPtr;

interface DECLSPEC_UUID("{5E2773EC-DC4A-4B79-9B2C-763B8A2321C0}") IOTAEventMethodsService;
typedef TComInterface<IOTAEventMethodsService, &IID_IOTAEventMethodsService> IOTAEventMethodsServicePtr;

interface DECLSPEC_UUID("{6C120D3D-BD59-4E3F-97AE-1EA4C0E204ED}") IBorlandIDEServices;
typedef TComInterface<IBorlandIDEServices, &IID_IBorlandIDEServices> IBorlandIDEServicesPtr;

interface DECLSPEC_UUID("{728068F4-29B9-361F-A6ED-D719C6A4863C}") IOTAVirtualFileService;
typedef TComInterface<IOTAVirtualFileService, &IID_IOTAVirtualFileService> IOTAVirtualFileServicePtr;

interface DECLSPEC_UUID("{779E0FCF-A177-48A5-A242-3AE5CDCA5C5A}") IOTAVirtualFile;
typedef TComInterface<IOTAVirtualFile, &IID_IOTAVirtualFile> IOTAVirtualFilePtr;

interface DECLSPEC_UUID("{60623BF1-C097-4DD7-BA7F-ADC40FE032E9}") IOTAFileReader;
typedef TComInterface<IOTAFileReader, &IID_IOTAFileReader> IOTAFileReaderPtr;

interface DECLSPEC_UUID("{DCEDFCFF-7111-49B5-8A53-57F084B8C0C9}") IOTAFileWriter;
typedef TComInterface<IOTAFileWriter, &IID_IOTAFileWriter> IOTAFileWriterPtr;

interface DECLSPEC_UUID("{93B43D3C-D524-440D-9569-4C4D79D26C9E}") IOTACodeDomGeneratorOptions;
typedef TComInterface<IOTACodeDomGeneratorOptions, &IID_IOTACodeDomGeneratorOptions> IOTACodeDomGeneratorOptionsPtr;

interface DECLSPEC_UUID("{487E1E2B-8CF5-4BD4-929A-4D82E862FAB0}") IOTACodeDomFile;
typedef TComInterface<IOTACodeDomFile, &IID_IOTACodeDomFile> IOTACodeDomFilePtr;

interface DECLSPEC_UUID("{72655E0D-ED21-4B1A-93D6-F30E96782A1F}") IOTAInstalledToolboxItem;
typedef TComInterface<IOTAInstalledToolboxItem, &IID_IOTAInstalledToolboxItem> IOTAInstalledToolboxItemPtr;

interface DECLSPEC_UUID("{B36018B6-AA77-4BB7-82AC-7B2D2C3B04E4}") IOTAComponentInstallService;
typedef TComInterface<IOTAComponentInstallService, &IID_IOTAComponentInstallService> IOTAComponentInstallServicePtr;

interface DECLSPEC_UUID("{47C01B8C-7ACA-487D-A249-78F9DB894CB7}") IOTAModuleHandlerGauntletMember;
typedef TComInterface<IOTAModuleHandlerGauntletMember, &IID_IOTAModuleHandlerGauntletMember> IOTAModuleHandlerGauntletMemberPtr;

interface DECLSPEC_UUID("{46E708B5-1B3D-4A94-869F-DF1752A6CE35}") IOTAModuleHandlerGauntletService;
typedef TComInterface<IOTAModuleHandlerGauntletService, &IID_IOTAModuleHandlerGauntletService> IOTAModuleHandlerGauntletServicePtr;

interface DECLSPEC_UUID("{0BBA329E-B28D-3343-953A-9D97655F9CD2}") IOTAAddReferenceDialog;
typedef TComInterface<IOTAAddReferenceDialog, &IID_IOTAAddReferenceDialog> IOTAAddReferenceDialogPtr;

interface DECLSPEC_UUID("{B7D01D1D-5414-48E8-A691-090A0B191D6D}") IOTAAddInService;
typedef TComInterface<IOTAAddInService, &IID_IOTAAddInService> IOTAAddInServicePtr;

interface DECLSPEC_UUID("{9B9487F0-3F83-4817-AACD-3C84D2FEF954}") IOTABitmapService;
typedef TComInterface<IOTABitmapService, &IID_IOTABitmapService> IOTABitmapServicePtr;

interface DECLSPEC_UUID("{BB77DC4F-7E1C-33FD-9E94-C7C631F3FC43}") _AssemblyUnloadedEventArgs;
typedef TComInterface<_AssemblyUnloadedEventArgs, &IID__AssemblyUnloadedEventArgs> _AssemblyUnloadedEventArgsPtr;

interface DECLSPEC_UUID("{BC05AA32-5149-33E6-9865-83DF06FE9233}") _AssemblyUnloadedEventHandler;
typedef TComInterface<_AssemblyUnloadedEventHandler, &IID__AssemblyUnloadedEventHandler> _AssemblyUnloadedEventHandlerPtr;

interface DECLSPEC_UUID("{B8BF8F11-9F74-3754-8968-F65738FD7120}") IOTAAssemblyUnloadedService;
typedef TComInterface<IOTAAssemblyUnloadedService, &IID_IOTAAssemblyUnloadedService> IOTAAssemblyUnloadedServicePtr;

interface DECLSPEC_UUID("{56352901-9004-426F-8C34-CD3652E8B01A}") IOTAMessageGroup;
typedef TComInterface<IOTAMessageGroup, &IID_IOTAMessageGroup> IOTAMessageGroupPtr;

interface DECLSPEC_UUID("{6AB2B46B-745D-34CB-B1F6-80E1A2C8ECF4}") _MessageGroupEventArgs;
typedef TComInterface<_MessageGroupEventArgs, &IID__MessageGroupEventArgs> _MessageGroupEventArgsPtr;

interface DECLSPEC_UUID("{E5133BA9-9859-49CE-A295-D337E7BC3C48}") IOTACustomMessage;
typedef TComInterface<IOTACustomMessage, &IID_IOTACustomMessage> IOTACustomMessagePtr;

interface DECLSPEC_UUID("{64B4C7E7-41A9-341E-BB19-C3279B9DD1AE}") _MessageGroupHandler;
typedef TComInterface<_MessageGroupHandler, &IID__MessageGroupHandler> _MessageGroupHandlerPtr;

interface DECLSPEC_UUID("{37542A61-0649-49CB-BC6F-2FFA0D2E3E1E}") IOTAMessageService;
typedef TComInterface<IOTAMessageService, &IID_IOTAMessageService> IOTAMessageServicePtr;

interface DECLSPEC_UUID("{0036BC84-FB29-4769-98CA-A374E71F7544}") IOTAEnvironmentOptions;
typedef TComInterface<IOTAEnvironmentOptions, &IID_IOTAEnvironmentOptions> IOTAEnvironmentOptionsPtr;

interface DECLSPEC_UUID("{E3F325D2-1720-4C71-9239-E3CFBE0EB3E8}") IFileNotificationEventArgs;
typedef TComInterface<IFileNotificationEventArgs, &IID_IFileNotificationEventArgs> IFileNotificationEventArgsPtr;

interface DECLSPEC_UUID("{F5AB5C1B-FDC3-3D42-AB2B-9820E1A737C8}") _FileNotificationEventArgs;
typedef TComInterface<_FileNotificationEventArgs, &IID__FileNotificationEventArgs> _FileNotificationEventArgsPtr;

interface DECLSPEC_UUID("{E4DD4461-03AB-4E1C-B2F7-84495C360920}") IBeforeCompileEventArgs;
typedef TComInterface<IBeforeCompileEventArgs, &IID_IBeforeCompileEventArgs> IBeforeCompileEventArgsPtr;

interface DECLSPEC_UUID("{F88936B3-5313-3308-A5B6-35ECF6F4AC73}") _BeforeCompileArgs;
typedef TComInterface<_BeforeCompileArgs, &IID__BeforeCompileArgs> _BeforeCompileArgsPtr;

interface DECLSPEC_UUID("{015F0FB1-6E8A-41EE-B419-5078C6F5F0D0}") IAfterCompileEventArgs;
typedef TComInterface<IAfterCompileEventArgs, &IID_IAfterCompileEventArgs> IAfterCompileEventArgsPtr;

interface DECLSPEC_UUID("{609A4F69-2731-3F4F-98C1-A008B2077FD4}") _AfterCompileArgs;
typedef TComInterface<_AfterCompileArgs, &IID__AfterCompileArgs> _AfterCompileArgsPtr;

interface DECLSPEC_UUID("{65B58C48-9B9B-348B-8A6F-2FF96DE79AF1}") _FileNotificationHandler;
typedef TComInterface<_FileNotificationHandler, &IID__FileNotificationHandler> _FileNotificationHandlerPtr;

interface DECLSPEC_UUID("{6A531A35-013E-3BA9-8E59-55EF858ABF74}") _BeforeCompileHandler;
typedef TComInterface<_BeforeCompileHandler, &IID__BeforeCompileHandler> _BeforeCompileHandlerPtr;

interface DECLSPEC_UUID("{8100CA55-F867-37DC-B256-FADD8C308F5D}") _AfterCompileHandler;
typedef TComInterface<_AfterCompileHandler, &IID__AfterCompileHandler> _AfterCompileHandlerPtr;

interface DECLSPEC_UUID("{724986CC-FE2A-4691-9495-A1C20328A5BE}") IOTAService;
typedef TComInterface<IOTAService, &IID_IOTAService> IOTAServicePtr;

interface DECLSPEC_UUID("{5EB65058-01B0-46E2-858F-065C5C5F4A29}") IOTADotNetObjectInspectorService;
typedef TComInterface<IOTADotNetObjectInspectorService, &IID_IOTADotNetObjectInspectorService> IOTADotNetObjectInspectorServicePtr;

interface DECLSPEC_UUID("{1DA51503-24DB-4DB5-A151-B57E2569D8AA}") IOTACultureInfo;
typedef TComInterface<IOTACultureInfo, &IID_IOTACultureInfo> IOTACultureInfoPtr;

interface DECLSPEC_UUID("{7A123EBF-A0C5-45B8-BDF7-CFBA02528867}") IOTAMenuItem;
typedef TComInterface<IOTAMenuItem, &IID_IOTAMenuItem> IOTAMenuItemPtr;

interface DECLSPEC_UUID("{5AC81224-7DD8-3F4B-9ABB-7C74FA81FDC3}") _OTAContainerTypes;
typedef TComInterface<_OTAContainerTypes, &IID__OTAContainerTypes> _OTAContainerTypesPtr;

interface DECLSPEC_UUID("{9A2035D3-B602-4763-9832-7881CDD2E47F}") IOTAProjectMenuCreatorNotifier;
typedef TComInterface<IOTAProjectMenuCreatorNotifier, &IID_IOTAProjectMenuCreatorNotifier> IOTAProjectMenuCreatorNotifierPtr;

interface DECLSPEC_UUID("{158FFEA2-79EB-4000-AAE7-EBD67D9AF4C3}") IOTAProjectManagerMenuServices;
typedef TComInterface<IOTAProjectManagerMenuServices, &IID_IOTAProjectManagerMenuServices> IOTAProjectManagerMenuServicesPtr;

interface DECLSPEC_UUID("{D53EC96F-F329-43C2-B9A2-E30A1607A87B}") IOTAProjectManager;
typedef TComInterface<IOTAProjectManager, &IID_IOTAProjectManager> IOTAProjectManagerPtr;

interface DECLSPEC_UUID("{9CCFD283-F6F9-4E2B-A4B6-5EBE67A21313}") IOTAMainMenuService;
typedef TComInterface<IOTAMainMenuService, &IID_IOTAMainMenuService> IOTAMainMenuServicePtr;

interface DECLSPEC_UUID("{3A4EECF9-E15D-3719-975A-040EED1B25E2}") _OTADesignerTypes;
typedef TComInterface<_OTADesignerTypes, &IID__OTADesignerTypes> _OTADesignerTypesPtr;

interface DECLSPEC_UUID("{07E7E651-01B7-36C6-BD3C-7E64B8B8FCA9}") _OTACreatorTypes;
typedef TComInterface<_OTACreatorTypes, &IID__OTACreatorTypes> _OTACreatorTypesPtr;

interface DECLSPEC_UUID("{AB294892-51BD-379A-9905-C49EBEA670CA}") _OTAIDEPersonalities;
typedef TComInterface<_OTAIDEPersonalities, &IID__OTAIDEPersonalities> _OTAIDEPersonalitiesPtr;

interface DECLSPEC_UUID("{6AEB0D4C-ED19-3D60-A08C-A9EAA6A9314D}") _OTAGalleryCategories;
typedef TComInterface<_OTAGalleryCategories, &IID__OTAGalleryCategories> _OTAGalleryCategoriesPtr;

interface DECLSPEC_UUID("{83F192E7-9C6D-4FDD-96F3-694FE6C98B4D}") IOTAFile;
typedef TComInterface<IOTAFile, &IID_IOTAFile> IOTAFilePtr;

interface DECLSPEC_UUID("{C9812ADF-42F5-434B-9999-86C366C6536E}") IOTACreator;
typedef TComInterface<IOTACreator, &IID_IOTACreator> IOTACreatorPtr;

interface DECLSPEC_UUID("{6A828396-2A30-436C-9E03-2F7EF48CD4A5}") IOTAModuleCreator;
typedef TComInterface<IOTAModuleCreator, &IID_IOTAModuleCreator> IOTAModuleCreatorPtr;

interface DECLSPEC_UUID("{38429A28-66D0-4940-B2FD-A297C3432B58}") IOTAProjectCreator;
typedef TComInterface<IOTAProjectCreator, &IID_IOTAProjectCreator> IOTAProjectCreatorPtr;

interface DECLSPEC_UUID("{E69578C5-1C1B-43C5-914C-9AAA7F953EDC}") IOTAProjectGroupCreator;
typedef TComInterface<IOTAProjectGroupCreator, &IID_IOTAProjectGroupCreator> IOTAProjectGroupCreatorPtr;

interface DECLSPEC_UUID("{97ECFDFB-0435-43D2-8270-A48D3C09290E}") IOTAActionService;
typedef TComInterface<IOTAActionService, &IID_IOTAActionService> IOTAActionServicePtr;

interface DECLSPEC_UUID("{27484E12-3BEB-4690-8258-E90EA1DC7436}") IOTAEditActions;
typedef TComInterface<IOTAEditActions, &IID_IOTAEditActions> IOTAEditActionsPtr;

interface DECLSPEC_UUID("{70E01074-3BD8-45AF-818C-9CB4CAD319CA}") IOTAWizard;
typedef TComInterface<IOTAWizard, &IID_IOTAWizard> IOTAWizardPtr;

interface DECLSPEC_UUID("{884D3988-3B45-43EA-A819-25FE09D00E19}") IOTARepositoryWizard;
typedef TComInterface<IOTARepositoryWizard, &IID_IOTARepositoryWizard> IOTARepositoryWizardPtr;

interface DECLSPEC_UUID("{E89472D1-C318-41BE-9146-AF57EC667DB8}") IOTAGalleryCategory;
typedef TComInterface<IOTAGalleryCategory, &IID_IOTAGalleryCategory> IOTAGalleryCategoryPtr;

interface DECLSPEC_UUID("{EF79C413-F1DF-4EED-9A0D-2F1CA265EE25}") IOTAGalleryCategoryManager;
typedef TComInterface<IOTAGalleryCategoryManager, &IID_IOTAGalleryCategoryManager> IOTAGalleryCategoryManagerPtr;

interface DECLSPEC_UUID("{02FE97B0-94F7-470F-8B67-1B89EFA26FC4}") IOTAFormWizard;
typedef TComInterface<IOTAFormWizard, &IID_IOTAFormWizard> IOTAFormWizardPtr;

interface DECLSPEC_UUID("{3C107A3B-2E7D-4700-9CE4-9767B1D2FE00}") IOTAProjectWizard;
typedef TComInterface<IOTAProjectWizard, &IID_IOTAProjectWizard> IOTAProjectWizardPtr;

interface DECLSPEC_UUID("{EE481221-0047-44FB-929A-38664AF42749}") IOTAMenuWizard;
typedef TComInterface<IOTAMenuWizard, &IID_IOTAMenuWizard> IOTAMenuWizardPtr;

interface DECLSPEC_UUID("{935F3EA1-EFD6-4901-8138-2415F6AD1C3D}") IOTAWizardService;
typedef TComInterface<IOTAWizardService, &IID_IOTAWizardService> IOTAWizardServicePtr;

interface DECLSPEC_UUID("{5C01B0EE-E660-4474-8B18-3676F20006AC}") IOTAAboutBoxService;
typedef TComInterface<IOTAAboutBoxService, &IID_IOTAAboutBoxService> IOTAAboutBoxServicePtr;

interface DECLSPEC_UUID("{2550066E-CF92-475E-8C27-EBDC6CEFB3D8}") IOTASplashScreenService;
typedef TComInterface<IOTASplashScreenService, &IID_IOTASplashScreenService> IOTASplashScreenServicePtr;

interface DECLSPEC_UUID("{62198A9F-790C-4A0C-818B-CFC561E2E73B}") IOTAPersonalityService;
typedef TComInterface<IOTAPersonalityService, &IID_IOTAPersonalityService> IOTAPersonalityServicePtr;

interface DECLSPEC_UUID("{DA5701D3-B903-34AC-8112-9D457013E8DF}") _OTAFile;
typedef TComInterface<_OTAFile, &IID__OTAFile> _OTAFilePtr;

interface DECLSPEC_UUID("{1664F3A1-00B8-4349-A96E-99C678F9BE96}") IOTAAlignable;
typedef TComInterface<IOTAAlignable, &IID_IOTAAlignable> IOTAAlignablePtr;

interface DECLSPEC_UUID("{BF5AE0B5-0715-4EC7-BFA5-3922E10EDF3C}") IOTAAlignableState;
typedef TComInterface<IOTAAlignableState, &IID_IOTAAlignableState> IOTAAlignableStatePtr;

interface DECLSPEC_UUID("{CBC39180-2D51-4E37-A019-E57866309C93}") IOTAScaleable;
typedef TComInterface<IOTAScaleable, &IID_IOTAScaleable> IOTAScaleablePtr;

interface DECLSPEC_UUID("{1C7AD430-314E-3588-A9F5-996EFFD05989}") IOTATabOrderable;
typedef TComInterface<IOTATabOrderable, &IID_IOTATabOrderable> IOTATabOrderablePtr;

interface DECLSPEC_UUID("{C92C0E94-A709-4708-8673-D26C35D0C749}") IOTACreateOrderable;
typedef TComInterface<IOTACreateOrderable, &IID_IOTACreateOrderable> IOTACreateOrderablePtr;

interface DECLSPEC_UUID("{3E9354E0-66E8-46A3-B24F-9CBBBE7FA7EA}") INTAComponent;
typedef TComInterface<INTAComponent, &IID_INTAComponent> INTAComponentPtr;

interface DECLSPEC_UUID("{28A28BA8-B900-4049-9C49-76086941DEE3}") IOTAGetChildCallback;
typedef TComInterface<IOTAGetChildCallback, &IID_IOTAGetChildCallback> IOTAGetChildCallbackPtr;

interface DECLSPEC_UUID("{D430F0B5-180B-305A-B1C1-C17006C1884E}") _TOTAGetChildCallback;
typedef TComInterface<_TOTAGetChildCallback, &IID__TOTAGetChildCallback> _TOTAGetChildCallbackPtr;

interface DECLSPEC_UUID("{7F55A081-3BFF-413B-88BF-7E4165F9D136}") IOTAComponent;
typedef TComInterface<IOTAComponent, &IID_IOTAComponent> IOTAComponentPtr;

interface DECLSPEC_UUID("{71BFFDFE-3B56-31B1-9091-D829DFC1CE9A}") _ComponentRenamedEventArgs;
typedef TComInterface<_ComponentRenamedEventArgs, &IID__ComponentRenamedEventArgs> _ComponentRenamedEventArgsPtr;

interface DECLSPEC_UUID("{A4866255-ADA6-3784-BE76-B0ED000FDA61}") _ComponentRenamedEventHandler;
typedef TComInterface<_ComponentRenamedEventHandler, &IID__ComponentRenamedEventHandler> _ComponentRenamedEventHandlerPtr;

interface DECLSPEC_UUID("{C9A9D6FC-89B7-40E2-BC64-8797E748EF6E}") IOTAFormEditor;
typedef TComInterface<IOTAFormEditor, &IID_IOTAFormEditor> IOTAFormEditorPtr;

interface DECLSPEC_UUID("{7ED77880-2D26-353E-A990-FF62FD0D7020}") INTAFormEditor;
typedef TComInterface<INTAFormEditor, &IID_INTAFormEditor> INTAFormEditorPtr;

interface DECLSPEC_UUID("{460BB23E-67BC-48FA-B630-6CCC4DA73F88}") IOTAStreamModifyTime;
typedef TComInterface<IOTAStreamModifyTime, &IID_IOTAStreamModifyTime> IOTAStreamModifyTimePtr;

interface DECLSPEC_UUID("{8346A98D-E405-4BD6-A0A6-91B701DD6BB5}") IOTAFileFilter;
typedef TComInterface<IOTAFileFilter, &IID_IOTAFileFilter> IOTAFileFilterPtr;

interface DECLSPEC_UUID("{3FA129A8-AD94-4606-91FD-95E2DBCB5BD7}") IOTAFileSystem;
typedef TComInterface<IOTAFileSystem, &IID_IOTAFileSystem> IOTAFileSystemPtr;

interface DECLSPEC_UUID("{18544EF7-B617-4225-9FD7-31FEFB77861E}") INTAPalettePaintIcon;
typedef TComInterface<INTAPalettePaintIcon, &IID_INTAPalettePaintIcon> INTAPalettePaintIconPtr;

interface DECLSPEC_UUID("{971ABE7B-ED20-476B-9E96-CBA792B87BF2}") IOTAPaletteDragAcceptor;
typedef TComInterface<IOTAPaletteDragAcceptor, &IID_IOTAPaletteDragAcceptor> IOTAPaletteDragAcceptorPtr;

interface DECLSPEC_UUID("{E79FE430-EFE0-4C54-AB09-103124344394}") IOTADesignerDragAcceptor;
typedef TComInterface<IOTADesignerDragAcceptor, &IID_IOTADesignerDragAcceptor> IOTADesignerDragAcceptorPtr;

interface DECLSPEC_UUID("{3BF605F3-4634-4CA7-9C72-8AC9AF350B05}") IOTACodeEditorDragAcceptor;
typedef TComInterface<IOTACodeEditorDragAcceptor, &IID_IOTACodeEditorDragAcceptor> IOTACodeEditorDragAcceptorPtr;

interface DECLSPEC_UUID("{FE6AE3E9-F514-4CD7-BFD9-21CAD6FB42AA}") IOTAPaletteDragDropOp;
typedef TComInterface<IOTAPaletteDragDropOp, &IID_IOTAPaletteDragDropOp> IOTAPaletteDragDropOpPtr;

interface DECLSPEC_UUID("{91097078-4B81-47DC-A4DB-569EA5AC7194}") IOTABasePaletteItem;
typedef TComInterface<IOTABasePaletteItem, &IID_IOTABasePaletteItem> IOTABasePaletteItemPtr;

interface DECLSPEC_UUID("{7B7807E5-9C1A-4140-86DB-BF47B3B52FE3}") IOTAComponentPaletteItem;
typedef TComInterface<IOTAComponentPaletteItem, &IID_IOTAComponentPaletteItem> IOTAComponentPaletteItemPtr;

interface DECLSPEC_UUID("{2900C9C3-3F4C-441C-BD46-995239F812C5}") IOTAPaletteGroup;
typedef TComInterface<IOTAPaletteGroup, &IID_IOTAPaletteGroup> IOTAPaletteGroupPtr;

interface DECLSPEC_UUID("{D449A0A3-BCCC-4D7D-9BCD-7F86183AE09C}") IOTAPaletteColorScheme;
typedef TComInterface<IOTAPaletteColorScheme, &IID_IOTAPaletteColorScheme> IOTAPaletteColorSchemePtr;

interface DECLSPEC_UUID("{695DA742-994C-3BA7-8C80-6FB078C1F9DD}") _ItemEventArgs;
typedef TComInterface<_ItemEventArgs, &IID__ItemEventArgs> _ItemEventArgsPtr;

interface DECLSPEC_UUID("{071E7A2C-C20C-39F9-ADB4-F774D3E3D92B}") _SelectedEventArgs;
typedef TComInterface<_SelectedEventArgs, &IID__SelectedEventArgs> _SelectedEventArgsPtr;

interface DECLSPEC_UUID("{4EBF472F-B506-308F-8CFD-C7F554ED1233}") _ItemEventHandler;
typedef TComInterface<_ItemEventHandler, &IID__ItemEventHandler> _ItemEventHandlerPtr;

interface DECLSPEC_UUID("{550527A4-F53E-32DA-9AD9-F4497B17A7EB}") _SelectedEventHandler;
typedef TComInterface<_SelectedEventHandler, &IID__SelectedEventHandler> _SelectedEventHandlerPtr;

interface DECLSPEC_UUID("{D1F0E26A-7EF1-4390-B86E-8A24CB61FF1B}") IOTAPaletteServices;
typedef TComInterface<IOTAPaletteServices, &IID_IOTAPaletteServices> IOTAPaletteServicesPtr;

interface DECLSPEC_UUID("{B3345543-6C48-4C54-B24E-57F81FAB4BA9}") IOTAPackageInstallService;
typedef TComInterface<IOTAPackageInstallService, &IID_IOTAPackageInstallService> IOTAPackageInstallServicePtr;

interface DECLSPEC_UUID("{5B75654E-A005-474A-9456-5A675EDFA100}") IOTAPackageInformation;
typedef TComInterface<IOTAPackageInformation, &IID_IOTAPackageInformation> IOTAPackageInformationPtr;

interface DECLSPEC_UUID("{16C35C1D-DD6E-493D-9CF7-0F405045EA54}") IOTAPackageComponent;
typedef TComInterface<IOTAPackageComponent, &IID_IOTAPackageComponent> IOTAPackageComponentPtr;

interface DECLSPEC_UUID("{1F82ECAB-F49E-48D4-BD9E-97A01B14206B}") IOTAComponentList;
typedef TComInterface<IOTAComponentList, &IID_IOTAComponentList> IOTAComponentListPtr;

interface DECLSPEC_UUID("{F8310D0E-48CC-4235-A002-0556700B1B10}") IOTAPackageRequires;
typedef TComInterface<IOTAPackageRequires, &IID_IOTAPackageRequires> IOTAPackageRequiresPtr;

interface DECLSPEC_UUID("{D4FD47E3-3DA5-4FA3-A1F4-24EF81B72F4C}") IOTASymbolHelp;
typedef TComInterface<IOTASymbolHelp, &IID_IOTASymbolHelp> IOTASymbolHelpPtr;

interface DECLSPEC_UUID("{67FD6512-C50F-4C83-8C2F-4E60340668D1}") IOTAStructureContext;
typedef TComInterface<IOTAStructureContext, &IID_IOTAStructureContext> IOTAStructureContextPtr;

interface DECLSPEC_UUID("{F6189580-87EE-4985-8866-7712D8DB4872}") IOTAStructureNodeStatePreserver;
typedef TComInterface<IOTAStructureNodeStatePreserver, &IID_IOTAStructureNodeStatePreserver> IOTAStructureNodeStatePreserverPtr;

interface DECLSPEC_UUID("{55C848EB-2197-4B17-A9D0-696D3331B3CC}") IOTAStructureContextToolbar;
typedef TComInterface<IOTAStructureContextToolbar, &IID_IOTAStructureContextToolbar> IOTAStructureContextToolbarPtr;

interface DECLSPEC_UUID("{EF0F0981-8E1B-468F-B063-4A5956EB4BDA}") IOTAStructureContextEditActions;
typedef TComInterface<IOTAStructureContextEditActions, &IID_IOTAStructureContextEditActions> IOTAStructureContextEditActionsPtr;

interface DECLSPEC_UUID("{17A71EDB-A2FE-4358-ABD2-362011A8D547}") IOTAStructureContextKeyHandler;
typedef TComInterface<IOTAStructureContextKeyHandler, &IID_IOTAStructureContextKeyHandler> IOTAStructureContextKeyHandlerPtr;

interface DECLSPEC_UUID("{03DC0E9A-DED1-4E2A-BECE-328CB27D19B9}") IOTADragStructureContext;
typedef TComInterface<IOTADragStructureContext, &IID_IOTADragStructureContext> IOTADragStructureContextPtr;

interface DECLSPEC_UUID("{8A0802F5-C26C-4902-9D1F-8323F2F48F8C}") IOTAStructureNode;
typedef TComInterface<IOTAStructureNode, &IID_IOTAStructureNode> IOTAStructureNodePtr;

interface DECLSPEC_UUID("{24451294-D128-47E6-A8A5-00C3547C2F9C}") IOTASortableStructureNode;
typedef TComInterface<IOTASortableStructureNode, &IID_IOTASortableStructureNode> IOTASortableStructureNodePtr;

interface DECLSPEC_UUID("{B2CF6C45-4151-4B1A-B56B-B23534BB053E}") IOTAEditableStructureNode;
typedef TComInterface<IOTAEditableStructureNode, &IID_IOTAEditableStructureNode> IOTAEditableStructureNodePtr;

interface DECLSPEC_UUID("{81B1557A-E3F2-4E9C-AA69-CEBBA99D923F}") IOTANavigableStructureNode;
typedef TComInterface<IOTANavigableStructureNode, &IID_IOTANavigableStructureNode> IOTANavigableStructureNodePtr;

interface DECLSPEC_UUID("{679BCA19-150F-4CC5-9023-CE24F5580F5B}") IOTADragStructureNode;
typedef TComInterface<IOTADragStructureNode, &IID_IOTADragStructureNode> IOTADragStructureNodePtr;

interface DECLSPEC_UUID("{FAA6133B-F03F-4A93-9E86-C50EAD7348E6}") IOTAStructureNodePopup;
typedef TComInterface<IOTAStructureNodePopup, &IID_IOTAStructureNodePopup> IOTAStructureNodePopupPtr;

interface DECLSPEC_UUID("{7BF39892-F3D3-48F7-B5F3-664FDD438581}") IOTAStructureNodeMenuItem;
typedef TComInterface<IOTAStructureNodeMenuItem, &IID_IOTAStructureNodeMenuItem> IOTAStructureNodeMenuItemPtr;

interface DECLSPEC_UUID("{0B3EF80C-C85B-3ED5-9059-8F0132E53A22}") _ContextEventArgs;
typedef TComInterface<_ContextEventArgs, &IID__ContextEventArgs> _ContextEventArgsPtr;

interface DECLSPEC_UUID("{909E7F14-FBA0-348B-85C4-3968D2B7CBAA}") _NodeEventArgs;
typedef TComInterface<_NodeEventArgs, &IID__NodeEventArgs> _NodeEventArgsPtr;

interface DECLSPEC_UUID("{73A8FC94-5904-31B1-AA0F-0D5CE94CCF23}") _VisibleEventArgs;
typedef TComInterface<_VisibleEventArgs, &IID__VisibleEventArgs> _VisibleEventArgsPtr;

interface DECLSPEC_UUID("{30E1E914-AF92-3300-8A70-3E1F73129492}") _OTAStructureType;
typedef TComInterface<_OTAStructureType, &IID__OTAStructureType> _OTAStructureTypePtr;

interface DECLSPEC_UUID("{B0BC296A-7B1B-3C3F-BAF0-DA5B57EC0DEB}") _OTANodeType;
typedef TComInterface<_OTANodeType, &IID__OTANodeType> _OTANodeTypePtr;

interface DECLSPEC_UUID("{70EC9140-E495-35BF-B600-B3F295E533B8}") _OTAStructureViewOptions;
typedef TComInterface<_OTAStructureViewOptions, &IID__OTAStructureViewOptions> _OTAStructureViewOptionsPtr;

interface DECLSPEC_UUID("{6659600D-A091-31D1-85D2-6C089622B256}") _ContextEventHandler;
typedef TComInterface<_ContextEventHandler, &IID__ContextEventHandler> _ContextEventHandlerPtr;

interface DECLSPEC_UUID("{BF7956DD-FBAE-3F1D-B976-1ABF761F894E}") _NodeEventHandler;
typedef TComInterface<_NodeEventHandler, &IID__NodeEventHandler> _NodeEventHandlerPtr;

interface DECLSPEC_UUID("{5D4EBD34-0C25-3794-91C9-93AFF0E1A37E}") _VisibleEventHandler;
typedef TComInterface<_VisibleEventHandler, &IID__VisibleEventHandler> _VisibleEventHandlerPtr;

interface DECLSPEC_UUID("{9A4B002F-C7D6-4114-BC6D-704E5F323C48}") IOTAStructureView;
typedef TComInterface<IOTAStructureView, &IID_IOTAStructureView> IOTAStructureViewPtr;

interface DECLSPEC_UUID("{3A5A2687-91FE-4D7C-B56B-FD3FB8D4096E}") IOTAFileHistoryManager;
typedef TComInterface<IOTAFileHistoryManager, &IID_IOTAFileHistoryManager> IOTAFileHistoryManagerPtr;

interface DECLSPEC_UUID("{B8CDB02D-93D8-4088-AE03-A28052AD0FAD}") IOTAFileHistoryProvider;
typedef TComInterface<IOTAFileHistoryProvider, &IID_IOTAFileHistoryProvider> IOTAFileHistoryProviderPtr;

interface DECLSPEC_UUID("{92E624D2-A7CD-4C89-9B4E-71170955E96C}") IOTAFileHistory;
typedef TComInterface<IOTAFileHistory, &IID_IOTAFileHistory> IOTAFileHistoryPtr;

interface DECLSPEC_UUID("{61CD4309-303E-4A23-B260-266C2AA391FA}") IInteropCodeEditorControl;
typedef TComInterface<IInteropCodeEditorControl, &IID_IInteropCodeEditorControl> IInteropCodeEditorControlPtr;

interface DECLSPEC_UUID("{72A5E09B-A046-47D1-95AA-15A333C7131B}") IInteropCodeEditorControlCreator;
typedef TComInterface<IInteropCodeEditorControlCreator, &IID_IInteropCodeEditorControlCreator> IInteropCodeEditorControlCreatorPtr;

interface DECLSPEC_UUID("{4F23CBA5-3B8D-48B1-83A5-4F6E04C9F50C}") IOTARegistrationService;
typedef TComInterface<IOTARegistrationService, &IID_IOTARegistrationService> IOTARegistrationServicePtr;

interface DECLSPEC_UUID("{E1F55159-C7F3-4DA1-8E72-C17FA23D0C8C}") IOTAProjectFileStorageNotifier;
typedef TComInterface<IOTAProjectFileStorageNotifier, &IID_IOTAProjectFileStorageNotifier> IOTAProjectFileStorageNotifierPtr;

interface DECLSPEC_UUID("{EB421DBB-D961-4041-B17D-8BFAEE4291A1}") IOTAProjectFileStorage;
typedef TComInterface<IOTAProjectFileStorage, &IID_IOTAProjectFileStorage> IOTAProjectFileStoragePtr;

interface DECLSPEC_UUID("{929C8812-4DB1-4338-B3B8-C1BE7969E2BF}") IOTACodeBrowsePreview;
typedef TComInterface<IOTACodeBrowsePreview, &IID_IOTACodeBrowsePreview> IOTACodeBrowsePreviewPtr;

interface DECLSPEC_UUID("{CA12BE5C-FC9B-403A-BFB5-786562026ABD}") IOTATimerServices;
typedef TComInterface<IOTATimerServices, &IID_IOTATimerServices> IOTATimerServicesPtr;

interface DECLSPEC_UUID("{DEE36173-1597-498A-A85A-C90BFCAE9B74}") IOTAHelpTrait;
typedef TComInterface<IOTAHelpTrait, &IID_IOTAHelpTrait> IOTAHelpTraitPtr;

interface DECLSPEC_UUID("{914E82DB-4123-4AA8-91D9-DB105E1FEC64}") IOTAPersonalityHelpTrait;
typedef TComInterface<IOTAPersonalityHelpTrait, &IID_IOTAPersonalityHelpTrait> IOTAPersonalityHelpTraitPtr;

interface DECLSPEC_UUID("{25F4CC12-EA93-4AEC-BC4A-DFDF427053B0}") IOTAHelpServices;
typedef TComInterface<IOTAHelpServices, &IID_IOTAHelpServices> IOTAHelpServicesPtr;


// *********************************************************************//
// Declaration of CoClasses defined in Type Library                       
// (NOTE: Here we map each CoClass to its Default Interface)              
//                                                                        
// The LIBID_OF_ macro(s) map a LIBID_OF_CoClassName to the GUID of this  
// TypeLibrary. It simplifies the updating of macros when CoClass name    
// change.                                                                
// *********************************************************************//
typedef _Object BorlandIDE;
typedef _ObjectPtr BorlandIDEPtr;
typedef _CodeUpdater CodeUpdater;
typedef _CodeUpdaterPtr CodeUpdaterPtr;
typedef _StringCollectionAdapter StringCollectionAdapter;
typedef _StringCollectionAdapterPtr StringCollectionAdapterPtr;
typedef _DocumentationManager DocumentationManager;
typedef _DocumentationManagerPtr DocumentationManagerPtr;
typedef _RefactoringException RefactoringException;
typedef _RefactoringExceptionPtr RefactoringExceptionPtr;
typedef _RefactoringKinds RefactoringKinds;
typedef _RefactoringKindsPtr RefactoringKindsPtr;
typedef _RefactoringHelpContextIds RefactoringHelpContextIds;
typedef _RefactoringHelpContextIdsPtr RefactoringHelpContextIdsPtr;
typedef _RefactoringEventArgs RefactoringEventArgs;
typedef _RefactoringEventArgsPtr RefactoringEventArgsPtr;
typedef _RefactoringEvent RefactoringEvent;
typedef _RefactoringEventPtr RefactoringEventPtr;
typedef _RefactoringRegistrarEventHandler RefactoringRegistrarEventHandler;
typedef _RefactoringRegistrarEventHandlerPtr RefactoringRegistrarEventHandlerPtr;
typedef _Platforms Platforms;
typedef _PlatformsPtr PlatformsPtr;
typedef _OTAEditorFileTypes OTAEditorFileTypes;
typedef _OTAEditorFileTypesPtr OTAEditorFileTypesPtr;
typedef _ViewActivatedEventArgs ViewActivatedEventArgs;
typedef _ViewActivatedEventArgsPtr ViewActivatedEventArgsPtr;
typedef _ViewNotificationEventArgs ViewNotificationEventArgs;
typedef _ViewNotificationEventArgsPtr ViewNotificationEventArgsPtr;
typedef _ViewActivatedEventHandler ViewActivatedEventHandler;
typedef _ViewActivatedEventHandlerPtr ViewActivatedEventHandlerPtr;
typedef _ViewNotificationEventHandler ViewNotificationEventHandler;
typedef _ViewNotificationEventHandlerPtr ViewNotificationEventHandlerPtr;
typedef _RenameNotificationEventArgs RenameNotificationEventArgs;
typedef _RenameNotificationEventArgsPtr RenameNotificationEventArgsPtr;
typedef _RenameNotificationEventHandler RenameNotificationEventHandler;
typedef _RenameNotificationEventHandlerPtr RenameNotificationEventHandlerPtr;
typedef _ModuleAddedRemovedEventArgs ModuleAddedRemovedEventArgs;
typedef _ModuleAddedRemovedEventArgsPtr ModuleAddedRemovedEventArgsPtr;
typedef _ModuleRenamedEventArgs ModuleRenamedEventArgs;
typedef _ModuleRenamedEventArgsPtr ModuleRenamedEventArgsPtr;
typedef _ModuleAddedRemovedEventHandler ModuleAddedRemovedEventHandler;
typedef _ModuleAddedRemovedEventHandlerPtr ModuleAddedRemovedEventHandlerPtr;
typedef _ModuleRenamedEventHandler ModuleRenamedEventHandler;
typedef _ModuleRenamedEventHandlerPtr ModuleRenamedEventHandlerPtr;
typedef _ToolboxItemEventArgs ToolboxItemEventArgs;
typedef _ToolboxItemEventArgsPtr ToolboxItemEventArgsPtr;
typedef _ToolboxItemAddedEventArgs ToolboxItemAddedEventArgs;
typedef _ToolboxItemAddedEventArgsPtr ToolboxItemAddedEventArgsPtr;
typedef _TOTAHandle TOTAHandle;
typedef _TOTAHandlePtr TOTAHandlePtr;
typedef _gccEventArgs gccEventArgs;
typedef _gccEventArgsPtr gccEventArgsPtr;
typedef _ToolboxItemEventHandler ToolboxItemEventHandler;
typedef _ToolboxItemEventHandlerPtr ToolboxItemEventHandlerPtr;
typedef _ToolboxItemAddedEventHandler ToolboxItemAddedEventHandler;
typedef _ToolboxItemAddedEventHandlerPtr ToolboxItemAddedEventHandlerPtr;
typedef _AssemblyUnloadedEventArgs AssemblyUnloadedEventArgs;
typedef _AssemblyUnloadedEventArgsPtr AssemblyUnloadedEventArgsPtr;
typedef _AssemblyUnloadedEventHandler AssemblyUnloadedEventHandler;
typedef _AssemblyUnloadedEventHandlerPtr AssemblyUnloadedEventHandlerPtr;
typedef _MessageGroupEventArgs MessageGroupEventArgs;
typedef _MessageGroupEventArgsPtr MessageGroupEventArgsPtr;
typedef _MessageGroupHandler MessageGroupHandler;
typedef _MessageGroupHandlerPtr MessageGroupHandlerPtr;
typedef _FileNotificationEventArgs FileNotificationEventArgs;
typedef _FileNotificationEventArgsPtr FileNotificationEventArgsPtr;
typedef _BeforeCompileArgs BeforeCompileArgs;
typedef _BeforeCompileArgsPtr BeforeCompileArgsPtr;
typedef _AfterCompileArgs AfterCompileArgs;
typedef _AfterCompileArgsPtr AfterCompileArgsPtr;
typedef _FileNotificationHandler FileNotificationHandler;
typedef _FileNotificationHandlerPtr FileNotificationHandlerPtr;
typedef _BeforeCompileHandler BeforeCompileHandler;
typedef _BeforeCompileHandlerPtr BeforeCompileHandlerPtr;
typedef _AfterCompileHandler AfterCompileHandler;
typedef _AfterCompileHandlerPtr AfterCompileHandlerPtr;
typedef _OTAContainerTypes OTAContainerTypes;
typedef _OTAContainerTypesPtr OTAContainerTypesPtr;
typedef _OTADesignerTypes OTADesignerTypes;
typedef _OTADesignerTypesPtr OTADesignerTypesPtr;
typedef _OTACreatorTypes OTACreatorTypes;
typedef _OTACreatorTypesPtr OTACreatorTypesPtr;
typedef _OTAIDEPersonalities OTAIDEPersonalities;
typedef _OTAIDEPersonalitiesPtr OTAIDEPersonalitiesPtr;
typedef _OTAGalleryCategories OTAGalleryCategories;
typedef _OTAGalleryCategoriesPtr OTAGalleryCategoriesPtr;
typedef _OTAFile OTAFile;
typedef _OTAFilePtr OTAFilePtr;
typedef _TOTAGetChildCallback TOTAGetChildCallback;
typedef _TOTAGetChildCallbackPtr TOTAGetChildCallbackPtr;
typedef _ComponentRenamedEventArgs ComponentRenamedEventArgs;
typedef _ComponentRenamedEventArgsPtr ComponentRenamedEventArgsPtr;
typedef _ComponentRenamedEventHandler ComponentRenamedEventHandler;
typedef _ComponentRenamedEventHandlerPtr ComponentRenamedEventHandlerPtr;
typedef _ItemEventArgs ItemEventArgs;
typedef _ItemEventArgsPtr ItemEventArgsPtr;
typedef _SelectedEventArgs SelectedEventArgs;
typedef _SelectedEventArgsPtr SelectedEventArgsPtr;
typedef _ItemEventHandler ItemEventHandler;
typedef _ItemEventHandlerPtr ItemEventHandlerPtr;
typedef _SelectedEventHandler SelectedEventHandler;
typedef _SelectedEventHandlerPtr SelectedEventHandlerPtr;
typedef _ContextEventArgs ContextEventArgs;
typedef _ContextEventArgsPtr ContextEventArgsPtr;
typedef _NodeEventArgs NodeEventArgs;
typedef _NodeEventArgsPtr NodeEventArgsPtr;
typedef _VisibleEventArgs VisibleEventArgs;
typedef _VisibleEventArgsPtr VisibleEventArgsPtr;
typedef _OTAStructureType OTAStructureType;
typedef _OTAStructureTypePtr OTAStructureTypePtr;
typedef _OTANodeType OTANodeType;
typedef _OTANodeTypePtr OTANodeTypePtr;
typedef _OTAStructureViewOptions OTAStructureViewOptions;
typedef _OTAStructureViewOptionsPtr OTAStructureViewOptionsPtr;
typedef _ContextEventHandler ContextEventHandler;
typedef _ContextEventHandlerPtr ContextEventHandlerPtr;
typedef _NodeEventHandler NodeEventHandler;
typedef _NodeEventHandlerPtr NodeEventHandlerPtr;
typedef _VisibleEventHandler VisibleEventHandler;
typedef _VisibleEventHandlerPtr VisibleEventHandlerPtr;

#define LIBID_OF_BorlandIDE (&LIBID_Borland_Studio_ToolsAPI)
#define LIBID_OF_CodeUpdater (&LIBID_Borland_Studio_ToolsAPI)
#define LIBID_OF_StringCollectionAdapter (&LIBID_Borland_Studio_ToolsAPI)
#define LIBID_OF_DocumentationManager (&LIBID_Borland_Studio_ToolsAPI)
#define LIBID_OF_RefactoringException (&LIBID_Borland_Studio_ToolsAPI)
#define LIBID_OF_RefactoringKinds (&LIBID_Borland_Studio_ToolsAPI)
#define LIBID_OF_RefactoringHelpContextIds (&LIBID_Borland_Studio_ToolsAPI)
#define LIBID_OF_RefactoringEventArgs (&LIBID_Borland_Studio_ToolsAPI)
#define LIBID_OF_RefactoringEvent (&LIBID_Borland_Studio_ToolsAPI)
#define LIBID_OF_RefactoringRegistrarEventHandler (&LIBID_Borland_Studio_ToolsAPI)
#define LIBID_OF_Platforms (&LIBID_Borland_Studio_ToolsAPI)
#define LIBID_OF_OTAEditorFileTypes (&LIBID_Borland_Studio_ToolsAPI)
#define LIBID_OF_ViewActivatedEventArgs (&LIBID_Borland_Studio_ToolsAPI)
#define LIBID_OF_ViewNotificationEventArgs (&LIBID_Borland_Studio_ToolsAPI)
#define LIBID_OF_ViewActivatedEventHandler (&LIBID_Borland_Studio_ToolsAPI)
#define LIBID_OF_ViewNotificationEventHandler (&LIBID_Borland_Studio_ToolsAPI)
#define LIBID_OF_RenameNotificationEventArgs (&LIBID_Borland_Studio_ToolsAPI)
#define LIBID_OF_RenameNotificationEventHandler (&LIBID_Borland_Studio_ToolsAPI)
#define LIBID_OF_ModuleAddedRemovedEventArgs (&LIBID_Borland_Studio_ToolsAPI)
#define LIBID_OF_ModuleRenamedEventArgs (&LIBID_Borland_Studio_ToolsAPI)
#define LIBID_OF_ModuleAddedRemovedEventHandler (&LIBID_Borland_Studio_ToolsAPI)
#define LIBID_OF_ModuleRenamedEventHandler (&LIBID_Borland_Studio_ToolsAPI)
#define LIBID_OF_ToolboxItemEventArgs (&LIBID_Borland_Studio_ToolsAPI)
#define LIBID_OF_ToolboxItemAddedEventArgs (&LIBID_Borland_Studio_ToolsAPI)
#define LIBID_OF_TOTAHandle (&LIBID_Borland_Studio_ToolsAPI)
#define LIBID_OF_gccEventArgs (&LIBID_Borland_Studio_ToolsAPI)
#define LIBID_OF_ToolboxItemEventHandler (&LIBID_Borland_Studio_ToolsAPI)
#define LIBID_OF_ToolboxItemAddedEventHandler (&LIBID_Borland_Studio_ToolsAPI)
#define LIBID_OF_AssemblyUnloadedEventArgs (&LIBID_Borland_Studio_ToolsAPI)
#define LIBID_OF_AssemblyUnloadedEventHandler (&LIBID_Borland_Studio_ToolsAPI)
#define LIBID_OF_MessageGroupEventArgs (&LIBID_Borland_Studio_ToolsAPI)
#define LIBID_OF_MessageGroupHandler (&LIBID_Borland_Studio_ToolsAPI)
#define LIBID_OF_FileNotificationEventArgs (&LIBID_Borland_Studio_ToolsAPI)
#define LIBID_OF_BeforeCompileArgs (&LIBID_Borland_Studio_ToolsAPI)
#define LIBID_OF_AfterCompileArgs (&LIBID_Borland_Studio_ToolsAPI)
#define LIBID_OF_FileNotificationHandler (&LIBID_Borland_Studio_ToolsAPI)
#define LIBID_OF_BeforeCompileHandler (&LIBID_Borland_Studio_ToolsAPI)
#define LIBID_OF_AfterCompileHandler (&LIBID_Borland_Studio_ToolsAPI)
#define LIBID_OF_OTAContainerTypes (&LIBID_Borland_Studio_ToolsAPI)
#define LIBID_OF_OTADesignerTypes (&LIBID_Borland_Studio_ToolsAPI)
#define LIBID_OF_OTACreatorTypes (&LIBID_Borland_Studio_ToolsAPI)
#define LIBID_OF_OTAIDEPersonalities (&LIBID_Borland_Studio_ToolsAPI)
#define LIBID_OF_OTAGalleryCategories (&LIBID_Borland_Studio_ToolsAPI)
#define LIBID_OF_OTAFile (&LIBID_Borland_Studio_ToolsAPI)
#define LIBID_OF_TOTAGetChildCallback (&LIBID_Borland_Studio_ToolsAPI)
#define LIBID_OF_ComponentRenamedEventArgs (&LIBID_Borland_Studio_ToolsAPI)
#define LIBID_OF_ComponentRenamedEventHandler (&LIBID_Borland_Studio_ToolsAPI)
#define LIBID_OF_ItemEventArgs (&LIBID_Borland_Studio_ToolsAPI)
#define LIBID_OF_SelectedEventArgs (&LIBID_Borland_Studio_ToolsAPI)
#define LIBID_OF_ItemEventHandler (&LIBID_Borland_Studio_ToolsAPI)
#define LIBID_OF_SelectedEventHandler (&LIBID_Borland_Studio_ToolsAPI)
#define LIBID_OF_ContextEventArgs (&LIBID_Borland_Studio_ToolsAPI)
#define LIBID_OF_NodeEventArgs (&LIBID_Borland_Studio_ToolsAPI)
#define LIBID_OF_VisibleEventArgs (&LIBID_Borland_Studio_ToolsAPI)
#define LIBID_OF_OTAStructureType (&LIBID_Borland_Studio_ToolsAPI)
#define LIBID_OF_OTANodeType (&LIBID_Borland_Studio_ToolsAPI)
#define LIBID_OF_OTAStructureViewOptions (&LIBID_Borland_Studio_ToolsAPI)
#define LIBID_OF_ContextEventHandler (&LIBID_Borland_Studio_ToolsAPI)
#define LIBID_OF_NodeEventHandler (&LIBID_Borland_Studio_ToolsAPI)
#define LIBID_OF_VisibleEventHandler (&LIBID_Borland_Studio_ToolsAPI)

// *********************************************************************//
// Declaration of Enumerations defined in Type Library                    
// *********************************************************************//
enum class BlockCompleteType
{
  BlockCompleteType_bcNone = 0, 
  BlockCompleteType_bcBlock = 1, 
  BlockCompleteType_bcSingleLineComment = 2, 
  BlockCompleteType_bcXMLComment = 3
};

enum class MethodNavigateType
{
  MethodNavigateType_ntUp = 0, 
  MethodNavigateType_ntDown = 1, 
  MethodNavigateType_ntHome = 2, 
  MethodNavigateType_ntEnd = 3
};

enum class TCodeCompletionContext
{
  TCodeCompletionContext_ccNone = 0, 
  TCodeCompletionContext_ccError = 1, 
  TCodeCompletionContext_ccMember = 2, 
  TCodeCompletionContext_ccArgument = 3, 
  TCodeCompletionContext_ccDecl = 4, 
  TCodeCompletionContext_ccTypeDecl = 5, 
  TCodeCompletionContext_ccExpr = 6, 
  TCodeCompletionContext_ccStatement = 7, 
  TCodeCompletionContext_ccConstExpr = 8, 
  TCodeCompletionContext_ccProcDecl = 9, 
  TCodeCompletionContext_ccMemberDecl = 10, 
  TCodeCompletionContext_ccNamespace = 11, 
  TCodeCompletionContext_ccComment = 12, 
  TCodeCompletionContext_ccStringLiteral = 13, 
  TCodeCompletionContext_ccDocument = 14, 
  TCodeCompletionContext_ccElement = 15, 
  TCodeCompletionContext_ccAttribute = 16, 
  TCodeCompletionContext_ccAny = 17
};

enum class SymbolAccessFlags
{
  SymbolAccessFlags_Private = 0, 
  SymbolAccessFlags_Protected = 1, 
  SymbolAccessFlags_Public = 2, 
  SymbolAccessFlags_Internal = 4, 
  SymbolAccessFlags_Static = 16, 
  SymbolAccessFlags_Deprecated = 32
};

enum class SymbolKind
{
  SymbolKind_Unknown = 0, 
  SymbolKind_Error = 1, 
  SymbolKind_Namespace = 2, 
  SymbolKind_CompilationUnit = 3, 
  SymbolKind_Alias = 4, 
  SymbolKind_Type = 5, 
  SymbolKind_Field = 6, 
  SymbolKind_Property = 7, 
  SymbolKind_Method = 8, 
  SymbolKind_Event = 9, 
  SymbolKind_Indexer = 10, 
  SymbolKind_Constructor = 11, 
  SymbolKind_Destructor = 12, 
  SymbolKind_Operator = 13, 
  SymbolKind_Param = 14, 
  SymbolKind_Local = 15, 
  SymbolKind_Label = 16, 
  SymbolKind_Const = 17, 
  SymbolKind_GlobalMethod = 18, 
  SymbolKind_GlobalVariable = 19
};

enum class QueryFlags
{
  QueryFlags_All = 0, 
  QueryFlags_Types = 1, 
  QueryFlags_Namespaces = 2, 
  QueryFlags_Attributes = 4, 
  QueryFlags_Sort = 16, 
  QueryFlags_Assembly = 128
};

enum class RegionKind
{
  RegionKind_Region = 0, 
  RegionKind_If = 1, 
  RegionKind_Namespace = 2, 
  RegionKind_Type = 3, 
  RegionKind_Method = 4, 
  RegionKind_NestedMethod = 5, 
  RegionKind_Global = 6
};

enum class RefactoringIcon
{
  RefactoringIcon_MainRefactoring = 0, 
  RefactoringIcon_FileGroup = 1, 
  RefactoringIcon_FileLineItem = 2, 
  RefactoringIcon_ErrorGroup = 3, 
  RefactoringIcon_ErrorItem = 4, 
  RefactoringIcon_WarningGroup = 5, 
  RefactoringIcon_WarningFileItem = 6, 
  RefactoringIcon_WarningItem = 7, 
  RefactoringIcon_FindReferences = 8, 
  RefactoringIcon_FindReferenceItem = 9
};

enum class NodeInsertType
{
  NodeInsertType_InsertBefore = 0, 
  NodeInsertType_InsertAfter = 1, 
  NodeInsertType_AddChildFirst = 2, 
  NodeInsertType_AddChildLast = 3
};

enum class OTABlockType
{
  OTABlockType_btInclusive = 0, 
  OTABlockType_btLine = 1, 
  OTABlockType_btColumn = 2, 
  OTABlockType_btNonInclusive = 3, 
  OTABlockType_btUnknown = 4
};

enum class OTASearchDirection
{
  OTASearchDirection_sdForward = 0, 
  OTASearchDirection_sdBackward = 1
};

enum class OTAMoveCursorMasks
{
  OTAMoveCursorMasks_mmSkipWord = 0, 
  OTAMoveCursorMasks_mmSkipNonWord = 1, 
  OTAMoveCursorMasks_mmSkipWhite = 2, 
  OTAMoveCursorMasks_mmSkipNonWhite = 3, 
  OTAMoveCursorMasks_mmSkipSpecial = 4, 
  OTAMoveCursorMasks_mmSkipNonSpecial = 5, 
  OTAMoveCursorMasks_mmSkipLeft = 0, 
  OTAMoveCursorMasks_mmSkipRight = 16, 
  OTAMoveCursorMasks_mmSkipStream = 32
};

enum class OTARipFlags
{
  OTARipFlags_rfBackward = 256, 
  OTARipFlags_rfInvertLegalChars = 4096, 
  OTARipFlags_rfIncludeUpperAlphaChars = 1, 
  OTARipFlags_rfIncludeLowerAlphaChars = 2, 
  OTARipFlags_rfIncludeAlphaChars = 3, 
  OTARipFlags_rfIncludeNumericChars = 4, 
  OTARipFlags_rfIncludeSpecialChars = 8
};

enum class OTASyntaxAttributes
{
  OTASyntaxAttributes_atWhiteSpace = 0, 
  OTASyntaxAttributes_atComment = 1, 
  OTASyntaxAttributes_atReservedWord = 2, 
  OTASyntaxAttributes_atIdentifier = 3, 
  OTASyntaxAttributes_atSymbol = 4, 
  OTASyntaxAttributes_atString = 5, 
  OTASyntaxAttributes_atNumber = 6, 
  OTASyntaxAttributes_atFloat = 7, 
  OTASyntaxAttributes_atOctal = 8, 
  OTASyntaxAttributes_atHex = 9, 
  OTASyntaxAttributes_atCharacter = 10, 
  OTASyntaxAttributes_atPreproc = 11, 
  OTASyntaxAttributes_atIllegal = 12, 
  OTASyntaxAttributes_atAssembler = 13, 
  OTASyntaxAttributes_SyntaxOff = 14, 
  OTASyntaxAttributes_MarkedBlock = 15, 
  OTASyntaxAttributes_SearchMatch = 16, 
  OTASyntaxAttributes_atHotLink = 17, 
  OTASyntaxAttributes_atTags = 20, 
  OTASyntaxAttributes_atAttrNames = 21, 
  OTASyntaxAttributes_atAttrValues = 22, 
  OTASyntaxAttributes_atScripts = 23, 
  OTASyntaxAttributes_RightMargin = 37
};

enum class OTALineFlags
{
  OTALineFlags_lfCurrentEIP = 1, 
  OTALineFlags_lfBreakpointEnabled = 2, 
  OTALineFlags_lfBreakpointDisabled = 4, 
  OTALineFlags_lfBreakpointInvalid = 8, 
  OTALineFlags_lfErrorLine = 16, 
  OTALineFlags_lfBreakpointVerified = 32, 
  OTALineFlags_lfBackgroundBkpt = 64, 
  OTALineFlags_lfBackgroupEIP = 128
};

enum class OTAOperation
{
  OTAOperation_opInsert = 0, 
  OTAOperation_opRemove = 1
};

enum class TOTAResHeaderValue
{
  TOTAResHeaderValue_hvFlags = 0, 
  TOTAResHeaderValue_hvLanguage = 1, 
  TOTAResHeaderValue_hvDataVersion = 2, 
  TOTAResHeaderValue_hvVersion = 3, 
  TOTAResHeaderValue_hvCharacteristics = 4
};

enum class OTACompileMode
{
  OTACompileMode_cmOTAMake = 0, 
  OTACompileMode_cmOTABuild = 1, 
  OTACompileMode_cmOTACheck = 2, 
  OTACompileMode_cmOTAMakeUnit = 3
};

enum class OTATypeKind
{
  OTATypeKind_tkUnknown = 0, 
  OTATypeKind_tkInteger = 1, 
  OTATypeKind_tkChar = 2, 
  OTATypeKind_tkEnumeration = 3, 
  OTATypeKind_tkFloat = 4, 
  OTATypeKind_tkString = 5, 
  OTATypeKind_tkSet = 6, 
  OTATypeKind_tkClass = 7, 
  OTATypeKind_tkMethod = 8, 
  OTATypeKind_tkWChar = 9, 
  OTATypeKind_tkLString = 10, 
  OTATypeKind_tkWString = 11, 
  OTATypeKind_tkVariant = 12, 
  OTATypeKind_tkArray = 13, 
  OTATypeKind_tkRecord = 14, 
  OTATypeKind_tkInterface = 15, 
  OTATypeKind_tkInt64 = 16, 
  OTATypeKind_tkDynArray = 17
};

enum class OTAMessageKind
{
  OTAMessageKind_otamkHint = 0, 
  OTAMessageKind_otamkWarn = 1, 
  OTAMessageKind_otamkError = 2, 
  OTAMessageKind_otamkFatal = 3, 
  OTAMessageKind_otamkInfo = 4
};

enum class OTAFileNotification
{
  OTAFileNotification_ofnFileOpening = 0, 
  OTAFileNotification_ofnFileOpened = 1, 
  OTAFileNotification_ofnFileClosing = 2, 
  OTAFileNotification_ofnDefaultDesktopLoad = 3, 
  OTAFileNotification_ofnDefaultDesktopSave = 4, 
  OTAFileNotification_ofnProjectDesktopLoad = 5, 
  OTAFileNotification_ofnProjectDesktopSave = 6, 
  OTAFileNotification_ofnPackageInstalled = 7, 
  OTAFileNotification_ofnPackageUninstalled = 8, 
  OTAFileNotification_ofnActiveProjectChanged = 9
};

enum class OTAMenuItemLocation
{
  OTAMenuItemLocation_otamlBefore = 0, 
  OTAMenuItemLocation_otamlAfter = 1, 
  OTAMenuItemLocation_otamlChild = 2
};

enum class OTACodeCompleteStyle
{
  OTACodeCompleteStyle_csCodelist = 1, 
  OTACodeCompleteStyle_csParamList = 2, 
  OTACodeCompleteStyle_csManual = 128
};

enum class OTAAffect
{
  OTAAffect_afNothing = 0, 
  OTAAffect_afTop = 1, 
  OTAAffect_afLeft = 2, 
  OTAAffect_afBottom = 3, 
  OTAAffect_afRight = 4, 
  OTAAffect_afHCenter = 5, 
  OTAAffect_afVCenter = 6, 
  OTAAffect_afHSpace = 7, 
  OTAAffect_afVSpace = 8, 
  OTAAffect_afHWinCenter = 9, 
  OTAAffect_afVWinCenter = 10, 
  OTAAffect_afHSpaceInc = 11, 
  OTAAffect_afHSpaceDec = 12, 
  OTAAffect_afHSpaceDel = 13, 
  OTAAffect_afVSpaceInc = 14, 
  OTAAffect_afVSpaceDec = 15, 
  OTAAffect_afVSpaceDel = 16, 
  OTAAffect_afAlignToGrid = 17, 
  OTAAffect_afSnapToGrid = 18, 
  OTAAffect_afSendToBack = 19, 
  OTAAffect_afBringToFront = 20
};

enum class OTASizeAffect
{
  OTASizeAffect_asNothing = 0, 
  OTASizeAffect_asHGrow = 1, 
  OTASizeAffect_asHShrink = 2, 
  OTASizeAffect_asHAbsolute = 3, 
  OTASizeAffect_asVGrow = 4, 
  OTASizeAffect_asVShrink = 5, 
  OTASizeAffect_asVAbsolute = 6, 
  OTASizeAffect_asWidths = 7, 
  OTASizeAffect_asHeights = 8, 
  OTASizeAffect_asWidthHeight = 9, 
  OTASizeAffect_asSizeToGrid = 10
};

enum class OTAAlignableState
{
  OTAAlignableState_asEnabled = 1, 
  OTAAlignableState_asChecked = 2
};

enum class NTAPaintIconSize
{
  NTAPaintIconSize_pi16x16 = 0, 
  NTAPaintIconSize_pi24x24 = 1, 
  NTAPaintIconSize_pi32x32 = 2
};

enum class PalDragState
{
  PalDragState_pdsDragEnter = 0, 
  PalDragState_pdsDragLeave = 1, 
  PalDragState_pdsDragMove = 2
};

enum class OTAComponentImageSize
{
  OTAComponentImageSize_cis16x16 = 0, 
  OTAComponentImageSize_cis24x24 = 1, 
  OTAComponentImageSize_cis32x32 = 2
};

enum class OTAChildUpdateKind
{
  OTAChildUpdateKind_ckNodeAdded = 0, 
  OTAChildUpdateKind_ckNodeRemoved = 1, 
  OTAChildUpdateKind_ckChanged = 2
};

enum class OTADragState
{
  OTADragState_odsDragEnter = 0, 
  OTADragState_odsDragLeave = 1, 
  OTADragState_odsDragMove = 2
};

enum class OTADropMode
{
  OTADropMode_odmNowhere = 0, 
  OTADropMode_odmAbove = 1, 
  OTADropMode_odmOnNode = 2, 
  OTADropMode_odmBelow = 3
};

enum class OTANodePreservationMode
{
  OTANodePreservationMode_onpNone = 0, 
  OTANodePreservationMode_onpIntegrated = 1, 
  OTANodePreservationMode_onpExternal = 2
};

enum class TOTAHistoryStyle
{
  TOTAHistoryStyle_hsBuffer = 0, 
  TOTAHistoryStyle_hsFile = 1, 
  TOTAHistoryStyle_hsLocalFile = 2, 
  TOTAHistoryStyle_hsRemoteRevision = 3, 
  TOTAHistoryStyle_hsActiveRevision = 4
};


// *********************************************************************//
// Declaration of Structures and Unions defined in Type Library           
// *********************************************************************//
struct SourceLocation
{
  long fileIndex;
  long line;
  long column;
};

struct SymbolInfo
{
  long symbol;
  Borland_studio_toolsapi_tlb::SymbolKind Kind;
  Borland_studio_toolsapi_tlb::SymbolAccessFlags access;
  unsigned_short TypeName[256];
  unsigned_short Name[256];
  unsigned_short Params[256];
};

struct Comment
{
  long offset;
  BSTR CommentText;
};

struct CodePos
{
  long line;
  long column;
};

struct Region
{
  Borland_studio_toolsapi_tlb::RegionKind Kind;
  Borland_studio_toolsapi_tlb::CodePos start;
  Borland_studio_toolsapi_tlb::CodePos Stop;
  BSTR Name;
  long Active;
};

struct Error
{
  Borland_studio_toolsapi_tlb::CodePos start;
  Borland_studio_toolsapi_tlb::CodePos Stop;
  BSTR Text;
};

#pragma pack(push, 1)
struct OTAEditPos
{
  short col;
  long line;
};
#pragma pack(pop)

#pragma pack(push, 1)
struct OTACharPos
{
  short CharIndex;
  long line;
};
#pragma pack(pop)

struct OTASize
{
  long X;
  long Y;
};

struct OTAPaletteColorItem
{
  ::OLE_COLOR StartColor;
  ::OLE_COLOR EndColor;
  ::OLE_COLOR TextColor;
};

struct OTAPaletteButtonColors
{
  ::OLE_COLOR RegularColor;
  ::OLE_COLOR SelectedColor;
  ::OLE_COLOR HotColor;
};

// *********************************************************************//
// Interface: _CodeUpdater
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {400786A2-A2FF-3714-AD36-1A87580A56B4}
// *********************************************************************//
interface _CodeUpdater  : public IDispatch
{
public:

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: ILanguage
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {52140F24-D25C-399C-BB6C-EDF1625DA50A}
// *********************************************************************//
interface ILanguage  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE get_Name(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE AssemblyChanged(BSTR Name/*[in]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  BSTR __fastcall get_Name(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_Name((BSTR*)&pRetVal));
    return pRetVal;
  }


  __property   BSTR            Name = {read = get_Name};

#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IFileSymbols
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4BC0FA96-F783-339A-9E65-21E2F36F0553}
// *********************************************************************//
interface IFileSymbols  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE GetCodeDomFile(Borland_studio_toolsapi_tlb::IOTACodeDomFile** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetInsite(Borland_studio_toolsapi_tlb::IInsite** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetRegions(Borland_studio_toolsapi_tlb::IRegions** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetModuleInfo(Borland_studio_toolsapi_tlb::IModuleInfo** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetErrors(Borland_studio_toolsapi_tlb::IErrors** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetComments(Borland_studio_toolsapi_tlb::IComments** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetStructureContext(Borland_studio_toolsapi_tlb::IOTAStructureContext** pRetVal/*[out,retval]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  Borland_studio_toolsapi_tlb::IOTACodeDomFile* __fastcall GetCodeDomFile(void)
  {
    Borland_studio_toolsapi_tlb::IOTACodeDomFile* pRetVal = 0;
    OLECHECK(this->GetCodeDomFile((Borland_studio_toolsapi_tlb::IOTACodeDomFile**)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IInsite* __fastcall GetInsite(void)
  {
    Borland_studio_toolsapi_tlb::IInsite* pRetVal = 0;
    OLECHECK(this->GetInsite((Borland_studio_toolsapi_tlb::IInsite**)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IRegions* __fastcall GetRegions(void)
  {
    Borland_studio_toolsapi_tlb::IRegions* pRetVal = 0;
    OLECHECK(this->GetRegions((Borland_studio_toolsapi_tlb::IRegions**)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IModuleInfo* __fastcall GetModuleInfo(void)
  {
    Borland_studio_toolsapi_tlb::IModuleInfo* pRetVal = 0;
    OLECHECK(this->GetModuleInfo((Borland_studio_toolsapi_tlb::IModuleInfo**)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IErrors* __fastcall GetErrors(void)
  {
    Borland_studio_toolsapi_tlb::IErrors* pRetVal = 0;
    OLECHECK(this->GetErrors((Borland_studio_toolsapi_tlb::IErrors**)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IComments* __fastcall GetComments(void)
  {
    Borland_studio_toolsapi_tlb::IComments* pRetVal = 0;
    OLECHECK(this->GetComments((Borland_studio_toolsapi_tlb::IComments**)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAStructureContext* __fastcall GetStructureContext(void)
  {
    Borland_studio_toolsapi_tlb::IOTAStructureContext* pRetVal = 0;
    OLECHECK(this->GetStructureContext((Borland_studio_toolsapi_tlb::IOTAStructureContext**)&pRetVal));
    return pRetVal;
  }



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IFileParse
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {325F8844-7EC5-3867-8281-BB3DD9934766}
// *********************************************************************//
interface IFileParse  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE Modified(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE Parse(void) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IBlockComplete
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7AEB3A47-55DB-3E61-B114-30D8557FD3F2}
// *********************************************************************//
interface IBlockComplete  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE Parse(BSTR fileName/*[in]*/, long line/*[in]*/, long col/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetBlockType(Borland_studio_toolsapi_tlb::BlockCompleteType* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetBlockPos(Borland_studio_toolsapi_tlb::OTACharPos* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetIsValid(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  Borland_studio_toolsapi_tlb::BlockCompleteType __fastcall GetBlockType(void)
  {
    Borland_studio_toolsapi_tlb::BlockCompleteType pRetVal;
    OLECHECK(this->GetBlockType((Borland_studio_toolsapi_tlb::BlockCompleteType*)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::OTACharPos __fastcall GetBlockPos(void)
  {
    Borland_studio_toolsapi_tlb::OTACharPos pRetVal;
    OLECHECK(this->GetBlockPos((Borland_studio_toolsapi_tlb::OTACharPos*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall GetIsValid(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->GetIsValid((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTABrowserModule
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {10F40E7C-2D93-45B4-B776-36A50D7511F8}
// *********************************************************************//
interface IOTABrowserModule  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE BrowseToSymbol(BSTR symbolName/*[in]*/, 
                                                   VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  VARIANT_BOOL __fastcall BrowseToSymbol(BSTR symbolName/*[in]*/)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->BrowseToSymbol(symbolName, (VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IMethodNavigate
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {711E1D36-28A1-345B-9FB6-6814FF9005B5}
// *********************************************************************//
interface IMethodNavigate  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE Navigate(Borland_studio_toolsapi_tlb::IOTAEditView* AView/*[in]*/, 
                                             BSTR fileName/*[in]*/, 
                                             Borland_studio_toolsapi_tlb::MethodNavigateType NavigateType/*[in]*/, 
                                             VARIANT_BOOL ClassLock/*[in]*/, 
                                             VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  VARIANT_BOOL __fastcall Navigate(Borland_studio_toolsapi_tlb::IOTAEditView* AView/*[in]*/, 
                                   BSTR fileName/*[in]*/, 
                                   Borland_studio_toolsapi_tlb::MethodNavigateType NavigateType/*[in]*/, 
                                   VARIANT_BOOL ClassLock/*[in]*/)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->Navigate(AView, fileName, NavigateType, ClassLock, (VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IStringList
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A987910E-C8B2-3C42-8063-06E02F35351A}
// *********************************************************************//
interface IStringList  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE get_Count(long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE Add(BSTR value/*[in]*/, long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE Remove(BSTR value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE Clear(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE IndexOf(BSTR value/*[in]*/, long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_Item(long index/*[in]*/, BSTR* pRetVal/*[out,retval]*/) = 0; // [0]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  long __fastcall get_Count(void)
  {
    long pRetVal;
    OLECHECK(this->get_Count((long*)&pRetVal));
    return pRetVal;
  }

  long __fastcall Add(BSTR value/*[in]*/)
  {
    long pRetVal;
    OLECHECK(this->Add(value, (long*)&pRetVal));
    return pRetVal;
  }

  long __fastcall IndexOf(BSTR value/*[in]*/)
  {
    long pRetVal;
    OLECHECK(this->IndexOf(value, (long*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall get_Item(long index/*[in]*/)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_Item(index, (BSTR*)&pRetVal));
    return pRetVal;
  }


  __property   long            Count = {read = get_Count};

#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IProject
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BF4941E6-EDBD-47BD-8839-B404170740F4}
// *********************************************************************//
interface IProject  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE get_Ident(long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE FileChanged(BSTR fileName/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetInternalProject(VARIANT* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE SynchronizeModel(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetDomFile(BSTR fileName/*[in]*/, 
                                               Borland_studio_toolsapi_tlb::IOTACodeDomFile** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetDomFile_2(Borland_studio_toolsapi_tlb::IOTAModule* module/*[in]*/, 
                                                 Borland_studio_toolsapi_tlb::IOTACodeDomFile** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetFileComments(Borland_studio_toolsapi_tlb::IComments** pRetVal/*[out,retval]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  long __fastcall get_Ident(void)
  {
    long pRetVal;
    OLECHECK(this->get_Ident((long*)&pRetVal));
    return pRetVal;
  }

  VARIANT __fastcall GetInternalProject(void)
  {
    VARIANT pRetVal;
    OLECHECK(this->GetInternalProject((VARIANT*)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTACodeDomFile* __fastcall GetDomFile(BSTR fileName/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::IOTACodeDomFile* pRetVal = 0;
    OLECHECK(this->GetDomFile(fileName, (Borland_studio_toolsapi_tlb::IOTACodeDomFile**)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTACodeDomFile* __fastcall GetDomFile_2(Borland_studio_toolsapi_tlb::IOTAModule* module/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::IOTACodeDomFile* pRetVal = 0;
    OLECHECK(this->GetDomFile_2(module, (Borland_studio_toolsapi_tlb::IOTACodeDomFile**)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IComments* __fastcall GetFileComments(void)
  {
    Borland_studio_toolsapi_tlb::IComments* pRetVal = 0;
    OLECHECK(this->GetFileComments((Borland_studio_toolsapi_tlb::IComments**)&pRetVal));
    return pRetVal;
  }


  __property   long            Ident = {read = get_Ident};

#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: ISymbolsInfo
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {379617BD-F801-3978-A81D-7D406B8CF047}
// *********************************************************************//
interface ISymbolsInfo  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE SetSortOrder(VARIANT_BOOL sortByName/*[in]*/, 
                                                 long* bestMatchIndex/*[out]*/, 
                                                 long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE SetFilter(BSTR filter/*[in]*/, long* bestMatchIndex/*[out]*/, 
                                              long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetCount(long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetBestMatchIndex(long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetItems(long offset/*[in]*/, long length/*[in]*/, 
                                             LPSAFEARRAY* items/*[out]*/, 
                                             long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetCompletionContext(Borland_studio_toolsapi_tlb::TCodeCompletionContext* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetHelpInsightHtml(long symbol/*[in]*/, 
                                                       BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  long __fastcall SetSortOrder(VARIANT_BOOL sortByName/*[in]*/, long* bestMatchIndex/*[out]*/)
  {
    long pRetVal;
    OLECHECK(this->SetSortOrder(sortByName, bestMatchIndex, (long*)&pRetVal));
    return pRetVal;
  }

  long __fastcall SetFilter(BSTR filter/*[in]*/, long* bestMatchIndex/*[out]*/)
  {
    long pRetVal;
    OLECHECK(this->SetFilter(filter, bestMatchIndex, (long*)&pRetVal));
    return pRetVal;
  }

  long __fastcall GetCount(void)
  {
    long pRetVal;
    OLECHECK(this->GetCount((long*)&pRetVal));
    return pRetVal;
  }

  long __fastcall GetBestMatchIndex(void)
  {
    long pRetVal;
    OLECHECK(this->GetBestMatchIndex((long*)&pRetVal));
    return pRetVal;
  }

  long __fastcall GetItems(long offset/*[in]*/, long length/*[in]*/, LPSAFEARRAY* items/*[out]*/)
  {
    long pRetVal;
    OLECHECK(this->GetItems(offset, length, items, (long*)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::TCodeCompletionContext __fastcall GetCompletionContext(void)
  {
    Borland_studio_toolsapi_tlb::TCodeCompletionContext pRetVal;
    OLECHECK(this->GetCompletionContext((Borland_studio_toolsapi_tlb::TCodeCompletionContext*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall GetHelpInsightHtml(long symbol/*[in]*/)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->GetHelpInsightHtml(symbol, (BSTR*)&pRetVal));
    return pRetVal;
  }



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IInsite
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {529A4ED6-D770-3F07-89FA-4D5237BB1126}
// *********************************************************************//
interface IInsite  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE GetFilename(long index/*[in]*/, BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetIndex(BSTR fileName/*[in]*/, long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE symbolName(long sym/*[in]*/, BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE SymbolHint(long sym/*[in]*/, BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE SymbolLocation(long sym/*[in]*/, 
                                                   Borland_studio_toolsapi_tlb::SourceLocation* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetSymbolAccessFlags(long sym/*[in]*/, 
                                                         Borland_studio_toolsapi_tlb::SymbolAccessFlags* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetSymbolKind(long sym/*[in]*/, 
                                                  Borland_studio_toolsapi_tlb::SymbolKind* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE SymbolDocComment(long sym/*[in]*/, BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE SymbolHelpQuery(long sym/*[in]*/, BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE SymbolAt(Borland_studio_toolsapi_tlb::SourceLocation location/*[in]*/, 
                                             long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE ScopeAt(Borland_studio_toolsapi_tlb::SourceLocation location/*[in]*/, 
                                            long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE FindSymbol(BSTR Name/*[in]*/, long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetSourceContext(Borland_studio_toolsapi_tlb::SourceLocation location/*[in]*/, 
                                                     long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetSymbols(long symbolOrScope/*[in]*/, 
                                               long sourceContext/*[in]*/, 
                                               Borland_studio_toolsapi_tlb::QueryFlags flags/*[in]*/, 
                                               BSTR filter/*[in]*/, LPSAFEARRAY* symbols/*[out]*/, 
                                               long* bestMatch/*[out]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetParameters(Borland_studio_toolsapi_tlb::SourceLocation location/*[in]*/, 
                                                  LPSAFEARRAY* parameters/*[out]*/, 
                                                  LPSAFEARRAY* paramLocations/*[out]*/, 
                                                  VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetSymbolsInfo(long symbolOrScope/*[in]*/, 
                                                   long sourceContext/*[in]*/, 
                                                   Borland_studio_toolsapi_tlb::QueryFlags flags/*[in]*/, 
                                                   BSTR filter/*[in]*/, long* Count/*[out]*/, 
                                                   long* bestMatch/*[out]*/, 
                                                   Borland_studio_toolsapi_tlb::ISymbolsInfo** pRetVal/*[out,retval]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  BSTR __fastcall GetFilename(long index/*[in]*/)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->GetFilename(index, (BSTR*)&pRetVal));
    return pRetVal;
  }

  long __fastcall GetIndex(BSTR fileName/*[in]*/)
  {
    long pRetVal;
    OLECHECK(this->GetIndex(fileName, (long*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall symbolName(long sym/*[in]*/)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->symbolName(sym, (BSTR*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall SymbolHint(long sym/*[in]*/)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->SymbolHint(sym, (BSTR*)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::SourceLocation __fastcall SymbolLocation(long sym/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::SourceLocation pRetVal;
    OLECHECK(this->SymbolLocation(sym, (Borland_studio_toolsapi_tlb::SourceLocation*)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::SymbolAccessFlags __fastcall GetSymbolAccessFlags(long sym/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::SymbolAccessFlags pRetVal;
    OLECHECK(this->GetSymbolAccessFlags(sym, (Borland_studio_toolsapi_tlb::SymbolAccessFlags*)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::SymbolKind __fastcall GetSymbolKind(long sym/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::SymbolKind pRetVal;
    OLECHECK(this->GetSymbolKind(sym, (Borland_studio_toolsapi_tlb::SymbolKind*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall SymbolDocComment(long sym/*[in]*/)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->SymbolDocComment(sym, (BSTR*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall SymbolHelpQuery(long sym/*[in]*/)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->SymbolHelpQuery(sym, (BSTR*)&pRetVal));
    return pRetVal;
  }

  long __fastcall SymbolAt(Borland_studio_toolsapi_tlb::SourceLocation location/*[in]*/)
  {
    long pRetVal;
    OLECHECK(this->SymbolAt(location, (long*)&pRetVal));
    return pRetVal;
  }

  long __fastcall ScopeAt(Borland_studio_toolsapi_tlb::SourceLocation location/*[in]*/)
  {
    long pRetVal;
    OLECHECK(this->ScopeAt(location, (long*)&pRetVal));
    return pRetVal;
  }

  long __fastcall FindSymbol(BSTR Name/*[in]*/)
  {
    long pRetVal;
    OLECHECK(this->FindSymbol(Name, (long*)&pRetVal));
    return pRetVal;
  }

  long __fastcall GetSourceContext(Borland_studio_toolsapi_tlb::SourceLocation location/*[in]*/)
  {
    long pRetVal;
    OLECHECK(this->GetSourceContext(location, (long*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall GetParameters(Borland_studio_toolsapi_tlb::SourceLocation location/*[in]*/, 
                                        LPSAFEARRAY* parameters/*[out]*/, 
                                        LPSAFEARRAY* paramLocations/*[out]*/)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->GetParameters(location, parameters, paramLocations, (VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::ISymbolsInfo* __fastcall GetSymbolsInfo(long symbolOrScope/*[in]*/, 
                                                                       long sourceContext/*[in]*/, 
                                                                       Borland_studio_toolsapi_tlb::QueryFlags flags/*[in]*/, 
                                                                       BSTR filter/*[in]*/, 
                                                                       long* Count/*[out]*/, 
                                                                       long* bestMatch/*[out]*/)
  {
    Borland_studio_toolsapi_tlb::ISymbolsInfo* pRetVal = 0;
    OLECHECK(this->GetSymbolsInfo(symbolOrScope, sourceContext, flags, filter, Count, bestMatch, (Borland_studio_toolsapi_tlb::ISymbolsInfo**)&pRetVal));
    return pRetVal;
  }



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IComments
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9B70D729-12E1-3161-84FA-18CD633683F9}
// *********************************************************************//
interface IComments  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE GetCommentInfo(BSTR fileName/*[in]*/, 
                                                   LPSAFEARRAY* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE AddComment(long start/*[in]*/, long end/*[in]*/, 
                                               BSTR fileName/*[in]*/, BSTR CommentText/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE DeleteComment(long start/*[in]*/, long end/*[in]*/, 
                                                  BSTR fileName/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE ChangeComment(long start/*[in]*/, long end/*[in]*/, 
                                                  BSTR fileName/*[in]*/, BSTR CommentText/*[in]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  LPSAFEARRAY __fastcall GetCommentInfo(BSTR fileName/*[in]*/)
  {
    LPSAFEARRAY pRetVal;
    OLECHECK(this->GetCommentInfo(fileName, (LPSAFEARRAY*)&pRetVal));
    return pRetVal;
  }



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IRegions
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5AD8A626-94F3-3EC9-839A-F4A509E2D38E}
// *********************************************************************//
interface IRegions  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE GetRegionInfo(BSTR fileName/*[in]*/, 
                                                  LPSAFEARRAY* pRetVal/*[out,retval]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  LPSAFEARRAY __fastcall GetRegionInfo(BSTR fileName/*[in]*/)
  {
    LPSAFEARRAY pRetVal;
    OLECHECK(this->GetRegionInfo(fileName, (LPSAFEARRAY*)&pRetVal));
    return pRetVal;
  }



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IErrors
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7F2B5BB4-D61D-3E6A-A7B6-0F1EA4A5C2F5}
// *********************************************************************//
interface IErrors  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE GetErrorInfo(BSTR fileName/*[in]*/, 
                                                 LPSAFEARRAY* pRetVal/*[out,retval]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  LPSAFEARRAY __fastcall GetErrorInfo(BSTR fileName/*[in]*/)
  {
    LPSAFEARRAY pRetVal;
    OLECHECK(this->GetErrorInfo(fileName, (LPSAFEARRAY*)&pRetVal));
    return pRetVal;
  }



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IModuleInfo
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EE6AF2AE-D709-3996-BA89-5A604C4C0B3C}
// *********************************************************************//
interface IModuleInfo  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE GetModuleRoot(long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetChildren(long sym/*[in]*/, 
                                                LPSAFEARRAY* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE symbolName(long sym/*[in]*/, BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE SymbolText(long sym/*[in]*/, VARIANT_BOOL fullText/*[in]*/, 
                                               BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE SymbolLocation(long sym/*[in]*/, 
                                                   Borland_studio_toolsapi_tlb::SourceLocation* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetSymbolAccessFlags(long sym/*[in]*/, 
                                                         Borland_studio_toolsapi_tlb::SymbolAccessFlags* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetSymbolKind(long sym/*[in]*/, 
                                                  Borland_studio_toolsapi_tlb::SymbolKind* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE Modifiable(long sym/*[in]*/, 
                                               VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE ModifySymbol(long sym/*[in]*/, BSTR Text/*[in]*/, 
                                                 BSTR* Error/*[out]*/, long* offset/*[out]*/, 
                                                 VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  long __fastcall GetModuleRoot(void)
  {
    long pRetVal;
    OLECHECK(this->GetModuleRoot((long*)&pRetVal));
    return pRetVal;
  }

  LPSAFEARRAY __fastcall GetChildren(long sym/*[in]*/)
  {
    LPSAFEARRAY pRetVal;
    OLECHECK(this->GetChildren(sym, (LPSAFEARRAY*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall symbolName(long sym/*[in]*/)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->symbolName(sym, (BSTR*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall SymbolText(long sym/*[in]*/, VARIANT_BOOL fullText/*[in]*/)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->SymbolText(sym, fullText, (BSTR*)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::SourceLocation __fastcall SymbolLocation(long sym/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::SourceLocation pRetVal;
    OLECHECK(this->SymbolLocation(sym, (Borland_studio_toolsapi_tlb::SourceLocation*)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::SymbolAccessFlags __fastcall GetSymbolAccessFlags(long sym/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::SymbolAccessFlags pRetVal;
    OLECHECK(this->GetSymbolAccessFlags(sym, (Borland_studio_toolsapi_tlb::SymbolAccessFlags*)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::SymbolKind __fastcall GetSymbolKind(long sym/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::SymbolKind pRetVal;
    OLECHECK(this->GetSymbolKind(sym, (Borland_studio_toolsapi_tlb::SymbolKind*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall Modifiable(long sym/*[in]*/)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->Modifiable(sym, (VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall ModifySymbol(long sym/*[in]*/, BSTR Text/*[in]*/, BSTR* Error/*[out]*/, 
                                       long* offset/*[out]*/)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->ModifySymbol(sym, Text, Error, offset, (VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: _StringCollectionAdapter
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {0BC2F4A5-350A-3882-B8B3-BA6DE48E200A}
// *********************************************************************//
interface _StringCollectionAdapter  : public IDispatch
{
public:

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: _DocumentationManager
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {82710262-BC20-34DE-B3DC-3343AB64A090}
// *********************************************************************//
interface _DocumentationManager  : public IDispatch
{
public:

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IRefactoring
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {20163D8A-B5BB-39E5-90D3-6CED95A15A69}
// *********************************************************************//
interface IRefactoring  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE DoRefactoring(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_CanRefactor(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE Undo(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_CanUndo(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE Closed(void) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  VARIANT_BOOL __fastcall get_CanRefactor(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->get_CanRefactor((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall get_CanUndo(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->get_CanUndo((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }


  __property   VARIANT_BOOL    CanRefactor = {read = get_CanRefactor};
  __property   VARIANT_BOOL    CanUndo = {read = get_CanUndo};

#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: _RefactoringException
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {16926FE4-1BE2-3EFE-BB38-BFFEE9517BDB}
// *********************************************************************//
interface _RefactoringException  : public IDispatch
{
public:

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: _RefactoringKinds
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {A5B0C318-839F-3CC7-8507-8D73312BFE10}
// *********************************************************************//
interface _RefactoringKinds  : public IDispatch
{
public:

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: _RefactoringHelpContextIds
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {D42A8462-B20E-3611-85A5-7086BD2690FF}
// *********************************************************************//
interface _RefactoringHelpContextIds  : public IDispatch
{
public:

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IRefactoringItem
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {AB8BE244-9291-3A05-9C56-29B82E1177A5}
// *********************************************************************//
interface IRefactoringItem  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE get_Kind(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_Caption(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_HelpContextId(long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_Shortcut(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_Enabled(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE Invoke_2(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE _Update(void) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  BSTR __fastcall get_Kind(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_Kind((BSTR*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall get_Caption(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_Caption((BSTR*)&pRetVal));
    return pRetVal;
  }

  long __fastcall get_HelpContextId(void)
  {
    long pRetVal;
    OLECHECK(this->get_HelpContextId((long*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall get_Shortcut(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_Shortcut((BSTR*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall get_Enabled(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->get_Enabled((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }


  __property   BSTR            Kind = {read = get_Kind};
  __property   BSTR            Caption = {read = get_Caption};
  __property   long            HelpContextId = {read = get_HelpContextId};
  __property   BSTR            Shortcut = {read = get_Shortcut};
  __property   VARIANT_BOOL    Enabled = {read = get_Enabled};

#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IDeclareVariableRefactoringItem
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {27AE3BC6-E171-33B9-8147-C5F74BA1F818}
// *********************************************************************//
interface IDeclareVariableRefactoringItem  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE DeclareVariable(long AOffset/*[in]*/, BSTR AIdent/*[in]*/, 
                                                    BSTR AType/*[in]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IImportScopeRefactoringItem
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {58411D13-D08E-3B57-A2D2-99B1C4974A9C}
// *********************************************************************//
interface IImportScopeRefactoringItem  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE ImportScope(BSTR AScope/*[in]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IRefactorable
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6F5BCCA3-04E2-3B07-AACC-709FC958278A}
// *********************************************************************//
interface IRefactorable  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE GetRefactoring(BSTR refactoringKind/*[in]*/, 
                                                   Borland_studio_toolsapi_tlb::IRefactoringItem** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetRefactoringByIndex(long index/*[in]*/, 
                                                          Borland_studio_toolsapi_tlb::IRefactoringItem** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetRefactoringCount(long* pRetVal/*[out,retval]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  Borland_studio_toolsapi_tlb::IRefactoringItem* __fastcall GetRefactoring(BSTR refactoringKind/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::IRefactoringItem* pRetVal = 0;
    OLECHECK(this->GetRefactoring(refactoringKind, (Borland_studio_toolsapi_tlb::IRefactoringItem**)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IRefactoringItem* __fastcall GetRefactoringByIndex(long index/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::IRefactoringItem* pRetVal = 0;
    OLECHECK(this->GetRefactoringByIndex(index, (Borland_studio_toolsapi_tlb::IRefactoringItem**)&pRetVal));
    return pRetVal;
  }

  long __fastcall GetRefactoringCount(void)
  {
    long pRetVal;
    OLECHECK(this->GetRefactoringCount((long*)&pRetVal));
    return pRetVal;
  }



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: _RefactoringEventArgs
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {0C3D6B68-8238-3301-A34B-1F7806273B4E}
// *********************************************************************//
interface _RefactoringEventArgs  : public IDispatch
{
public:

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: _RefactoringEvent
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {191DF914-7AFD-3E49-B4A9-0EA9EE0F800D}
// *********************************************************************//
interface _RefactoringEvent  : public IDispatch
{
public:

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IRefactoringEngine
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CB56BAD6-B387-39A8-8321-5CBC270DD7DD}
// *********************************************************************//
interface IRefactoringEngine  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE add_BeforeRefactoringSetup(Borland_studio_toolsapi_tlb::_RefactoringEvent* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE remove_BeforeRefactoringSetup(Borland_studio_toolsapi_tlb::_RefactoringEvent* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE add_AfterRefactoringSetup(Borland_studio_toolsapi_tlb::_RefactoringEvent* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE remove_AfterRefactoringSetup(Borland_studio_toolsapi_tlb::_RefactoringEvent* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE add_BeforeRefactoring(Borland_studio_toolsapi_tlb::_RefactoringEvent* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE remove_BeforeRefactoring(Borland_studio_toolsapi_tlb::_RefactoringEvent* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE add_AfterRefactoring(Borland_studio_toolsapi_tlb::_RefactoringEvent* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE remove_AfterRefactoring(Borland_studio_toolsapi_tlb::_RefactoringEvent* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE add_RefactoringUndone(Borland_studio_toolsapi_tlb::_RefactoringEvent* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE remove_RefactoringUndone(Borland_studio_toolsapi_tlb::_RefactoringEvent* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE add_RefactoringClosed(Borland_studio_toolsapi_tlb::_RefactoringEvent* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE remove_RefactoringClosed(Borland_studio_toolsapi_tlb::_RefactoringEvent* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE add_RefactoringCancelled(Borland_studio_toolsapi_tlb::_RefactoringEvent* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE remove_RefactoringCancelled(Borland_studio_toolsapi_tlb::_RefactoringEvent* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE OnBeforeRefactoringSetup(Borland_studio_toolsapi_tlb::IRefactoring* refactoring/*[in]*/, 
                                                             LPUNKNOWN refactoringNode/*[in]*/, 
                                                             Borland_studio_toolsapi_tlb::IRefactoringUserInterface* refactoringUI/*[in]*/, 
                                                             Borland_studio_toolsapi_tlb::IRefactoringNode* rootNode/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE OnAfterRefactoringSetup(Borland_studio_toolsapi_tlb::IRefactoring* refactoring/*[in]*/, 
                                                            LPUNKNOWN refactoringNode/*[in]*/, 
                                                            Borland_studio_toolsapi_tlb::IRefactoringUserInterface* refactoringUI/*[in]*/, 
                                                            Borland_studio_toolsapi_tlb::IRefactoringNode* rootNode/*[in]*/, 
                                                            Mscorlib_tlb::IEnumerable* bufferPositions/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE OnBeforeRefactoring(Borland_studio_toolsapi_tlb::IRefactoring* refactoring/*[in]*/, 
                                                        LPUNKNOWN refactoringNode/*[in]*/, 
                                                        Borland_studio_toolsapi_tlb::IRefactoringUserInterface* refactoringUI/*[in]*/, 
                                                        Borland_studio_toolsapi_tlb::IRefactoringNode* rootNode/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE OnAfterRefactoring(Borland_studio_toolsapi_tlb::IRefactoring* refactoring/*[in]*/, 
                                                       LPUNKNOWN refactoringNode/*[in]*/, 
                                                       Borland_studio_toolsapi_tlb::IRefactoringUserInterface* refactoringUI/*[in]*/, 
                                                       Borland_studio_toolsapi_tlb::IRefactoringNode* rootNode/*[in]*/, 
                                                       Mscorlib_tlb::IEnumerable* bufferPositions/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE OnRefactoringUndone(Borland_studio_toolsapi_tlb::IRefactoring* refactoring/*[in]*/, 
                                                        LPUNKNOWN refactoringNode/*[in]*/, 
                                                        Borland_studio_toolsapi_tlb::IRefactoringUserInterface* refactoringUI/*[in]*/, 
                                                        Borland_studio_toolsapi_tlb::IRefactoringNode* rootNode/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE OnRefactoringClosed(Borland_studio_toolsapi_tlb::IRefactoring* refactoring/*[in]*/, 
                                                        LPUNKNOWN refactoringNode/*[in]*/, 
                                                        Borland_studio_toolsapi_tlb::IRefactoringUserInterface* refactoringUI/*[in]*/, 
                                                        Borland_studio_toolsapi_tlb::IRefactoringNode* rootNode/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE OnRefactoringCancelled(Borland_studio_toolsapi_tlb::IRefactoring* refactoring/*[in]*/, 
                                                           LPUNKNOWN refactoringNode/*[in]*/, 
                                                           Borland_studio_toolsapi_tlb::IRefactoringUserInterface* refactoringUI/*[in]*/, 
                                                           Borland_studio_toolsapi_tlb::IRefactoringNode* rootNode/*[in]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IRefactoringNode
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {98FD5A08-D076-36AF-A9C6-BDD9DA6ECC3B}
// *********************************************************************//
interface IRefactoringNode  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE get_Icon(Borland_studio_toolsapi_tlb::RefactoringIcon* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_Text(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_Hint(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_Data(long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE set_Data(long pRetVal/*[in]*/) = 0; // [1610743811]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  Borland_studio_toolsapi_tlb::RefactoringIcon __fastcall get_Icon(void)
  {
    Borland_studio_toolsapi_tlb::RefactoringIcon pRetVal;
    OLECHECK(this->get_Icon((Borland_studio_toolsapi_tlb::RefactoringIcon*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall get_Text(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_Text((BSTR*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall get_Hint(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_Hint((BSTR*)&pRetVal));
    return pRetVal;
  }

  long __fastcall get_Data(void)
  {
    long pRetVal;
    OLECHECK(this->get_Data((long*)&pRetVal));
    return pRetVal;
  }


  __property   Borland_studio_toolsapi_tlb::RefactoringIcon Icon = {read = get_Icon};
  __property   BSTR            Text = {read = get_Text};
  __property   BSTR            Hint = {read = get_Hint};
  __property   long            Data = {read = get_Data, write = set_Data};

#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IBoldNode
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F161CCE5-BF7B-3789-956C-24474506EC45}
// *********************************************************************//
interface IBoldNode  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE get_BoldStart(long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_BoldEnd(long* pRetVal/*[out,retval]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  long __fastcall get_BoldStart(void)
  {
    long pRetVal;
    OLECHECK(this->get_BoldStart((long*)&pRetVal));
    return pRetVal;
  }

  long __fastcall get_BoldEnd(void)
  {
    long pRetVal;
    OLECHECK(this->get_BoldEnd((long*)&pRetVal));
    return pRetVal;
  }


  __property   long            BoldStart = {read = get_BoldStart};
  __property   long            BoldEnd = {read = get_BoldEnd};

#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IRefactoringFileNode
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {AD2C828B-04F2-3F73-AA1E-8423B34B1D5B}
// *********************************************************************//
interface IRefactoringFileNode  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE get_fileName(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_LineNumber(long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_ColumnNumber(long* pRetVal/*[out,retval]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  BSTR __fastcall get_fileName(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_fileName((BSTR*)&pRetVal));
    return pRetVal;
  }

  long __fastcall get_LineNumber(void)
  {
    long pRetVal;
    OLECHECK(this->get_LineNumber((long*)&pRetVal));
    return pRetVal;
  }

  long __fastcall get_ColumnNumber(void)
  {
    long pRetVal;
    OLECHECK(this->get_ColumnNumber((long*)&pRetVal));
    return pRetVal;
  }


  __property   BSTR            fileName = {read = get_fileName};
  __property   long            LineNumber = {read = get_LineNumber};
  __property   long            ColumnNumber = {read = get_ColumnNumber};

#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IBaseRefactoringUserInterface
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5BDA4177-24B2-3439-8566-FD3DA833A7C0}
// *********************************************************************//
interface IBaseRefactoringUserInterface  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE AddChild(Borland_studio_toolsapi_tlb::IRefactoringNode* parent/*[in]*/, 
                                             Borland_studio_toolsapi_tlb::IRefactoringNode* child/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE InsertChild(Borland_studio_toolsapi_tlb::IRefactoringNode* parent/*[in]*/, 
                                                Borland_studio_toolsapi_tlb::IRefactoringNode* child/*[in]*/, 
                                                Borland_studio_toolsapi_tlb::NodeInsertType attachMode/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE RemoveChild(Borland_studio_toolsapi_tlb::IRefactoringNode* child/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE ClearChildren(Borland_studio_toolsapi_tlb::IRefactoringNode* parent/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE BeginUpdate(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE EndUpdate(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE ExpandNode(Borland_studio_toolsapi_tlb::IRefactoringNode* node/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE StatusMessage(BSTR message/*[in]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IRefactoringUserInterface
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CB03956A-3CDF-35F9-9457-D7F456A05BE4}
// *********************************************************************//
interface IRefactoringUserInterface  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE AddRootRefactoringNode(Borland_studio_toolsapi_tlb::IRefactoringNode* node/*[in]*/, 
                                                           Borland_studio_toolsapi_tlb::IRefactoring* refactoring/*[in]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IFindReferenceUserInterface
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C06264F1-A014-3EA5-B09E-6C7D032764E2}
// *********************************************************************//
interface IFindReferenceUserInterface  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE AddRootReferenceNode(Borland_studio_toolsapi_tlb::IRefactoringNode* node/*[in]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IFindIdentifierRefactoring
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F542F4E7-4AF1-3BEE-A693-F20B3393A111}
// *********************************************************************//
interface IFindIdentifierRefactoring  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE FindIdentifier(BSTR symbolName/*[in]*/, 
                                                   VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  VARIANT_BOOL __fastcall FindIdentifier(BSTR symbolName/*[in]*/)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->FindIdentifier(symbolName, (VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IRefactoringRegistrar
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {71BF7B07-B420-3E5A-979A-03BFF80FCCBE}
// *********************************************************************//
interface IRefactoringRegistrar  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE RegisterRefactoring(Borland_studio_toolsapi_tlb::IRefactoringItem* Item/*[in]*/, 
                                                        BSTR personality/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE UnregisterRefactoring(Borland_studio_toolsapi_tlb::IRefactoringItem* Item/*[in]*/, 
                                                          BSTR personality/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetRefactoringsEnumerator(BSTR personality/*[in]*/, 
                                                              IEnumVARIANT** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE add_RefactoringListChanged(Borland_studio_toolsapi_tlb::_RefactoringRegistrarEventHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE remove_RefactoringListChanged(Borland_studio_toolsapi_tlb::_RefactoringRegistrarEventHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE OnRefactoringListChanged(void) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  IEnumVARIANT* __fastcall GetRefactoringsEnumerator(BSTR personality/*[in]*/)
  {
    IEnumVARIANT* pRetVal = 0;
    OLECHECK(this->GetRefactoringsEnumerator(personality, (IEnumVARIANT**)&pRetVal));
    return pRetVal;
  }



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: _RefactoringRegistrarEventHandler
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {E374BD1F-8457-30A6-9B09-B934711DDACF}
// *********************************************************************//
interface _RefactoringRegistrarEventHandler  : public IDispatch
{
public:

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: _Platforms
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {78E17028-1AD5-3077-972A-189336D59753}
// *********************************************************************//
interface _Platforms  : public IDispatch
{
public:

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAHelpInsight
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D05FBF46-8468-4934-BF70-7EAE1AB8FEAB}
// *********************************************************************//
interface IOTAHelpInsight  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE GetEditorDocInfo(long* line/*[in,out]*/, long* col/*[in,out]*/, 
                                                     long* width/*[in,out]*/, 
                                                     BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetSymbolDocInfo(BSTR symbolName/*[in]*/, 
                                                     BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE IsEnabled(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  BSTR __fastcall GetEditorDocInfo(long* line/*[in,out]*/, long* col/*[in,out]*/, 
                                   long* width/*[in,out]*/)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->GetEditorDocInfo(line, col, width, (BSTR*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall GetSymbolDocInfo(BSTR symbolName/*[in]*/)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->GetSymbolDocInfo(symbolName, (BSTR*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall IsEnabled(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->IsEnabled((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAModuleServices
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D1FB17B4-C46C-4C65-97AF-1BA38016E80D}
// *********************************************************************//
interface IOTAModuleServices  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE CloseAll(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE CreateModule(Borland_studio_toolsapi_tlb::IOTACreator* Creator/*[in]*/, 
                                                 Borland_studio_toolsapi_tlb::IOTAModule** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_CurrentModule(Borland_studio_toolsapi_tlb::IOTAModule** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE FindModule(BSTR fileName/*[in]*/, 
                                               Borland_studio_toolsapi_tlb::IOTAModule** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_ModuleCount(long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetModule(long index/*[in]*/, 
                                              Borland_studio_toolsapi_tlb::IOTAModule** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE NewModule(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE SaveAll(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_MainProjectGroup(Borland_studio_toolsapi_tlb::IOTAProjectGroup** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_ActiveProject(Borland_studio_toolsapi_tlb::IOTAProject** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE FindProjectFromFileNameEntry(BSTR fileName/*[in]*/, 
                                                                 Borland_studio_toolsapi_tlb::IOTAProject** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE OpenModule(BSTR fileName/*[in]*/, 
                                               Borland_studio_toolsapi_tlb::IOTAModule** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE AddFileSystem(Borland_studio_toolsapi_tlb::IOTAFileSystem* fileSystem/*[in]*/, 
                                                  long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE RemoveFileSystem(long index/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetNewModuleAndClassName(BSTR Prefix/*[in]*/, 
                                                             BSTR* unitIdent/*[in,out]*/, 
                                                             BSTR* className/*[in,out]*/, 
                                                             BSTR* fileName/*[in,out]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  VARIANT_BOOL __fastcall CloseAll(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->CloseAll((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAModule* __fastcall CreateModule(Borland_studio_toolsapi_tlb::IOTACreator* Creator/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::IOTAModule* pRetVal = 0;
    OLECHECK(this->CreateModule(Creator, (Borland_studio_toolsapi_tlb::IOTAModule**)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAModulePtr __fastcall get_CurrentModule(void)
  {
    Borland_studio_toolsapi_tlb::IOTAModulePtr pRetVal;
    OLECHECK(this->get_CurrentModule(&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAModule* __fastcall FindModule(BSTR fileName/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::IOTAModule* pRetVal = 0;
    OLECHECK(this->FindModule(fileName, (Borland_studio_toolsapi_tlb::IOTAModule**)&pRetVal));
    return pRetVal;
  }

  long __fastcall get_ModuleCount(void)
  {
    long pRetVal;
    OLECHECK(this->get_ModuleCount((long*)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAModule* __fastcall GetModule(long index/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::IOTAModule* pRetVal = 0;
    OLECHECK(this->GetModule(index, (Borland_studio_toolsapi_tlb::IOTAModule**)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall NewModule(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->NewModule((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall SaveAll(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->SaveAll((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAProjectGroupPtr __fastcall get_MainProjectGroup(void)
  {
    Borland_studio_toolsapi_tlb::IOTAProjectGroupPtr pRetVal;
    OLECHECK(this->get_MainProjectGroup(&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAProjectPtr __fastcall get_ActiveProject(void)
  {
    Borland_studio_toolsapi_tlb::IOTAProjectPtr pRetVal;
    OLECHECK(this->get_ActiveProject(&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAProject* __fastcall FindProjectFromFileNameEntry(BSTR fileName/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::IOTAProject* pRetVal = 0;
    OLECHECK(this->FindProjectFromFileNameEntry(fileName, (Borland_studio_toolsapi_tlb::IOTAProject**)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAModule* __fastcall OpenModule(BSTR fileName/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::IOTAModule* pRetVal = 0;
    OLECHECK(this->OpenModule(fileName, (Borland_studio_toolsapi_tlb::IOTAModule**)&pRetVal));
    return pRetVal;
  }

  long __fastcall AddFileSystem(Borland_studio_toolsapi_tlb::IOTAFileSystem* fileSystem/*[in]*/)
  {
    long pRetVal;
    OLECHECK(this->AddFileSystem(fileSystem, (long*)&pRetVal));
    return pRetVal;
  }


  __property   Borland_studio_toolsapi_tlb::IOTAModulePtr CurrentModule = {read = get_CurrentModule};
  __property   long            ModuleCount = {read = get_ModuleCount};
  __property   Borland_studio_toolsapi_tlb::IOTAProjectGroupPtr MainProjectGroup = {read = get_MainProjectGroup};
  __property   Borland_studio_toolsapi_tlb::IOTAProjectPtr ActiveProject = {read = get_ActiveProject};

#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAEditBlock
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F668E20A-7DCF-4D9D-82B1-EB5A6D32FD18}
// *********************************************************************//
interface IOTAEditBlock  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE BeginBlock(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE Copy(VARIANT_BOOL append/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE Cut(VARIANT_BOOL append/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE Delete(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE EndBlock(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE Extend(long newRow/*[in]*/, long newCol/*[in]*/, 
                                           VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE ExtendPageUp(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE ExtendPageDown(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE ExtendReal(long newRow/*[in]*/, long newCol/*[in]*/, 
                                               VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE ExtendRelative(long deltaRow/*[in]*/, long deltaCol/*[in]*/, 
                                                   VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_EndingColumn(long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_EndingRow(long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_IsValid(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_Size(long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_StartingColumn(long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_StartingRow(long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_Style(Borland_studio_toolsapi_tlb::OTABlockType* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE set_Style(Borland_studio_toolsapi_tlb::OTABlockType pRetVal/*[in]*/) = 0; // [1610743824]
  virtual HRESULT STDMETHODCALLTYPE get_Text(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_Visible(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE set_Visible(VARIANT_BOOL pRetVal/*[in]*/) = 0; // [1610743827]
  virtual HRESULT STDMETHODCALLTYPE Indent(long magnitude/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE LowerCase(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE Print(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE Reset(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE Restore(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE Save(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE SaveToFile(BSTR fileName/*[in]*/, 
                                               VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE ToggleCase(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE UpperCase(void) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  VARIANT_BOOL __fastcall Delete(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->Delete((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall Extend(long newRow/*[in]*/, long newCol/*[in]*/)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->Extend(newRow, newCol, (VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall ExtendPageUp(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->ExtendPageUp((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall ExtendPageDown(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->ExtendPageDown((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall ExtendReal(long newRow/*[in]*/, long newCol/*[in]*/)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->ExtendReal(newRow, newCol, (VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall ExtendRelative(long deltaRow/*[in]*/, long deltaCol/*[in]*/)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->ExtendRelative(deltaRow, deltaCol, (VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  long __fastcall get_EndingColumn(void)
  {
    long pRetVal;
    OLECHECK(this->get_EndingColumn((long*)&pRetVal));
    return pRetVal;
  }

  long __fastcall get_EndingRow(void)
  {
    long pRetVal;
    OLECHECK(this->get_EndingRow((long*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall get_IsValid(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->get_IsValid((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  long __fastcall get_Size(void)
  {
    long pRetVal;
    OLECHECK(this->get_Size((long*)&pRetVal));
    return pRetVal;
  }

  long __fastcall get_StartingColumn(void)
  {
    long pRetVal;
    OLECHECK(this->get_StartingColumn((long*)&pRetVal));
    return pRetVal;
  }

  long __fastcall get_StartingRow(void)
  {
    long pRetVal;
    OLECHECK(this->get_StartingRow((long*)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::OTABlockType __fastcall get_Style(void)
  {
    Borland_studio_toolsapi_tlb::OTABlockType pRetVal;
    OLECHECK(this->get_Style((Borland_studio_toolsapi_tlb::OTABlockType*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall get_Text(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_Text((BSTR*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall get_Visible(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->get_Visible((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall Print(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->Print((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall SaveToFile(BSTR fileName/*[in]*/)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->SaveToFile(fileName, (VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }


  __property   long            EndingColumn = {read = get_EndingColumn};
  __property   long            EndingRow = {read = get_EndingRow};
  __property   VARIANT_BOOL    IsValid = {read = get_IsValid};
  __property   long            Size = {read = get_Size};
  __property   long            StartingColumn = {read = get_StartingColumn};
  __property   long            StartingRow = {read = get_StartingRow};
  __property   Borland_studio_toolsapi_tlb::OTABlockType Style = {read = get_Style, write = set_Style};
  __property   BSTR            Text = {read = get_Text};
  __property   VARIANT_BOOL    Visible = {read = get_Visible, write = set_Visible};

#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTABufferOptions
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D724AD3A-A9A3-47CB-A160-B29BB427B34F}
// *********************************************************************//
interface IOTABufferOptions  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE get_AutoIndent(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE set_AutoIndent(VARIANT_BOOL pRetVal/*[in]*/) = 0; // [1610743808]
  virtual HRESULT STDMETHODCALLTYPE get_BackspaceUnindents(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE set_BackspaceUnindents(VARIANT_BOOL pRetVal/*[in]*/) = 0; // [1610743810]
  virtual HRESULT STDMETHODCALLTYPE get_CreateBackupFile(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE set_CreateBackupFile(VARIANT_BOOL pRetVal/*[in]*/) = 0; // [1610743812]
  virtual HRESULT STDMETHODCALLTYPE get_CursorThroughTabs(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE set_CursorThroughTabs(VARIANT_BOOL pRetVal/*[in]*/) = 0; // [1610743814]
  virtual HRESULT STDMETHODCALLTYPE get_InsertMode(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE set_InsertMode(VARIANT_BOOL pRetVal/*[in]*/) = 0; // [1610743816]
  virtual HRESULT STDMETHODCALLTYPE get_GroupUndo(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE set_GroupUndo(VARIANT_BOOL pRetVal/*[in]*/) = 0; // [1610743818]
  virtual HRESULT STDMETHODCALLTYPE get_KeepTrailingBlanks(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE set_KeepTrailingBlanks(VARIANT_BOOL pRetVal/*[in]*/) = 0; // [1610743820]
  virtual HRESULT STDMETHODCALLTYPE get_LeftGutterWidth(long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE set_LeftGutterWidth(long pRetVal/*[in]*/) = 0; // [1610743822]
  virtual HRESULT STDMETHODCALLTYPE get_RightMargin(long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE set_RightMargin(long pRetVal/*[in]*/) = 0; // [1610743824]
  virtual HRESULT STDMETHODCALLTYPE get_OverwriteBlocks(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE set_OverwriteBlocks(VARIANT_BOOL pRetVal/*[in]*/) = 0; // [1610743826]
  virtual HRESULT STDMETHODCALLTYPE get_PersistentBlocks(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE set_PersistentBlocks(VARIANT_BOOL pRetVal/*[in]*/) = 0; // [1610743828]
  virtual HRESULT STDMETHODCALLTYPE get_PreserveLineEnds(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE set_PreserveLineEnds(VARIANT_BOOL pRetVal/*[in]*/) = 0; // [1610743830]
  virtual HRESULT STDMETHODCALLTYPE get_SmartTab(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE set_SmartTab(VARIANT_BOOL pRetVal/*[in]*/) = 0; // [1610743832]
  virtual HRESULT STDMETHODCALLTYPE get_SyntaxHighlight(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE set_SyntaxHighlight(VARIANT_BOOL pRetVal/*[in]*/) = 0; // [1610743834]
  virtual HRESULT STDMETHODCALLTYPE get_TabStops(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE set_TabStops(BSTR pRetVal/*[in]*/) = 0; // [1610743836]
  virtual HRESULT STDMETHODCALLTYPE get_UndoAfterSave(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE set_UndoAfterSave(VARIANT_BOOL pRetVal/*[in]*/) = 0; // [1610743838]
  virtual HRESULT STDMETHODCALLTYPE get_UndoLimit(long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE set_UndoLimit(long pRetVal/*[in]*/) = 0; // [1610743840]
  virtual HRESULT STDMETHODCALLTYPE get_UseTabCharacter(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE set_UseTabCharacter(VARIANT_BOOL pRetVal/*[in]*/) = 0; // [1610743842]
  virtual HRESULT STDMETHODCALLTYPE get_ShowSpace(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE set_ShowSpace(VARIANT_BOOL pRetVal/*[in]*/) = 0; // [1610743844]
  virtual HRESULT STDMETHODCALLTYPE get_ShowTab(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE set_ShowTab(VARIANT_BOOL pRetVal/*[in]*/) = 0; // [1610743846]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  VARIANT_BOOL __fastcall get_AutoIndent(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->get_AutoIndent((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall get_BackspaceUnindents(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->get_BackspaceUnindents((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall get_CreateBackupFile(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->get_CreateBackupFile((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall get_CursorThroughTabs(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->get_CursorThroughTabs((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall get_InsertMode(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->get_InsertMode((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall get_GroupUndo(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->get_GroupUndo((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall get_KeepTrailingBlanks(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->get_KeepTrailingBlanks((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  long __fastcall get_LeftGutterWidth(void)
  {
    long pRetVal;
    OLECHECK(this->get_LeftGutterWidth((long*)&pRetVal));
    return pRetVal;
  }

  long __fastcall get_RightMargin(void)
  {
    long pRetVal;
    OLECHECK(this->get_RightMargin((long*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall get_OverwriteBlocks(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->get_OverwriteBlocks((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall get_PersistentBlocks(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->get_PersistentBlocks((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall get_PreserveLineEnds(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->get_PreserveLineEnds((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall get_SmartTab(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->get_SmartTab((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall get_SyntaxHighlight(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->get_SyntaxHighlight((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall get_TabStops(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_TabStops((BSTR*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall get_UndoAfterSave(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->get_UndoAfterSave((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  long __fastcall get_UndoLimit(void)
  {
    long pRetVal;
    OLECHECK(this->get_UndoLimit((long*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall get_UseTabCharacter(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->get_UseTabCharacter((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall get_ShowSpace(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->get_ShowSpace((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall get_ShowTab(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->get_ShowTab((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }


  __property   VARIANT_BOOL    AutoIndent = {read = get_AutoIndent, write = set_AutoIndent};
  __property   VARIANT_BOOL    BackspaceUnindents = {read = get_BackspaceUnindents, write = set_BackspaceUnindents};
  __property   VARIANT_BOOL    CreateBackupFile = {read = get_CreateBackupFile, write = set_CreateBackupFile};
  __property   VARIANT_BOOL    CursorThroughTabs = {read = get_CursorThroughTabs, write = set_CursorThroughTabs};
  __property   VARIANT_BOOL    InsertMode = {read = get_InsertMode, write = set_InsertMode};
  __property   VARIANT_BOOL    GroupUndo = {read = get_GroupUndo, write = set_GroupUndo};
  __property   VARIANT_BOOL    KeepTrailingBlanks = {read = get_KeepTrailingBlanks, write = set_KeepTrailingBlanks};
  __property   long            LeftGutterWidth = {read = get_LeftGutterWidth, write = set_LeftGutterWidth};
  __property   long            RightMargin = {read = get_RightMargin, write = set_RightMargin};
  __property   VARIANT_BOOL    OverwriteBlocks = {read = get_OverwriteBlocks, write = set_OverwriteBlocks};
  __property   VARIANT_BOOL    PersistentBlocks = {read = get_PersistentBlocks, write = set_PersistentBlocks};
  __property   VARIANT_BOOL    PreserveLineEnds = {read = get_PreserveLineEnds, write = set_PreserveLineEnds};
  __property   VARIANT_BOOL    SmartTab = {read = get_SmartTab, write = set_SmartTab};
  __property   VARIANT_BOOL    SyntaxHighlight = {read = get_SyntaxHighlight, write = set_SyntaxHighlight};
  __property   BSTR            TabStops = {read = get_TabStops, write = set_TabStops};
  __property   VARIANT_BOOL    UndoAfterSave = {read = get_UndoAfterSave, write = set_UndoAfterSave};
  __property   long            UndoLimit = {read = get_UndoLimit, write = set_UndoLimit};
  __property   VARIANT_BOOL    UseTabCharacter = {read = get_UseTabCharacter, write = set_UseTabCharacter};
  __property   VARIANT_BOOL    ShowSpace = {read = get_ShowSpace, write = set_ShowSpace};
  __property   VARIANT_BOOL    ShowTab = {read = get_ShowTab, write = set_ShowTab};

#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: _OTAEditorFileTypes
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {D3BE9DD0-F947-3AC2-8F33-675A038E0E81}
// *********************************************************************//
interface _OTAEditorFileTypes  : public IDispatch
{
public:

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAEditorService
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B51B7655-F1F7-477D-9B35-395BFB5BA9AA}
// *********************************************************************//
interface IOTAEditorService  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE get_EditOptions(Borland_studio_toolsapi_tlb::IOTAEditOptions** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetEditOptions(BSTR IDString/*[in]*/, 
                                                   Borland_studio_toolsapi_tlb::IOTAEditOptions** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetEditOptionsForFile(BSTR fileName/*[in]*/, 
                                                          Borland_studio_toolsapi_tlb::IOTAEditOptions** pRetVal/*[out,retval]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  Borland_studio_toolsapi_tlb::IOTAEditOptionsPtr __fastcall get_EditOptions(void)
  {
    Borland_studio_toolsapi_tlb::IOTAEditOptionsPtr pRetVal;
    OLECHECK(this->get_EditOptions(&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAEditOptions* __fastcall GetEditOptions(BSTR IDString/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::IOTAEditOptions* pRetVal = 0;
    OLECHECK(this->GetEditOptions(IDString, (Borland_studio_toolsapi_tlb::IOTAEditOptions**)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAEditOptions* __fastcall GetEditOptionsForFile(BSTR fileName/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::IOTAEditOptions* pRetVal = 0;
    OLECHECK(this->GetEditOptionsForFile(fileName, (Borland_studio_toolsapi_tlb::IOTAEditOptions**)&pRetVal));
    return pRetVal;
  }


  __property   Borland_studio_toolsapi_tlb::IOTAEditOptionsPtr EditOptions = {read = get_EditOptions};

#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAEditOptions
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CD847E36-EBE2-4448-9106-4D67835D4995}
// *********************************************************************//
interface IOTAEditOptions  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE BeginUpdate(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE EndUpdate(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_BlockIndent(long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE set_BlockIndent(long pRetVal/*[in]*/) = 0; // [1610743810]
  virtual HRESULT STDMETHODCALLTYPE get_BufferOptions(Borland_studio_toolsapi_tlb::IOTABufferOptions** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_FontName(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE set_FontName(BSTR pRetVal/*[in]*/) = 0; // [1610743813]
  virtual HRESULT STDMETHODCALLTYPE get_FontSize(long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE set_FontSize(long pRetVal/*[in]*/) = 0; // [1610743815]
  virtual HRESULT STDMETHODCALLTYPE get_ForceCutCopyEnabled(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE set_ForceCutCopyEnabled(VARIANT_BOOL pRetVal/*[in]*/) = 0; // [1610743817]
  virtual HRESULT STDMETHODCALLTYPE get_UseBriefCursorShapes(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE set_UseBriefCursorShapes(VARIANT_BOOL pRetVal/*[in]*/) = 0; // [1610743819]
  virtual HRESULT STDMETHODCALLTYPE get_UseBriefRegularExpressions(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE set_UseBriefRegularExpressions(VARIANT_BOOL pRetVal/*[in]*/) = 0; // [1610743821]
  virtual HRESULT STDMETHODCALLTYPE get_Extensions(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE set_Extensions(BSTR pRetVal/*[in]*/) = 0; // [1610743823]
  virtual HRESULT STDMETHODCALLTYPE get_OptionsName(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE set_OptionsName(BSTR pRetVal/*[in]*/) = 0; // [1610743825]
  virtual HRESULT STDMETHODCALLTYPE get_OptionsIDString(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_OptionsIndex(long* pRetVal/*[out,retval]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  long __fastcall get_BlockIndent(void)
  {
    long pRetVal;
    OLECHECK(this->get_BlockIndent((long*)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTABufferOptionsPtr __fastcall get_BufferOptions(void)
  {
    Borland_studio_toolsapi_tlb::IOTABufferOptionsPtr pRetVal;
    OLECHECK(this->get_BufferOptions(&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall get_FontName(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_FontName((BSTR*)&pRetVal));
    return pRetVal;
  }

  long __fastcall get_FontSize(void)
  {
    long pRetVal;
    OLECHECK(this->get_FontSize((long*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall get_ForceCutCopyEnabled(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->get_ForceCutCopyEnabled((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall get_UseBriefCursorShapes(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->get_UseBriefCursorShapes((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall get_UseBriefRegularExpressions(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->get_UseBriefRegularExpressions((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall get_Extensions(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_Extensions((BSTR*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall get_OptionsName(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_OptionsName((BSTR*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall get_OptionsIDString(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_OptionsIDString((BSTR*)&pRetVal));
    return pRetVal;
  }

  long __fastcall get_OptionsIndex(void)
  {
    long pRetVal;
    OLECHECK(this->get_OptionsIndex((long*)&pRetVal));
    return pRetVal;
  }


  __property   long            BlockIndent = {read = get_BlockIndent, write = set_BlockIndent};
  __property   Borland_studio_toolsapi_tlb::IOTABufferOptionsPtr BufferOptions = {read = get_BufferOptions};
  __property   BSTR            FontName = {read = get_FontName, write = set_FontName};
  __property   long            FontSize = {read = get_FontSize, write = set_FontSize};
  __property   VARIANT_BOOL    ForceCutCopyEnabled = {read = get_ForceCutCopyEnabled, write = set_ForceCutCopyEnabled};
  __property   VARIANT_BOOL    UseBriefCursorShapes = {read = get_UseBriefCursorShapes, write = set_UseBriefCursorShapes};
  __property   VARIANT_BOOL    UseBriefRegularExpressions = {read = get_UseBriefRegularExpressions, write = set_UseBriefRegularExpressions};
  __property   BSTR            Extensions = {read = get_Extensions, write = set_Extensions};
  __property   BSTR            OptionsName = {read = get_OptionsName, write = set_OptionsName};
  __property   BSTR            OptionsIDString = {read = get_OptionsIDString};
  __property   long            OptionsIndex = {read = get_OptionsIndex};

#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAEditBuffer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7F71A0BA-1A6D-411C-B763-73434ACD7DF5}
// *********************************************************************//
interface IOTAEditBuffer  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE ClearUndo(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_BufferOptions(Borland_studio_toolsapi_tlb::IOTABufferOptions** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_CurrentDate(DATE* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_EditBlock(Borland_studio_toolsapi_tlb::IOTAEditBlock** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_EditPosition(Borland_studio_toolsapi_tlb::IOTAEditPosition** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_InitialDate(DATE* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_IsModified(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_IsReadOnly(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE set_IsReadOnly(VARIANT_BOOL pRetVal/*[in]*/) = 0; // [1610743815]
  virtual HRESULT STDMETHODCALLTYPE get_TopView(Borland_studio_toolsapi_tlb::IOTAEditView** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE Print(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE Redo(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE Undo(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_EditOptions(Borland_studio_toolsapi_tlb::IOTAEditOptions** pRetVal/*[out,retval]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  Borland_studio_toolsapi_tlb::IOTABufferOptionsPtr __fastcall get_BufferOptions(void)
  {
    Borland_studio_toolsapi_tlb::IOTABufferOptionsPtr pRetVal;
    OLECHECK(this->get_BufferOptions(&pRetVal));
    return pRetVal;
  }

  DATE __fastcall get_CurrentDate(void)
  {
    DATE pRetVal;
    OLECHECK(this->get_CurrentDate((DATE*)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAEditBlockPtr __fastcall get_EditBlock(void)
  {
    Borland_studio_toolsapi_tlb::IOTAEditBlockPtr pRetVal;
    OLECHECK(this->get_EditBlock(&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAEditPositionPtr __fastcall get_EditPosition(void)
  {
    Borland_studio_toolsapi_tlb::IOTAEditPositionPtr pRetVal;
    OLECHECK(this->get_EditPosition(&pRetVal));
    return pRetVal;
  }

  DATE __fastcall get_InitialDate(void)
  {
    DATE pRetVal;
    OLECHECK(this->get_InitialDate((DATE*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall get_IsModified(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->get_IsModified((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall get_IsReadOnly(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->get_IsReadOnly((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAEditViewPtr __fastcall get_TopView(void)
  {
    Borland_studio_toolsapi_tlb::IOTAEditViewPtr pRetVal;
    OLECHECK(this->get_TopView(&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall Print(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->Print((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall Redo(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->Redo((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall Undo(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->Undo((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAEditOptionsPtr __fastcall get_EditOptions(void)
  {
    Borland_studio_toolsapi_tlb::IOTAEditOptionsPtr pRetVal;
    OLECHECK(this->get_EditOptions(&pRetVal));
    return pRetVal;
  }


  __property   Borland_studio_toolsapi_tlb::IOTABufferOptionsPtr BufferOptions = {read = get_BufferOptions};
  __property   DATE            CurrentDate = {read = get_CurrentDate};
  __property   Borland_studio_toolsapi_tlb::IOTAEditBlockPtr EditBlock = {read = get_EditBlock};
  __property   Borland_studio_toolsapi_tlb::IOTAEditPositionPtr EditPosition = {read = get_EditPosition};
  __property   DATE            InitialDate = {read = get_InitialDate};
  __property   VARIANT_BOOL    IsModified = {read = get_IsModified};
  __property   VARIANT_BOOL    IsReadOnly = {read = get_IsReadOnly, write = set_IsReadOnly};
  __property   Borland_studio_toolsapi_tlb::IOTAEditViewPtr TopView = {read = get_TopView};
  __property   Borland_studio_toolsapi_tlb::IOTAEditOptionsPtr EditOptions = {read = get_EditOptions};

#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTASearchOptions
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {29D0A5EE-10B9-4792-B7EE-8A462A28BDCE}
// *********************************************************************//
interface IOTASearchOptions  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE get_CaseSensitive(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE set_CaseSensitive(VARIANT_BOOL pRetVal/*[in]*/) = 0; // [1610743808]
  virtual HRESULT STDMETHODCALLTYPE get_Direction(Borland_studio_toolsapi_tlb::OTASearchDirection* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE set_Direction(Borland_studio_toolsapi_tlb::OTASearchDirection pRetVal/*[in]*/) = 0; // [1610743810]
  virtual HRESULT STDMETHODCALLTYPE get_FromCursor(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE set_FromCursor(VARIANT_BOOL pRetVal/*[in]*/) = 0; // [1610743812]
  virtual HRESULT STDMETHODCALLTYPE get_RegularExpression(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE set_RegularExpression(VARIANT_BOOL pRetVal/*[in]*/) = 0; // [1610743814]
  virtual HRESULT STDMETHODCALLTYPE get_SearchText(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE set_SearchText(BSTR pRetVal/*[in]*/) = 0; // [1610743816]
  virtual HRESULT STDMETHODCALLTYPE get_WholeFile(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE set_WholeFile(VARIANT_BOOL pRetVal/*[in]*/) = 0; // [1610743818]
  virtual HRESULT STDMETHODCALLTYPE get_WordBoundary(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE set_WordBoundary(VARIANT_BOOL pRetVal/*[in]*/) = 0; // [1610743820]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  VARIANT_BOOL __fastcall get_CaseSensitive(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->get_CaseSensitive((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::OTASearchDirection __fastcall get_Direction(void)
  {
    Borland_studio_toolsapi_tlb::OTASearchDirection pRetVal;
    OLECHECK(this->get_Direction((Borland_studio_toolsapi_tlb::OTASearchDirection*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall get_FromCursor(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->get_FromCursor((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall get_RegularExpression(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->get_RegularExpression((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall get_SearchText(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_SearchText((BSTR*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall get_WholeFile(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->get_WholeFile((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall get_WordBoundary(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->get_WordBoundary((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }


  __property   VARIANT_BOOL    CaseSensitive = {read = get_CaseSensitive, write = set_CaseSensitive};
  __property   Borland_studio_toolsapi_tlb::OTASearchDirection Direction = {read = get_Direction, write = set_Direction};
  __property   VARIANT_BOOL    FromCursor = {read = get_FromCursor, write = set_FromCursor};
  __property   VARIANT_BOOL    RegularExpression = {read = get_RegularExpression, write = set_RegularExpression};
  __property   BSTR            SearchText = {read = get_SearchText, write = set_SearchText};
  __property   VARIANT_BOOL    WholeFile = {read = get_WholeFile, write = set_WholeFile};
  __property   VARIANT_BOOL    WordBoundary = {read = get_WordBoundary, write = set_WordBoundary};

#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAReplaceOptions
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4FAFD11A-91B1-41D5-BCA7-8B0C2389D37C}
// *********************************************************************//
interface IOTAReplaceOptions  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE get_PromptOnReplace(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE set_PromptOnReplace(VARIANT_BOOL pRetVal/*[in]*/) = 0; // [1610743808]
  virtual HRESULT STDMETHODCALLTYPE get_ReplaceAll(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE set_ReplaceAll(VARIANT_BOOL pRetVal/*[in]*/) = 0; // [1610743810]
  virtual HRESULT STDMETHODCALLTYPE get_ReplaceText(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE set_ReplaceText(BSTR pRetVal/*[in]*/) = 0; // [1610743812]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  VARIANT_BOOL __fastcall get_PromptOnReplace(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->get_PromptOnReplace((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall get_ReplaceAll(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->get_ReplaceAll((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall get_ReplaceText(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_ReplaceText((BSTR*)&pRetVal));
    return pRetVal;
  }


  __property   VARIANT_BOOL    PromptOnReplace = {read = get_PromptOnReplace, write = set_PromptOnReplace};
  __property   VARIANT_BOOL    ReplaceAll = {read = get_ReplaceAll, write = set_ReplaceAll};
  __property   BSTR            ReplaceText = {read = get_ReplaceText, write = set_ReplaceText};

#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAEditPosition
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {64962216-E0E1-458F-B984-38561573DE94}
// *********************************************************************//
interface IOTAEditPosition  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE Align(long magnitude/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE BackspaceDelete(long howMany/*[in]*/, 
                                                    VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE Delete(long howMany/*[in]*/, 
                                           VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE DistanceToTab(Borland_studio_toolsapi_tlb::OTASearchDirection Direction/*[in]*/, 
                                                  long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_Character(unsigned_short* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_column(long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_IsSpecialCharacter(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_IsWhitespace(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_IsWordCharacter(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_LastRow(long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_ReplaceOptions(Borland_studio_toolsapi_tlb::IOTAReplaceOptions** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_Row(long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetSearchErrorString(long errorCode/*[in]*/, 
                                                         BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_SearchOptions(Borland_studio_toolsapi_tlb::IOTASearchOptions** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GotoLine(long LineNumber/*[in]*/, 
                                             VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE InsertBlock(Borland_studio_toolsapi_tlb::IOTAEditBlock* block/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE InsertCharacter(unsigned_short Character/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE InsertFile(BSTR fileName/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE InsertText(BSTR Text/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE Move(long Row/*[in]*/, long col/*[in]*/, 
                                         VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE MoveBOL(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE MoveEOF(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE MoveEOL(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE MoveCursor(Borland_studio_toolsapi_tlb::OTAMoveCursorMasks moveMask/*[in]*/, 
                                               VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE MoveReal(long Row/*[in]*/, long col/*[in]*/, 
                                             VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE MoveRelative(long Row/*[in]*/, long col/*[in]*/, 
                                                 VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE Paste(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE Read(long numberOfCharacters/*[in]*/, 
                                         BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE RepeatLastSearchOrReplace(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE Replace(BSTR pattern/*[in]*/, BSTR ReplaceText/*[in]*/, 
                                            VARIANT_BOOL CaseSensitive/*[in]*/, 
                                            VARIANT_BOOL RegularExpression/*[in]*/, 
                                            VARIANT_BOOL WholeFile/*[in]*/, 
                                            Borland_studio_toolsapi_tlb::OTASearchDirection Direction/*[in]*/, 
                                            long* errorCode/*[out]*/, long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE Replace_2(long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE ReplaceAgain(long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE Restore(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE RipText(BSTR validChars/*[in]*/, 
                                            Borland_studio_toolsapi_tlb::OTARipFlags ripFlags/*[in]*/, 
                                            BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE Save(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE Search(BSTR pattern/*[in]*/, VARIANT_BOOL CaseSensitive/*[in]*/, 
                                           VARIANT_BOOL RegularExpression/*[in]*/, 
                                           VARIANT_BOOL WholeFile/*[in]*/, 
                                           Borland_studio_toolsapi_tlb::OTASearchDirection Direction/*[in]*/, 
                                           long* errorCode/*[out]*/, 
                                           VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE Search_2(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE SearchAgain(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE Tab(long magnitude/*[in]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  VARIANT_BOOL __fastcall BackspaceDelete(long howMany/*[in]*/)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->BackspaceDelete(howMany, (VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall Delete(long howMany/*[in]*/)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->Delete(howMany, (VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  long __fastcall DistanceToTab(Borland_studio_toolsapi_tlb::OTASearchDirection Direction/*[in]*/)
  {
    long pRetVal;
    OLECHECK(this->DistanceToTab(Direction, (long*)&pRetVal));
    return pRetVal;
  }

  unsigned_short __fastcall get_Character(void)
  {
    unsigned_short pRetVal;
    OLECHECK(this->get_Character((unsigned_short*)&pRetVal));
    return pRetVal;
  }

  long __fastcall get_column(void)
  {
    long pRetVal;
    OLECHECK(this->get_column((long*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall get_IsSpecialCharacter(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->get_IsSpecialCharacter((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall get_IsWhitespace(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->get_IsWhitespace((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall get_IsWordCharacter(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->get_IsWordCharacter((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  long __fastcall get_LastRow(void)
  {
    long pRetVal;
    OLECHECK(this->get_LastRow((long*)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAReplaceOptionsPtr __fastcall get_ReplaceOptions(void)
  {
    Borland_studio_toolsapi_tlb::IOTAReplaceOptionsPtr pRetVal;
    OLECHECK(this->get_ReplaceOptions(&pRetVal));
    return pRetVal;
  }

  long __fastcall get_Row(void)
  {
    long pRetVal;
    OLECHECK(this->get_Row((long*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall GetSearchErrorString(long errorCode/*[in]*/)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->GetSearchErrorString(errorCode, (BSTR*)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTASearchOptionsPtr __fastcall get_SearchOptions(void)
  {
    Borland_studio_toolsapi_tlb::IOTASearchOptionsPtr pRetVal;
    OLECHECK(this->get_SearchOptions(&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall GotoLine(long LineNumber/*[in]*/)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->GotoLine(LineNumber, (VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall Move(long Row/*[in]*/, long col/*[in]*/)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->Move(Row, col, (VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall MoveBOL(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->MoveBOL((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall MoveEOF(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->MoveEOF((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall MoveEOL(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->MoveEOL((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall MoveCursor(Borland_studio_toolsapi_tlb::OTAMoveCursorMasks moveMask/*[in]*/)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->MoveCursor(moveMask, (VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall MoveReal(long Row/*[in]*/, long col/*[in]*/)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->MoveReal(Row, col, (VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall MoveRelative(long Row/*[in]*/, long col/*[in]*/)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->MoveRelative(Row, col, (VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall Read(long numberOfCharacters/*[in]*/)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->Read(numberOfCharacters, (BSTR*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall RepeatLastSearchOrReplace(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->RepeatLastSearchOrReplace((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  long __fastcall Replace(BSTR pattern/*[in]*/, BSTR ReplaceText/*[in]*/, 
                          VARIANT_BOOL CaseSensitive/*[in]*/, VARIANT_BOOL RegularExpression/*[in]*/, 
                          VARIANT_BOOL WholeFile/*[in]*/, 
                          Borland_studio_toolsapi_tlb::OTASearchDirection Direction/*[in]*/, 
                          long* errorCode/*[out]*/)
  {
    long pRetVal;
    OLECHECK(this->Replace(pattern, ReplaceText, CaseSensitive, RegularExpression, WholeFile, 
                           Direction, errorCode, (long*)&pRetVal));
    return pRetVal;
  }

  long __fastcall Replace_2(void)
  {
    long pRetVal;
    OLECHECK(this->Replace_2((long*)&pRetVal));
    return pRetVal;
  }

  long __fastcall ReplaceAgain(void)
  {
    long pRetVal;
    OLECHECK(this->ReplaceAgain((long*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall RipText(BSTR validChars/*[in]*/, 
                          Borland_studio_toolsapi_tlb::OTARipFlags ripFlags/*[in]*/)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->RipText(validChars, ripFlags, (BSTR*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall Search(BSTR pattern/*[in]*/, VARIANT_BOOL CaseSensitive/*[in]*/, 
                                 VARIANT_BOOL RegularExpression/*[in]*/, 
                                 VARIANT_BOOL WholeFile/*[in]*/, 
                                 Borland_studio_toolsapi_tlb::OTASearchDirection Direction/*[in]*/, 
                                 long* errorCode/*[out]*/)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->Search(pattern, CaseSensitive, RegularExpression, WholeFile, Direction, errorCode, (VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall Search_2(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->Search_2((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall SearchAgain(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->SearchAgain((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }


  __property   unsigned_short  Character = {read = get_Character};
  __property   long            column = {read = get_column};
  __property   VARIANT_BOOL    IsSpecialCharacter = {read = get_IsSpecialCharacter};
  __property   VARIANT_BOOL    IsWhitespace = {read = get_IsWhitespace};
  __property   VARIANT_BOOL    IsWordCharacter = {read = get_IsWordCharacter};
  __property   long            LastRow = {read = get_LastRow};
  __property   Borland_studio_toolsapi_tlb::IOTAReplaceOptionsPtr ReplaceOptions = {read = get_ReplaceOptions};
  __property   long            Row = {read = get_Row};
  __property   Borland_studio_toolsapi_tlb::IOTASearchOptionsPtr SearchOptions = {read = get_SearchOptions};

#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAEditView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A97FEAE3-7BE3-458D-B6B2-4A9EF6400AFC}
// *********************************************************************//
interface IOTAEditView  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE get_CursorPos(Borland_studio_toolsapi_tlb::OTAEditPos* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE set_CursorPos(Borland_studio_toolsapi_tlb::OTAEditPos pRetVal/*[in]*/) = 0; // [1610743808]
  virtual HRESULT STDMETHODCALLTYPE get_TopPos(Borland_studio_toolsapi_tlb::OTAEditPos* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE set_TopPos(Borland_studio_toolsapi_tlb::OTAEditPos pRetVal/*[in]*/) = 0; // [1610743810]
  virtual HRESULT STDMETHODCALLTYPE get_ViewSize(Borland_studio_toolsapi_tlb::OTASize* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE PosToCharPos(long pos/*[in]*/, 
                                                 Borland_studio_toolsapi_tlb::OTACharPos* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE CharPosToPos(Borland_studio_toolsapi_tlb::OTACharPos charPos/*[in]*/, 
                                                 long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE ConvertPos(VARIANT_BOOL EdPosToCharPos/*[in]*/, 
                                               Borland_studio_toolsapi_tlb::OTAEditPos* editPos/*[in,out]*/, 
                                               Borland_studio_toolsapi_tlb::OTACharPos* charPos/*[in,out]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetAttributeAtPos(Borland_studio_toolsapi_tlb::OTAEditPos edPos/*[in]*/, 
                                                      VARIANT_BOOL includeMargin/*[in]*/, 
                                                      long* element/*[out]*/, 
                                                      long* lineFlag/*[out]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE SameView(Borland_studio_toolsapi_tlb::IOTAEditView* editView/*[in]*/, 
                                             VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE BookmarkGoto(long bookmarkID/*[in]*/, 
                                                 VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE BookmarkRecord(long bookmarkID/*[in]*/, 
                                                   VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE BookmarkToggle(long bookmarkID/*[in]*/, 
                                                   VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE ClearAllBookmarks(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE Center(long Row/*[in]*/, long col/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_block(Borland_studio_toolsapi_tlb::IOTAEditBlock** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetBookmarkPos(long bookmarkID/*[in]*/, 
                                                   Borland_studio_toolsapi_tlb::OTACharPos* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_BottomRow(long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_Buffer(Borland_studio_toolsapi_tlb::IOTAEditBuffer** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_LastEditColumn(long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_LastEditRow(long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_LeftColumn(long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_Position(Borland_studio_toolsapi_tlb::IOTAEditPosition** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_RightColumn(long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_TopRow(long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE MoveCursorToView(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE MoveViewToCursor(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE PageDown(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE PageUp(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE Paint(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE Scroll(long deltaRow/*[in]*/, long deltaCol/*[in]*/, 
                                           long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE SetTopLeft(long TopRow/*[in]*/, long leftCol/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE SetTempMsg(BSTR msg/*[in]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  Borland_studio_toolsapi_tlb::OTAEditPos __fastcall get_CursorPos(void)
  {
    Borland_studio_toolsapi_tlb::OTAEditPos pRetVal;
    OLECHECK(this->get_CursorPos((Borland_studio_toolsapi_tlb::OTAEditPos*)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::OTAEditPos __fastcall get_TopPos(void)
  {
    Borland_studio_toolsapi_tlb::OTAEditPos pRetVal;
    OLECHECK(this->get_TopPos((Borland_studio_toolsapi_tlb::OTAEditPos*)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::OTASize __fastcall get_ViewSize(void)
  {
    Borland_studio_toolsapi_tlb::OTASize pRetVal;
    OLECHECK(this->get_ViewSize((Borland_studio_toolsapi_tlb::OTASize*)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::OTACharPos __fastcall PosToCharPos(long pos/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::OTACharPos pRetVal;
    OLECHECK(this->PosToCharPos(pos, (Borland_studio_toolsapi_tlb::OTACharPos*)&pRetVal));
    return pRetVal;
  }

  long __fastcall CharPosToPos(Borland_studio_toolsapi_tlb::OTACharPos charPos/*[in]*/)
  {
    long pRetVal;
    OLECHECK(this->CharPosToPos(charPos, (long*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall SameView(Borland_studio_toolsapi_tlb::IOTAEditView* editView/*[in]*/)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->SameView(editView, (VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall BookmarkGoto(long bookmarkID/*[in]*/)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->BookmarkGoto(bookmarkID, (VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall BookmarkRecord(long bookmarkID/*[in]*/)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->BookmarkRecord(bookmarkID, (VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall BookmarkToggle(long bookmarkID/*[in]*/)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->BookmarkToggle(bookmarkID, (VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAEditBlockPtr __fastcall get_block(void)
  {
    Borland_studio_toolsapi_tlb::IOTAEditBlockPtr pRetVal;
    OLECHECK(this->get_block(&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::OTACharPos __fastcall GetBookmarkPos(long bookmarkID/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::OTACharPos pRetVal;
    OLECHECK(this->GetBookmarkPos(bookmarkID, (Borland_studio_toolsapi_tlb::OTACharPos*)&pRetVal));
    return pRetVal;
  }

  long __fastcall get_BottomRow(void)
  {
    long pRetVal;
    OLECHECK(this->get_BottomRow((long*)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAEditBufferPtr __fastcall get_Buffer(void)
  {
    Borland_studio_toolsapi_tlb::IOTAEditBufferPtr pRetVal;
    OLECHECK(this->get_Buffer(&pRetVal));
    return pRetVal;
  }

  long __fastcall get_LastEditColumn(void)
  {
    long pRetVal;
    OLECHECK(this->get_LastEditColumn((long*)&pRetVal));
    return pRetVal;
  }

  long __fastcall get_LastEditRow(void)
  {
    long pRetVal;
    OLECHECK(this->get_LastEditRow((long*)&pRetVal));
    return pRetVal;
  }

  long __fastcall get_LeftColumn(void)
  {
    long pRetVal;
    OLECHECK(this->get_LeftColumn((long*)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAEditPositionPtr __fastcall get_Position(void)
  {
    Borland_studio_toolsapi_tlb::IOTAEditPositionPtr pRetVal;
    OLECHECK(this->get_Position(&pRetVal));
    return pRetVal;
  }

  long __fastcall get_RightColumn(void)
  {
    long pRetVal;
    OLECHECK(this->get_RightColumn((long*)&pRetVal));
    return pRetVal;
  }

  long __fastcall get_TopRow(void)
  {
    long pRetVal;
    OLECHECK(this->get_TopRow((long*)&pRetVal));
    return pRetVal;
  }

  long __fastcall Scroll(long deltaRow/*[in]*/, long deltaCol/*[in]*/)
  {
    long pRetVal;
    OLECHECK(this->Scroll(deltaRow, deltaCol, (long*)&pRetVal));
    return pRetVal;
  }


  __property   Borland_studio_toolsapi_tlb::OTAEditPos CursorPos = {read = get_CursorPos, write = set_CursorPos};
  __property   Borland_studio_toolsapi_tlb::OTAEditPos TopPos = {read = get_TopPos, write = set_TopPos};
  __property   Borland_studio_toolsapi_tlb::OTASize ViewSize = {read = get_ViewSize};
  __property   Borland_studio_toolsapi_tlb::IOTAEditBlockPtr block = {read = get_block};
  __property   long            BottomRow = {read = get_BottomRow};
  __property   Borland_studio_toolsapi_tlb::IOTAEditBufferPtr Buffer = {read = get_Buffer};
  __property   long            LastEditColumn = {read = get_LastEditColumn};
  __property   long            LastEditRow = {read = get_LastEditRow};
  __property   long            LeftColumn = {read = get_LeftColumn};
  __property   Borland_studio_toolsapi_tlb::IOTAEditPositionPtr Position = {read = get_Position};
  __property   long            RightColumn = {read = get_RightColumn};
  __property   long            TopRow = {read = get_TopRow};

#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAElideActions
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BC19685E-1C37-4492-81E8-BDB8634C6F8C}
// *********************************************************************//
interface IOTAElideActions  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE ElideNearestBlock(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE UnElideNearestBlock(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE UnElideAllBlocks(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE EnableElisions(void) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAEditor
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {614847EC-D01E-4170-8F12-58E5A162F250}
// *********************************************************************//
interface IOTAEditor  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE add_BeforeSave(Mscorlib_tlb::_EventHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE remove_BeforeSave(Mscorlib_tlb::_EventHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE add_AfterSave(Mscorlib_tlb::_EventHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE remove_AfterSave(Mscorlib_tlb::_EventHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE add_Closed(Mscorlib_tlb::_EventHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE remove_Closed(Mscorlib_tlb::_EventHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE add_Modified(Mscorlib_tlb::_EventHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE remove_Modified(Mscorlib_tlb::_EventHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_fileName(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_IsModified(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_module(Borland_studio_toolsapi_tlb::IOTAModule** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE MarkModified(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE Show(void) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  BSTR __fastcall get_fileName(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_fileName((BSTR*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall get_IsModified(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->get_IsModified((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAModulePtr __fastcall get_module(void)
  {
    Borland_studio_toolsapi_tlb::IOTAModulePtr pRetVal;
    OLECHECK(this->get_module(&pRetVal));
    return pRetVal;
  }


  __property   BSTR            fileName = {read = get_fileName};
  __property   VARIANT_BOOL    IsModified = {read = get_IsModified};
  __property   Borland_studio_toolsapi_tlb::IOTAModulePtr module = {read = get_module};

#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAProjectResource
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C706DF59-7EDF-4E70-98F5-765F195F930C}
// *********************************************************************//
interface IOTAProjectResource  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE GetEntryCount(long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetEntry(long index/*[in]*/, 
                                             Borland_studio_toolsapi_tlb::IOTAResourceEntry** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetEntryFromHandle(Borland_studio_toolsapi_tlb::_TOTAHandle* EntryHandle/*[in]*/, 
                                                       Borland_studio_toolsapi_tlb::IOTAResourceEntry** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE FindEntry(BSTR ResType/*[in]*/, BSTR Name/*[in]*/, 
                                              Borland_studio_toolsapi_tlb::IOTAResourceEntry** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE DeleteEntry(Borland_studio_toolsapi_tlb::_TOTAHandle* EntryHandle/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE CreateEntry(BSTR ResType/*[in]*/, BSTR Name/*[in]*/, 
                                                unsigned_short flags/*[in]*/, 
                                                unsigned_short LanguageId/*[in]*/, 
                                                long DataVersion/*[in]*/, long Version/*[in]*/, 
                                                long Characteristics/*[in]*/, 
                                                Borland_studio_toolsapi_tlb::IOTAResourceEntry** pRetVal/*[out,retval]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  long __fastcall GetEntryCount(void)
  {
    long pRetVal;
    OLECHECK(this->GetEntryCount((long*)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAResourceEntry* __fastcall GetEntry(long index/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::IOTAResourceEntry* pRetVal = 0;
    OLECHECK(this->GetEntry(index, (Borland_studio_toolsapi_tlb::IOTAResourceEntry**)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAResourceEntry* __fastcall GetEntryFromHandle(Borland_studio_toolsapi_tlb::_TOTAHandle* EntryHandle/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::IOTAResourceEntry* pRetVal = 0;
    OLECHECK(this->GetEntryFromHandle(EntryHandle, (Borland_studio_toolsapi_tlb::IOTAResourceEntry**)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAResourceEntry* __fastcall FindEntry(BSTR ResType/*[in]*/, 
                                                                       BSTR Name/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::IOTAResourceEntry* pRetVal = 0;
    OLECHECK(this->FindEntry(ResType, Name, (Borland_studio_toolsapi_tlb::IOTAResourceEntry**)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAResourceEntry* __fastcall CreateEntry(BSTR ResType/*[in]*/, 
                                                                         BSTR Name/*[in]*/, 
                                                                         unsigned_short flags/*[in]*/, 
                                                                         unsigned_short LanguageId/*[in]*/, 
                                                                         long DataVersion/*[in]*/, 
                                                                         long Version/*[in]*/, 
                                                                         long Characteristics/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::IOTAResourceEntry* pRetVal = 0;
    OLECHECK(this->CreateEntry(ResType, Name, flags, LanguageId, DataVersion, Version, 
                               Characteristics, (Borland_studio_toolsapi_tlb::IOTAResourceEntry**)&pRetVal));
    return pRetVal;
  }



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAResourceEntry
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C198D6D5-145C-40D0-8E4E-9261FCE5C21F}
// *********************************************************************//
interface IOTAResourceEntry  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE GetResourceType(long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetResourceName(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE Change(BSTR NewType/*[in]*/, BSTR NewName/*[in]*/, 
                                           VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetHeaderValue(Borland_studio_toolsapi_tlb::TOTAResHeaderValue HeaderValue/*[in]*/, 
                                                   long* value/*[in,out]*/, 
                                                   VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE SetHeaderValue(Borland_studio_toolsapi_tlb::TOTAResHeaderValue HeaderValue/*[in]*/, 
                                                   long value/*[in]*/, 
                                                   VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetData(long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_DataSize(long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE set_DataSize(long pRetVal/*[in]*/) = 0; // [1610743814]
  virtual HRESULT STDMETHODCALLTYPE GetEntryHandle(Borland_studio_toolsapi_tlb::_TOTAHandle** pRetVal/*[out,retval]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  long __fastcall GetResourceType(void)
  {
    long pRetVal;
    OLECHECK(this->GetResourceType((long*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall GetResourceName(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->GetResourceName((BSTR*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall Change(BSTR NewType/*[in]*/, BSTR NewName/*[in]*/)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->Change(NewType, NewName, (VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall GetHeaderValue(Borland_studio_toolsapi_tlb::TOTAResHeaderValue HeaderValue/*[in]*/, 
                                         long* value/*[in,out]*/)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->GetHeaderValue(HeaderValue, value, (VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall SetHeaderValue(Borland_studio_toolsapi_tlb::TOTAResHeaderValue HeaderValue/*[in]*/, 
                                         long value/*[in]*/)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->SetHeaderValue(HeaderValue, value, (VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  long __fastcall GetData(void)
  {
    long pRetVal;
    OLECHECK(this->GetData((long*)&pRetVal));
    return pRetVal;
  }

  long __fastcall get_DataSize(void)
  {
    long pRetVal;
    OLECHECK(this->get_DataSize((long*)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::_TOTAHandle* __fastcall GetEntryHandle(void)
  {
    Borland_studio_toolsapi_tlb::_TOTAHandle* pRetVal = 0;
    OLECHECK(this->GetEntryHandle((Borland_studio_toolsapi_tlb::_TOTAHandle**)&pRetVal));
    return pRetVal;
  }


  __property   long            DataSize = {read = get_DataSize, write = set_DataSize};

#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAEditorContent
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F203BC3F-2DA9-4F40-B05D-8EA610F24B2E}
// *********************************************************************//
interface IOTAEditorContent  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE get_Content(LPUNKNOWN* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE _set_Content(LPUNKNOWN pRetVal/*[in]*/) = 0; // [1610743808]
  virtual HRESULT STDMETHODCALLTYPE get_ContentAge(DATE* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE ResetDiskAge(void) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  LPUNKNOWN __fastcall get_Content(void)
  {
    LPUNKNOWN pRetVal;
    OLECHECK(this->get_Content((LPUNKNOWN*)&pRetVal));
    return pRetVal;
  }

  DATE __fastcall get_ContentAge(void)
  {
    DATE pRetVal;
    OLECHECK(this->get_ContentAge((DATE*)&pRetVal));
    return pRetVal;
  }


  __property   LPUNKNOWN       Content = {read = get_Content, write = _set_Content};
  __property   DATE            ContentAge = {read = get_ContentAge};

#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: _ViewActivatedEventArgs
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {329F6CBF-1039-366A-8E14-57D7C3E7B0CB}
// *********************************************************************//
interface _ViewActivatedEventArgs  : public IDispatch
{
public:

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: _ViewNotificationEventArgs
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {4A746E50-D362-3EEB-948F-70E30834C620}
// *********************************************************************//
interface _ViewNotificationEventArgs  : public IDispatch
{
public:

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: _ViewActivatedEventHandler
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {8C5CE0CB-419E-372B-9730-345188F4FE46}
// *********************************************************************//
interface _ViewActivatedEventHandler  : public IDispatch
{
public:

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: _ViewNotificationEventHandler
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {21C2C2F6-77F7-342C-84D8-1ABBC6ECE631}
// *********************************************************************//
interface _ViewNotificationEventHandler  : public IDispatch
{
public:

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTASourceEditor
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FB7521C9-358F-4F81-AAE6-590B64A74107}
// *********************************************************************//
interface IOTASourceEditor  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE CreateReader(Borland_studio_toolsapi_tlb::IOTAFileReader** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE CreateWriter(Borland_studio_toolsapi_tlb::IOTAFileWriter** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_EditViewCount(long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetEditView(long index/*[in]*/, 
                                                Borland_studio_toolsapi_tlb::IOTAEditView** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_LinesInBuffer(long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_BlockAfter(Borland_studio_toolsapi_tlb::OTACharPos* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE set_BlockAfter(Borland_studio_toolsapi_tlb::OTACharPos pRetVal/*[in]*/) = 0; // [1610743813]
  virtual HRESULT STDMETHODCALLTYPE get_BlockStart(Borland_studio_toolsapi_tlb::OTACharPos* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE set_BlockStart(Borland_studio_toolsapi_tlb::OTACharPos pRetVal/*[in]*/) = 0; // [1610743815]
  virtual HRESULT STDMETHODCALLTYPE get_BlockType(Borland_studio_toolsapi_tlb::OTABlockType* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE set_BlockType(Borland_studio_toolsapi_tlb::OTABlockType pRetVal/*[in]*/) = 0; // [1610743817]
  virtual HRESULT STDMETHODCALLTYPE get_BlockVisible(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE set_BlockVisible(VARIANT_BOOL pRetVal/*[in]*/) = 0; // [1610743819]
  virtual HRESULT STDMETHODCALLTYPE get_SubViewCount(long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetSubViewIdentifier(long index/*[in]*/, 
                                                         BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_SubViewIndex(long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE SwitchToView(long index/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE SwitchToView_2(BSTR viewIdentifier/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE add_ViewNotification(Borland_studio_toolsapi_tlb::_ViewNotificationEventHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE remove_ViewNotification(Borland_studio_toolsapi_tlb::_ViewNotificationEventHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE add_ViewActivated(Borland_studio_toolsapi_tlb::_ViewActivatedEventHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE remove_ViewActivated(Borland_studio_toolsapi_tlb::_ViewActivatedEventHandler* value/*[in]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  Borland_studio_toolsapi_tlb::IOTAFileReader* __fastcall CreateReader(void)
  {
    Borland_studio_toolsapi_tlb::IOTAFileReader* pRetVal = 0;
    OLECHECK(this->CreateReader((Borland_studio_toolsapi_tlb::IOTAFileReader**)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAFileWriter* __fastcall CreateWriter(void)
  {
    Borland_studio_toolsapi_tlb::IOTAFileWriter* pRetVal = 0;
    OLECHECK(this->CreateWriter((Borland_studio_toolsapi_tlb::IOTAFileWriter**)&pRetVal));
    return pRetVal;
  }

  long __fastcall get_EditViewCount(void)
  {
    long pRetVal;
    OLECHECK(this->get_EditViewCount((long*)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAEditView* __fastcall GetEditView(long index/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::IOTAEditView* pRetVal = 0;
    OLECHECK(this->GetEditView(index, (Borland_studio_toolsapi_tlb::IOTAEditView**)&pRetVal));
    return pRetVal;
  }

  long __fastcall get_LinesInBuffer(void)
  {
    long pRetVal;
    OLECHECK(this->get_LinesInBuffer((long*)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::OTACharPos __fastcall get_BlockAfter(void)
  {
    Borland_studio_toolsapi_tlb::OTACharPos pRetVal;
    OLECHECK(this->get_BlockAfter((Borland_studio_toolsapi_tlb::OTACharPos*)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::OTACharPos __fastcall get_BlockStart(void)
  {
    Borland_studio_toolsapi_tlb::OTACharPos pRetVal;
    OLECHECK(this->get_BlockStart((Borland_studio_toolsapi_tlb::OTACharPos*)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::OTABlockType __fastcall get_BlockType(void)
  {
    Borland_studio_toolsapi_tlb::OTABlockType pRetVal;
    OLECHECK(this->get_BlockType((Borland_studio_toolsapi_tlb::OTABlockType*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall get_BlockVisible(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->get_BlockVisible((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  long __fastcall get_SubViewCount(void)
  {
    long pRetVal;
    OLECHECK(this->get_SubViewCount((long*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall GetSubViewIdentifier(long index/*[in]*/)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->GetSubViewIdentifier(index, (BSTR*)&pRetVal));
    return pRetVal;
  }

  long __fastcall get_SubViewIndex(void)
  {
    long pRetVal;
    OLECHECK(this->get_SubViewIndex((long*)&pRetVal));
    return pRetVal;
  }


  __property   long            EditViewCount = {read = get_EditViewCount};
  __property   long            LinesInBuffer = {read = get_LinesInBuffer};
  __property   Borland_studio_toolsapi_tlb::OTACharPos BlockAfter = {read = get_BlockAfter, write = set_BlockAfter};
  __property   Borland_studio_toolsapi_tlb::OTACharPos BlockStart = {read = get_BlockStart, write = set_BlockStart};
  __property   Borland_studio_toolsapi_tlb::OTABlockType BlockType = {read = get_BlockType, write = set_BlockType};
  __property   VARIANT_BOOL    BlockVisible = {read = get_BlockVisible, write = set_BlockVisible};
  __property   long            SubViewCount = {read = get_SubViewCount};
  __property   long            SubViewIndex = {read = get_SubViewIndex};

#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: _RenameNotificationEventArgs
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {12CB5FE4-DB0F-39B9-BB64-AF97C7B8C5D2}
// *********************************************************************//
interface _RenameNotificationEventArgs  : public IDispatch
{
public:

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: _RenameNotificationEventHandler
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {D4246AF0-AA90-3FAD-9A4D-64E12E8609C4}
// *********************************************************************//
interface _RenameNotificationEventHandler  : public IDispatch
{
public:

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAModule
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9F18CD2A-DCEE-48D9-8507-4C45D3D1F551}
// *********************************************************************//
interface IOTAModule  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE add_BeforeSave(Mscorlib_tlb::_EventHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE remove_BeforeSave(Mscorlib_tlb::_EventHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE add_AfterSave(Mscorlib_tlb::_EventHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE remove_AfterSave(Mscorlib_tlb::_EventHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE add_Closed(Mscorlib_tlb::_EventHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE remove_Closed(Mscorlib_tlb::_EventHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE add_Modified(Mscorlib_tlb::_EventHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE remove_Modified(Mscorlib_tlb::_EventHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE add_Renamed(Mscorlib_tlb::_EventHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE remove_Renamed(Mscorlib_tlb::_EventHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE Close(VARIANT_BOOL forceClosed/*[in]*/, 
                                          VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE Save(VARIANT_BOOL changeName/*[in]*/, 
                                         VARIANT_BOOL forceSave/*[in]*/, 
                                         VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_fileName(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE set_fileName(BSTR pRetVal/*[in]*/) = 0; // [1610743820]
  virtual HRESULT STDMETHODCALLTYPE get_fileSystem(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE set_fileSystem(BSTR pRetVal/*[in]*/) = 0; // [1610743822]
  virtual HRESULT STDMETHODCALLTYPE get_ModuleFileCount(long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE ModuleFileEditors(long index/*[in]*/, 
                                                      Borland_studio_toolsapi_tlb::IOTAEditor** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_CurrentEditor(Borland_studio_toolsapi_tlb::IOTAEditor** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE MarkModified(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_OwnerModuleCount(long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetOwnerModule(long index/*[in]*/, 
                                                   Borland_studio_toolsapi_tlb::IOTAModule** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE Show(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE ShowFileName(BSTR fileName/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE add_BeforeRename(Borland_studio_toolsapi_tlb::_RenameNotificationEventHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE remove_BeforeRename(Borland_studio_toolsapi_tlb::_RenameNotificationEventHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE add_AfterRename(Borland_studio_toolsapi_tlb::_RenameNotificationEventHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE remove_AfterRename(Borland_studio_toolsapi_tlb::_RenameNotificationEventHandler* value/*[in]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  VARIANT_BOOL __fastcall Close(VARIANT_BOOL forceClosed/*[in]*/)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->Close(forceClosed, (VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall Save(VARIANT_BOOL changeName/*[in]*/, VARIANT_BOOL forceSave/*[in]*/)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->Save(changeName, forceSave, (VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall get_fileName(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_fileName((BSTR*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall get_fileSystem(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_fileSystem((BSTR*)&pRetVal));
    return pRetVal;
  }

  long __fastcall get_ModuleFileCount(void)
  {
    long pRetVal;
    OLECHECK(this->get_ModuleFileCount((long*)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAEditor* __fastcall ModuleFileEditors(long index/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::IOTAEditor* pRetVal = 0;
    OLECHECK(this->ModuleFileEditors(index, (Borland_studio_toolsapi_tlb::IOTAEditor**)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAEditorPtr __fastcall get_CurrentEditor(void)
  {
    Borland_studio_toolsapi_tlb::IOTAEditorPtr pRetVal;
    OLECHECK(this->get_CurrentEditor(&pRetVal));
    return pRetVal;
  }

  long __fastcall get_OwnerModuleCount(void)
  {
    long pRetVal;
    OLECHECK(this->get_OwnerModuleCount((long*)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAModule* __fastcall GetOwnerModule(long index/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::IOTAModule* pRetVal = 0;
    OLECHECK(this->GetOwnerModule(index, (Borland_studio_toolsapi_tlb::IOTAModule**)&pRetVal));
    return pRetVal;
  }


  __property   BSTR            fileName = {read = get_fileName, write = set_fileName};
  __property   BSTR            fileSystem = {read = get_fileSystem, write = set_fileSystem};
  __property   long            ModuleFileCount = {read = get_ModuleFileCount};
  __property   Borland_studio_toolsapi_tlb::IOTAEditorPtr CurrentEditor = {read = get_CurrentEditor};
  __property   long            OwnerModuleCount = {read = get_OwnerModuleCount};

#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTADotNetModule
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DD4C2119-66FA-4166-A62A-22E3C9236291}
// *********************************************************************//
interface IOTADotNetModule  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE ShowCode(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE ShowCode_2(long LineNumber/*[in]*/, 
                                               VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE ShowCode_3(long LineNumber/*[in]*/, long colNumber/*[in]*/, 
                                               VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE ShowCode_4(long topLineNumber/*[in]*/, long LineNumber/*[in]*/, 
                                               long colNumber/*[in]*/, 
                                               VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE ShowCodeOffset(long offset/*[in]*/, 
                                                   VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE ShowDesigner(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_CodeGeneratorOptions(Borland_studio_toolsapi_tlb::IOTACodeDomGeneratorOptions** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_RootComponentClassName(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE set_RootComponentClassName(BSTR pRetVal/*[in]*/) = 0; // [1610743815]
  virtual HRESULT STDMETHODCALLTYPE get_HasDesignableType(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_DesignerActive(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE FlushDesigner(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE ReloadDesigner(VARIANT_BOOL synchronous/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_DesignerHost(System_tlb::IDesignerHost** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_MainSourceFileName(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  VARIANT_BOOL __fastcall ShowCode(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->ShowCode((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall ShowCode_2(long LineNumber/*[in]*/)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->ShowCode_2(LineNumber, (VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall ShowCode_3(long LineNumber/*[in]*/, long colNumber/*[in]*/)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->ShowCode_3(LineNumber, colNumber, (VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall ShowCode_4(long topLineNumber/*[in]*/, long LineNumber/*[in]*/, 
                                     long colNumber/*[in]*/)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->ShowCode_4(topLineNumber, LineNumber, colNumber, (VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall ShowCodeOffset(long offset/*[in]*/)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->ShowCodeOffset(offset, (VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall ShowDesigner(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->ShowDesigner((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTACodeDomGeneratorOptionsPtr __fastcall get_CodeGeneratorOptions(void)
  {
    Borland_studio_toolsapi_tlb::IOTACodeDomGeneratorOptionsPtr pRetVal;
    OLECHECK(this->get_CodeGeneratorOptions(&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall get_RootComponentClassName(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_RootComponentClassName((BSTR*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall get_HasDesignableType(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->get_HasDesignableType((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall get_DesignerActive(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->get_DesignerActive((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  System_tlb::IDesignerHostPtr __fastcall get_DesignerHost(void)
  {
    System_tlb::IDesignerHostPtr pRetVal;
    OLECHECK(this->get_DesignerHost(&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall get_MainSourceFileName(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_MainSourceFileName((BSTR*)&pRetVal));
    return pRetVal;
  }


  __property   Borland_studio_toolsapi_tlb::IOTACodeDomGeneratorOptionsPtr CodeGeneratorOptions = {read = get_CodeGeneratorOptions};
  __property   BSTR            RootComponentClassName = {read = get_RootComponentClassName, write = set_RootComponentClassName};
  __property   VARIANT_BOOL    HasDesignableType = {read = get_HasDesignableType};
  __property   VARIANT_BOOL    DesignerActive = {read = get_DesignerActive};
  __property   System_tlb::IDesignerHostPtr DesignerHost = {read = get_DesignerHost};
  __property   BSTR            MainSourceFileName = {read = get_MainSourceFileName};

#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTADotNetProject
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7E063121-7FCB-406D-AF70-E07D618D88C8}
// *********************************************************************//
interface IOTADotNetProject  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE get_References(Borland_studio_toolsapi_tlb::IOTAReferences** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_LicenseProvider(Borland_studio_toolsapi_tlb::IOTAProjectLicenseProvider** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_ConfigurationProvider(Borland_studio_toolsapi_tlb::IOTAProjectConfigurationProvider** pRetVal/*[out,retval]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  Borland_studio_toolsapi_tlb::IOTAReferencesPtr __fastcall get_References(void)
  {
    Borland_studio_toolsapi_tlb::IOTAReferencesPtr pRetVal;
    OLECHECK(this->get_References(&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAProjectLicenseProviderPtr __fastcall get_LicenseProvider(void)
  {
    Borland_studio_toolsapi_tlb::IOTAProjectLicenseProviderPtr pRetVal;
    OLECHECK(this->get_LicenseProvider(&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAProjectConfigurationProviderPtr __fastcall get_ConfigurationProvider(void)
  {
    Borland_studio_toolsapi_tlb::IOTAProjectConfigurationProviderPtr pRetVal;
    OLECHECK(this->get_ConfigurationProvider(&pRetVal));
    return pRetVal;
  }


  __property   Borland_studio_toolsapi_tlb::IOTAReferencesPtr References = {read = get_References};
  __property   Borland_studio_toolsapi_tlb::IOTAProjectLicenseProviderPtr LicenseProvider = {read = get_LicenseProvider};
  __property   Borland_studio_toolsapi_tlb::IOTAProjectConfigurationProviderPtr ConfigurationProvider = {read = get_ConfigurationProvider};

#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAReference
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {35BC768A-B1A2-4036-8F9E-8C2D986D831A}
// *********************************************************************//
interface IOTAReference  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE get_CopyLocal(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE set_CopyLocal(VARIANT_BOOL pRetVal/*[in]*/) = 0; // [1610743808]
  virtual HRESULT STDMETHODCALLTYPE get_Name(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_Path(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_Version(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_Culture(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_ProjectGUID(System::TGUID* pRetVal/*[out,retval]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  VARIANT_BOOL __fastcall get_CopyLocal(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->get_CopyLocal((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall get_Name(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_Name((BSTR*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall get_Path(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_Path((BSTR*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall get_Version(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_Version((BSTR*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall get_Culture(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_Culture((BSTR*)&pRetVal));
    return pRetVal;
  }

  System::TGUID __fastcall get_ProjectGUID(void)
  {
    System::TGUID pRetVal;
    OLECHECK(this->get_ProjectGUID((System::TGUID*)&pRetVal));
    return pRetVal;
  }


  __property   VARIANT_BOOL    CopyLocal = {read = get_CopyLocal, write = set_CopyLocal};
  __property   BSTR            Name = {read = get_Name};
  __property   BSTR            Path = {read = get_Path};
  __property   BSTR            Version = {read = get_Version};
  __property   BSTR            Culture = {read = get_Culture};
  __property   System::TGUID   ProjectGUID = {read = get_ProjectGUID};

#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAReferences
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6100CC1A-E0D4-4600-A889-5C510E8BC9EA}
// *********************************************************************//
interface IOTAReferences  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE AddReference(BSTR fileName/*[in]*/, 
                                                 Borland_studio_toolsapi_tlb::IOTAReference** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE AddComReference(BSTR guid/*[in]*/, BSTR Version/*[in]*/, 
                                                    BSTR lcid/*[in]*/, 
                                                    Borland_studio_toolsapi_tlb::IOTAReference** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE AddActiveXReference(BSTR guid/*[in]*/, BSTR Version/*[in]*/, 
                                                        BSTR lcid/*[in]*/, 
                                                        Borland_studio_toolsapi_tlb::IOTAReference** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE AddProjectReference(Borland_studio_toolsapi_tlb::IOTAProject* project/*[in]*/, 
                                                        Borland_studio_toolsapi_tlb::IOTAReference** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE Contains(BSTR fileName/*[in]*/, 
                                             VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE RemoveReference(Borland_studio_toolsapi_tlb::IOTAReference* reference/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_Count(long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_Item(long index/*[in]*/, 
                                             Borland_studio_toolsapi_tlb::IOTAReference** pRetVal/*[out,retval]*/) = 0; // [0]
  virtual HRESULT STDMETHODCALLTYPE get_project(Borland_studio_toolsapi_tlb::IOTAProject** pRetVal/*[out,retval]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  Borland_studio_toolsapi_tlb::IOTAReference* __fastcall AddReference(BSTR fileName/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::IOTAReference* pRetVal = 0;
    OLECHECK(this->AddReference(fileName, (Borland_studio_toolsapi_tlb::IOTAReference**)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAReference* __fastcall AddComReference(BSTR guid/*[in]*/, 
                                                                         BSTR Version/*[in]*/, 
                                                                         BSTR lcid/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::IOTAReference* pRetVal = 0;
    OLECHECK(this->AddComReference(guid, Version, lcid, (Borland_studio_toolsapi_tlb::IOTAReference**)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAReference* __fastcall AddActiveXReference(BSTR guid/*[in]*/, 
                                                                             BSTR Version/*[in]*/, 
                                                                             BSTR lcid/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::IOTAReference* pRetVal = 0;
    OLECHECK(this->AddActiveXReference(guid, Version, lcid, (Borland_studio_toolsapi_tlb::IOTAReference**)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAReference* __fastcall AddProjectReference(Borland_studio_toolsapi_tlb::IOTAProject* project/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::IOTAReference* pRetVal = 0;
    OLECHECK(this->AddProjectReference(project, (Borland_studio_toolsapi_tlb::IOTAReference**)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall Contains(BSTR fileName/*[in]*/)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->Contains(fileName, (VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  long __fastcall get_Count(void)
  {
    long pRetVal;
    OLECHECK(this->get_Count((long*)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAReference* __fastcall get_Item(long index/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::IOTAReference* pRetVal = 0;
    OLECHECK(this->get_Item(index, (Borland_studio_toolsapi_tlb::IOTAReference**)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAProjectPtr __fastcall get_project(void)
  {
    Borland_studio_toolsapi_tlb::IOTAProjectPtr pRetVal;
    OLECHECK(this->get_project(&pRetVal));
    return pRetVal;
  }


  __property   long            Count = {read = get_Count};
  __property   Borland_studio_toolsapi_tlb::IOTAProjectPtr project = {read = get_project};

#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAModuleInfo
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D0787E83-F5A2-467E-A871-FDB50A5925F5}
// *********************************************************************//
interface IOTAModuleInfo  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE get_Name(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_fileName(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_ModuleType(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE OpenModule(Borland_studio_toolsapi_tlb::IOTAModule** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_className(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_DesignClassName(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_AdditionalFilesCount(long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE AdditionalFiles(long index/*[in]*/, 
                                                    BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  BSTR __fastcall get_Name(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_Name((BSTR*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall get_fileName(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_fileName((BSTR*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall get_ModuleType(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_ModuleType((BSTR*)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAModule* __fastcall OpenModule(void)
  {
    Borland_studio_toolsapi_tlb::IOTAModule* pRetVal = 0;
    OLECHECK(this->OpenModule((Borland_studio_toolsapi_tlb::IOTAModule**)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall get_className(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_className((BSTR*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall get_DesignClassName(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_DesignClassName((BSTR*)&pRetVal));
    return pRetVal;
  }

  long __fastcall get_AdditionalFilesCount(void)
  {
    long pRetVal;
    OLECHECK(this->get_AdditionalFilesCount((long*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall AdditionalFiles(long index/*[in]*/)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->AdditionalFiles(index, (BSTR*)&pRetVal));
    return pRetVal;
  }


  __property   BSTR            Name = {read = get_Name};
  __property   BSTR            fileName = {read = get_fileName};
  __property   BSTR            ModuleType = {read = get_ModuleType};
  __property   BSTR            className = {read = get_className};
  __property   BSTR            DesignClassName = {read = get_DesignClassName};
  __property   long            AdditionalFilesCount = {read = get_AdditionalFilesCount};

#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTACodeDomProvider
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {35501657-34C3-47A5-BE03-3E8AF77FD860}
// *********************************************************************//
interface IOTACodeDomProvider  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE get_CodeDomFile(Borland_studio_toolsapi_tlb::IOTACodeDomFile** pRetVal/*[out,retval]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  Borland_studio_toolsapi_tlb::IOTACodeDomFilePtr __fastcall get_CodeDomFile(void)
  {
    Borland_studio_toolsapi_tlb::IOTACodeDomFilePtr pRetVal;
    OLECHECK(this->get_CodeDomFile(&pRetVal));
    return pRetVal;
  }


  __property   Borland_studio_toolsapi_tlb::IOTACodeDomFilePtr CodeDomFile = {read = get_CodeDomFile};

#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: _ModuleAddedRemovedEventArgs
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {9A6F1634-F602-3669-AF26-975C6FC35DD2}
// *********************************************************************//
interface _ModuleAddedRemovedEventArgs  : public IDispatch
{
public:

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: _ModuleRenamedEventArgs
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {D5523F8B-9E2E-3D96-8228-D5FBEE2F00DB}
// *********************************************************************//
interface _ModuleRenamedEventArgs  : public IDispatch
{
public:

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: _ModuleAddedRemovedEventHandler
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {15165F5A-EEF4-3A67-8EE4-08B2BC7B33CE}
// *********************************************************************//
interface _ModuleAddedRemovedEventHandler  : public IDispatch
{
public:

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: _ModuleRenamedEventHandler
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {E7410390-B6CF-3182-9610-BB1207CCA5BC}
// *********************************************************************//
interface _ModuleRenamedEventHandler  : public IDispatch
{
public:

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAProject
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {42B792B0-229C-4D53-A9B5-BF9C90630BE0}
// *********************************************************************//
interface IOTAProject  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE add_ModuleAdded(Borland_studio_toolsapi_tlb::_ModuleAddedRemovedEventHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE remove_ModuleAdded(Borland_studio_toolsapi_tlb::_ModuleAddedRemovedEventHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE add_ModuleRemoved(Borland_studio_toolsapi_tlb::_ModuleAddedRemovedEventHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE remove_ModuleRemoved(Borland_studio_toolsapi_tlb::_ModuleAddedRemovedEventHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE add_ModuleRenamed(Borland_studio_toolsapi_tlb::_ModuleRenamedEventHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE remove_ModuleRenamed(Borland_studio_toolsapi_tlb::_ModuleRenamedEventHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_ModuleCount(long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetModuleInfo(long index/*[in]*/, 
                                                  Borland_studio_toolsapi_tlb::IOTAModuleInfo** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetModuleFileName(long index/*[in]*/, 
                                                      BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_ProjectOptions(Borland_studio_toolsapi_tlb::IOTAProjectOptions** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_ProjectBuilder(Borland_studio_toolsapi_tlb::IOTAProjectBuilder** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_ProjectGUID(System::TGUID* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE AddFile(BSTR fileName/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE AddFile_2(BSTR fileName/*[in]*/, BSTR parentFile/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE AddFile_3(BSTR AFileName/*[in]*/, 
                                              VARIANT_BOOL IsUnitOrForm/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE RemoveFile(BSTR fileName/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE FileInProject(BSTR fileName/*[in]*/, 
                                                  VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE Activate(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_personality(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE Rename(BSTR OldFileName/*[in]*/, BSTR NewFileName/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_CurrentConfiguration(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_CurrentPlatform(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  long __fastcall get_ModuleCount(void)
  {
    long pRetVal;
    OLECHECK(this->get_ModuleCount((long*)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAModuleInfo* __fastcall GetModuleInfo(long index/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::IOTAModuleInfo* pRetVal = 0;
    OLECHECK(this->GetModuleInfo(index, (Borland_studio_toolsapi_tlb::IOTAModuleInfo**)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall GetModuleFileName(long index/*[in]*/)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->GetModuleFileName(index, (BSTR*)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAProjectOptionsPtr __fastcall get_ProjectOptions(void)
  {
    Borland_studio_toolsapi_tlb::IOTAProjectOptionsPtr pRetVal;
    OLECHECK(this->get_ProjectOptions(&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAProjectBuilderPtr __fastcall get_ProjectBuilder(void)
  {
    Borland_studio_toolsapi_tlb::IOTAProjectBuilderPtr pRetVal;
    OLECHECK(this->get_ProjectBuilder(&pRetVal));
    return pRetVal;
  }

  System::TGUID __fastcall get_ProjectGUID(void)
  {
    System::TGUID pRetVal;
    OLECHECK(this->get_ProjectGUID((System::TGUID*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall FileInProject(BSTR fileName/*[in]*/)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->FileInProject(fileName, (VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall get_personality(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_personality((BSTR*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall get_CurrentConfiguration(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_CurrentConfiguration((BSTR*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall get_CurrentPlatform(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_CurrentPlatform((BSTR*)&pRetVal));
    return pRetVal;
  }


  __property   long            ModuleCount = {read = get_ModuleCount};
  __property   Borland_studio_toolsapi_tlb::IOTAProjectOptionsPtr ProjectOptions = {read = get_ProjectOptions};
  __property   Borland_studio_toolsapi_tlb::IOTAProjectBuilderPtr ProjectBuilder = {read = get_ProjectBuilder};
  __property   System::TGUID   ProjectGUID = {read = get_ProjectGUID};
  __property   BSTR            personality = {read = get_personality};
  __property   BSTR            CurrentConfiguration = {read = get_CurrentConfiguration};
  __property   BSTR            CurrentPlatform = {read = get_CurrentPlatform};

#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAProjectMainSource
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0A4619FA-DE5E-4A25-A56F-C3D3DE1EA293}
// *********************************************************************//
interface IOTAProjectMainSource  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE get_MainSourceName(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  BSTR __fastcall get_MainSourceName(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_MainSourceName((BSTR*)&pRetVal));
    return pRetVal;
  }


  __property   BSTR            MainSourceName = {read = get_MainSourceName};

#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAProjectLicenseProvider
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {637694C4-B01F-48F5-A06C-FC5FDF9F0951}
// *********************************************************************//
interface IOTAProjectLicenseProvider  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE AddLicensedControl(BSTR LicensedControl/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE Clear(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_LicensedControlCount(long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_Item(long index/*[in]*/, BSTR* pRetVal/*[out,retval]*/) = 0; // [0]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  long __fastcall get_LicensedControlCount(void)
  {
    long pRetVal;
    OLECHECK(this->get_LicensedControlCount((long*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall get_Item(long index/*[in]*/)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_Item(index, (BSTR*)&pRetVal));
    return pRetVal;
  }


  __property   long            LicensedControlCount = {read = get_LicensedControlCount};

#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAProjectConfigurationProvider
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {40A6AFE4-E560-404A-AE84-586528C8D931}
// *********************************************************************//
interface IOTAProjectConfigurationProvider  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE ReadProjectConfigData(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE WriteProjectConfigData(BSTR Data/*[in]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  BSTR __fastcall ReadProjectConfigData(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->ReadProjectConfigData((BSTR*)&pRetVal));
    return pRetVal;
  }



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAProjectBuilder
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {14D562B2-A1B4-41BC-B6A7-65878CE44DB6}
// *********************************************************************//
interface IOTAProjectBuilder  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE get_ShouldBuild(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE BuildProject(Borland_studio_toolsapi_tlb::OTACompileMode CompileMode/*[in]*/, 
                                                 VARIANT_BOOL Wait/*[in]*/, 
                                                 VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE BuildProject_2(Borland_studio_toolsapi_tlb::OTACompileMode CompileMode/*[in]*/, 
                                                   VARIANT_BOOL Wait/*[in]*/, 
                                                   VARIANT_BOOL ClearMessages/*[in]*/, 
                                                   VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  VARIANT_BOOL __fastcall get_ShouldBuild(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->get_ShouldBuild((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall BuildProject(Borland_studio_toolsapi_tlb::OTACompileMode CompileMode/*[in]*/, 
                                       VARIANT_BOOL Wait/*[in]*/)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->BuildProject(CompileMode, Wait, (VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall BuildProject_2(Borland_studio_toolsapi_tlb::OTACompileMode CompileMode/*[in]*/, 
                                         VARIANT_BOOL Wait/*[in]*/, 
                                         VARIANT_BOOL ClearMessages/*[in]*/)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->BuildProject_2(CompileMode, Wait, ClearMessages, (VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }


  __property   VARIANT_BOOL    ShouldBuild = {read = get_ShouldBuild};

#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAOptionNames
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2F0ACB55-2F39-483F-9046-1037790576AE}
// *********************************************************************//
interface IOTAOptionNames  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE get_Count(long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetName(long index/*[in]*/, BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetType(long index/*[in]*/, 
                                            Borland_studio_toolsapi_tlb::OTATypeKind* pRetVal/*[out,retval]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  long __fastcall get_Count(void)
  {
    long pRetVal;
    OLECHECK(this->get_Count((long*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall GetName(long index/*[in]*/)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->GetName(index, (BSTR*)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::OTATypeKind __fastcall GetType(long index/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::OTATypeKind pRetVal;
    OLECHECK(this->GetType(index, (Borland_studio_toolsapi_tlb::OTATypeKind*)&pRetVal));
    return pRetVal;
  }


  __property   long            Count = {read = get_Count};

#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAOptions
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BD8042B4-A87C-4816-A396-5B291C83F225}
// *********************************************************************//
interface IOTAOptions  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE EditOptions(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetOptionValue(BSTR ValueName/*[in]*/, 
                                                   VARIANT* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE SetOptionValue(BSTR ValueName/*[in]*/, VARIANT value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_OptionNames(Borland_studio_toolsapi_tlb::IOTAOptionNames** pRetVal/*[out,retval]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  VARIANT __fastcall GetOptionValue(BSTR ValueName/*[in]*/)
  {
    VARIANT pRetVal;
    OLECHECK(this->GetOptionValue(ValueName, (VARIANT*)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAOptionNamesPtr __fastcall get_OptionNames(void)
  {
    Borland_studio_toolsapi_tlb::IOTAOptionNamesPtr pRetVal;
    OLECHECK(this->get_OptionNames(&pRetVal));
    return pRetVal;
  }


  __property   Borland_studio_toolsapi_tlb::IOTAOptionNamesPtr OptionNames = {read = get_OptionNames};

#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAProjectOptions
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {41136635-A785-45F0-8DF3-3EB768DC0F22}
// *********************************************************************//
interface IOTAProjectOptions  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE get_ModifiedState(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE set_ModifiedState(VARIANT_BOOL pRetVal/*[in]*/) = 0; // [1610743808]
  virtual HRESULT STDMETHODCALLTYPE get_TargetName(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_Configurations(Borland_studio_toolsapi_tlb::IOTAProjectOptionsConfigurations** pRetVal/*[out,retval]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  VARIANT_BOOL __fastcall get_ModifiedState(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->get_ModifiedState((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall get_TargetName(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_TargetName((BSTR*)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAProjectOptionsConfigurationsPtr __fastcall get_Configurations(void)
  {
    Borland_studio_toolsapi_tlb::IOTAProjectOptionsConfigurationsPtr pRetVal;
    OLECHECK(this->get_Configurations(&pRetVal));
    return pRetVal;
  }


  __property   VARIANT_BOOL    ModifiedState = {read = get_ModifiedState, write = set_ModifiedState};
  __property   BSTR            TargetName = {read = get_TargetName};
  __property   Borland_studio_toolsapi_tlb::IOTAProjectOptionsConfigurationsPtr Configurations = {read = get_Configurations};

#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTABuildConfiguration
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6C5B5235-01D0-48FD-B410-EF50F064687F}
// *********************************************************************//
interface IOTABuildConfiguration  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE get_Name(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE set_Name(BSTR pRetVal/*[in]*/) = 0; // [1610743808]
  virtual HRESULT STDMETHODCALLTYPE get_Key(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_parent(Borland_studio_toolsapi_tlb::IOTABuildConfiguration** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_Count(long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetChild(long index/*[in]*/, 
                                             Borland_studio_toolsapi_tlb::IOTABuildConfiguration** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_PropertyCount(long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetPropertyName(long index/*[in]*/, 
                                                    BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_IsEmpty(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_IsModified(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE Remove(BSTR PropName/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE Clear(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE PropertyExists(BSTR PropName/*[in]*/, 
                                                   VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetValue(BSTR PropName/*[in]*/, BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetValue_2(BSTR PropName/*[in]*/, 
                                               VARIANT_BOOL IncludeInheritedValues/*[in]*/, 
                                               BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE SetValue(BSTR PropName/*[in]*/, BSTR value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetBoolean(BSTR PropName/*[in]*/, 
                                               VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetBoolean_2(BSTR PropName/*[in]*/, 
                                                 VARIANT_BOOL IncludeInheritedValues/*[in]*/, 
                                                 VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE SetBoolean(BSTR PropName/*[in]*/, VARIANT_BOOL value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetInteger(BSTR PropName/*[in]*/, long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetInteger_2(BSTR PropName/*[in]*/, 
                                                 VARIANT_BOOL IncludeInheritedValues/*[in]*/, 
                                                 long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE SetInteger(BSTR PropName/*[in]*/, long value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE InheritedValue(BSTR PropName/*[in]*/, 
                                                   BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetMerged(BSTR PropName/*[in]*/, 
                                              VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE SetMerged(BSTR PropName/*[in]*/, VARIANT_BOOL value/*[in]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  BSTR __fastcall get_Name(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_Name((BSTR*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall get_Key(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_Key((BSTR*)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTABuildConfigurationPtr __fastcall get_parent(void)
  {
    Borland_studio_toolsapi_tlb::IOTABuildConfigurationPtr pRetVal;
    OLECHECK(this->get_parent(&pRetVal));
    return pRetVal;
  }

  long __fastcall get_Count(void)
  {
    long pRetVal;
    OLECHECK(this->get_Count((long*)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTABuildConfiguration* __fastcall GetChild(long index/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::IOTABuildConfiguration* pRetVal = 0;
    OLECHECK(this->GetChild(index, (Borland_studio_toolsapi_tlb::IOTABuildConfiguration**)&pRetVal));
    return pRetVal;
  }

  long __fastcall get_PropertyCount(void)
  {
    long pRetVal;
    OLECHECK(this->get_PropertyCount((long*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall GetPropertyName(long index/*[in]*/)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->GetPropertyName(index, (BSTR*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall get_IsEmpty(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->get_IsEmpty((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall get_IsModified(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->get_IsModified((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall PropertyExists(BSTR PropName/*[in]*/)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->PropertyExists(PropName, (VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall GetValue(BSTR PropName/*[in]*/)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->GetValue(PropName, (BSTR*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall GetValue_2(BSTR PropName/*[in]*/, VARIANT_BOOL IncludeInheritedValues/*[in]*/)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->GetValue_2(PropName, IncludeInheritedValues, (BSTR*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall GetBoolean(BSTR PropName/*[in]*/)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->GetBoolean(PropName, (VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall GetBoolean_2(BSTR PropName/*[in]*/, 
                                       VARIANT_BOOL IncludeInheritedValues/*[in]*/)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->GetBoolean_2(PropName, IncludeInheritedValues, (VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  long __fastcall GetInteger(BSTR PropName/*[in]*/)
  {
    long pRetVal;
    OLECHECK(this->GetInteger(PropName, (long*)&pRetVal));
    return pRetVal;
  }

  long __fastcall GetInteger_2(BSTR PropName/*[in]*/, VARIANT_BOOL IncludeInheritedValues/*[in]*/)
  {
    long pRetVal;
    OLECHECK(this->GetInteger_2(PropName, IncludeInheritedValues, (long*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall InheritedValue(BSTR PropName/*[in]*/)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->InheritedValue(PropName, (BSTR*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall GetMerged(BSTR PropName/*[in]*/)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->GetMerged(PropName, (VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }


  __property   BSTR            Name = {read = get_Name, write = set_Name};
  __property   BSTR            Key = {read = get_Key};
  __property   Borland_studio_toolsapi_tlb::IOTABuildConfigurationPtr parent = {read = get_parent};
  __property   long            Count = {read = get_Count};
  __property   long            PropertyCount = {read = get_PropertyCount};
  __property   VARIANT_BOOL    IsEmpty = {read = get_IsEmpty};
  __property   VARIANT_BOOL    IsModified = {read = get_IsModified};

#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAProjectOptionsConfigurations
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5A6F8603-F29B-461C-9EBB-D40DDDB7EADE}
// *********************************************************************//
interface IOTAProjectOptionsConfigurations  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE get_ConfigurationCount(long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetConfiguration(long index/*[in]*/, 
                                                     Borland_studio_toolsapi_tlb::IOTABuildConfiguration** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_ActiveConfiguration(Borland_studio_toolsapi_tlb::IOTABuildConfiguration** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE _set_ActiveConfiguration(Borland_studio_toolsapi_tlb::IOTABuildConfiguration* pRetVal/*[in]*/) = 0; // [1610743810]
  virtual HRESULT STDMETHODCALLTYPE get_BaseConfiguration(Borland_studio_toolsapi_tlb::IOTABuildConfiguration** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE AddConfiguration(BSTR Name/*[in]*/, 
                                                     Borland_studio_toolsapi_tlb::IOTABuildConfiguration* parent/*[in]*/, 
                                                     Borland_studio_toolsapi_tlb::IOTABuildConfiguration** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE RemoveConfiguration(BSTR Name/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_CurrentConfiguration(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  long __fastcall get_ConfigurationCount(void)
  {
    long pRetVal;
    OLECHECK(this->get_ConfigurationCount((long*)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTABuildConfiguration* __fastcall GetConfiguration(long index/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::IOTABuildConfiguration* pRetVal = 0;
    OLECHECK(this->GetConfiguration(index, (Borland_studio_toolsapi_tlb::IOTABuildConfiguration**)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTABuildConfigurationPtr __fastcall get_ActiveConfiguration(void)
  {
    Borland_studio_toolsapi_tlb::IOTABuildConfigurationPtr pRetVal;
    OLECHECK(this->get_ActiveConfiguration(&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTABuildConfigurationPtr __fastcall get_BaseConfiguration(void)
  {
    Borland_studio_toolsapi_tlb::IOTABuildConfigurationPtr pRetVal;
    OLECHECK(this->get_BaseConfiguration(&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTABuildConfiguration* __fastcall AddConfiguration(BSTR Name/*[in]*/, 
                                                                                   Borland_studio_toolsapi_tlb::IOTABuildConfiguration* parent/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::IOTABuildConfiguration* pRetVal = 0;
    OLECHECK(this->AddConfiguration(Name, parent, (Borland_studio_toolsapi_tlb::IOTABuildConfiguration**)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall get_CurrentConfiguration(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_CurrentConfiguration((BSTR*)&pRetVal));
    return pRetVal;
  }


  __property   long            ConfigurationCount = {read = get_ConfigurationCount};
  __property   Borland_studio_toolsapi_tlb::IOTABuildConfigurationPtr ActiveConfiguration = {read = get_ActiveConfiguration};
  __property   Borland_studio_toolsapi_tlb::IOTABuildConfigurationPtr BaseConfiguration = {read = get_BaseConfiguration};
  __property   BSTR            CurrentConfiguration = {read = get_CurrentConfiguration};

#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAProjectGroup
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B2C9049A-F958-4410-83DB-FE50C1D53A85}
// *********************************************************************//
interface IOTAProjectGroup  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE AddNewProject(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE AddExistingProject(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE RemoveProject(Borland_studio_toolsapi_tlb::IOTAProject* project/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_ActiveProject(Borland_studio_toolsapi_tlb::IOTAProject** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE _set_ActiveProject(Borland_studio_toolsapi_tlb::IOTAProject* pRetVal/*[in]*/) = 0; // [1610743811]
  virtual HRESULT STDMETHODCALLTYPE get_ProjectCount(long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_Item(long index/*[in]*/, 
                                             Borland_studio_toolsapi_tlb::IOTAProject** pRetVal/*[out,retval]*/) = 0; // [0]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  Borland_studio_toolsapi_tlb::IOTAProjectPtr __fastcall get_ActiveProject(void)
  {
    Borland_studio_toolsapi_tlb::IOTAProjectPtr pRetVal;
    OLECHECK(this->get_ActiveProject(&pRetVal));
    return pRetVal;
  }

  long __fastcall get_ProjectCount(void)
  {
    long pRetVal;
    OLECHECK(this->get_ProjectCount((long*)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAProject* __fastcall get_Item(long index/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::IOTAProject* pRetVal = 0;
    OLECHECK(this->get_Item(index, (Borland_studio_toolsapi_tlb::IOTAProject**)&pRetVal));
    return pRetVal;
  }


  __property   Borland_studio_toolsapi_tlb::IOTAProjectPtr ActiveProject = {read = get_ActiveProject};
  __property   long            ProjectCount = {read = get_ProjectCount};

#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAProjectDependenciesList
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {86002707-98C7-4791-9FE5-547C57AA6821}
// *********************************************************************//
interface IOTAProjectDependenciesList  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE AddProject(Borland_studio_toolsapi_tlb::IOTAProject* AProject/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_ProjectCount(long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_Item(long index/*[in]*/, 
                                             Borland_studio_toolsapi_tlb::IOTAProject** pRetVal/*[out,retval]*/) = 0; // [0]
  virtual HRESULT STDMETHODCALLTYPE RemoveProject(Borland_studio_toolsapi_tlb::IOTAProject* AProject/*[in]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  long __fastcall get_ProjectCount(void)
  {
    long pRetVal;
    OLECHECK(this->get_ProjectCount((long*)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAProject* __fastcall get_Item(long index/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::IOTAProject* pRetVal = 0;
    OLECHECK(this->get_Item(index, (Borland_studio_toolsapi_tlb::IOTAProject**)&pRetVal));
    return pRetVal;
  }


  __property   long            ProjectCount = {read = get_ProjectCount};

#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAProjectGroupProjectDependencies
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {54370E82-8D3E-454A-A854-172C41E261DA}
// *********************************************************************//
interface IOTAProjectGroupProjectDependencies  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE GetEmptyProjectDependenciesList(Borland_studio_toolsapi_tlb::IOTAProjectDependenciesList** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetProjectDependencies(Borland_studio_toolsapi_tlb::IOTAProject* AProject/*[in]*/, 
                                                           Borland_studio_toolsapi_tlb::IOTAProjectDependenciesList** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetValidProjectDependencies(Borland_studio_toolsapi_tlb::IOTAProject* AProject/*[in]*/, 
                                                                Borland_studio_toolsapi_tlb::IOTAProjectDependenciesList** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE SetProjectDependencies(Borland_studio_toolsapi_tlb::IOTAProject* AProject/*[in]*/, 
                                                           Borland_studio_toolsapi_tlb::IOTAProjectDependenciesList* ADependencies/*[in]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  Borland_studio_toolsapi_tlb::IOTAProjectDependenciesList* __fastcall GetEmptyProjectDependenciesList(void)
  {
    Borland_studio_toolsapi_tlb::IOTAProjectDependenciesList* pRetVal = 0;
    OLECHECK(this->GetEmptyProjectDependenciesList((Borland_studio_toolsapi_tlb::IOTAProjectDependenciesList**)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAProjectDependenciesList* __fastcall GetProjectDependencies(Borland_studio_toolsapi_tlb::IOTAProject* AProject/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::IOTAProjectDependenciesList* pRetVal = 0;
    OLECHECK(this->GetProjectDependencies(AProject, (Borland_studio_toolsapi_tlb::IOTAProjectDependenciesList**)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAProjectDependenciesList* __fastcall GetValidProjectDependencies(Borland_studio_toolsapi_tlb::IOTAProject* AProject/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::IOTAProjectDependenciesList* pRetVal = 0;
    OLECHECK(this->GetValidProjectDependencies(AProject, (Borland_studio_toolsapi_tlb::IOTAProjectDependenciesList**)&pRetVal));
    return pRetVal;
  }



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTASearchPaths
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {756DF4C9-B22A-4095-866D-89E437B88750}
// *********************************************************************//
interface IOTASearchPaths  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE Add(BSTR Path/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE Remove(BSTR Path/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE Clear(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_Count(long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_items(long index/*[in]*/, BSTR* pRetVal/*[out,retval]*/) = 0; // [0]
  virtual HRESULT STDMETHODCALLTYPE ExpandedSearchPath(long index/*[in]*/, 
                                                       BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  long __fastcall get_Count(void)
  {
    long pRetVal;
    OLECHECK(this->get_Count((long*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall get_items(long index/*[in]*/)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_items(index, (BSTR*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall ExpandedSearchPath(long index/*[in]*/)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->ExpandedSearchPath(index, (BSTR*)&pRetVal));
    return pRetVal;
  }


  __property   long            Count = {read = get_Count};

#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAAssemblySearchPathService
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9BA69737-335D-3A6D-A134-A3F61121A67C}
// *********************************************************************//
interface IOTAAssemblySearchPathService  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE Load(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE Save(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE IsIgnoredDirectory(BSTR directory/*[in]*/, 
                                                       VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE AddIgnoredDirectory(BSTR directory/*[in]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  VARIANT_BOOL __fastcall IsIgnoredDirectory(BSTR directory/*[in]*/)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->IsIgnoredDirectory(directory, (VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAPersistenceManager
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {99243387-CCBE-4810-9D3C-D494DE468170}
// *********************************************************************//
interface IOTAPersistenceManager  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE SaveDocument(LPUNKNOWN document/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetDocument(LPUNKNOWN* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetOriginalDocument(LPUNKNOWN* pRetVal/*[out,retval]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  LPUNKNOWN __fastcall GetDocument(void)
  {
    LPUNKNOWN pRetVal;
    OLECHECK(this->GetDocument((LPUNKNOWN*)&pRetVal));
    return pRetVal;
  }

  LPUNKNOWN __fastcall GetOriginalDocument(void)
  {
    LPUNKNOWN pRetVal;
    OLECHECK(this->GetOriginalDocument((LPUNKNOWN*)&pRetVal));
    return pRetVal;
  }



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: _ToolboxItemEventArgs
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {6AA62B56-293C-334C-A809-5A6ED810D7A6}
// *********************************************************************//
interface _ToolboxItemEventArgs  : public IDispatch
{
public:

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: _ToolboxItemAddedEventArgs
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {BC0AC352-8549-3535-A516-9BD1DC25535E}
// *********************************************************************//
interface _ToolboxItemAddedEventArgs  : public IDispatch
{
public:

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: _TOTAHandle
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {081F9B72-A1A0-3ED5-8965-AF2906DA90F6}
// *********************************************************************//
interface _TOTAHandle  : public IDispatch
{
public:

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: _gccEventArgs
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {6402D97D-5DB3-37BA-934B-24796B16039B}
// *********************************************************************//
interface _gccEventArgs  : public IDispatch
{
public:

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: _ToolboxItemEventHandler
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {9347589F-F528-3A07-AF93-83CA95BBF553}
// *********************************************************************//
interface _ToolboxItemEventHandler  : public IDispatch
{
public:

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: _ToolboxItemAddedEventHandler
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {74A6E330-3B11-35CB-A7AD-DDDCAD045DB8}
// *********************************************************************//
interface _ToolboxItemAddedEventHandler  : public IDispatch
{
public:

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAToolboxServiceEvents
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DBFBBC7E-4AC1-4FB1-88B6-34DF77F48B14}
// *********************************************************************//
interface IOTAToolboxServiceEvents  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE add_ToolboxItemAdded(Borland_studio_toolsapi_tlb::_ToolboxItemAddedEventHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE remove_ToolboxItemAdded(Borland_studio_toolsapi_tlb::_ToolboxItemAddedEventHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE add_ToolboxItemRemoved(Borland_studio_toolsapi_tlb::_ToolboxItemEventHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE remove_ToolboxItemRemoved(Borland_studio_toolsapi_tlb::_ToolboxItemEventHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE add_SelectedItemUsed(Borland_studio_toolsapi_tlb::_ToolboxItemEventHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE remove_SelectedItemUsed(Borland_studio_toolsapi_tlb::_ToolboxItemEventHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE add_ToolboxServiceRefresh(Mscorlib_tlb::_EventHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE remove_ToolboxServiceRefresh(Mscorlib_tlb::_EventHandler* value/*[in]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAEventMethodsService
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5E2773EC-DC4A-4B79-9B2C-763B8A2321C0}
// *********************************************************************//
interface IOTAEventMethodsService  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE AddComponentEventMethod(VARIANT component/*[in]*/, 
                                                            BSTR methodName/*[in]*/, 
                                                            System_tlb::_EventDescriptor* eventDescriptor/*[in]*/, 
                                                            BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE RemoveComponentEventMethod(VARIANT component/*[in]*/, 
                                                               BSTR methodName/*[in]*/, 
                                                               System_tlb::_EventDescriptor* eventDescriptor/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE RemoveComponentEventMethods(VARIANT component/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE ResetState(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE RemoveEmptyEvents(void) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  BSTR __fastcall AddComponentEventMethod(VARIANT component/*[in]*/, BSTR methodName/*[in]*/, 
                                          System_tlb::_EventDescriptor* eventDescriptor/*[in]*/)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->AddComponentEventMethod(component, methodName, eventDescriptor, (BSTR*)&pRetVal));
    return pRetVal;
  }



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IBorlandIDEServices
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6C120D3D-BD59-4E3F-97AE-1EA4C0E204ED}
// *********************************************************************//
interface IBorlandIDEServices  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE AddOTAExtension(VARIANT extension/*[in]*/, 
                                                    long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE RemoveOTAExtension(long index/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetService(Mscorlib_tlb::_Type* serviceType/*[in]*/, 
                                               VARIANT* pRetVal/*[out,retval]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  long __fastcall AddOTAExtension(VARIANT extension/*[in]*/)
  {
    long pRetVal;
    OLECHECK(this->AddOTAExtension(extension, (long*)&pRetVal));
    return pRetVal;
  }

  VARIANT __fastcall GetService(Mscorlib_tlb::_Type* serviceType/*[in]*/)
  {
    VARIANT pRetVal;
    OLECHECK(this->GetService(serviceType, (VARIANT*)&pRetVal));
    return pRetVal;
  }



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAVirtualFileService
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {728068F4-29B9-361F-A6ED-D719C6A4863C}
// *********************************************************************//
interface IOTAVirtualFileService  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE OpenFile(BSTR fileName/*[in]*/, 
                                             Borland_studio_toolsapi_tlb::IOTAVirtualFile** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetReader(BSTR fileName/*[in]*/, long offset/*[in]*/, 
                                              Borland_studio_toolsapi_tlb::IOTAFileReader** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetWriter(BSTR fileName/*[in]*/, 
                                              Borland_studio_toolsapi_tlb::IOTAFileWriter** pRetVal/*[out,retval]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  Borland_studio_toolsapi_tlb::IOTAVirtualFile* __fastcall OpenFile(BSTR fileName/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::IOTAVirtualFile* pRetVal = 0;
    OLECHECK(this->OpenFile(fileName, (Borland_studio_toolsapi_tlb::IOTAVirtualFile**)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAFileReader* __fastcall GetReader(BSTR fileName/*[in]*/, 
                                                                    long offset/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::IOTAFileReader* pRetVal = 0;
    OLECHECK(this->GetReader(fileName, offset, (Borland_studio_toolsapi_tlb::IOTAFileReader**)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAFileWriter* __fastcall GetWriter(BSTR fileName/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::IOTAFileWriter* pRetVal = 0;
    OLECHECK(this->GetWriter(fileName, (Borland_studio_toolsapi_tlb::IOTAFileWriter**)&pRetVal));
    return pRetVal;
  }



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAVirtualFile
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {779E0FCF-A177-48A5-A242-3AE5CDCA5C5A}
// *********************************************************************//
interface IOTAVirtualFile  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE GetReader(long offset/*[in]*/, 
                                              Borland_studio_toolsapi_tlb::IOTAFileReader** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetWriter(Borland_studio_toolsapi_tlb::IOTAFileWriter** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE Close(void) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  Borland_studio_toolsapi_tlb::IOTAFileReader* __fastcall GetReader(long offset/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::IOTAFileReader* pRetVal = 0;
    OLECHECK(this->GetReader(offset, (Borland_studio_toolsapi_tlb::IOTAFileReader**)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAFileWriter* __fastcall GetWriter(void)
  {
    Borland_studio_toolsapi_tlb::IOTAFileWriter* pRetVal = 0;
    OLECHECK(this->GetWriter((Borland_studio_toolsapi_tlb::IOTAFileWriter**)&pRetVal));
    return pRetVal;
  }



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAFileReader
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {60623BF1-C097-4DD7-BA7F-ADC40FE032E9}
// *********************************************************************//
interface IOTAFileReader  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE Read(long length/*[in]*/, long padding/*[in]*/, 
                                         LPSAFEARRAY* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE Close(void) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  LPSAFEARRAY __fastcall Read(long length/*[in]*/, long padding/*[in]*/)
  {
    LPSAFEARRAY pRetVal;
    OLECHECK(this->Read(length, padding, (LPSAFEARRAY*)&pRetVal));
    return pRetVal;
  }



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAFileWriter
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DCEDFCFF-7111-49B5-8A53-57F084B8C0C9}
// *********************************************************************//
interface IOTAFileWriter  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE CopyTo(__int64 offset/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE DeleteTo(__int64 offset/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE Insert(BSTR Text/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE Insert_2(LPSAFEARRAY bytes/*[in]*/, long offset/*[in]*/, 
                                             long Count/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE Close(void) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTACodeDomGeneratorOptions
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {93B43D3C-D524-440D-9569-4C4D79D26C9E}
// *********************************************************************//
interface IOTACodeDomGeneratorOptions  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE get_BlankLinesBetweenMembers(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_BracingStyle(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_ElseOnClosing(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_IndentString(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_CaseSensitive(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  VARIANT_BOOL __fastcall get_BlankLinesBetweenMembers(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->get_BlankLinesBetweenMembers((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall get_BracingStyle(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_BracingStyle((BSTR*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall get_ElseOnClosing(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->get_ElseOnClosing((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall get_IndentString(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_IndentString((BSTR*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall get_CaseSensitive(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->get_CaseSensitive((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }


  __property   VARIANT_BOOL    BlankLinesBetweenMembers = {read = get_BlankLinesBetweenMembers};
  __property   BSTR            BracingStyle = {read = get_BracingStyle};
  __property   VARIANT_BOOL    ElseOnClosing = {read = get_ElseOnClosing};
  __property   BSTR            IndentString = {read = get_IndentString};
  __property   VARIANT_BOOL    CaseSensitive = {read = get_CaseSensitive};

#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTACodeDomFile
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {487E1E2B-8CF5-4BD4-929A-4D82E862FAB0}
// *********************************************************************//
interface IOTACodeDomFile  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE GetDom(System_tlb::_CodeObject** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE WriteDom(System_tlb::_CodeCompileUnit* codeDom/*[in]*/, 
                                             Borland_studio_toolsapi_tlb::IOTACodeDomGeneratorOptions* generatorOptions/*[in]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  System_tlb::_CodeObject* __fastcall GetDom(void)
  {
    System_tlb::_CodeObject* pRetVal = 0;
    OLECHECK(this->GetDom((System_tlb::_CodeObject**)&pRetVal));
    return pRetVal;
  }



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAInstalledToolboxItem
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {72655E0D-ED21-4B1A-93D6-F30E96782A1F}
// *********************************************************************//
interface IOTAInstalledToolboxItem  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE get_ToolboxItem(LPUNKNOWN* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_CategoryName(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE set_CategoryName(BSTR pRetVal/*[in]*/) = 0; // [1610743809]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  LPUNKNOWN __fastcall get_ToolboxItem(void)
  {
    LPUNKNOWN pRetVal;
    OLECHECK(this->get_ToolboxItem((LPUNKNOWN*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall get_CategoryName(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_CategoryName((BSTR*)&pRetVal));
    return pRetVal;
  }


  __property   LPUNKNOWN       ToolboxItem = {read = get_ToolboxItem};
  __property   BSTR            CategoryName = {read = get_CategoryName, write = set_CategoryName};

#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAComponentInstallService
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B36018B6-AA77-4BB7-82AC-7B2D2C3B04E4}
// *********************************************************************//
interface IOTAComponentInstallService  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE Add(LPUNKNOWN Item/*[in]*/, BSTR category/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE Remove(LPSAFEARRAY items/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE Remove_2(LPUNKNOWN Item/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE ItemFromToolboxItem(LPUNKNOWN Item/*[in]*/, 
                                                        Borland_studio_toolsapi_tlb::IOTAInstalledToolboxItem** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE Clear(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_InstalledItems(LPSAFEARRAY* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_InstalledComponents(LPSAFEARRAY* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE ShowInstallComponentsForm(System_windows_forms_tlb::DialogResult* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE SaveState(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE LoadState(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE ResetTypesToDefault(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE add_BeginUpdate(Mscorlib_tlb::_EventHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE remove_BeginUpdate(Mscorlib_tlb::_EventHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE add_EndUpdate(Mscorlib_tlb::_EventHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE remove_EndUpdate(Mscorlib_tlb::_EventHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE OnBeginUpdate(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE OnEndUpdate(void) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  Borland_studio_toolsapi_tlb::IOTAInstalledToolboxItem* __fastcall ItemFromToolboxItem(LPUNKNOWN Item/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::IOTAInstalledToolboxItem* pRetVal = 0;
    OLECHECK(this->ItemFromToolboxItem(Item, (Borland_studio_toolsapi_tlb::IOTAInstalledToolboxItem**)&pRetVal));
    return pRetVal;
  }

  LPSAFEARRAY __fastcall get_InstalledItems(void)
  {
    LPSAFEARRAY pRetVal;
    OLECHECK(this->get_InstalledItems((LPSAFEARRAY*)&pRetVal));
    return pRetVal;
  }

  LPSAFEARRAY __fastcall get_InstalledComponents(void)
  {
    LPSAFEARRAY pRetVal;
    OLECHECK(this->get_InstalledComponents((LPSAFEARRAY*)&pRetVal));
    return pRetVal;
  }

  System_windows_forms_tlb::DialogResult __fastcall ShowInstallComponentsForm(void)
  {
    System_windows_forms_tlb::DialogResult pRetVal;
    OLECHECK(this->ShowInstallComponentsForm((System_windows_forms_tlb::DialogResult*)&pRetVal));
    return pRetVal;
  }



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAModuleHandlerGauntletMember
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {47C01B8C-7ACA-487D-A249-78F9DB894CB7}
// *********************************************************************//
interface IOTAModuleHandlerGauntletMember  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE AttachHandler(Borland_studio_toolsapi_tlb::IOTAModule* module/*[in]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAModuleHandlerGauntletService
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {46E708B5-1B3D-4A94-869F-DF1752A6CE35}
// *********************************************************************//
interface IOTAModuleHandlerGauntletService  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE AddMember(Borland_studio_toolsapi_tlb::IOTAModuleHandlerGauntletMember* handler/*[in]*/, 
                                              long priority/*[in]*/, long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE RemoveMember(long index/*[in]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  long __fastcall AddMember(Borland_studio_toolsapi_tlb::IOTAModuleHandlerGauntletMember* handler/*[in]*/, 
                            long priority/*[in]*/)
  {
    long pRetVal;
    OLECHECK(this->AddMember(handler, priority, (long*)&pRetVal));
    return pRetVal;
  }



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAAddReferenceDialog
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0BBA329E-B28D-3343-953A-9D97655F9CD2}
// *********************************************************************//
interface IOTAAddReferenceDialog  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE ShowDialog(Borland_studio_toolsapi_tlb::IOTAProject* project/*[in]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAAddInService
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B7D01D1D-5414-48E8-A691-090A0B191D6D}
// *********************************************************************//
interface IOTAAddInService  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE LoadAddIn(BSTR fileName/*[in]*/, 
                                              VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  VARIANT_BOOL __fastcall LoadAddIn(BSTR fileName/*[in]*/)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->LoadAddIn(fileName, (VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTABitmapService
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9B9487F0-3F83-4817-AACD-3C84D2FEF954}
// *********************************************************************//
interface IOTABitmapService  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE LoadFromResourceID(BSTR fileName/*[in]*/, long resID/*[in]*/, 
                                                       long* pRetVal/*[out,retval]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  long __fastcall LoadFromResourceID(BSTR fileName/*[in]*/, long resID/*[in]*/)
  {
    long pRetVal;
    OLECHECK(this->LoadFromResourceID(fileName, resID, (long*)&pRetVal));
    return pRetVal;
  }



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: _AssemblyUnloadedEventArgs
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {BB77DC4F-7E1C-33FD-9E94-C7C631F3FC43}
// *********************************************************************//
interface _AssemblyUnloadedEventArgs  : public IDispatch
{
public:

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: _AssemblyUnloadedEventHandler
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {BC05AA32-5149-33E6-9865-83DF06FE9233}
// *********************************************************************//
interface _AssemblyUnloadedEventHandler  : public IDispatch
{
public:

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAAssemblyUnloadedService
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B8BF8F11-9F74-3754-8968-F65738FD7120}
// *********************************************************************//
interface IOTAAssemblyUnloadedService  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE add_AssemblyUnloaded(Borland_studio_toolsapi_tlb::_AssemblyUnloadedEventHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE remove_AssemblyUnloaded(Borland_studio_toolsapi_tlb::_AssemblyUnloadedEventHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE OnAssemblyUnloaded(VARIANT sender/*[in]*/, 
                                                       Borland_studio_toolsapi_tlb::_AssemblyUnloadedEventArgs* args/*[in]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAMessageGroup
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {56352901-9004-426F-8C34-CD3652E8B01A}
// *********************************************************************//
interface IOTAMessageGroup  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE get_Name(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_AutoScroll(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE set_AutoScroll(VARIANT_BOOL pRetVal/*[in]*/) = 0; // [1610743809]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  BSTR __fastcall get_Name(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_Name((BSTR*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall get_AutoScroll(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->get_AutoScroll((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }


  __property   BSTR            Name = {read = get_Name};
  __property   VARIANT_BOOL    AutoScroll = {read = get_AutoScroll, write = set_AutoScroll};

#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: _MessageGroupEventArgs
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {6AB2B46B-745D-34CB-B1F6-80E1A2C8ECF4}
// *********************************************************************//
interface _MessageGroupEventArgs  : public IDispatch
{
public:

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTACustomMessage
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E5133BA9-9859-49CE-A295-D337E7BC3C48}
// *********************************************************************//
interface IOTACustomMessage  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE ShowHelp(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_fileName(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_LineNumber(long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_ColumnNumber(long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_LineText(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_ChildCount(long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetChild(long index/*[in]*/, 
                                             Borland_studio_toolsapi_tlb::IOTACustomMessage** pRetVal/*[out,retval]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  BSTR __fastcall get_fileName(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_fileName((BSTR*)&pRetVal));
    return pRetVal;
  }

  long __fastcall get_LineNumber(void)
  {
    long pRetVal;
    OLECHECK(this->get_LineNumber((long*)&pRetVal));
    return pRetVal;
  }

  long __fastcall get_ColumnNumber(void)
  {
    long pRetVal;
    OLECHECK(this->get_ColumnNumber((long*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall get_LineText(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_LineText((BSTR*)&pRetVal));
    return pRetVal;
  }

  long __fastcall get_ChildCount(void)
  {
    long pRetVal;
    OLECHECK(this->get_ChildCount((long*)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTACustomMessage* __fastcall GetChild(long index/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::IOTACustomMessage* pRetVal = 0;
    OLECHECK(this->GetChild(index, (Borland_studio_toolsapi_tlb::IOTACustomMessage**)&pRetVal));
    return pRetVal;
  }


  __property   BSTR            fileName = {read = get_fileName};
  __property   long            LineNumber = {read = get_LineNumber};
  __property   long            ColumnNumber = {read = get_ColumnNumber};
  __property   BSTR            LineText = {read = get_LineText};
  __property   long            ChildCount = {read = get_ChildCount};

#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: _MessageGroupHandler
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {64B4C7E7-41A9-341E-BB19-C3279B9DD1AE}
// *********************************************************************//
interface _MessageGroupHandler  : public IDispatch
{
public:

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAMessageService
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {37542A61-0649-49CB-BC6F-2FFA0D2E3E1E}
// *********************************************************************//
interface IOTAMessageService  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE AddCustomMessage(Borland_studio_toolsapi_tlb::IOTACustomMessage* customMsg/*[in]*/, 
                                                     long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE AddCustomMessage_2(Borland_studio_toolsapi_tlb::IOTACustomMessage* customMsg/*[in]*/, 
                                                       long parent/*[in]*/, 
                                                       long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE AddCustomMessage_3(Borland_studio_toolsapi_tlb::IOTACustomMessage* customMsg/*[in]*/, 
                                                       Borland_studio_toolsapi_tlb::IOTAMessageGroup* messageGroup/*[in]*/, 
                                                       long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE AddTitleMessage(BSTR messageStr/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE AddToolMessage(BSTR fileName/*[in]*/, BSTR messageStr/*[in]*/, 
                                                   BSTR prefixStr/*[in]*/, long LineNumber/*[in]*/, 
                                                   long ColumnNumber/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE ClearAllMessages(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE ClearCompilerMessages(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE ClearSearchMessages(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE ClearToolMessages(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE AddToolMessage_2(BSTR fileName/*[in]*/, BSTR messageStr/*[in]*/, 
                                                     BSTR prefixStr/*[in]*/, long LineNumber/*[in]*/, 
                                                     long ColumnNumber/*[in]*/, long parent/*[in]*/, 
                                                     long* lineRef/*[out]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE AddMessageGroup(BSTR groupName/*[in]*/, 
                                                    Borland_studio_toolsapi_tlb::IOTAMessageGroup** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE AddTitleMessage_2(BSTR messageStr/*[in]*/, 
                                                      Borland_studio_toolsapi_tlb::IOTAMessageGroup* messageGroup/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE AddToolMessage_3(BSTR fileName/*[in]*/, BSTR messageStr/*[in]*/, 
                                                     BSTR prefixStr/*[in]*/, long LineNumber/*[in]*/, 
                                                     long ColumnNumber/*[in]*/, long parent/*[in]*/, 
                                                     long* lineRef/*[out]*/, 
                                                     Borland_studio_toolsapi_tlb::IOTAMessageGroup* messageGroup/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE ClearMessageGroup(Borland_studio_toolsapi_tlb::IOTAMessageGroup* messageGroup/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE ClearToolMessages_2(Borland_studio_toolsapi_tlb::IOTAMessageGroup* messageGroup/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_MessageGroupCount(long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetMessageGroup(long index/*[in]*/, 
                                                    Borland_studio_toolsapi_tlb::IOTAMessageGroup** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetGroup(BSTR groupName/*[in]*/, 
                                             Borland_studio_toolsapi_tlb::IOTAMessageGroup** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE ShowMessageView(Borland_studio_toolsapi_tlb::IOTAMessageGroup* messageGroup/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE RemoveMessageGroup(Borland_studio_toolsapi_tlb::IOTAMessageGroup* messageGroup/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE AddCompilerMessage(BSTR fileName/*[in]*/, 
                                                       BSTR messageStr/*[in]*/, 
                                                       BSTR toolName/*[in]*/, 
                                                       unsigned_char Kind/*[in]*/, 
                                                       long LineNumber/*[in]*/, 
                                                       long ColumnNumber/*[in]*/, 
                                                       long parent/*[in]*/, long* lineRef/*[out]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE AddCompilerMessage_2(BSTR fileName/*[in]*/, 
                                                         BSTR messageStr/*[in]*/, 
                                                         BSTR toolName/*[in]*/, 
                                                         unsigned_char Kind/*[in]*/, 
                                                         long LineNumber/*[in]*/, 
                                                         long ColumnNumber/*[in]*/, 
                                                         BSTR helpKeyword/*[in]*/, 
                                                         long parent/*[in]*/, long* lineRef/*[out]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE AddCompilerMessage_3(BSTR fileName/*[in]*/, 
                                                         BSTR messageStr/*[in]*/, 
                                                         BSTR toolName/*[in]*/, 
                                                         unsigned_char Kind/*[in]*/, 
                                                         long LineNumber/*[in]*/, 
                                                         long ColumnNumber/*[in]*/, 
                                                         long helpContext/*[in]*/, 
                                                         long parent/*[in]*/, long* lineRef/*[out]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE add_MessageGroupAdded(Borland_studio_toolsapi_tlb::_MessageGroupHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE remove_MessageGroupAdded(Borland_studio_toolsapi_tlb::_MessageGroupHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE add_MessageGroupDeleted(Borland_studio_toolsapi_tlb::_MessageGroupHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE remove_MessageGroupDeleted(Borland_studio_toolsapi_tlb::_MessageGroupHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE NextMessage(VARIANT_BOOL goForward/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE NextErrorMessage(VARIANT_BOOL goForward/*[in]*/, 
                                                     VARIANT_BOOL errorsOnly/*[in]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  long __fastcall AddCustomMessage(Borland_studio_toolsapi_tlb::IOTACustomMessage* customMsg/*[in]*/)
  {
    long pRetVal;
    OLECHECK(this->AddCustomMessage(customMsg, (long*)&pRetVal));
    return pRetVal;
  }

  long __fastcall AddCustomMessage_2(Borland_studio_toolsapi_tlb::IOTACustomMessage* customMsg/*[in]*/, 
                                     long parent/*[in]*/)
  {
    long pRetVal;
    OLECHECK(this->AddCustomMessage_2(customMsg, parent, (long*)&pRetVal));
    return pRetVal;
  }

  long __fastcall AddCustomMessage_3(Borland_studio_toolsapi_tlb::IOTACustomMessage* customMsg/*[in]*/, 
                                     Borland_studio_toolsapi_tlb::IOTAMessageGroup* messageGroup/*[in]*/)
  {
    long pRetVal;
    OLECHECK(this->AddCustomMessage_3(customMsg, messageGroup, (long*)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAMessageGroup* __fastcall AddMessageGroup(BSTR groupName/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::IOTAMessageGroup* pRetVal = 0;
    OLECHECK(this->AddMessageGroup(groupName, (Borland_studio_toolsapi_tlb::IOTAMessageGroup**)&pRetVal));
    return pRetVal;
  }

  long __fastcall get_MessageGroupCount(void)
  {
    long pRetVal;
    OLECHECK(this->get_MessageGroupCount((long*)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAMessageGroup* __fastcall GetMessageGroup(long index/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::IOTAMessageGroup* pRetVal = 0;
    OLECHECK(this->GetMessageGroup(index, (Borland_studio_toolsapi_tlb::IOTAMessageGroup**)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAMessageGroup* __fastcall GetGroup(BSTR groupName/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::IOTAMessageGroup* pRetVal = 0;
    OLECHECK(this->GetGroup(groupName, (Borland_studio_toolsapi_tlb::IOTAMessageGroup**)&pRetVal));
    return pRetVal;
  }


  __property   long            MessageGroupCount = {read = get_MessageGroupCount};

#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAEnvironmentOptions
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0036BC84-FB29-4769-98CA-A374E71F7544}
// *********************************************************************//
interface IOTAEnvironmentOptions  : public IDispatch
{
public:

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IFileNotificationEventArgs
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E3F325D2-1720-4C71-9239-E3CFBE0EB3E8}
// *********************************************************************//
interface IFileNotificationEventArgs  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE get_NotifyCode(Borland_studio_toolsapi_tlb::OTAFileNotification* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_fileName(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_Cancel(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE set_Cancel(VARIANT_BOOL pRetVal/*[in]*/) = 0; // [1610743810]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  Borland_studio_toolsapi_tlb::OTAFileNotification __fastcall get_NotifyCode(void)
  {
    Borland_studio_toolsapi_tlb::OTAFileNotification pRetVal;
    OLECHECK(this->get_NotifyCode((Borland_studio_toolsapi_tlb::OTAFileNotification*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall get_fileName(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_fileName((BSTR*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall get_Cancel(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->get_Cancel((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }


  __property   Borland_studio_toolsapi_tlb::OTAFileNotification NotifyCode = {read = get_NotifyCode};
  __property   BSTR            fileName = {read = get_fileName};
  __property   VARIANT_BOOL    Cancel = {read = get_Cancel, write = set_Cancel};

#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: _FileNotificationEventArgs
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {F5AB5C1B-FDC3-3D42-AB2B-9820E1A737C8}
// *********************************************************************//
interface _FileNotificationEventArgs  : public IDispatch
{
public:

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IBeforeCompileEventArgs
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E4DD4461-03AB-4E1C-B2F7-84495C360920}
// *********************************************************************//
interface IBeforeCompileEventArgs  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE get_project(Borland_studio_toolsapi_tlb::IOTAProject** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_IsCodeInsight(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_Cancel(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE set_Cancel(VARIANT_BOOL pRetVal/*[in]*/) = 0; // [1610743810]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  Borland_studio_toolsapi_tlb::IOTAProjectPtr __fastcall get_project(void)
  {
    Borland_studio_toolsapi_tlb::IOTAProjectPtr pRetVal;
    OLECHECK(this->get_project(&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall get_IsCodeInsight(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->get_IsCodeInsight((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall get_Cancel(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->get_Cancel((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }


  __property   Borland_studio_toolsapi_tlb::IOTAProjectPtr project = {read = get_project};
  __property   VARIANT_BOOL    IsCodeInsight = {read = get_IsCodeInsight};
  __property   VARIANT_BOOL    Cancel = {read = get_Cancel, write = set_Cancel};

#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: _BeforeCompileArgs
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {F88936B3-5313-3308-A5B6-35ECF6F4AC73}
// *********************************************************************//
interface _BeforeCompileArgs  : public IDispatch
{
public:

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IAfterCompileEventArgs
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {015F0FB1-6E8A-41EE-B419-5078C6F5F0D0}
// *********************************************************************//
interface IAfterCompileEventArgs  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE get_IsCodeInsight(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_Succeeded(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  VARIANT_BOOL __fastcall get_IsCodeInsight(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->get_IsCodeInsight((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall get_Succeeded(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->get_Succeeded((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }


  __property   VARIANT_BOOL    IsCodeInsight = {read = get_IsCodeInsight};
  __property   VARIANT_BOOL    Succeeded = {read = get_Succeeded};

#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: _AfterCompileArgs
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {609A4F69-2731-3F4F-98C1-A008B2077FD4}
// *********************************************************************//
interface _AfterCompileArgs  : public IDispatch
{
public:

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: _FileNotificationHandler
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {65B58C48-9B9B-348B-8A6F-2FF96DE79AF1}
// *********************************************************************//
interface _FileNotificationHandler  : public IDispatch
{
public:

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: _BeforeCompileHandler
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {6A531A35-013E-3BA9-8E59-55EF858ABF74}
// *********************************************************************//
interface _BeforeCompileHandler  : public IDispatch
{
public:

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: _AfterCompileHandler
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {8100CA55-F867-37DC-B256-FADD8C308F5D}
// *********************************************************************//
interface _AfterCompileHandler  : public IDispatch
{
public:

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAService
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {724986CC-FE2A-4691-9495-A1C20328A5BE}
// *********************************************************************//
interface IOTAService  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE add_BeforeCompile(Borland_studio_toolsapi_tlb::_BeforeCompileHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE remove_BeforeCompile(Borland_studio_toolsapi_tlb::_BeforeCompileHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE add_AfterCompile(Borland_studio_toolsapi_tlb::_AfterCompileHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE remove_AfterCompile(Borland_studio_toolsapi_tlb::_AfterCompileHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE add_FileNotification(Borland_studio_toolsapi_tlb::_FileNotificationHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE remove_FileNotification(Borland_studio_toolsapi_tlb::_FileNotificationHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_BaseRegistryKey(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_ProductIdentifier(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_ActiveDesignerType(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_RootDirectory(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_BinDirectory(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_TemplateDirectory(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_ApplicationDataDirectory(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_LocalApplicationDataDirectory(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_ParentHandle(long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_EnvironmentOptions(Borland_studio_toolsapi_tlb::IOTAEnvironmentOptions** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_IDEPreferredUILanguages(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE add_CacheCleared(Mscorlib_tlb::_EventHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE remove_CacheCleared(Mscorlib_tlb::_EventHandler* value/*[in]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  BSTR __fastcall get_BaseRegistryKey(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_BaseRegistryKey((BSTR*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall get_ProductIdentifier(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_ProductIdentifier((BSTR*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall get_ActiveDesignerType(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_ActiveDesignerType((BSTR*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall get_RootDirectory(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_RootDirectory((BSTR*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall get_BinDirectory(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_BinDirectory((BSTR*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall get_TemplateDirectory(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_TemplateDirectory((BSTR*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall get_ApplicationDataDirectory(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_ApplicationDataDirectory((BSTR*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall get_LocalApplicationDataDirectory(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_LocalApplicationDataDirectory((BSTR*)&pRetVal));
    return pRetVal;
  }

  long __fastcall get_ParentHandle(void)
  {
    long pRetVal;
    OLECHECK(this->get_ParentHandle((long*)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAEnvironmentOptionsPtr __fastcall get_EnvironmentOptions(void)
  {
    Borland_studio_toolsapi_tlb::IOTAEnvironmentOptionsPtr pRetVal;
    OLECHECK(this->get_EnvironmentOptions(&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall get_IDEPreferredUILanguages(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_IDEPreferredUILanguages((BSTR*)&pRetVal));
    return pRetVal;
  }


  __property   BSTR            BaseRegistryKey = {read = get_BaseRegistryKey};
  __property   BSTR            ProductIdentifier = {read = get_ProductIdentifier};
  __property   BSTR            ActiveDesignerType = {read = get_ActiveDesignerType};
  __property   BSTR            RootDirectory = {read = get_RootDirectory};
  __property   BSTR            BinDirectory = {read = get_BinDirectory};
  __property   BSTR            TemplateDirectory = {read = get_TemplateDirectory};
  __property   BSTR            ApplicationDataDirectory = {read = get_ApplicationDataDirectory};
  __property   BSTR            LocalApplicationDataDirectory = {read = get_LocalApplicationDataDirectory};
  __property   long            ParentHandle = {read = get_ParentHandle};
  __property   Borland_studio_toolsapi_tlb::IOTAEnvironmentOptionsPtr EnvironmentOptions = {read = get_EnvironmentOptions};
  __property   BSTR            IDEPreferredUILanguages = {read = get_IDEPreferredUILanguages};

#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTADotNetObjectInspectorService
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5EB65058-01B0-46E2-858F-065C5C5F4A29}
// *********************************************************************//
interface IOTADotNetObjectInspectorService  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE SelectObjects(LPSAFEARRAY objects/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_SelectedObjects(LPSAFEARRAY* pRetVal/*[out,retval]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  LPSAFEARRAY __fastcall get_SelectedObjects(void)
  {
    LPSAFEARRAY pRetVal;
    OLECHECK(this->get_SelectedObjects((LPSAFEARRAY*)&pRetVal));
    return pRetVal;
  }



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTACultureInfo
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1DA51503-24DB-4DB5-A151-B57E2569D8AA}
// *********************************************************************//
interface IOTACultureInfo  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE GetCultureCodes(LPSAFEARRAY* pRetVal/*[out,retval]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  LPSAFEARRAY __fastcall GetCultureCodes(void)
  {
    LPSAFEARRAY pRetVal;
    OLECHECK(this->GetCultureCodes((LPSAFEARRAY*)&pRetVal));
    return pRetVal;
  }



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAMenuItem
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7A123EBF-A0C5-45B8-BDF7-CFBA02528867}
// *********************************************************************//
interface IOTAMenuItem  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE get_Name(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE set_Name(BSTR pRetVal/*[in]*/) = 0; // [1610743808]
  virtual HRESULT STDMETHODCALLTYPE get_Text(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE set_Text(BSTR pRetVal/*[in]*/) = 0; // [1610743810]
  virtual HRESULT STDMETHODCALLTYPE get_Enabled(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE set_Enabled(VARIANT_BOOL pRetVal/*[in]*/) = 0; // [1610743812]
  virtual HRESULT STDMETHODCALLTYPE get_Checked(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE set_Checked(VARIANT_BOOL pRetVal/*[in]*/) = 0; // [1610743814]
  virtual HRESULT STDMETHODCALLTYPE get_Visible(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE set_Visible(VARIANT_BOOL pRetVal/*[in]*/) = 0; // [1610743816]
  virtual HRESULT STDMETHODCALLTYPE get_Shortcut(long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE set_Shortcut(long pRetVal/*[in]*/) = 0; // [1610743818]
  virtual HRESULT STDMETHODCALLTYPE get_category(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE set_category(BSTR pRetVal/*[in]*/) = 0; // [1610743820]
  virtual HRESULT STDMETHODCALLTYPE get_helpContext(long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE set_helpContext(long pRetVal/*[in]*/) = 0; // [1610743822]
  virtual HRESULT STDMETHODCALLTYPE get_PreviousMenuItem(Borland_studio_toolsapi_tlb::IOTAMenuItem** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_NextMenuItem(Borland_studio_toolsapi_tlb::IOTAMenuItem** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_ParentMenuItem(Borland_studio_toolsapi_tlb::IOTAMenuItem** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_ChildCount(long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE ChildMenuItem(long index/*[in]*/, 
                                                  Borland_studio_toolsapi_tlb::IOTAMenuItem** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE Execute(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE add_Executed(Mscorlib_tlb::_EventHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE remove_Executed(Mscorlib_tlb::_EventHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE add_Updated(Mscorlib_tlb::_EventHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE remove_Updated(Mscorlib_tlb::_EventHandler* value/*[in]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  BSTR __fastcall get_Name(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_Name((BSTR*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall get_Text(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_Text((BSTR*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall get_Enabled(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->get_Enabled((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall get_Checked(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->get_Checked((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall get_Visible(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->get_Visible((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  long __fastcall get_Shortcut(void)
  {
    long pRetVal;
    OLECHECK(this->get_Shortcut((long*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall get_category(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_category((BSTR*)&pRetVal));
    return pRetVal;
  }

  long __fastcall get_helpContext(void)
  {
    long pRetVal;
    OLECHECK(this->get_helpContext((long*)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAMenuItemPtr __fastcall get_PreviousMenuItem(void)
  {
    Borland_studio_toolsapi_tlb::IOTAMenuItemPtr pRetVal;
    OLECHECK(this->get_PreviousMenuItem(&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAMenuItemPtr __fastcall get_NextMenuItem(void)
  {
    Borland_studio_toolsapi_tlb::IOTAMenuItemPtr pRetVal;
    OLECHECK(this->get_NextMenuItem(&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAMenuItemPtr __fastcall get_ParentMenuItem(void)
  {
    Borland_studio_toolsapi_tlb::IOTAMenuItemPtr pRetVal;
    OLECHECK(this->get_ParentMenuItem(&pRetVal));
    return pRetVal;
  }

  long __fastcall get_ChildCount(void)
  {
    long pRetVal;
    OLECHECK(this->get_ChildCount((long*)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAMenuItem* __fastcall ChildMenuItem(long index/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::IOTAMenuItem* pRetVal = 0;
    OLECHECK(this->ChildMenuItem(index, (Borland_studio_toolsapi_tlb::IOTAMenuItem**)&pRetVal));
    return pRetVal;
  }


  __property   BSTR            Name = {read = get_Name, write = set_Name};
  __property   BSTR            Text = {read = get_Text, write = set_Text};
  __property   VARIANT_BOOL    Enabled = {read = get_Enabled, write = set_Enabled};
  __property   VARIANT_BOOL    Checked = {read = get_Checked, write = set_Checked};
  __property   VARIANT_BOOL    Visible = {read = get_Visible, write = set_Visible};
  __property   long            Shortcut = {read = get_Shortcut, write = set_Shortcut};
  __property   BSTR            category = {read = get_category, write = set_category};
  __property   long            helpContext = {read = get_helpContext, write = set_helpContext};
  __property   Borland_studio_toolsapi_tlb::IOTAMenuItemPtr PreviousMenuItem = {read = get_PreviousMenuItem};
  __property   Borland_studio_toolsapi_tlb::IOTAMenuItemPtr NextMenuItem = {read = get_NextMenuItem};
  __property   Borland_studio_toolsapi_tlb::IOTAMenuItemPtr ParentMenuItem = {read = get_ParentMenuItem};
  __property   long            ChildCount = {read = get_ChildCount};

#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: _OTAContainerTypes
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {5AC81224-7DD8-3F4B-9ABB-7C74FA81FDC3}
// *********************************************************************//
interface _OTAContainerTypes  : public IDispatch
{
public:

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAProjectMenuCreatorNotifier
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9A2035D3-B602-4763-9832-7881CDD2E47F}
// *********************************************************************//
interface IOTAProjectMenuCreatorNotifier  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE AddMenu(BSTR Ident/*[in]*/, 
                                            Borland_studio_toolsapi_tlb::IOTAMenuItem** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE CanHandle(BSTR Ident/*[in]*/, 
                                              VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE Destroyed(void) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  Borland_studio_toolsapi_tlb::IOTAMenuItem* __fastcall AddMenu(BSTR Ident/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::IOTAMenuItem* pRetVal = 0;
    OLECHECK(this->AddMenu(Ident, (Borland_studio_toolsapi_tlb::IOTAMenuItem**)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall CanHandle(BSTR Ident/*[in]*/)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->CanHandle(Ident, (VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAProjectManagerMenuServices
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {158FFEA2-79EB-4000-AAE7-EBD67D9AF4C3}
// *********************************************************************//
interface IOTAProjectManagerMenuServices  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE CreateMenuItem(BSTR Name/*[in]*/, BSTR Text/*[in]*/, 
                                                   Borland_studio_toolsapi_tlb::IOTAMenuItem** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE AddMenuItem(Borland_studio_toolsapi_tlb::IOTAMenuItem* ParentMenu/*[in]*/, 
                                                BSTR Name/*[in]*/, BSTR Text/*[in]*/, 
                                                Borland_studio_toolsapi_tlb::IOTAMenuItem** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE AddMenuCreatorNotifier(Borland_studio_toolsapi_tlb::IOTAProjectMenuCreatorNotifier* Notifier/*[in]*/, 
                                                           long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE RemoveMenuCreatorNotifier(long index/*[in]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  Borland_studio_toolsapi_tlb::IOTAMenuItem* __fastcall CreateMenuItem(BSTR Name/*[in]*/, 
                                                                       BSTR Text/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::IOTAMenuItem* pRetVal = 0;
    OLECHECK(this->CreateMenuItem(Name, Text, (Borland_studio_toolsapi_tlb::IOTAMenuItem**)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAMenuItem* __fastcall AddMenuItem(Borland_studio_toolsapi_tlb::IOTAMenuItem* ParentMenu/*[in]*/, 
                                                                    BSTR Name/*[in]*/, 
                                                                    BSTR Text/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::IOTAMenuItem* pRetVal = 0;
    OLECHECK(this->AddMenuItem(ParentMenu, Name, Text, (Borland_studio_toolsapi_tlb::IOTAMenuItem**)&pRetVal));
    return pRetVal;
  }

  long __fastcall AddMenuCreatorNotifier(Borland_studio_toolsapi_tlb::IOTAProjectMenuCreatorNotifier* Notifier/*[in]*/)
  {
    long pRetVal;
    OLECHECK(this->AddMenuCreatorNotifier(Notifier, (long*)&pRetVal));
    return pRetVal;
  }



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAProjectManager
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D53EC96F-F329-43C2-B9A2-E30A1607A87B}
// *********************************************************************//
interface IOTAProjectManager  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE get_CurrentSelectionIdent(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_CurrentSelectionProject(Borland_studio_toolsapi_tlb::IOTAProject** pRetVal/*[out,retval]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  BSTR __fastcall get_CurrentSelectionIdent(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_CurrentSelectionIdent((BSTR*)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAProjectPtr __fastcall get_CurrentSelectionProject(void)
  {
    Borland_studio_toolsapi_tlb::IOTAProjectPtr pRetVal;
    OLECHECK(this->get_CurrentSelectionProject(&pRetVal));
    return pRetVal;
  }


  __property   BSTR            CurrentSelectionIdent = {read = get_CurrentSelectionIdent};
  __property   Borland_studio_toolsapi_tlb::IOTAProjectPtr CurrentSelectionProject = {read = get_CurrentSelectionProject};

#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAMainMenuService
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9CCFD283-F6F9-4E2B-A4B6-5EBE67A21313}
// *********************************************************************//
interface IOTAMainMenuService  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE GetFirstMenuItem(Borland_studio_toolsapi_tlb::IOTAMenuItem** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetMenuItem(BSTR Name/*[in]*/, 
                                                Borland_studio_toolsapi_tlb::IOTAMenuItem** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE RemoveMenuItem(BSTR Name/*[in]*/, 
                                                   VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE AddMenuItem(BSTR referenceItemName/*[in]*/, 
                                                Borland_studio_toolsapi_tlb::OTAMenuItemLocation newLocation/*[in]*/, 
                                                BSTR NewName/*[in]*/, BSTR newText/*[in]*/, 
                                                Borland_studio_toolsapi_tlb::IOTAMenuItem** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE AddMenuItem_2(BSTR referenceItemName/*[in]*/, 
                                                  Borland_studio_toolsapi_tlb::OTAMenuItemLocation newLocation/*[in]*/, 
                                                  BSTR NewName/*[in]*/, BSTR newText/*[in]*/, 
                                                  long bitmapHandle/*[in]*/, 
                                                  Borland_studio_toolsapi_tlb::IOTAMenuItem** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE AddMenuItem_3(BSTR referenceItemName/*[in]*/, 
                                                  Borland_studio_toolsapi_tlb::OTAMenuItemLocation newLocation/*[in]*/, 
                                                  BSTR NewName/*[in]*/, BSTR newText/*[in]*/, 
                                                  long bitmapHandle/*[in]*/, BSTR hintText/*[in]*/, 
                                                  Borland_studio_toolsapi_tlb::IOTAMenuItem** pRetVal/*[out,retval]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  Borland_studio_toolsapi_tlb::IOTAMenuItem* __fastcall GetFirstMenuItem(void)
  {
    Borland_studio_toolsapi_tlb::IOTAMenuItem* pRetVal = 0;
    OLECHECK(this->GetFirstMenuItem((Borland_studio_toolsapi_tlb::IOTAMenuItem**)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAMenuItem* __fastcall GetMenuItem(BSTR Name/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::IOTAMenuItem* pRetVal = 0;
    OLECHECK(this->GetMenuItem(Name, (Borland_studio_toolsapi_tlb::IOTAMenuItem**)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall RemoveMenuItem(BSTR Name/*[in]*/)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->RemoveMenuItem(Name, (VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAMenuItem* __fastcall AddMenuItem(BSTR referenceItemName/*[in]*/, 
                                                                    Borland_studio_toolsapi_tlb::OTAMenuItemLocation newLocation/*[in]*/, 
                                                                    BSTR NewName/*[in]*/, 
                                                                    BSTR newText/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::IOTAMenuItem* pRetVal = 0;
    OLECHECK(this->AddMenuItem(referenceItemName, newLocation, NewName, newText, (Borland_studio_toolsapi_tlb::IOTAMenuItem**)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAMenuItem* __fastcall AddMenuItem_2(BSTR referenceItemName/*[in]*/, 
                                                                      Borland_studio_toolsapi_tlb::OTAMenuItemLocation newLocation/*[in]*/, 
                                                                      BSTR NewName/*[in]*/, 
                                                                      BSTR newText/*[in]*/, 
                                                                      long bitmapHandle/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::IOTAMenuItem* pRetVal = 0;
    OLECHECK(this->AddMenuItem_2(referenceItemName, newLocation, NewName, newText, bitmapHandle, (Borland_studio_toolsapi_tlb::IOTAMenuItem**)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAMenuItem* __fastcall AddMenuItem_3(BSTR referenceItemName/*[in]*/, 
                                                                      Borland_studio_toolsapi_tlb::OTAMenuItemLocation newLocation/*[in]*/, 
                                                                      BSTR NewName/*[in]*/, 
                                                                      BSTR newText/*[in]*/, 
                                                                      long bitmapHandle/*[in]*/, 
                                                                      BSTR hintText/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::IOTAMenuItem* pRetVal = 0;
    OLECHECK(this->AddMenuItem_3(referenceItemName, newLocation, NewName, newText, bitmapHandle, 
                                 hintText, (Borland_studio_toolsapi_tlb::IOTAMenuItem**)&pRetVal));
    return pRetVal;
  }



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: _OTADesignerTypes
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {3A4EECF9-E15D-3719-975A-040EED1B25E2}
// *********************************************************************//
interface _OTADesignerTypes  : public IDispatch
{
public:

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: _OTACreatorTypes
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {07E7E651-01B7-36C6-BD3C-7E64B8B8FCA9}
// *********************************************************************//
interface _OTACreatorTypes  : public IDispatch
{
public:

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: _OTAIDEPersonalities
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {AB294892-51BD-379A-9905-C49EBEA670CA}
// *********************************************************************//
interface _OTAIDEPersonalities  : public IDispatch
{
public:

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: _OTAGalleryCategories
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {6AEB0D4C-ED19-3D60-A08C-A9EAA6A9314D}
// *********************************************************************//
interface _OTAGalleryCategories  : public IDispatch
{
public:

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAFile
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {83F192E7-9C6D-4FDD-96F3-694FE6C98B4D}
// *********************************************************************//
interface IOTAFile  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE get_Source(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_Age(DATE* pRetVal/*[out,retval]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  BSTR __fastcall get_Source(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_Source((BSTR*)&pRetVal));
    return pRetVal;
  }

  DATE __fastcall get_Age(void)
  {
    DATE pRetVal;
    OLECHECK(this->get_Age((DATE*)&pRetVal));
    return pRetVal;
  }


  __property   BSTR            Source = {read = get_Source};
  __property   DATE            Age = {read = get_Age};

#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTACreator
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C9812ADF-42F5-434B-9999-86C366C6536E}
// *********************************************************************//
interface IOTACreator  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE get_CreatorType(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_Existing(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_fileSystem(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_Owner(Borland_studio_toolsapi_tlb::IOTAModule** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_Unnamed(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  BSTR __fastcall get_CreatorType(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_CreatorType((BSTR*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall get_Existing(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->get_Existing((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall get_fileSystem(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_fileSystem((BSTR*)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAModulePtr __fastcall get_Owner(void)
  {
    Borland_studio_toolsapi_tlb::IOTAModulePtr pRetVal;
    OLECHECK(this->get_Owner(&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall get_Unnamed(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->get_Unnamed((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }


  __property   BSTR            CreatorType = {read = get_CreatorType};
  __property   VARIANT_BOOL    Existing = {read = get_Existing};
  __property   BSTR            fileSystem = {read = get_fileSystem};
  __property   Borland_studio_toolsapi_tlb::IOTAModulePtr Owner = {read = get_Owner};
  __property   VARIANT_BOOL    Unnamed = {read = get_Unnamed};

#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAModuleCreator
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6A828396-2A30-436C-9E03-2F7EF48CD4A5}
// *********************************************************************//
interface IOTAModuleCreator  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE get_AncestorName(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_ImplFileName(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_IntfFileName(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_FormName(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_MainForm(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_ShowForm(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_ShowSource(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE NewFormFile(BSTR formIdent/*[in]*/, BSTR ancestorIdent/*[in]*/, 
                                                Borland_studio_toolsapi_tlb::IOTAFile** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE NewImplSource(BSTR moduleIdent/*[in]*/, BSTR formIdent/*[in]*/, 
                                                  BSTR ancestorIdent/*[in]*/, 
                                                  Borland_studio_toolsapi_tlb::IOTAFile** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE NewIntfSource(BSTR moduleIdent/*[in]*/, BSTR formIdent/*[in]*/, 
                                                  BSTR ancestorIdent/*[in]*/, 
                                                  Borland_studio_toolsapi_tlb::IOTAFile** pRetVal/*[out,retval]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  BSTR __fastcall get_AncestorName(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_AncestorName((BSTR*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall get_ImplFileName(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_ImplFileName((BSTR*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall get_IntfFileName(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_IntfFileName((BSTR*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall get_FormName(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_FormName((BSTR*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall get_MainForm(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->get_MainForm((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall get_ShowForm(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->get_ShowForm((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall get_ShowSource(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->get_ShowSource((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAFile* __fastcall NewFormFile(BSTR formIdent/*[in]*/, 
                                                                BSTR ancestorIdent/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::IOTAFile* pRetVal = 0;
    OLECHECK(this->NewFormFile(formIdent, ancestorIdent, (Borland_studio_toolsapi_tlb::IOTAFile**)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAFile* __fastcall NewImplSource(BSTR moduleIdent/*[in]*/, 
                                                                  BSTR formIdent/*[in]*/, 
                                                                  BSTR ancestorIdent/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::IOTAFile* pRetVal = 0;
    OLECHECK(this->NewImplSource(moduleIdent, formIdent, ancestorIdent, (Borland_studio_toolsapi_tlb::IOTAFile**)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAFile* __fastcall NewIntfSource(BSTR moduleIdent/*[in]*/, 
                                                                  BSTR formIdent/*[in]*/, 
                                                                  BSTR ancestorIdent/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::IOTAFile* pRetVal = 0;
    OLECHECK(this->NewIntfSource(moduleIdent, formIdent, ancestorIdent, (Borland_studio_toolsapi_tlb::IOTAFile**)&pRetVal));
    return pRetVal;
  }


  __property   BSTR            AncestorName = {read = get_AncestorName};
  __property   BSTR            ImplFileName = {read = get_ImplFileName};
  __property   BSTR            IntfFileName = {read = get_IntfFileName};
  __property   BSTR            FormName = {read = get_FormName};
  __property   VARIANT_BOOL    MainForm = {read = get_MainForm};
  __property   VARIANT_BOOL    ShowForm = {read = get_ShowForm};
  __property   VARIANT_BOOL    ShowSource = {read = get_ShowSource};

#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAProjectCreator
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {38429A28-66D0-4940-B2FD-A297C3432B58}
// *********************************************************************//
interface IOTAProjectCreator  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE get_fileName(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_ShowSource(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE NewProjectResource(Borland_studio_toolsapi_tlb::IOTAProject* project/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE NewProjectSource(BSTR projectName/*[in]*/, 
                                                     Borland_studio_toolsapi_tlb::IOTAFile** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE NewDefaultProjectModule(Borland_studio_toolsapi_tlb::IOTAProject* project/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_ProjectPersonality(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  BSTR __fastcall get_fileName(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_fileName((BSTR*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall get_ShowSource(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->get_ShowSource((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAFile* __fastcall NewProjectSource(BSTR projectName/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::IOTAFile* pRetVal = 0;
    OLECHECK(this->NewProjectSource(projectName, (Borland_studio_toolsapi_tlb::IOTAFile**)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall get_ProjectPersonality(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_ProjectPersonality((BSTR*)&pRetVal));
    return pRetVal;
  }


  __property   BSTR            fileName = {read = get_fileName};
  __property   VARIANT_BOOL    ShowSource = {read = get_ShowSource};
  __property   BSTR            ProjectPersonality = {read = get_ProjectPersonality};

#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAProjectGroupCreator
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E69578C5-1C1B-43C5-914C-9AAA7F953EDC}
// *********************************************************************//
interface IOTAProjectGroupCreator  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE get_fileName(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_ShowSource(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  BSTR __fastcall get_fileName(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_fileName((BSTR*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall get_ShowSource(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->get_ShowSource((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }


  __property   BSTR            fileName = {read = get_fileName};
  __property   VARIANT_BOOL    ShowSource = {read = get_ShowSource};

#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAActionService
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {97ECFDFB-0435-43D2-8270-A48D3C09290E}
// *********************************************************************//
interface IOTAActionService  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE CloseFile(BSTR fileName/*[in]*/, 
                                              VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE OpenFile(BSTR fileName/*[in]*/, 
                                             VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE OpenProject(BSTR projName/*[in]*/, 
                                                VARIANT_BOOL newProjGroup/*[in]*/, 
                                                VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE ReloadFile(BSTR fileName/*[in]*/, 
                                               VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE SaveFile(BSTR fileName/*[in]*/, 
                                             VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  VARIANT_BOOL __fastcall CloseFile(BSTR fileName/*[in]*/)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->CloseFile(fileName, (VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall OpenFile(BSTR fileName/*[in]*/)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->OpenFile(fileName, (VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall OpenProject(BSTR projName/*[in]*/, VARIANT_BOOL newProjGroup/*[in]*/)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->OpenProject(projName, newProjGroup, (VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall ReloadFile(BSTR fileName/*[in]*/)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->ReloadFile(fileName, (VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall SaveFile(BSTR fileName/*[in]*/)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->SaveFile(fileName, (VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAEditActions
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {27484E12-3BEB-4690-8258-E90EA1DC7436}
// *********************************************************************//
interface IOTAEditActions  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE AddWatch(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE AddWatchAtCursor(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE BrowseSymbolAtCursor(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE ClassComplete(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE ClassNavigate(unsigned_char reserved/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE ClosePage(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE CodeTemplate(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE CodeCompletion(Borland_studio_toolsapi_tlb::OTACodeCompleteStyle Style/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE EvaluateModify(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE helpKeyword(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE IncrementalSearch(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE InsertCompilerOptions(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE InsertNewGUID(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE InspectAtCursor(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE CompileProject(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE NextError(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE NextPage(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE OpenFile(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE OpenFileAtCursor(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE PriorError(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE PriorPage(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE ProgramReset(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE RunProgram(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE RunToCursor(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE SaveAll(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE Save(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE SaveAs(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE StepOver(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE SwapSourceFormView(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE SwapCPPHeader(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE ToggleFormUnit(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE TraceInto(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE TraceToSource(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE ViewExplorer(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE ViewForms(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE ViewObjectInspector(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE ViewUnits(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE WindowList(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE ZoomWindow(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE NextBufferView(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE PreviousBufferView(void) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAWizard
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {70E01074-3BD8-45AF-818C-9CB4CAD319CA}
// *********************************************************************//
interface IOTAWizard  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE get_IDString(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_Name(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE Execute(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE Destroyed(void) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  BSTR __fastcall get_IDString(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_IDString((BSTR*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall get_Name(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_Name((BSTR*)&pRetVal));
    return pRetVal;
  }


  __property   BSTR            IDString = {read = get_IDString};
  __property   BSTR            Name = {read = get_Name};

#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTARepositoryWizard
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {884D3988-3B45-43EA-A819-25FE09D00E19}
// *********************************************************************//
interface IOTARepositoryWizard  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE get_Author(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_Comment(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_Glyph(long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_Designer(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_GalleryCategory(Borland_studio_toolsapi_tlb::IOTAGalleryCategory** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_personality(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  BSTR __fastcall get_Author(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_Author((BSTR*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall get_Comment(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_Comment((BSTR*)&pRetVal));
    return pRetVal;
  }

  long __fastcall get_Glyph(void)
  {
    long pRetVal;
    OLECHECK(this->get_Glyph((long*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall get_Designer(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_Designer((BSTR*)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAGalleryCategoryPtr __fastcall get_GalleryCategory(void)
  {
    Borland_studio_toolsapi_tlb::IOTAGalleryCategoryPtr pRetVal;
    OLECHECK(this->get_GalleryCategory(&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall get_personality(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_personality((BSTR*)&pRetVal));
    return pRetVal;
  }


  __property   BSTR            Author = {read = get_Author};
  __property   BSTR            Comment = {read = get_Comment};
  __property   long            Glyph = {read = get_Glyph};
  __property   BSTR            Designer = {read = get_Designer};
  __property   Borland_studio_toolsapi_tlb::IOTAGalleryCategoryPtr GalleryCategory = {read = get_GalleryCategory};
  __property   BSTR            personality = {read = get_personality};

#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAGalleryCategory
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E89472D1-C318-41BE-9146-AF57EC667DB8}
// *********************************************************************//
interface IOTAGalleryCategory  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE get_DisplayName(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_IDString(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_parent(Borland_studio_toolsapi_tlb::IOTAGalleryCategory** pRetVal/*[out,retval]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  BSTR __fastcall get_DisplayName(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_DisplayName((BSTR*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall get_IDString(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_IDString((BSTR*)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAGalleryCategoryPtr __fastcall get_parent(void)
  {
    Borland_studio_toolsapi_tlb::IOTAGalleryCategoryPtr pRetVal;
    OLECHECK(this->get_parent(&pRetVal));
    return pRetVal;
  }


  __property   BSTR            DisplayName = {read = get_DisplayName};
  __property   BSTR            IDString = {read = get_IDString};
  __property   Borland_studio_toolsapi_tlb::IOTAGalleryCategoryPtr parent = {read = get_parent};

#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAGalleryCategoryManager
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EF79C413-F1DF-4EED-9A0D-2F1CA265EE25}
// *********************************************************************//
interface IOTAGalleryCategoryManager  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE FindCategory(BSTR IDString/*[in]*/, 
                                                 Borland_studio_toolsapi_tlb::IOTAGalleryCategory** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE AddCategory(BSTR IDString/*[in]*/, BSTR DisplayName/*[in]*/, 
                                                long iconHandle/*[in]*/, 
                                                Borland_studio_toolsapi_tlb::IOTAGalleryCategory** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE AddCategory_2(Borland_studio_toolsapi_tlb::IOTAGalleryCategory* parentCategory/*[in]*/, 
                                                  BSTR IDString/*[in]*/, BSTR DisplayName/*[in]*/, 
                                                  long iconHandle/*[in]*/, 
                                                  Borland_studio_toolsapi_tlb::IOTAGalleryCategory** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE DeleteCategory(Borland_studio_toolsapi_tlb::IOTAGalleryCategory* category/*[in]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  Borland_studio_toolsapi_tlb::IOTAGalleryCategory* __fastcall FindCategory(BSTR IDString/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::IOTAGalleryCategory* pRetVal = 0;
    OLECHECK(this->FindCategory(IDString, (Borland_studio_toolsapi_tlb::IOTAGalleryCategory**)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAGalleryCategory* __fastcall AddCategory(BSTR IDString/*[in]*/, 
                                                                           BSTR DisplayName/*[in]*/, 
                                                                           long iconHandle/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::IOTAGalleryCategory* pRetVal = 0;
    OLECHECK(this->AddCategory(IDString, DisplayName, iconHandle, (Borland_studio_toolsapi_tlb::IOTAGalleryCategory**)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAGalleryCategory* __fastcall AddCategory_2(Borland_studio_toolsapi_tlb::IOTAGalleryCategory* parentCategory/*[in]*/, 
                                                                             BSTR IDString/*[in]*/, 
                                                                             BSTR DisplayName/*[in]*/, 
                                                                             long iconHandle/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::IOTAGalleryCategory* pRetVal = 0;
    OLECHECK(this->AddCategory_2(parentCategory, IDString, DisplayName, iconHandle, (Borland_studio_toolsapi_tlb::IOTAGalleryCategory**)&pRetVal));
    return pRetVal;
  }



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAFormWizard
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {02FE97B0-94F7-470F-8B67-1B89EFA26FC4}
// *********************************************************************//
interface IOTAFormWizard  : public IDispatch
{
public:

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAProjectWizard
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3C107A3B-2E7D-4700-9CE4-9767B1D2FE00}
// *********************************************************************//
interface IOTAProjectWizard  : public IDispatch
{
public:

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAMenuWizard
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EE481221-0047-44FB-929A-38664AF42749}
// *********************************************************************//
interface IOTAMenuWizard  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE get_MenuText(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_Enabled(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_Checked(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  BSTR __fastcall get_MenuText(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_MenuText((BSTR*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall get_Enabled(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->get_Enabled((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall get_Checked(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->get_Checked((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }


  __property   BSTR            MenuText = {read = get_MenuText};
  __property   VARIANT_BOOL    Enabled = {read = get_Enabled};
  __property   VARIANT_BOOL    Checked = {read = get_Checked};

#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAWizardService
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {935F3EA1-EFD6-4901-8138-2415F6AD1C3D}
// *********************************************************************//
interface IOTAWizardService  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE AddWizard(Borland_studio_toolsapi_tlb::IOTAWizard* wizard/*[in]*/, 
                                              long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE RemoveWizard(long index/*[in]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  long __fastcall AddWizard(Borland_studio_toolsapi_tlb::IOTAWizard* wizard/*[in]*/)
  {
    long pRetVal;
    OLECHECK(this->AddWizard(wizard, (long*)&pRetVal));
    return pRetVal;
  }



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAAboutBoxService
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5C01B0EE-E660-4474-8B18-3676F20006AC}
// *********************************************************************//
interface IOTAAboutBoxService  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE AddPluginInfo(BSTR title/*[in]*/, BSTR description/*[in]*/, 
                                                  long aboutImageHandle/*[in]*/, 
                                                  VARIANT_BOOL isUnRegistered/*[in]*/, 
                                                  BSTR licenseStatus/*[in]*/, BSTR skuName/*[in]*/, 
                                                  long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE AddProductInfo(BSTR dialogTitle/*[in]*/, BSTR copyright/*[in]*/, 
                                                   BSTR title/*[in]*/, BSTR description/*[in]*/, 
                                                   long aboutImageHandle/*[in]*/, 
                                                   long productImageHandle/*[in]*/, 
                                                   VARIANT_BOOL isUnRegistered/*[in]*/, 
                                                   BSTR licenseStatus/*[in]*/, BSTR skuName/*[in]*/, 
                                                   long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE RemovePluginInfo(long index/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE RemoveProductInfo(long index/*[in]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  long __fastcall AddPluginInfo(BSTR title/*[in]*/, BSTR description/*[in]*/, 
                                long aboutImageHandle/*[in]*/, VARIANT_BOOL isUnRegistered/*[in]*/, 
                                BSTR licenseStatus/*[in]*/, BSTR skuName/*[in]*/)
  {
    long pRetVal;
    OLECHECK(this->AddPluginInfo(title, description, aboutImageHandle, isUnRegistered, licenseStatus, 
                                 skuName, (long*)&pRetVal));
    return pRetVal;
  }

  long __fastcall AddProductInfo(BSTR dialogTitle/*[in]*/, BSTR copyright/*[in]*/, 
                                 BSTR title/*[in]*/, BSTR description/*[in]*/, 
                                 long aboutImageHandle/*[in]*/, long productImageHandle/*[in]*/, 
                                 VARIANT_BOOL isUnRegistered/*[in]*/, BSTR licenseStatus/*[in]*/, 
                                 BSTR skuName/*[in]*/)
  {
    long pRetVal;
    OLECHECK(this->AddProductInfo(dialogTitle, copyright, title, description, aboutImageHandle, 
                                  productImageHandle, isUnRegistered, licenseStatus, skuName, (long*)&pRetVal));
    return pRetVal;
  }



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTASplashScreenService
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2550066E-CF92-475E-8C27-EBDC6CEFB3D8}
// *********************************************************************//
interface IOTASplashScreenService  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE AddPluginBitmap(BSTR Caption/*[in]*/, long bitmapHandle/*[in]*/, 
                                                    VARIANT_BOOL isUnRegistered/*[in]*/, 
                                                    BSTR licenseStatus/*[in]*/, BSTR skuName/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE AddProductBitmap(BSTR Caption/*[in]*/, long bitmapHandle/*[in]*/, 
                                                     VARIANT_BOOL isUnRegistered/*[in]*/, 
                                                     BSTR licenseStatus/*[in]*/, 
                                                     BSTR skuName/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE ShowProductSplash(long bitmapHandle/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE StatusMessage(BSTR StatusMessage/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE SetProductIcon(long iconHandle/*[in]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAPersonalityService
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {62198A9F-790C-4A0C-818B-CFC561E2E73B}
// *********************************************************************//
interface IOTAPersonalityService  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE get_CurrentPersonality(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE set_CurrentPersonality(BSTR pRetVal/*[in]*/) = 0; // [1610743808]
  virtual HRESULT STDMETHODCALLTYPE get_PersonalityCount(long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetPersonality(long index/*[in]*/, BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetFilePersonality(BSTR fileName/*[in]*/, 
                                                       BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE PersonalityExists(BSTR personality/*[in]*/, 
                                                      VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  BSTR __fastcall get_CurrentPersonality(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_CurrentPersonality((BSTR*)&pRetVal));
    return pRetVal;
  }

  long __fastcall get_PersonalityCount(void)
  {
    long pRetVal;
    OLECHECK(this->get_PersonalityCount((long*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall GetPersonality(long index/*[in]*/)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->GetPersonality(index, (BSTR*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall GetFilePersonality(BSTR fileName/*[in]*/)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->GetFilePersonality(fileName, (BSTR*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall PersonalityExists(BSTR personality/*[in]*/)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->PersonalityExists(personality, (VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }


  __property   BSTR            CurrentPersonality = {read = get_CurrentPersonality, write = set_CurrentPersonality};
  __property   long            PersonalityCount = {read = get_PersonalityCount};

#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: _OTAFile
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {DA5701D3-B903-34AC-8112-9D457013E8DF}
// *********************************************************************//
interface _OTAFile  : public IDispatch
{
public:

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAAlignable
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1664F3A1-00B8-4349-A96E-99C678F9BE96}
// *********************************************************************//
interface IOTAAlignable  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE Align(Borland_studio_toolsapi_tlb::OTAAffect Affect/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE Size(Borland_studio_toolsapi_tlb::OTASizeAffect Affect/*[in]*/, 
                                         long value/*[in]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAAlignableState
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BF5AE0B5-0715-4EC7-BFA5-3922E10EDF3C}
// *********************************************************************//
interface IOTAAlignableState  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE GetAlignAffectState(Borland_studio_toolsapi_tlb::OTAAffect Affect/*[in]*/, 
                                                        Borland_studio_toolsapi_tlb::OTAAlignableState* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetSizeAffectState(Borland_studio_toolsapi_tlb::OTASizeAffect Affect/*[in]*/, 
                                                       Borland_studio_toolsapi_tlb::OTAAlignableState* pRetVal/*[out,retval]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  Borland_studio_toolsapi_tlb::OTAAlignableState __fastcall GetAlignAffectState(Borland_studio_toolsapi_tlb::OTAAffect Affect/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::OTAAlignableState pRetVal;
    OLECHECK(this->GetAlignAffectState(Affect, (Borland_studio_toolsapi_tlb::OTAAlignableState*)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::OTAAlignableState __fastcall GetSizeAffectState(Borland_studio_toolsapi_tlb::OTASizeAffect Affect/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::OTAAlignableState pRetVal;
    OLECHECK(this->GetSizeAffectState(Affect, (Borland_studio_toolsapi_tlb::OTAAlignableState*)&pRetVal));
    return pRetVal;
  }



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAScaleable
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CBC39180-2D51-4E37-A019-E57866309C93}
// *********************************************************************//
interface IOTAScaleable  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE Scale(long Factor/*[in]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTATabOrderable
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1C7AD430-314E-3588-A9F5-996EFFD05989}
// *********************************************************************//
interface IOTATabOrderable  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE GetTabCompCount(long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetTabCompInfo(long Order/*[in]*/, BSTR* Name/*[out]*/, 
                                                   BSTR* className/*[out]*/, VARIANT* Comp/*[out]*/, 
                                                   VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE SetTabCompOrder(VARIANT Comp/*[in]*/, long Order/*[in]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  long __fastcall GetTabCompCount(void)
  {
    long pRetVal;
    OLECHECK(this->GetTabCompCount((long*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall GetTabCompInfo(long Order/*[in]*/, BSTR* Name/*[out]*/, 
                                         BSTR* className/*[out]*/, VARIANT* Comp/*[out]*/)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->GetTabCompInfo(Order, Name, className, Comp, (VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTACreateOrderable
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C92C0E94-A709-4708-8673-D26C35D0C749}
// *********************************************************************//
interface IOTACreateOrderable  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE GetCompCount(long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetCompName(long index/*[in]*/, BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetCompType(long index/*[in]*/, BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetNVComp(long index/*[in]*/, VARIANT* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE SetNVComp(VARIANT Comp/*[in]*/, long Order/*[in]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  long __fastcall GetCompCount(void)
  {
    long pRetVal;
    OLECHECK(this->GetCompCount((long*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall GetCompName(long index/*[in]*/)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->GetCompName(index, (BSTR*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall GetCompType(long index/*[in]*/)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->GetCompType(index, (BSTR*)&pRetVal));
    return pRetVal;
  }

  VARIANT __fastcall GetNVComp(long index/*[in]*/)
  {
    VARIANT pRetVal;
    OLECHECK(this->GetNVComp(index, (VARIANT*)&pRetVal));
    return pRetVal;
  }



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: INTAComponent
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3E9354E0-66E8-46A3-B24F-9CBBBE7FA7EA}
// *********************************************************************//
interface INTAComponent  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE GetPersistent(Mscorlib_tlb::_MarshalByRefObject** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetComponent(System_tlb::_Component** pRetVal/*[out,retval]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  Mscorlib_tlb::_MarshalByRefObject* __fastcall GetPersistent(void)
  {
    Mscorlib_tlb::_MarshalByRefObject* pRetVal = 0;
    OLECHECK(this->GetPersistent((Mscorlib_tlb::_MarshalByRefObject**)&pRetVal));
    return pRetVal;
  }

  System_tlb::_Component* __fastcall GetComponent(void)
  {
    System_tlb::_Component* pRetVal = 0;
    OLECHECK(this->GetComponent((System_tlb::_Component**)&pRetVal));
    return pRetVal;
  }



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAGetChildCallback
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {28A28BA8-B900-4049-9C49-76086941DEE3}
// *********************************************************************//
interface IOTAGetChildCallback  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE ChildCallback(VARIANT Param/*[in]*/, 
                                                  Borland_studio_toolsapi_tlb::IOTAComponent* component/*[in]*/, 
                                                  VARIANT_BOOL* result/*[in,out]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: _TOTAGetChildCallback
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {D430F0B5-180B-305A-B1C1-C17006C1884E}
// *********************************************************************//
interface _TOTAGetChildCallback  : public IDispatch
{
public:

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAComponent
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7F55A081-3BFF-413B-88BF-7E4165F9D136}
// *********************************************************************//
interface IOTAComponent  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE GetComponentType(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetComponentHandle(Borland_studio_toolsapi_tlb::_TOTAHandle** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetParent(Borland_studio_toolsapi_tlb::IOTAComponent** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE IsTControl(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetPropCount(long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetPropName(long index/*[in]*/, BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetPropType(long index/*[in]*/, 
                                                Borland_studio_toolsapi_tlb::OTATypeKind* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetPropTypeByName(BSTR Name/*[in]*/, 
                                                      Borland_studio_toolsapi_tlb::OTATypeKind* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetPropValue(long index/*[in]*/, VARIANT* value/*[out]*/, 
                                                 VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetPropValueByName(BSTR Name/*[in]*/, VARIANT* value/*[out]*/, 
                                                       VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE SetProp(long index/*[in]*/, VARIANT value/*[in]*/, 
                                            VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE SetPropByName(BSTR Name/*[in]*/, VARIANT value/*[in]*/, 
                                                  VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetChildren(VARIANT Param/*[in]*/, 
                                                Borland_studio_toolsapi_tlb::_TOTAGetChildCallback* CallBack/*[in]*/, 
                                                VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetChildren_2(VARIANT Param/*[in]*/, 
                                                  Borland_studio_toolsapi_tlb::IOTAGetChildCallback* CallBack/*[in]*/, 
                                                  VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetControlCount(long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetControl(long index/*[in]*/, 
                                               Borland_studio_toolsapi_tlb::IOTAComponent** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetComponentCount(long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetComponent(long index/*[in]*/, 
                                                 Borland_studio_toolsapi_tlb::IOTAComponent** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE Select(VARIANT_BOOL AddToSelection/*[in]*/, 
                                           VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE Focus(VARIANT_BOOL AddToSelection/*[in]*/, 
                                          VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE Delete(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  BSTR __fastcall GetComponentType(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->GetComponentType((BSTR*)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::_TOTAHandle* __fastcall GetComponentHandle(void)
  {
    Borland_studio_toolsapi_tlb::_TOTAHandle* pRetVal = 0;
    OLECHECK(this->GetComponentHandle((Borland_studio_toolsapi_tlb::_TOTAHandle**)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAComponent* __fastcall GetParent(void)
  {
    Borland_studio_toolsapi_tlb::IOTAComponent* pRetVal = 0;
    OLECHECK(this->GetParent((Borland_studio_toolsapi_tlb::IOTAComponent**)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall IsTControl(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->IsTControl((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  long __fastcall GetPropCount(void)
  {
    long pRetVal;
    OLECHECK(this->GetPropCount((long*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall GetPropName(long index/*[in]*/)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->GetPropName(index, (BSTR*)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::OTATypeKind __fastcall GetPropType(long index/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::OTATypeKind pRetVal;
    OLECHECK(this->GetPropType(index, (Borland_studio_toolsapi_tlb::OTATypeKind*)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::OTATypeKind __fastcall GetPropTypeByName(BSTR Name/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::OTATypeKind pRetVal;
    OLECHECK(this->GetPropTypeByName(Name, (Borland_studio_toolsapi_tlb::OTATypeKind*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall GetPropValue(long index/*[in]*/, VARIANT* value/*[out]*/)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->GetPropValue(index, value, (VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall GetPropValueByName(BSTR Name/*[in]*/, VARIANT* value/*[out]*/)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->GetPropValueByName(Name, value, (VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall SetProp(long index/*[in]*/, VARIANT value/*[in]*/)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->SetProp(index, value, (VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall SetPropByName(BSTR Name/*[in]*/, VARIANT value/*[in]*/)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->SetPropByName(Name, value, (VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall GetChildren(VARIANT Param/*[in]*/, 
                                      Borland_studio_toolsapi_tlb::_TOTAGetChildCallback* CallBack/*[in]*/)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->GetChildren(Param, CallBack, (VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall GetChildren_2(VARIANT Param/*[in]*/, 
                                        Borland_studio_toolsapi_tlb::IOTAGetChildCallback* CallBack/*[in]*/)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->GetChildren_2(Param, CallBack, (VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  long __fastcall GetControlCount(void)
  {
    long pRetVal;
    OLECHECK(this->GetControlCount((long*)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAComponent* __fastcall GetControl(long index/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::IOTAComponent* pRetVal = 0;
    OLECHECK(this->GetControl(index, (Borland_studio_toolsapi_tlb::IOTAComponent**)&pRetVal));
    return pRetVal;
  }

  long __fastcall GetComponentCount(void)
  {
    long pRetVal;
    OLECHECK(this->GetComponentCount((long*)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAComponent* __fastcall GetComponent(long index/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::IOTAComponent* pRetVal = 0;
    OLECHECK(this->GetComponent(index, (Borland_studio_toolsapi_tlb::IOTAComponent**)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall Select(VARIANT_BOOL AddToSelection/*[in]*/)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->Select(AddToSelection, (VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall Focus(VARIANT_BOOL AddToSelection/*[in]*/)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->Focus(AddToSelection, (VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall Delete(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->Delete((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: _ComponentRenamedEventArgs
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {71BFFDFE-3B56-31B1-9091-D829DFC1CE9A}
// *********************************************************************//
interface _ComponentRenamedEventArgs  : public IDispatch
{
public:

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: _ComponentRenamedEventHandler
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {A4866255-ADA6-3784-BE76-B0ED000FDA61}
// *********************************************************************//
interface _ComponentRenamedEventHandler  : public IDispatch
{
public:

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAFormEditor
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C9A9D6FC-89B7-40E2-BC64-8797E748EF6E}
// *********************************************************************//
interface IOTAFormEditor  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE add_FormActivated(Mscorlib_tlb::_EventHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE remove_FormActivated(Mscorlib_tlb::_EventHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE add_FormSaving(Mscorlib_tlb::_EventHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE remove_FormSaving(Mscorlib_tlb::_EventHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE add_ComponentRenamed(Borland_studio_toolsapi_tlb::_ComponentRenamedEventHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE remove_ComponentRenamed(Borland_studio_toolsapi_tlb::_ComponentRenamedEventHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetRootComponent(Borland_studio_toolsapi_tlb::IOTAComponent** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE FindComponent(BSTR Name/*[in]*/, 
                                                  Borland_studio_toolsapi_tlb::IOTAComponent** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetComponentFromHandle(Borland_studio_toolsapi_tlb::_TOTAHandle* ComponentHandle/*[in]*/, 
                                                           Borland_studio_toolsapi_tlb::IOTAComponent** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetSelCount(long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetSelComponent(long index/*[in]*/, 
                                                    Borland_studio_toolsapi_tlb::IOTAComponent** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetCreateParent(Borland_studio_toolsapi_tlb::IOTAComponent** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE CreateComponent(Borland_studio_toolsapi_tlb::IOTAComponent* Container/*[in]*/, 
                                                    BSTR TypeName/*[in]*/, long X/*[in]*/, 
                                                    long Y/*[in]*/, long W/*[in]*/, long H/*[in]*/, 
                                                    Borland_studio_toolsapi_tlb::IOTAComponent** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetFormResource(Mscorlib_tlb::_Stream* Stream/*[in]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  Borland_studio_toolsapi_tlb::IOTAComponent* __fastcall GetRootComponent(void)
  {
    Borland_studio_toolsapi_tlb::IOTAComponent* pRetVal = 0;
    OLECHECK(this->GetRootComponent((Borland_studio_toolsapi_tlb::IOTAComponent**)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAComponent* __fastcall FindComponent(BSTR Name/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::IOTAComponent* pRetVal = 0;
    OLECHECK(this->FindComponent(Name, (Borland_studio_toolsapi_tlb::IOTAComponent**)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAComponent* __fastcall GetComponentFromHandle(Borland_studio_toolsapi_tlb::_TOTAHandle* ComponentHandle/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::IOTAComponent* pRetVal = 0;
    OLECHECK(this->GetComponentFromHandle(ComponentHandle, (Borland_studio_toolsapi_tlb::IOTAComponent**)&pRetVal));
    return pRetVal;
  }

  long __fastcall GetSelCount(void)
  {
    long pRetVal;
    OLECHECK(this->GetSelCount((long*)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAComponent* __fastcall GetSelComponent(long index/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::IOTAComponent* pRetVal = 0;
    OLECHECK(this->GetSelComponent(index, (Borland_studio_toolsapi_tlb::IOTAComponent**)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAComponent* __fastcall GetCreateParent(void)
  {
    Borland_studio_toolsapi_tlb::IOTAComponent* pRetVal = 0;
    OLECHECK(this->GetCreateParent((Borland_studio_toolsapi_tlb::IOTAComponent**)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAComponent* __fastcall CreateComponent(Borland_studio_toolsapi_tlb::IOTAComponent* Container/*[in]*/, 
                                                                         BSTR TypeName/*[in]*/, 
                                                                         long X/*[in]*/, 
                                                                         long Y/*[in]*/, 
                                                                         long W/*[in]*/, 
                                                                         long H/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::IOTAComponent* pRetVal = 0;
    OLECHECK(this->CreateComponent(Container, TypeName, X, Y, W, H, (Borland_studio_toolsapi_tlb::IOTAComponent**)&pRetVal));
    return pRetVal;
  }



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: INTAFormEditor
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7ED77880-2D26-353E-A990-FF62FD0D7020}
// *********************************************************************//
interface INTAFormEditor  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE GetFormResource(VARIANT Stream/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_FormDesigner(VARIANT* pRetVal/*[out,retval]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  VARIANT __fastcall get_FormDesigner(void)
  {
    VARIANT pRetVal;
    OLECHECK(this->get_FormDesigner((VARIANT*)&pRetVal));
    return pRetVal;
  }



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAStreamModifyTime
// Flags:     (256) OleAutomation
// GUID:      {460BB23E-67BC-48FA-B630-6CCC4DA73F88}
// *********************************************************************//
interface IOTAStreamModifyTime  : public IUnknown
{
public:
  virtual HRESULT STDMETHODCALLTYPE GetModifyTime(long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE SetModifyTime(long Time/*[in]*/) = 0; // [-1]
};

// *********************************************************************//
// Interface: IOTAFileFilter
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8346A98D-E405-4BD6-A0A6-91B701DD6BB5}
// *********************************************************************//
interface IOTAFileFilter  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE GetStream(BSTR AFileName/*[in]*/, 
                                              Mscorlib_tlb::_Stream* AStream/*[in]*/, 
                                              Mscorlib_tlb::_Stream** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE HandleStream(BSTR AFileName/*[in]*/, 
                                                 Mscorlib_tlb::_Stream* AStream/*[in]*/, 
                                                 VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_DisplayName(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_IDString(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  Mscorlib_tlb::_Stream* __fastcall GetStream(BSTR AFileName/*[in]*/, 
                                              Mscorlib_tlb::_Stream* AStream/*[in]*/)
  {
    Mscorlib_tlb::_Stream* pRetVal = 0;
    OLECHECK(this->GetStream(AFileName, AStream, (Mscorlib_tlb::_Stream**)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall HandleStream(BSTR AFileName/*[in]*/, 
                                       Mscorlib_tlb::_Stream* AStream/*[in]*/)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->HandleStream(AFileName, AStream, (VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall get_DisplayName(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_DisplayName((BSTR*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall get_IDString(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_IDString((BSTR*)&pRetVal));
    return pRetVal;
  }


  __property   BSTR            DisplayName = {read = get_DisplayName};
  __property   BSTR            IDString = {read = get_IDString};

#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAFileSystem
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3FA129A8-AD94-4606-91FD-95E2DBCB5BD7}
// *********************************************************************//
interface IOTAFileSystem  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE GetFileStream(BSTR fileName/*[in]*/, long Mode/*[in]*/, 
                                                  Mscorlib_tlb::_Stream** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE FileAge(BSTR fileName/*[in]*/, long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE RenameFile(BSTR OldName/*[in]*/, BSTR NewName/*[in]*/, 
                                               VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE IsReadOnly(BSTR fileName/*[in]*/, 
                                               VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE IsFileBased(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE DeleteFile(BSTR fileName/*[in]*/, 
                                               VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE FileExists(BSTR fileName/*[in]*/, 
                                               VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetTempFileName(BSTR fileName/*[in]*/, 
                                                    BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetBackupFileName(BSTR fileName/*[in]*/, 
                                                      BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetIDString(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetFilter(Borland_studio_toolsapi_tlb::IOTAFileFilter** pRetVal/*[out,retval]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  Mscorlib_tlb::_Stream* __fastcall GetFileStream(BSTR fileName/*[in]*/, long Mode/*[in]*/)
  {
    Mscorlib_tlb::_Stream* pRetVal = 0;
    OLECHECK(this->GetFileStream(fileName, Mode, (Mscorlib_tlb::_Stream**)&pRetVal));
    return pRetVal;
  }

  long __fastcall FileAge(BSTR fileName/*[in]*/)
  {
    long pRetVal;
    OLECHECK(this->FileAge(fileName, (long*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall RenameFile(BSTR OldName/*[in]*/, BSTR NewName/*[in]*/)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->RenameFile(OldName, NewName, (VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall IsReadOnly(BSTR fileName/*[in]*/)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->IsReadOnly(fileName, (VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall IsFileBased(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->IsFileBased((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall DeleteFile(BSTR fileName/*[in]*/)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->DeleteFile(fileName, (VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall FileExists(BSTR fileName/*[in]*/)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->FileExists(fileName, (VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall GetTempFileName(BSTR fileName/*[in]*/)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->GetTempFileName(fileName, (BSTR*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall GetBackupFileName(BSTR fileName/*[in]*/)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->GetBackupFileName(fileName, (BSTR*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall GetIDString(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->GetIDString((BSTR*)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAFileFilter* __fastcall GetFilter(void)
  {
    Borland_studio_toolsapi_tlb::IOTAFileFilter* pRetVal = 0;
    OLECHECK(this->GetFilter((Borland_studio_toolsapi_tlb::IOTAFileFilter**)&pRetVal));
    return pRetVal;
  }



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: INTAPalettePaintIcon
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {18544EF7-B617-4225-9FD7-31FEFB77861E}
// *********************************************************************//
interface INTAPalettePaintIcon  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE Paint(LPUNKNOWN graphics/*[in]*/, long X/*[in]*/, long Y/*[in]*/, 
                                          Borland_studio_toolsapi_tlb::NTAPaintIconSize iconSize/*[in]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAPaletteDragAcceptor
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {971ABE7B-ED20-476B-9E96-CBA792B87BF2}
// *********************************************************************//
interface IOTAPaletteDragAcceptor  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE get_Handle(long* pRetVal/*[out,retval]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  long __fastcall get_Handle(void)
  {
    long pRetVal;
    OLECHECK(this->get_Handle((long*)&pRetVal));
    return pRetVal;
  }


  __property   long            Handle = {read = get_Handle};

#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTADesignerDragAcceptor
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E79FE430-EFE0-4C54-AB09-103124344394}
// *********************************************************************//
interface IOTADesignerDragAcceptor  : public IDispatch
{
public:

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTACodeEditorDragAcceptor
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3BF605F3-4634-4CA7-9C72-8AC9AF350B05}
// *********************************************************************//
interface IOTACodeEditorDragAcceptor  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE get_EditorControl(long* pRetVal/*[out,retval]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  long __fastcall get_EditorControl(void)
  {
    long pRetVal;
    OLECHECK(this->get_EditorControl((long*)&pRetVal));
    return pRetVal;
  }


  __property   long            EditorControl = {read = get_EditorControl};

#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAPaletteDragDropOp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FE6AE3E9-F514-4CD7-BFD9-21CAD6FB42AA}
// *********************************************************************//
interface IOTAPaletteDragDropOp  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE DragOver(Borland_studio_toolsapi_tlb::IOTAPaletteDragAcceptor* target/*[in]*/, 
                                             long X/*[in]*/, long Y/*[in]*/, 
                                             Borland_studio_toolsapi_tlb::PalDragState state/*[in]*/, 
                                             VARIANT_BOOL* accept/*[in,out]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE DragDrop(Borland_studio_toolsapi_tlb::IOTAPaletteDragAcceptor* target/*[in]*/, 
                                             long X/*[in]*/, long Y/*[in]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTABasePaletteItem
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {91097078-4B81-47DC-A4DB-569EA5AC7194}
// *********************************************************************//
interface IOTABasePaletteItem  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE get_CanDelete(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_HelpName(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE set_HelpName(BSTR pRetVal/*[in]*/) = 0; // [1610743809]
  virtual HRESULT STDMETHODCALLTYPE get_hintText(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE set_hintText(BSTR pRetVal/*[in]*/) = 0; // [1610743811]
  virtual HRESULT STDMETHODCALLTYPE get_IDString(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_Name(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE set_Name(BSTR pRetVal/*[in]*/) = 0; // [1610743814]
  virtual HRESULT STDMETHODCALLTYPE get_Visible(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE set_Visible(VARIANT_BOOL pRetVal/*[in]*/) = 0; // [1610743816]
  virtual HRESULT STDMETHODCALLTYPE Execute(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE Delete(void) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  VARIANT_BOOL __fastcall get_CanDelete(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->get_CanDelete((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall get_HelpName(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_HelpName((BSTR*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall get_hintText(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_hintText((BSTR*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall get_IDString(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_IDString((BSTR*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall get_Name(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_Name((BSTR*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall get_Visible(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->get_Visible((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }


  __property   VARIANT_BOOL    CanDelete = {read = get_CanDelete};
  __property   BSTR            HelpName = {read = get_HelpName, write = set_HelpName};
  __property   BSTR            hintText = {read = get_hintText, write = set_hintText};
  __property   BSTR            IDString = {read = get_IDString};
  __property   BSTR            Name = {read = get_Name, write = set_Name};
  __property   VARIANT_BOOL    Visible = {read = get_Visible, write = set_Visible};

#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAComponentPaletteItem
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7B7807E5-9C1A-4140-86DB-BF47B3B52FE3}
// *********************************************************************//
interface IOTAComponentPaletteItem  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE get_PackageName(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE set_PackageName(BSTR pRetVal/*[in]*/) = 0; // [1610743808]
  virtual HRESULT STDMETHODCALLTYPE get_className(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE set_className(BSTR pRetVal/*[in]*/) = 0; // [1610743810]
  virtual HRESULT STDMETHODCALLTYPE get_UnitName(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE set_UnitName(BSTR pRetVal/*[in]*/) = 0; // [1610743812]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  BSTR __fastcall get_PackageName(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_PackageName((BSTR*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall get_className(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_className((BSTR*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall get_UnitName(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_UnitName((BSTR*)&pRetVal));
    return pRetVal;
  }


  __property   BSTR            PackageName = {read = get_PackageName, write = set_PackageName};
  __property   BSTR            className = {read = get_className, write = set_className};
  __property   BSTR            UnitName = {read = get_UnitName, write = set_UnitName};

#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAPaletteGroup
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2900C9C3-3F4C-441C-BD46-995239F812C5}
// *********************************************************************//
interface IOTAPaletteGroup  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE get_Count(long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetItem(long index/*[in]*/, 
                                            Borland_studio_toolsapi_tlb::IOTABasePaletteItem** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE AddGroup(BSTR Name/*[in]*/, BSTR IDString/*[in]*/, 
                                             Borland_studio_toolsapi_tlb::IOTAPaletteGroup** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE AddItem(Borland_studio_toolsapi_tlb::IOTABasePaletteItem* Item/*[in]*/, 
                                            long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE Clear(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE FindItem(BSTR IDString/*[in]*/, VARIANT_BOOL recurse/*[in]*/, 
                                             Borland_studio_toolsapi_tlb::IOTABasePaletteItem** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE FindItemByName(BSTR Name/*[in]*/, VARIANT_BOOL recurse/*[in]*/, 
                                                   Borland_studio_toolsapi_tlb::IOTABasePaletteItem** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE FindItemGroup(BSTR IDString/*[in]*/, 
                                                  Borland_studio_toolsapi_tlb::IOTAPaletteGroup** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE FindItemGroupByName(BSTR Name/*[in]*/, 
                                                        Borland_studio_toolsapi_tlb::IOTAPaletteGroup** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE InsertItem(long index/*[in]*/, 
                                               Borland_studio_toolsapi_tlb::IOTABasePaletteItem* Item/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE IndexOf(Borland_studio_toolsapi_tlb::IOTABasePaletteItem* Item/*[in]*/, 
                                            long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE Move(long CurIndex/*[in]*/, long NewIndex/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE RemoveItem(BSTR IDString/*[in]*/, VARIANT_BOOL recurse/*[in]*/, 
                                               VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  long __fastcall get_Count(void)
  {
    long pRetVal;
    OLECHECK(this->get_Count((long*)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTABasePaletteItem* __fastcall GetItem(long index/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::IOTABasePaletteItem* pRetVal = 0;
    OLECHECK(this->GetItem(index, (Borland_studio_toolsapi_tlb::IOTABasePaletteItem**)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAPaletteGroup* __fastcall AddGroup(BSTR Name/*[in]*/, 
                                                                     BSTR IDString/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::IOTAPaletteGroup* pRetVal = 0;
    OLECHECK(this->AddGroup(Name, IDString, (Borland_studio_toolsapi_tlb::IOTAPaletteGroup**)&pRetVal));
    return pRetVal;
  }

  long __fastcall AddItem(Borland_studio_toolsapi_tlb::IOTABasePaletteItem* Item/*[in]*/)
  {
    long pRetVal;
    OLECHECK(this->AddItem(Item, (long*)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTABasePaletteItem* __fastcall FindItem(BSTR IDString/*[in]*/, 
                                                                        VARIANT_BOOL recurse/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::IOTABasePaletteItem* pRetVal = 0;
    OLECHECK(this->FindItem(IDString, recurse, (Borland_studio_toolsapi_tlb::IOTABasePaletteItem**)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTABasePaletteItem* __fastcall FindItemByName(BSTR Name/*[in]*/, 
                                                                              VARIANT_BOOL recurse/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::IOTABasePaletteItem* pRetVal = 0;
    OLECHECK(this->FindItemByName(Name, recurse, (Borland_studio_toolsapi_tlb::IOTABasePaletteItem**)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAPaletteGroup* __fastcall FindItemGroup(BSTR IDString/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::IOTAPaletteGroup* pRetVal = 0;
    OLECHECK(this->FindItemGroup(IDString, (Borland_studio_toolsapi_tlb::IOTAPaletteGroup**)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAPaletteGroup* __fastcall FindItemGroupByName(BSTR Name/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::IOTAPaletteGroup* pRetVal = 0;
    OLECHECK(this->FindItemGroupByName(Name, (Borland_studio_toolsapi_tlb::IOTAPaletteGroup**)&pRetVal));
    return pRetVal;
  }

  long __fastcall IndexOf(Borland_studio_toolsapi_tlb::IOTABasePaletteItem* Item/*[in]*/)
  {
    long pRetVal;
    OLECHECK(this->IndexOf(Item, (long*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall RemoveItem(BSTR IDString/*[in]*/, VARIANT_BOOL recurse/*[in]*/)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->RemoveItem(IDString, recurse, (VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }


  __property   long            Count = {read = get_Count};

#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAPaletteColorScheme
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D449A0A3-BCCC-4D7D-9BCD-7F86183AE09C}
// *********************************************************************//
interface IOTAPaletteColorScheme  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE get_ButtonColors(Borland_studio_toolsapi_tlb::OTAPaletteButtonColors* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetColor(long index/*[in]*/, 
                                             Borland_studio_toolsapi_tlb::OTAPaletteColorItem* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_Count(long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_IDString(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_Name(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  Borland_studio_toolsapi_tlb::OTAPaletteButtonColors __fastcall get_ButtonColors(void)
  {
    Borland_studio_toolsapi_tlb::OTAPaletteButtonColors pRetVal;
    OLECHECK(this->get_ButtonColors((Borland_studio_toolsapi_tlb::OTAPaletteButtonColors*)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::OTAPaletteColorItem __fastcall GetColor(long index/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::OTAPaletteColorItem pRetVal;
    OLECHECK(this->GetColor(index, (Borland_studio_toolsapi_tlb::OTAPaletteColorItem*)&pRetVal));
    return pRetVal;
  }

  long __fastcall get_Count(void)
  {
    long pRetVal;
    OLECHECK(this->get_Count((long*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall get_IDString(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_IDString((BSTR*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall get_Name(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_Name((BSTR*)&pRetVal));
    return pRetVal;
  }


  __property   Borland_studio_toolsapi_tlb::OTAPaletteButtonColors ButtonColors = {read = get_ButtonColors};
  __property   long            Count = {read = get_Count};
  __property   BSTR            IDString = {read = get_IDString};
  __property   BSTR            Name = {read = get_Name};

#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: _ItemEventArgs
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {695DA742-994C-3BA7-8C80-6FB078C1F9DD}
// *********************************************************************//
interface _ItemEventArgs  : public IDispatch
{
public:

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: _SelectedEventArgs
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {071E7A2C-C20C-39F9-ADB4-F774D3E3D92B}
// *********************************************************************//
interface _SelectedEventArgs  : public IDispatch
{
public:

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: _ItemEventHandler
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {4EBF472F-B506-308F-8CFD-C7F554ED1233}
// *********************************************************************//
interface _ItemEventHandler  : public IDispatch
{
public:

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: _SelectedEventHandler
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {550527A4-F53E-32DA-9AD9-F4497B17A7EB}
// *********************************************************************//
interface _SelectedEventHandler  : public IDispatch
{
public:

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAPaletteServices
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D1F0E26A-7EF1-4390-B86E-8A24CB61FF1B}
// *********************************************************************//
interface IOTAPaletteServices  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE get_SelectedTool(Borland_studio_toolsapi_tlb::IOTABasePaletteItem** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE _set_SelectedTool(Borland_studio_toolsapi_tlb::IOTABasePaletteItem* pRetVal/*[in]*/) = 0; // [1610743808]
  virtual HRESULT STDMETHODCALLTYPE get_BaseGroup(Borland_studio_toolsapi_tlb::IOTAPaletteGroup** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE OnBeginUpdate(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE OnEndUpdate(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE OnItemAdded(Borland_studio_toolsapi_tlb::IOTAPaletteGroup* group/*[in]*/, 
                                                Borland_studio_toolsapi_tlb::IOTABasePaletteItem* Item/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE OnItemRemoved(Borland_studio_toolsapi_tlb::IOTAPaletteGroup* gorup/*[in]*/, 
                                                  Borland_studio_toolsapi_tlb::IOTABasePaletteItem* Item/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE OnSelectedToolChanged(Borland_studio_toolsapi_tlb::IOTABasePaletteItem* Item/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE OnModified(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE RegisterColorScheme(Borland_studio_toolsapi_tlb::IOTAPaletteColorScheme* ColorScheme/*[in]*/, 
                                                        long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE UnregisterColorScheme(long index/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetColorScheme(long index/*[in]*/, 
                                                   Borland_studio_toolsapi_tlb::IOTAPaletteColorScheme** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE RegisterDragAcceptor(Borland_studio_toolsapi_tlb::IOTAPaletteDragAcceptor* acceptor/*[in]*/, 
                                                         long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE UnregisterDragAcceptor(long index/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetDragAcceptor(long index/*[in]*/, 
                                                    Borland_studio_toolsapi_tlb::IOTAPaletteDragAcceptor** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE AddPaletteState(BSTR state/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE RemovePaletteState(BSTR state/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE ContainsPaletteState(BSTR state/*[in]*/, 
                                                         VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_PaletteState(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE add_Modified(Mscorlib_tlb::_EventHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE remove_Modified(Mscorlib_tlb::_EventHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE add_Closed(Mscorlib_tlb::_EventHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE remove_Closed(Mscorlib_tlb::_EventHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE add_ItemAdded(Borland_studio_toolsapi_tlb::_ItemEventHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE remove_ItemAdded(Borland_studio_toolsapi_tlb::_ItemEventHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE add_ItemRemoved(Borland_studio_toolsapi_tlb::_ItemEventHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE remove_ItemRemoved(Borland_studio_toolsapi_tlb::_ItemEventHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE add_SelectedToolChanged(Borland_studio_toolsapi_tlb::_SelectedEventHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE remove_SelectedToolChanged(Borland_studio_toolsapi_tlb::_SelectedEventHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE add_BeginUpdate(Mscorlib_tlb::_EventHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE remove_BeginUpdate(Mscorlib_tlb::_EventHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE add_EndUpdate(Mscorlib_tlb::_EventHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE remove_EndUpdate(Mscorlib_tlb::_EventHandler* value/*[in]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  Borland_studio_toolsapi_tlb::IOTABasePaletteItemPtr __fastcall get_SelectedTool(void)
  {
    Borland_studio_toolsapi_tlb::IOTABasePaletteItemPtr pRetVal;
    OLECHECK(this->get_SelectedTool(&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAPaletteGroupPtr __fastcall get_BaseGroup(void)
  {
    Borland_studio_toolsapi_tlb::IOTAPaletteGroupPtr pRetVal;
    OLECHECK(this->get_BaseGroup(&pRetVal));
    return pRetVal;
  }

  long __fastcall RegisterColorScheme(Borland_studio_toolsapi_tlb::IOTAPaletteColorScheme* ColorScheme/*[in]*/)
  {
    long pRetVal;
    OLECHECK(this->RegisterColorScheme(ColorScheme, (long*)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAPaletteColorScheme* __fastcall GetColorScheme(long index/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::IOTAPaletteColorScheme* pRetVal = 0;
    OLECHECK(this->GetColorScheme(index, (Borland_studio_toolsapi_tlb::IOTAPaletteColorScheme**)&pRetVal));
    return pRetVal;
  }

  long __fastcall RegisterDragAcceptor(Borland_studio_toolsapi_tlb::IOTAPaletteDragAcceptor* acceptor/*[in]*/)
  {
    long pRetVal;
    OLECHECK(this->RegisterDragAcceptor(acceptor, (long*)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAPaletteDragAcceptor* __fastcall GetDragAcceptor(long index/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::IOTAPaletteDragAcceptor* pRetVal = 0;
    OLECHECK(this->GetDragAcceptor(index, (Borland_studio_toolsapi_tlb::IOTAPaletteDragAcceptor**)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall ContainsPaletteState(BSTR state/*[in]*/)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->ContainsPaletteState(state, (VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall get_PaletteState(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_PaletteState((BSTR*)&pRetVal));
    return pRetVal;
  }


  __property   Borland_studio_toolsapi_tlb::IOTABasePaletteItemPtr SelectedTool = {read = get_SelectedTool};
  __property   Borland_studio_toolsapi_tlb::IOTAPaletteGroupPtr BaseGroup = {read = get_BaseGroup};
  __property   BSTR            PaletteState = {read = get_PaletteState};

#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAPackageInstallService
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B3345543-6C48-4C54-B24E-57F81FAB4BA9}
// *********************************************************************//
interface IOTAPackageInstallService  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE get_InstalledPackages(LPSAFEARRAY* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetPackageInformation(BSTR fileName/*[in]*/, 
                                                          Borland_studio_toolsapi_tlb::IOTAPackageInformation** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE RemovePackageInformation(Borland_studio_toolsapi_tlb::IOTAPackageInformation* info/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE Load(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE Save(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetPackageFromUnit(BSTR UnitName/*[in]*/, 
                                                       BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  LPSAFEARRAY __fastcall get_InstalledPackages(void)
  {
    LPSAFEARRAY pRetVal;
    OLECHECK(this->get_InstalledPackages((LPSAFEARRAY*)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAPackageInformation* __fastcall GetPackageInformation(BSTR fileName/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::IOTAPackageInformation* pRetVal = 0;
    OLECHECK(this->GetPackageInformation(fileName, (Borland_studio_toolsapi_tlb::IOTAPackageInformation**)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall GetPackageFromUnit(BSTR UnitName/*[in]*/)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->GetPackageFromUnit(UnitName, (BSTR*)&pRetVal));
    return pRetVal;
  }



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAPackageInformation
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5B75654E-A005-474A-9456-5A675EDFA100}
// *********************************************************************//
interface IOTAPackageInformation  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE get_PackageLocation(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_DisplayName(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_Enabled(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE set_Enabled(VARIANT_BOOL pRetVal/*[in]*/) = 0; // [1610743810]
  virtual HRESULT STDMETHODCALLTYPE get_Components(LPSAFEARRAY* pRetVal/*[out,retval]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  BSTR __fastcall get_PackageLocation(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_PackageLocation((BSTR*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall get_DisplayName(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_DisplayName((BSTR*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall get_Enabled(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->get_Enabled((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  LPSAFEARRAY __fastcall get_Components(void)
  {
    LPSAFEARRAY pRetVal;
    OLECHECK(this->get_Components((LPSAFEARRAY*)&pRetVal));
    return pRetVal;
  }


  __property   BSTR            PackageLocation = {read = get_PackageLocation};
  __property   BSTR            DisplayName = {read = get_DisplayName};
  __property   VARIANT_BOOL    Enabled = {read = get_Enabled, write = set_Enabled};

#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAPackageComponent
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {16C35C1D-DD6E-493D-9CF7-0F405045EA54}
// *********************************************************************//
interface IOTAPackageComponent  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE get_Name(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_Unit(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_Page(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_Qualified(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_Image(System_drawing_tlb::_Bitmap** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE AddReferencesToProject(Borland_studio_toolsapi_tlb::IOTAProject* project/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE ComponentImage(Borland_studio_toolsapi_tlb::OTAComponentImageSize Size/*[in]*/, 
                                                   System_drawing_tlb::_Bitmap** pRetVal/*[out,retval]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  BSTR __fastcall get_Name(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_Name((BSTR*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall get_Unit(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_Unit((BSTR*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall get_Page(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_Page((BSTR*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall get_Qualified(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_Qualified((BSTR*)&pRetVal));
    return pRetVal;
  }

  System_drawing_tlb::_BitmapPtr __fastcall get_Image(void)
  {
    System_drawing_tlb::_BitmapPtr pRetVal;
    OLECHECK(this->get_Image(&pRetVal));
    return pRetVal;
  }

  System_drawing_tlb::_Bitmap* __fastcall ComponentImage(Borland_studio_toolsapi_tlb::OTAComponentImageSize Size/*[in]*/)
  {
    System_drawing_tlb::_Bitmap* pRetVal = 0;
    OLECHECK(this->ComponentImage(Size, (System_drawing_tlb::_Bitmap**)&pRetVal));
    return pRetVal;
  }


  __property   BSTR            Name = {read = get_Name};
  __property   BSTR            Unit = {read = get_Unit};
  __property   BSTR            Page = {read = get_Page};
  __property   BSTR            Qualified = {read = get_Qualified};
  __property   System_drawing_tlb::_BitmapPtr Image = {read = get_Image};

#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAComponentList
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1F82ECAB-F49E-48D4-BD9E-97A01B14206B}
// *********************************************************************//
interface IOTAComponentList  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE get_ComponentList(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetPackageFromComponent(BSTR ComponentName/*[in]*/, 
                                                            BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetUnitFromComponent(BSTR ComponentName/*[in]*/, 
                                                         BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetPackageFromUnitName(BSTR UnitName/*[in]*/, 
                                                           VARIANT_BOOL UseNameSpace/*[in]*/, 
                                                           BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE AddReferencesToProject(Borland_studio_toolsapi_tlb::IOTAProject* project/*[in]*/, 
                                                           BSTR ComponentName/*[in]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  BSTR __fastcall get_ComponentList(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_ComponentList((BSTR*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall GetPackageFromComponent(BSTR ComponentName/*[in]*/)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->GetPackageFromComponent(ComponentName, (BSTR*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall GetUnitFromComponent(BSTR ComponentName/*[in]*/)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->GetUnitFromComponent(ComponentName, (BSTR*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall GetPackageFromUnitName(BSTR UnitName/*[in]*/, VARIANT_BOOL UseNameSpace/*[in]*/)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->GetPackageFromUnitName(UnitName, UseNameSpace, (BSTR*)&pRetVal));
    return pRetVal;
  }


  __property   BSTR            ComponentList = {read = get_ComponentList};

#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAPackageRequires
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F8310D0E-48CC-4235-A002-0556700B1B10}
// *********************************************************************//
interface IOTAPackageRequires  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE UpdateRequires(Borland_studio_toolsapi_tlb::IOTAProject* project/*[in]*/, 
                                                   BSTR Name/*[in]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTASymbolHelp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D4FD47E3-3DA5-4FA3-A1F4-24EF81B72F4C}
// *********************************************************************//
interface IOTASymbolHelp  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE GetHelpSymbolType(long pos/*[in]*/, 
                                                      BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  BSTR __fastcall GetHelpSymbolType(long pos/*[in]*/)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->GetHelpSymbolType(pos, (BSTR*)&pRetVal));
    return pRetVal;
  }



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAStructureContext
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {67FD6512-C50F-4C83-8C2F-4E60340668D1}
// *********************************************************************//
interface IOTAStructureContext  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE get_ContextIdent(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_StructureType(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_ViewOptions(long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_RootNodeCount(long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetRootStructureNode(long index/*[in]*/, 
                                                         Borland_studio_toolsapi_tlb::IOTAStructureNode** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE NodeEdited(Borland_studio_toolsapi_tlb::IOTAStructureNode* node/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE NodeFocused(Borland_studio_toolsapi_tlb::IOTAStructureNode* node/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE NodeSelected(Borland_studio_toolsapi_tlb::IOTAStructureNode* node/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE DefaultNodeAction(Borland_studio_toolsapi_tlb::IOTAStructureNode* node/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE SameContext(Borland_studio_toolsapi_tlb::IOTAStructureContext* aContext/*[in]*/, 
                                                VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE InitPopupMenu(Borland_studio_toolsapi_tlb::IOTAStructureNode* node/*[in]*/, 
                                                  Borland_studio_toolsapi_tlb::IOTAStructureNodeMenuItem* popupMenu/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE AddRootNode(Borland_studio_toolsapi_tlb::IOTAStructureNode* ANode/*[in]*/, 
                                                long index/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE RemoveRootNode(Borland_studio_toolsapi_tlb::IOTAStructureNode* ANode/*[in]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  BSTR __fastcall get_ContextIdent(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_ContextIdent((BSTR*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall get_StructureType(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_StructureType((BSTR*)&pRetVal));
    return pRetVal;
  }

  long __fastcall get_ViewOptions(void)
  {
    long pRetVal;
    OLECHECK(this->get_ViewOptions((long*)&pRetVal));
    return pRetVal;
  }

  long __fastcall get_RootNodeCount(void)
  {
    long pRetVal;
    OLECHECK(this->get_RootNodeCount((long*)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAStructureNode* __fastcall GetRootStructureNode(long index/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::IOTAStructureNode* pRetVal = 0;
    OLECHECK(this->GetRootStructureNode(index, (Borland_studio_toolsapi_tlb::IOTAStructureNode**)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall SameContext(Borland_studio_toolsapi_tlb::IOTAStructureContext* aContext/*[in]*/)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->SameContext(aContext, (VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }


  __property   BSTR            ContextIdent = {read = get_ContextIdent};
  __property   BSTR            StructureType = {read = get_StructureType};
  __property   long            ViewOptions = {read = get_ViewOptions};
  __property   long            RootNodeCount = {read = get_RootNodeCount};

#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAStructureNodeStatePreserver
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F6189580-87EE-4985-8866-7712D8DB4872}
// *********************************************************************//
interface IOTAStructureNodeStatePreserver  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE get_NodePreservationMode(Borland_studio_toolsapi_tlb::OTANodePreservationMode* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE PreserveNodeStates(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE RestoreNodeState(Borland_studio_toolsapi_tlb::IOTAStructureNode* node/*[in]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  Borland_studio_toolsapi_tlb::OTANodePreservationMode __fastcall get_NodePreservationMode(void)
  {
    Borland_studio_toolsapi_tlb::OTANodePreservationMode pRetVal;
    OLECHECK(this->get_NodePreservationMode((Borland_studio_toolsapi_tlb::OTANodePreservationMode*)&pRetVal));
    return pRetVal;
  }


  __property   Borland_studio_toolsapi_tlb::OTANodePreservationMode NodePreservationMode = {read = get_NodePreservationMode};

#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAStructureContextToolbar
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {55C848EB-2197-4B17-A9D0-696D3331B3CC}
// *********************************************************************//
interface IOTAStructureContextToolbar  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE get_ButtonCount(long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetButtonCaption(long index/*[in]*/, 
                                                     BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetButtonEnabled(long index/*[in]*/, 
                                                     VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetButtonEnableDropDown(long index/*[in]*/, 
                                                            VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetButtonHasDropDown(long index/*[in]*/, 
                                                         VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetButtonHint(long index/*[in]*/, BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetButtonImageIndex(long index/*[in]*/, 
                                                        long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetButtonMenu(long index/*[in]*/, 
                                                  Borland_studio_toolsapi_tlb::IOTAStructureNodeMenuItem** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetButtonSeparator(long index/*[in]*/, 
                                                       VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetButtonVisible(long index/*[in]*/, 
                                                     VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE Invoke_2(long index/*[in]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  long __fastcall get_ButtonCount(void)
  {
    long pRetVal;
    OLECHECK(this->get_ButtonCount((long*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall GetButtonCaption(long index/*[in]*/)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->GetButtonCaption(index, (BSTR*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall GetButtonEnabled(long index/*[in]*/)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->GetButtonEnabled(index, (VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall GetButtonEnableDropDown(long index/*[in]*/)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->GetButtonEnableDropDown(index, (VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall GetButtonHasDropDown(long index/*[in]*/)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->GetButtonHasDropDown(index, (VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall GetButtonHint(long index/*[in]*/)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->GetButtonHint(index, (BSTR*)&pRetVal));
    return pRetVal;
  }

  long __fastcall GetButtonImageIndex(long index/*[in]*/)
  {
    long pRetVal;
    OLECHECK(this->GetButtonImageIndex(index, (long*)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAStructureNodeMenuItem* __fastcall GetButtonMenu(long index/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::IOTAStructureNodeMenuItem* pRetVal = 0;
    OLECHECK(this->GetButtonMenu(index, (Borland_studio_toolsapi_tlb::IOTAStructureNodeMenuItem**)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall GetButtonSeparator(long index/*[in]*/)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->GetButtonSeparator(index, (VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall GetButtonVisible(long index/*[in]*/)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->GetButtonVisible(index, (VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }


  __property   long            ButtonCount = {read = get_ButtonCount};

#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAStructureContextEditActions
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EF0F0981-8E1B-468F-B063-4A5956EB4BDA}
// *********************************************************************//
interface IOTAStructureContextEditActions  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE EditAction(long action/*[in]*/, 
                                               VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetEditState(long* pRetVal/*[out,retval]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  VARIANT_BOOL __fastcall EditAction(long action/*[in]*/)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->EditAction(action, (VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  long __fastcall GetEditState(void)
  {
    long pRetVal;
    OLECHECK(this->GetEditState((long*)&pRetVal));
    return pRetVal;
  }



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAStructureContextKeyHandler
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {17A71EDB-A2FE-4358-ABD2-362011A8D547}
// *********************************************************************//
interface IOTAStructureContextKeyHandler  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE KeyDown(Borland_studio_toolsapi_tlb::IOTAStructureNode* node/*[in]*/, 
                                            long keyState/*[in]*/, short* keyCode/*[in,out]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE KeyPressed(Borland_studio_toolsapi_tlb::IOTAStructureNode* node/*[in]*/, 
                                               long keyState/*[in]*/, 
                                               unsigned_short* keyChar/*[in,out]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTADragStructureContext
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {03DC0E9A-DED1-4E2A-BECE-328CB27D19B9}
// *********************************************************************//
interface IOTADragStructureContext  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE DragAllowed(Borland_studio_toolsapi_tlb::IOTAStructureNode* node/*[in]*/, 
                                                VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE DragDrop(Borland_studio_toolsapi_tlb::IOTAStructureNode* node/*[in]*/, 
                                             VARIANT dataObject/*[in]*/, BSTR formatArray/*[in]*/, 
                                             long X/*[in]*/, long Y/*[in]*/, long keyState/*[in]*/, 
                                             Borland_studio_toolsapi_tlb::OTADropMode Mode/*[in]*/, 
                                             long* effect/*[in,out]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE DragOver(Borland_studio_toolsapi_tlb::IOTAStructureNode* node/*[in]*/, 
                                             VARIANT dataObject/*[in]*/, 
                                             Borland_studio_toolsapi_tlb::OTADragState state/*[in]*/, 
                                             long X/*[in]*/, long Y/*[in]*/, long keyState/*[in]*/, 
                                             Borland_studio_toolsapi_tlb::OTADropMode Mode/*[in]*/, 
                                             long* effect/*[in,out]*/, 
                                             VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetDataObject(VARIANT* pRetVal/*[out,retval]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  VARIANT_BOOL __fastcall DragAllowed(Borland_studio_toolsapi_tlb::IOTAStructureNode* node/*[in]*/)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->DragAllowed(node, (VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall DragOver(Borland_studio_toolsapi_tlb::IOTAStructureNode* node/*[in]*/, 
                                   VARIANT dataObject/*[in]*/, 
                                   Borland_studio_toolsapi_tlb::OTADragState state/*[in]*/, 
                                   long X/*[in]*/, long Y/*[in]*/, long keyState/*[in]*/, 
                                   Borland_studio_toolsapi_tlb::OTADropMode Mode/*[in]*/, 
                                   long* effect/*[in,out]*/)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->DragOver(node, dataObject, state, X, Y, keyState, Mode, effect, (VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT __fastcall GetDataObject(void)
  {
    VARIANT pRetVal;
    OLECHECK(this->GetDataObject((VARIANT*)&pRetVal));
    return pRetVal;
  }



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAStructureNode
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8A0802F5-C26C-4902-9D1F-8323F2F48F8C}
// *********************************************************************//
interface IOTAStructureNode  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE AddChildNode(Borland_studio_toolsapi_tlb::IOTAStructureNode* node/*[in]*/, 
                                                 long index/*[in]*/, long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_Caption(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_ChildCount(long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE Get_Child(long index/*[in]*/, 
                                              Borland_studio_toolsapi_tlb::IOTAStructureNode** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_Expanded(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE set_Expanded(VARIANT_BOOL pRetVal/*[in]*/) = 0; // [1610743812]
  virtual HRESULT STDMETHODCALLTYPE get_Focused(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE set_Focused(VARIANT_BOOL pRetVal/*[in]*/) = 0; // [1610743814]
  virtual HRESULT STDMETHODCALLTYPE get_Hint(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_ImageIndex(long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_Name(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_parent(Borland_studio_toolsapi_tlb::IOTAStructureNode** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_Selected(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE set_Selected(VARIANT_BOOL pRetVal/*[in]*/) = 0; // [1610743820]
  virtual HRESULT STDMETHODCALLTYPE get_StateIndex(long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_Data(long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE set_Data(long pRetVal/*[in]*/) = 0; // [1610743823]
  virtual HRESULT STDMETHODCALLTYPE RemoveChildNode(long index/*[in]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  long __fastcall AddChildNode(Borland_studio_toolsapi_tlb::IOTAStructureNode* node/*[in]*/, 
                               long index/*[in]*/)
  {
    long pRetVal;
    OLECHECK(this->AddChildNode(node, index, (long*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall get_Caption(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_Caption((BSTR*)&pRetVal));
    return pRetVal;
  }

  long __fastcall get_ChildCount(void)
  {
    long pRetVal;
    OLECHECK(this->get_ChildCount((long*)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAStructureNode* __fastcall Get_Child(long index/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::IOTAStructureNode* pRetVal = 0;
    OLECHECK(this->Get_Child(index, (Borland_studio_toolsapi_tlb::IOTAStructureNode**)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall get_Expanded(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->get_Expanded((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall get_Focused(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->get_Focused((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall get_Hint(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_Hint((BSTR*)&pRetVal));
    return pRetVal;
  }

  long __fastcall get_ImageIndex(void)
  {
    long pRetVal;
    OLECHECK(this->get_ImageIndex((long*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall get_Name(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_Name((BSTR*)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAStructureNodePtr __fastcall get_parent(void)
  {
    Borland_studio_toolsapi_tlb::IOTAStructureNodePtr pRetVal;
    OLECHECK(this->get_parent(&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall get_Selected(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->get_Selected((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  long __fastcall get_StateIndex(void)
  {
    long pRetVal;
    OLECHECK(this->get_StateIndex((long*)&pRetVal));
    return pRetVal;
  }

  long __fastcall get_Data(void)
  {
    long pRetVal;
    OLECHECK(this->get_Data((long*)&pRetVal));
    return pRetVal;
  }


  __property   BSTR            Caption = {read = get_Caption};
  __property   long            ChildCount = {read = get_ChildCount};
  __property   VARIANT_BOOL    Expanded = {read = get_Expanded, write = set_Expanded};
  __property   VARIANT_BOOL    Focused = {read = get_Focused, write = set_Focused};
  __property   BSTR            Hint = {read = get_Hint};
  __property   long            ImageIndex = {read = get_ImageIndex};
  __property   BSTR            Name = {read = get_Name};
  __property   Borland_studio_toolsapi_tlb::IOTAStructureNodePtr parent = {read = get_parent};
  __property   VARIANT_BOOL    Selected = {read = get_Selected, write = set_Selected};
  __property   long            StateIndex = {read = get_StateIndex};
  __property   long            Data = {read = get_Data, write = set_Data};

#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTASortableStructureNode
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {24451294-D128-47E6-A8A5-00C3547C2F9C}
// *********************************************************************//
interface IOTASortableStructureNode  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE get_SortByIndex(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_ItemIndex(long* pRetVal/*[out,retval]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  VARIANT_BOOL __fastcall get_SortByIndex(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->get_SortByIndex((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  long __fastcall get_ItemIndex(void)
  {
    long pRetVal;
    OLECHECK(this->get_ItemIndex((long*)&pRetVal));
    return pRetVal;
  }


  __property   VARIANT_BOOL    SortByIndex = {read = get_SortByIndex};
  __property   long            ItemIndex = {read = get_ItemIndex};

#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAEditableStructureNode
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B2CF6C45-4151-4B1A-B56B-B23534BB053E}
// *********************************************************************//
interface IOTAEditableStructureNode  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE get_CanEdit(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_EditCaption(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE SetValue(BSTR value/*[in]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  VARIANT_BOOL __fastcall get_CanEdit(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->get_CanEdit((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall get_EditCaption(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_EditCaption((BSTR*)&pRetVal));
    return pRetVal;
  }


  __property   VARIANT_BOOL    CanEdit = {read = get_CanEdit};
  __property   BSTR            EditCaption = {read = get_EditCaption};

#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTANavigableStructureNode
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {81B1557A-E3F2-4E9C-AA69-CEBBA99D923F}
// *********************************************************************//
interface IOTANavigableStructureNode  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE Navigate(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  VARIANT_BOOL __fastcall Navigate(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->Navigate((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTADragStructureNode
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {679BCA19-150F-4CC5-9023-CE24F5580F5B}
// *********************************************************************//
interface IOTADragStructureNode  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE DragAllowed(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE DragDrop(VARIANT dataObject/*[in]*/, BSTR formatArray/*[in]*/, 
                                             long X/*[in]*/, long Y/*[in]*/, long keyState/*[in]*/, 
                                             Borland_studio_toolsapi_tlb::OTADropMode Mode/*[in]*/, 
                                             long* effect/*[in,out]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE DragOver(VARIANT dataObject/*[in]*/, 
                                             Borland_studio_toolsapi_tlb::OTADragState state/*[in]*/, 
                                             long X/*[in]*/, long Y/*[in]*/, long keyState/*[in]*/, 
                                             Borland_studio_toolsapi_tlb::OTADropMode Mode/*[in]*/, 
                                             long* effect/*[in,out]*/, 
                                             VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  VARIANT_BOOL __fastcall DragAllowed(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->DragAllowed((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall DragOver(VARIANT dataObject/*[in]*/, 
                                   Borland_studio_toolsapi_tlb::OTADragState state/*[in]*/, 
                                   long X/*[in]*/, long Y/*[in]*/, long keyState/*[in]*/, 
                                   Borland_studio_toolsapi_tlb::OTADropMode Mode/*[in]*/, 
                                   long* effect/*[in,out]*/)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->DragOver(dataObject, state, X, Y, keyState, Mode, effect, (VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAStructureNodePopup
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FAA6133B-F03F-4A93-9E86-C50EAD7348E6}
// *********************************************************************//
interface IOTAStructureNodePopup  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE InitPopupMenu(Borland_studio_toolsapi_tlb::IOTAStructureNodeMenuItem* popupMenu/*[in]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAStructureNodeMenuItem
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7BF39892-F3D3-48F7-B5F3-664FDD438581}
// *********************************************************************//
interface IOTAStructureNodeMenuItem  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE DeleteItem(long index/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_Caption(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_Checked(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_Count(long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_Enabled(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_GroupIndex(long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_ImageIndex(long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE Get_Item(long index/*[in]*/, 
                                             Borland_studio_toolsapi_tlb::IOTAStructureNodeMenuItem** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_Name(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_RadioItem(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_Shortcut(long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_Visible(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE InsertItem(long index/*[in]*/, 
                                               Borland_studio_toolsapi_tlb::IOTAStructureNodeMenuItem* Item/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE Invoke_2(void) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  BSTR __fastcall get_Caption(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_Caption((BSTR*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall get_Checked(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->get_Checked((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  long __fastcall get_Count(void)
  {
    long pRetVal;
    OLECHECK(this->get_Count((long*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall get_Enabled(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->get_Enabled((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  long __fastcall get_GroupIndex(void)
  {
    long pRetVal;
    OLECHECK(this->get_GroupIndex((long*)&pRetVal));
    return pRetVal;
  }

  long __fastcall get_ImageIndex(void)
  {
    long pRetVal;
    OLECHECK(this->get_ImageIndex((long*)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAStructureNodeMenuItem* __fastcall Get_Item(long index/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::IOTAStructureNodeMenuItem* pRetVal = 0;
    OLECHECK(this->Get_Item(index, (Borland_studio_toolsapi_tlb::IOTAStructureNodeMenuItem**)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall get_Name(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_Name((BSTR*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall get_RadioItem(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->get_RadioItem((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  long __fastcall get_Shortcut(void)
  {
    long pRetVal;
    OLECHECK(this->get_Shortcut((long*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall get_Visible(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->get_Visible((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }


  __property   BSTR            Caption = {read = get_Caption};
  __property   VARIANT_BOOL    Checked = {read = get_Checked};
  __property   long            Count = {read = get_Count};
  __property   VARIANT_BOOL    Enabled = {read = get_Enabled};
  __property   long            GroupIndex = {read = get_GroupIndex};
  __property   long            ImageIndex = {read = get_ImageIndex};
  __property   BSTR            Name = {read = get_Name};
  __property   VARIANT_BOOL    RadioItem = {read = get_RadioItem};
  __property   long            Shortcut = {read = get_Shortcut};
  __property   VARIANT_BOOL    Visible = {read = get_Visible};

#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: _ContextEventArgs
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {0B3EF80C-C85B-3ED5-9059-8F0132E53A22}
// *********************************************************************//
interface _ContextEventArgs  : public IDispatch
{
public:

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: _NodeEventArgs
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {909E7F14-FBA0-348B-85C4-3968D2B7CBAA}
// *********************************************************************//
interface _NodeEventArgs  : public IDispatch
{
public:

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: _VisibleEventArgs
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {73A8FC94-5904-31B1-AA0F-0D5CE94CCF23}
// *********************************************************************//
interface _VisibleEventArgs  : public IDispatch
{
public:

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: _OTAStructureType
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {30E1E914-AF92-3300-8A70-3E1F73129492}
// *********************************************************************//
interface _OTAStructureType  : public IDispatch
{
public:

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: _OTANodeType
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {B0BC296A-7B1B-3C3F-BAF0-DA5B57EC0DEB}
// *********************************************************************//
interface _OTANodeType  : public IDispatch
{
public:

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: _OTAStructureViewOptions
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {70EC9140-E495-35BF-B600-B3F295E533B8}
// *********************************************************************//
interface _OTAStructureViewOptions  : public IDispatch
{
public:

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: _ContextEventHandler
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {6659600D-A091-31D1-85D2-6C089622B256}
// *********************************************************************//
interface _ContextEventHandler  : public IDispatch
{
public:

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: _NodeEventHandler
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {BF7956DD-FBAE-3F1D-B976-1ABF761F894E}
// *********************************************************************//
interface _NodeEventHandler  : public IDispatch
{
public:

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: _VisibleEventHandler
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {5D4EBD34-0C25-3794-91C9-93AFF0E1A37E}
// *********************************************************************//
interface _VisibleEventHandler  : public IDispatch
{
public:

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAStructureView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9A4B002F-C7D6-4114-BC6D-704E5F323C48}
// *********************************************************************//
interface IOTAStructureView  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE BeginUpdate(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE ChildNodeUpdated(Borland_studio_toolsapi_tlb::IOTAStructureNode* ParentNode/*[in]*/, 
                                                     Borland_studio_toolsapi_tlb::IOTAStructureNode* ChildNode/*[in]*/, 
                                                     Borland_studio_toolsapi_tlb::OTAChildUpdateKind AUpdateKind/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE ClearSelection(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE EndUpdate(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE FocusNode(Borland_studio_toolsapi_tlb::IOTAStructureNode* node/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetFirstSelected(Borland_studio_toolsapi_tlb::IOTAStructureNode** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetNextSelected(Borland_studio_toolsapi_tlb::IOTAStructureNode* node/*[in]*/, 
                                                    Borland_studio_toolsapi_tlb::IOTAStructureNode** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetSelectedCount(long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetStructureContext(Borland_studio_toolsapi_tlb::IOTAStructureContext** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetStructureType(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE RequestEdit(Borland_studio_toolsapi_tlb::IOTAStructureNode* node/*[in]*/, 
                                                VARIANT_BOOL ForceEdit/*[in]*/, 
                                                VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE SetStructureContext(Borland_studio_toolsapi_tlb::IOTAStructureContext* aContext/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE StructureChanged(VARIANT_BOOL Deferred/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE SelectNode(Borland_studio_toolsapi_tlb::IOTAStructureNode* node/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE AddBitmap(long BitMap/*[in]*/, long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE AddBitmap_2(long BitMap/*[in]*/, VARIANT_BOOL StateImage/*[in]*/, 
                                                long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE AddIcon(long Icon/*[in]*/, long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE AddIcon_2(long Icon/*[in]*/, VARIANT_BOOL StateImage/*[in]*/, 
                                              long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE AddImageList(long ImageList/*[in]*/, 
                                                 long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE AddImageList_2(long ImageList/*[in]*/, 
                                                   VARIANT_BOOL StateImage/*[in]*/, 
                                                   long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE ViewShowing(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE add_StructureChangedEvent(Borland_studio_toolsapi_tlb::_ContextEventHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE remove_StructureChangedEvent(Borland_studio_toolsapi_tlb::_ContextEventHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE add_NodeEdited(Borland_studio_toolsapi_tlb::_NodeEventHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE remove_NodeEdited(Borland_studio_toolsapi_tlb::_NodeEventHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE add_NodeFocused(Borland_studio_toolsapi_tlb::_NodeEventHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE remove_NodeFocused(Borland_studio_toolsapi_tlb::_NodeEventHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE add_NodeSelected(Borland_studio_toolsapi_tlb::_NodeEventHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE remove_NodeSelected(Borland_studio_toolsapi_tlb::_NodeEventHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE add_DefaultNodeAction(Borland_studio_toolsapi_tlb::_NodeEventHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE remove_DefaultNodeAction(Borland_studio_toolsapi_tlb::_NodeEventHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE add_VisibleChanged(Borland_studio_toolsapi_tlb::_VisibleEventHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE remove_VisibleChanged(Borland_studio_toolsapi_tlb::_VisibleEventHandler* value/*[in]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  Borland_studio_toolsapi_tlb::IOTAStructureNode* __fastcall GetFirstSelected(void)
  {
    Borland_studio_toolsapi_tlb::IOTAStructureNode* pRetVal = 0;
    OLECHECK(this->GetFirstSelected((Borland_studio_toolsapi_tlb::IOTAStructureNode**)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAStructureNode* __fastcall GetNextSelected(Borland_studio_toolsapi_tlb::IOTAStructureNode* node/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::IOTAStructureNode* pRetVal = 0;
    OLECHECK(this->GetNextSelected(node, (Borland_studio_toolsapi_tlb::IOTAStructureNode**)&pRetVal));
    return pRetVal;
  }

  long __fastcall GetSelectedCount(void)
  {
    long pRetVal;
    OLECHECK(this->GetSelectedCount((long*)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAStructureContext* __fastcall GetStructureContext(void)
  {
    Borland_studio_toolsapi_tlb::IOTAStructureContext* pRetVal = 0;
    OLECHECK(this->GetStructureContext((Borland_studio_toolsapi_tlb::IOTAStructureContext**)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall GetStructureType(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->GetStructureType((BSTR*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall RequestEdit(Borland_studio_toolsapi_tlb::IOTAStructureNode* node/*[in]*/, 
                                      VARIANT_BOOL ForceEdit/*[in]*/)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->RequestEdit(node, ForceEdit, (VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  long __fastcall AddBitmap(long BitMap/*[in]*/)
  {
    long pRetVal;
    OLECHECK(this->AddBitmap(BitMap, (long*)&pRetVal));
    return pRetVal;
  }

  long __fastcall AddBitmap_2(long BitMap/*[in]*/, VARIANT_BOOL StateImage/*[in]*/)
  {
    long pRetVal;
    OLECHECK(this->AddBitmap_2(BitMap, StateImage, (long*)&pRetVal));
    return pRetVal;
  }

  long __fastcall AddIcon(long Icon/*[in]*/)
  {
    long pRetVal;
    OLECHECK(this->AddIcon(Icon, (long*)&pRetVal));
    return pRetVal;
  }

  long __fastcall AddIcon_2(long Icon/*[in]*/, VARIANT_BOOL StateImage/*[in]*/)
  {
    long pRetVal;
    OLECHECK(this->AddIcon_2(Icon, StateImage, (long*)&pRetVal));
    return pRetVal;
  }

  long __fastcall AddImageList(long ImageList/*[in]*/)
  {
    long pRetVal;
    OLECHECK(this->AddImageList(ImageList, (long*)&pRetVal));
    return pRetVal;
  }

  long __fastcall AddImageList_2(long ImageList/*[in]*/, VARIANT_BOOL StateImage/*[in]*/)
  {
    long pRetVal;
    OLECHECK(this->AddImageList_2(ImageList, StateImage, (long*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall ViewShowing(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->ViewShowing((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAFileHistoryManager
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3A5A2687-91FE-4D7C-B56B-FD3FB8D4096E}
// *********************************************************************//
interface IOTAFileHistoryManager  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE AddTemporaryLabel(BSTR ALabelName/*[in]*/, 
                                                      LPSAFEARRAY AFiles/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_Count(long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetFileHistoryProvider(long index/*[in]*/, 
                                                           Borland_studio_toolsapi_tlb::IOTAFileHistoryProvider** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE RegisterHistoryProvider(Borland_studio_toolsapi_tlb::IOTAFileHistoryProvider* historyProvider/*[in]*/, 
                                                            long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE RevertTemporaryLabel(BSTR ALabelName/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE UnregisterHistoryProvider(long index/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE UpdateProviders(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE add_ProvidersUpdated(Mscorlib_tlb::_EventHandler* value/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE remove_ProvidersUpdated(Mscorlib_tlb::_EventHandler* value/*[in]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  long __fastcall get_Count(void)
  {
    long pRetVal;
    OLECHECK(this->get_Count((long*)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAFileHistoryProvider* __fastcall GetFileHistoryProvider(long index/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::IOTAFileHistoryProvider* pRetVal = 0;
    OLECHECK(this->GetFileHistoryProvider(index, (Borland_studio_toolsapi_tlb::IOTAFileHistoryProvider**)&pRetVal));
    return pRetVal;
  }

  long __fastcall RegisterHistoryProvider(Borland_studio_toolsapi_tlb::IOTAFileHistoryProvider* historyProvider/*[in]*/)
  {
    long pRetVal;
    OLECHECK(this->RegisterHistoryProvider(historyProvider, (long*)&pRetVal));
    return pRetVal;
  }


  __property   long            Count = {read = get_Count};

#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAFileHistoryProvider
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B8CDB02D-93D8-4088-AE03-A28052AD0FAD}
// *********************************************************************//
interface IOTAFileHistoryProvider  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE get_Ident(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE get_Name(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetFileHistory(BSTR AFileName/*[in]*/, 
                                                   Borland_studio_toolsapi_tlb::IOTAFileHistory** pRetVal/*[out,retval]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  BSTR __fastcall get_Ident(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_Ident((BSTR*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall get_Name(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_Name((BSTR*)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAFileHistory* __fastcall GetFileHistory(BSTR AFileName/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::IOTAFileHistory* pRetVal = 0;
    OLECHECK(this->GetFileHistory(AFileName, (Borland_studio_toolsapi_tlb::IOTAFileHistory**)&pRetVal));
    return pRetVal;
  }


  __property   BSTR            Ident = {read = get_Ident};
  __property   BSTR            Name = {read = get_Name};

#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAFileHistory
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {92E624D2-A7CD-4C89-9B4E-71170955E96C}
// *********************************************************************//
interface IOTAFileHistory  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE get_Count(long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetAuthor(long index/*[in]*/, BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetComment(long index/*[in]*/, BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetContent(long index/*[in]*/, 
                                               LPUNKNOWN* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetDate(long index/*[in]*/, DATE* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetIdent(long index/*[in]*/, BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetHistoryStyle(long index/*[in]*/, 
                                                    Borland_studio_toolsapi_tlb::TOTAHistoryStyle* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetLabelCount(long index/*[in]*/, long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetLabels(long index/*[in]*/, long labelIndex/*[in]*/, 
                                              BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  long __fastcall get_Count(void)
  {
    long pRetVal;
    OLECHECK(this->get_Count((long*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall GetAuthor(long index/*[in]*/)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->GetAuthor(index, (BSTR*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall GetComment(long index/*[in]*/)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->GetComment(index, (BSTR*)&pRetVal));
    return pRetVal;
  }

  LPUNKNOWN __fastcall GetContent(long index/*[in]*/)
  {
    LPUNKNOWN pRetVal;
    OLECHECK(this->GetContent(index, (LPUNKNOWN*)&pRetVal));
    return pRetVal;
  }

  DATE __fastcall GetDate(long index/*[in]*/)
  {
    DATE pRetVal;
    OLECHECK(this->GetDate(index, (DATE*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall GetIdent(long index/*[in]*/)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->GetIdent(index, (BSTR*)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::TOTAHistoryStyle __fastcall GetHistoryStyle(long index/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::TOTAHistoryStyle pRetVal;
    OLECHECK(this->GetHistoryStyle(index, (Borland_studio_toolsapi_tlb::TOTAHistoryStyle*)&pRetVal));
    return pRetVal;
  }

  long __fastcall GetLabelCount(long index/*[in]*/)
  {
    long pRetVal;
    OLECHECK(this->GetLabelCount(index, (long*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall GetLabels(long index/*[in]*/, long labelIndex/*[in]*/)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->GetLabels(index, labelIndex, (BSTR*)&pRetVal));
    return pRetVal;
  }


  __property   long            Count = {read = get_Count};

#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IInteropCodeEditorControl
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {61CD4309-303E-4A23-B260-266C2AA391FA}
// *********************************************************************//
interface IInteropCodeEditorControl  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE get_Text(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE set_Text(BSTR pRetVal/*[in]*/) = 0; // [1610743808]
  virtual HRESULT STDMETHODCALLTYPE SetParent(long parent/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE SetBounds(long left/*[in]*/, long top/*[in]*/, 
                                              long width/*[in]*/, long height/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE SetFocus(VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE SetLocation(long left/*[in]*/, long top/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE SetSize(long width/*[in]*/, long height/*[in]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  BSTR __fastcall get_Text(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->get_Text((BSTR*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall SetFocus(void)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->SetFocus((VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }


  __property   BSTR            Text = {read = get_Text, write = set_Text};

#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IInteropCodeEditorControlCreator
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {72A5E09B-A046-47D1-95AA-15A333C7131B}
// *********************************************************************//
interface IInteropCodeEditorControlCreator  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE CreateControl(Borland_studio_toolsapi_tlb::IInteropCodeEditorControl** pRetVal/*[out,retval]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  Borland_studio_toolsapi_tlb::IInteropCodeEditorControl* __fastcall CreateControl(void)
  {
    Borland_studio_toolsapi_tlb::IInteropCodeEditorControl* pRetVal = 0;
    OLECHECK(this->CreateControl((Borland_studio_toolsapi_tlb::IInteropCodeEditorControl**)&pRetVal));
    return pRetVal;
  }



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTARegistrationService
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4F23CBA5-3B8D-48B1-83A5-4F6E04C9F50C}
// *********************************************************************//
interface IOTARegistrationService  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE RegisterAssemblyWithRegistry(BSTR fileName/*[in]*/, 
                                                                 VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE UnregisterAssemblyFromRegistry(BSTR fileName/*[in]*/, 
                                                                   VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GenerateInteropAssembly(BSTR fileName/*[in]*/, 
                                                            BSTR* Files/*[out]*/, 
                                                            VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GenerateInteropAssembly_2(BSTR fileName/*[in]*/, 
                                                              BSTR* Files/*[out]*/, 
                                                              BSTR AssemblyFileName/*[in]*/, 
                                                              VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  VARIANT_BOOL __fastcall RegisterAssemblyWithRegistry(BSTR fileName/*[in]*/)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->RegisterAssemblyWithRegistry(fileName, (VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall UnregisterAssemblyFromRegistry(BSTR fileName/*[in]*/)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->UnregisterAssemblyFromRegistry(fileName, (VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall GenerateInteropAssembly(BSTR fileName/*[in]*/, BSTR* Files/*[out]*/)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->GenerateInteropAssembly(fileName, Files, (VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  VARIANT_BOOL __fastcall GenerateInteropAssembly_2(BSTR fileName/*[in]*/, BSTR* Files/*[out]*/, 
                                                    BSTR AssemblyFileName/*[in]*/)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->GenerateInteropAssembly_2(fileName, Files, AssemblyFileName, (VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAProjectFileStorageNotifier
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E1F55159-C7F3-4DA1-8E72-C17FA23D0C8C}
// *********************************************************************//
interface IOTAProjectFileStorageNotifier  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE GetName(BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE ProjectLoaded(Borland_studio_toolsapi_tlb::IOTAModule* ProjectOrGroup/*[in]*/, 
                                                  BSTR Data/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE CreatingProject(Borland_studio_toolsapi_tlb::IOTAModule* ProjectOrGroup/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE ProjectSaving(Borland_studio_toolsapi_tlb::IOTAModule* ProjectOrGroup/*[in]*/, 
                                                  BSTR* Data/*[in,out]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE ProjectClosing(Borland_studio_toolsapi_tlb::IOTAModule* ProjectOrGroup/*[in]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  BSTR __fastcall GetName(void)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->GetName((BSTR*)&pRetVal));
    return pRetVal;
  }



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAProjectFileStorage
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EB421DBB-D961-4041-B17D-8BFAEE4291A1}
// *********************************************************************//
interface IOTAProjectFileStorage  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE AddNewSection(Borland_studio_toolsapi_tlb::IOTAModule* ProjectOrGroup/*[in]*/, 
                                                  BSTR SectionName/*[in]*/, 
                                                  VARIANT_BOOL LocalProjectFile/*[in]*/, 
                                                  BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE AddNotifier(Borland_studio_toolsapi_tlb::IOTAProjectFileStorageNotifier* Notifier/*[in]*/, 
                                                long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetNotifierCount(long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetNotifier(long index/*[in]*/, 
                                                Borland_studio_toolsapi_tlb::IOTAProjectFileStorageNotifier** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE RemoveNotifier(long index/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetProjectStorageData(Borland_studio_toolsapi_tlb::IOTAModule* ProjectOrGroup/*[in]*/, 
                                                          BSTR SectionName/*[in]*/, 
                                                          VARIANT_BOOL LocalProjectFile/*[in]*/, 
                                                          BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE LoadNodeFromFile(BSTR fileName/*[in]*/, BSTR NodeName/*[in]*/, 
                                                     VARIANT_BOOL LocalProjectFile/*[in]*/, 
                                                     BSTR* pRetVal/*[out,retval]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  BSTR __fastcall AddNewSection(Borland_studio_toolsapi_tlb::IOTAModule* ProjectOrGroup/*[in]*/, 
                                BSTR SectionName/*[in]*/, VARIANT_BOOL LocalProjectFile/*[in]*/)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->AddNewSection(ProjectOrGroup, SectionName, LocalProjectFile, (BSTR*)&pRetVal));
    return pRetVal;
  }

  long __fastcall AddNotifier(Borland_studio_toolsapi_tlb::IOTAProjectFileStorageNotifier* Notifier/*[in]*/)
  {
    long pRetVal;
    OLECHECK(this->AddNotifier(Notifier, (long*)&pRetVal));
    return pRetVal;
  }

  long __fastcall GetNotifierCount(void)
  {
    long pRetVal;
    OLECHECK(this->GetNotifierCount((long*)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAProjectFileStorageNotifier* __fastcall GetNotifier(long index/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::IOTAProjectFileStorageNotifier* pRetVal = 0;
    OLECHECK(this->GetNotifier(index, (Borland_studio_toolsapi_tlb::IOTAProjectFileStorageNotifier**)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall GetProjectStorageData(Borland_studio_toolsapi_tlb::IOTAModule* ProjectOrGroup/*[in]*/, 
                                        BSTR SectionName/*[in]*/, 
                                        VARIANT_BOOL LocalProjectFile/*[in]*/)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->GetProjectStorageData(ProjectOrGroup, SectionName, LocalProjectFile, (BSTR*)&pRetVal));
    return pRetVal;
  }

  BSTR __fastcall LoadNodeFromFile(BSTR fileName/*[in]*/, BSTR NodeName/*[in]*/, 
                                   VARIANT_BOOL LocalProjectFile/*[in]*/)
  {
    BSTR pRetVal = 0;
    OLECHECK(this->LoadNodeFromFile(fileName, NodeName, LocalProjectFile, (BSTR*)&pRetVal));
    return pRetVal;
  }



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTACodeBrowsePreview
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {929C8812-4DB1-4338-B3B8-C1BE7969E2BF}
// *********************************************************************//
interface IOTACodeBrowsePreview  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE GetCodePreviewInfo(long sourceLine/*[in]*/, 
                                                       long sourceCol/*[in]*/, 
                                                       BSTR* fileName/*[out]*/, 
                                                       long* offset/*[out]*/, long* length/*[out]*/, 
                                                       VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  VARIANT_BOOL __fastcall GetCodePreviewInfo(long sourceLine/*[in]*/, long sourceCol/*[in]*/, 
                                             BSTR* fileName/*[out]*/, long* offset/*[out]*/, 
                                             long* length/*[out]*/)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->GetCodePreviewInfo(sourceLine, sourceCol, fileName, offset, length, (VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTATimerServices
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CA12BE5C-FC9B-403A-BFB5-786562026ABD}
// *********************************************************************//
interface IOTATimerServices  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE MarkElapsedTime(BSTR description/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE StartTimer(BSTR description/*[in]*/, BSTR category/*[in]*/, 
                                               long* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE StopTimer(long timerID/*[in]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  long __fastcall StartTimer(BSTR description/*[in]*/, BSTR category/*[in]*/)
  {
    long pRetVal;
    OLECHECK(this->StartTimer(description, category, (long*)&pRetVal));
    return pRetVal;
  }



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAHelpTrait
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DEE36173-1597-498A-A85A-C90BFCAE9B74}
// *********************************************************************//
interface IOTAHelpTrait  : public IDispatch
{
public:

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAPersonalityHelpTrait
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {914E82DB-4123-4AA8-91D9-DB105E1FEC64}
// *********************************************************************//
interface IOTAPersonalityHelpTrait  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE ShowKeywordHelp(BSTR keyword/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE UnderstandsKeyword(BSTR keyword/*[in]*/, 
                                                       VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  VARIANT_BOOL __fastcall UnderstandsKeyword(BSTR keyword/*[in]*/)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->UnderstandsKeyword(keyword, (VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

// *********************************************************************//
// Interface: IOTAHelpServices
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {25F4CC12-EA93-4AEC-BC4A-DFDF427053B0}
// *********************************************************************//
interface IOTAHelpServices  : public IDispatch
{
public:
  virtual HRESULT STDMETHODCALLTYPE ShowKeywordHelp(BSTR keyword/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE UnderstandsKeyword(BSTR keyword/*[in]*/, 
                                                       VARIANT_BOOL* pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE ShowContextHelp(long contextID/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE ShowTopicHelp(BSTR topic/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetFileHelpTrait(BSTR fileName/*[in]*/, 
                                                     Borland_studio_toolsapi_tlb::IOTAHelpTrait** pRetVal/*[out,retval]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetPersonalityHelpTrait(BSTR personality/*[in]*/, 
                                                            Borland_studio_toolsapi_tlb::IOTAPersonalityHelpTrait** pRetVal/*[out,retval]*/) = 0; // [-1]

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)

  VARIANT_BOOL __fastcall UnderstandsKeyword(BSTR keyword/*[in]*/)
  {
    VARIANT_BOOL pRetVal;
    OLECHECK(this->UnderstandsKeyword(keyword, (VARIANT_BOOL*)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAHelpTrait* __fastcall GetFileHelpTrait(BSTR fileName/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::IOTAHelpTrait* pRetVal = 0;
    OLECHECK(this->GetFileHelpTrait(fileName, (Borland_studio_toolsapi_tlb::IOTAHelpTrait**)&pRetVal));
    return pRetVal;
  }

  Borland_studio_toolsapi_tlb::IOTAPersonalityHelpTrait* __fastcall GetPersonalityHelpTrait(BSTR personality/*[in]*/)
  {
    Borland_studio_toolsapi_tlb::IOTAPersonalityHelpTrait* pRetVal = 0;
    OLECHECK(this->GetPersonalityHelpTrait(personality, (Borland_studio_toolsapi_tlb::IOTAPersonalityHelpTrait**)&pRetVal));
    return pRetVal;
  }



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)
// *********************************************************************//
// SmartIntf: TCOM_CodeUpdater
// Interface: _CodeUpdater
// *********************************************************************//
template <class T /* _CodeUpdater */ >
class TCOM_CodeUpdaterT : public TComInterface<_CodeUpdater>, public TComInterfaceBase<IUnknown>
{
public:
  TCOM_CodeUpdaterT() {}
  TCOM_CodeUpdaterT(_CodeUpdater *intf, bool addRef = false) : TComInterface<_CodeUpdater>(intf, addRef) {}
  TCOM_CodeUpdaterT(const TCOM_CodeUpdaterT& src) : TComInterface<_CodeUpdater>(src) {}
  TCOM_CodeUpdaterT& operator=(const TCOM_CodeUpdaterT& src) { Bind(src, true); return *this;}


};
typedef TCOM_CodeUpdaterT<_CodeUpdater> TCOM_CodeUpdater;

// *********************************************************************//
// DispIntf:  _CodeUpdater
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {400786A2-A2FF-3714-AD36-1A87580A56B4}
// *********************************************************************//
template<class T>
class _CodeUpdaterDispT : public TAutoDriver<_CodeUpdater>
{
public:
  _CodeUpdaterDispT(){}

  _CodeUpdaterDispT(_CodeUpdater *pintf)
  {
    TAutoDriver<_CodeUpdater>::Bind(pintf, false);
  }

  _CodeUpdaterDispT(_CodeUpdaterPtr pintf)
  {
    TAutoDriver<_CodeUpdater>::Bind(pintf, true);
  }

  _CodeUpdaterDispT& operator=(_CodeUpdater *pintf)
  {
    TAutoDriver<_CodeUpdater>::Bind(pintf, false);
    return *this;
  }

  _CodeUpdaterDispT& operator=(_CodeUpdaterPtr pintf)
  {
    TAutoDriver<_CodeUpdater>::Bind(pintf, true);
    return *this;
  }

  HRESULT BindDefault()
  {
    return OLECHECK(Bind(CLSID_CodeUpdater));
  }

  HRESULT BindRunning()
  {
    return BindToActive(CLSID_CodeUpdater);
  }


};
typedef _CodeUpdaterDispT<_CodeUpdater> _CodeUpdaterDisp;

typedef TComInterface<ILanguage>  TCOMILanguage;

// *********************************************************************//
// DispIntf:  ILanguage
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {52140F24-D25C-399C-BB6C-EDF1625DA50A}
// *********************************************************************//
template<class T>
class ILanguageDispT : public TAutoDriver<ILanguage>
{
public:
  ILanguageDispT(){}

  ILanguageDispT(ILanguage *pintf)
  {
    TAutoDriver<ILanguage>::Bind(pintf, false);
  }

  ILanguageDispT(ILanguagePtr pintf)
  {
    TAutoDriver<ILanguage>::Bind(pintf, true);
  }

  ILanguageDispT& operator=(ILanguage *pintf)
  {
    TAutoDriver<ILanguage>::Bind(pintf, false);
    return *this;
  }

  ILanguageDispT& operator=(ILanguagePtr pintf)
  {
    TAutoDriver<ILanguage>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall get_Name(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_Name(void);
  HRESULT         __fastcall AssemblyChanged(BSTR Name/*[in]*/);

  __property   BSTR            Name = {read = get_Name};
};
typedef ILanguageDispT<ILanguage> ILanguageDisp;

typedef TComInterface<IFileSymbols>  TCOMIFileSymbols;

// *********************************************************************//
// DispIntf:  IFileSymbols
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4BC0FA96-F783-339A-9E65-21E2F36F0553}
// *********************************************************************//
template<class T>
class IFileSymbolsDispT : public TAutoDriver<IFileSymbols>
{
public:
  IFileSymbolsDispT(){}

  IFileSymbolsDispT(IFileSymbols *pintf)
  {
    TAutoDriver<IFileSymbols>::Bind(pintf, false);
  }

  IFileSymbolsDispT(IFileSymbolsPtr pintf)
  {
    TAutoDriver<IFileSymbols>::Bind(pintf, true);
  }

  IFileSymbolsDispT& operator=(IFileSymbols *pintf)
  {
    TAutoDriver<IFileSymbols>::Bind(pintf, false);
    return *this;
  }

  IFileSymbolsDispT& operator=(IFileSymbolsPtr pintf)
  {
    TAutoDriver<IFileSymbols>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall GetCodeDomFile(Borland_studio_toolsapi_tlb::IOTACodeDomFile** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTACodeDomFile* __fastcall GetCodeDomFile(void);
  HRESULT         __fastcall GetInsite(Borland_studio_toolsapi_tlb::IInsite** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IInsite* __fastcall GetInsite(void);
  HRESULT         __fastcall GetRegions(Borland_studio_toolsapi_tlb::IRegions** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IRegions* __fastcall GetRegions(void);
  HRESULT         __fastcall GetModuleInfo(Borland_studio_toolsapi_tlb::IModuleInfo** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IModuleInfo* __fastcall GetModuleInfo(void);
  HRESULT         __fastcall GetErrors(Borland_studio_toolsapi_tlb::IErrors** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IErrors* __fastcall GetErrors(void);
  HRESULT         __fastcall GetComments(Borland_studio_toolsapi_tlb::IComments** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IComments* __fastcall GetComments(void);
  HRESULT         __fastcall GetStructureContext(Borland_studio_toolsapi_tlb::IOTAStructureContext** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAStructureContext* __fastcall GetStructureContext(void);

};
typedef IFileSymbolsDispT<IFileSymbols> IFileSymbolsDisp;

typedef TComInterface<IFileParse>  TCOMIFileParse;

// *********************************************************************//
// DispIntf:  IFileParse
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {325F8844-7EC5-3867-8281-BB3DD9934766}
// *********************************************************************//
template<class T>
class IFileParseDispT : public TAutoDriver<IFileParse>
{
public:
  IFileParseDispT(){}

  IFileParseDispT(IFileParse *pintf)
  {
    TAutoDriver<IFileParse>::Bind(pintf, false);
  }

  IFileParseDispT(IFileParsePtr pintf)
  {
    TAutoDriver<IFileParse>::Bind(pintf, true);
  }

  IFileParseDispT& operator=(IFileParse *pintf)
  {
    TAutoDriver<IFileParse>::Bind(pintf, false);
    return *this;
  }

  IFileParseDispT& operator=(IFileParsePtr pintf)
  {
    TAutoDriver<IFileParse>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall Modified();
  HRESULT         __fastcall Parse();

};
typedef IFileParseDispT<IFileParse> IFileParseDisp;

typedef TComInterface<IBlockComplete>  TCOMIBlockComplete;

// *********************************************************************//
// DispIntf:  IBlockComplete
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7AEB3A47-55DB-3E61-B114-30D8557FD3F2}
// *********************************************************************//
template<class T>
class IBlockCompleteDispT : public TAutoDriver<IBlockComplete>
{
public:
  IBlockCompleteDispT(){}

  IBlockCompleteDispT(IBlockComplete *pintf)
  {
    TAutoDriver<IBlockComplete>::Bind(pintf, false);
  }

  IBlockCompleteDispT(IBlockCompletePtr pintf)
  {
    TAutoDriver<IBlockComplete>::Bind(pintf, true);
  }

  IBlockCompleteDispT& operator=(IBlockComplete *pintf)
  {
    TAutoDriver<IBlockComplete>::Bind(pintf, false);
    return *this;
  }

  IBlockCompleteDispT& operator=(IBlockCompletePtr pintf)
  {
    TAutoDriver<IBlockComplete>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall Parse(BSTR fileName/*[in]*/, long line/*[in]*/, long col/*[in]*/);
  HRESULT         __fastcall GetBlockType(Borland_studio_toolsapi_tlb::BlockCompleteType* pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::BlockCompleteType __fastcall GetBlockType(void);
  HRESULT         __fastcall GetBlockPos(/*AUTO_PARAM_ERROR(Borland_studio_toolsapi_tlb::OTACharPos* pRetVal)*/ VARIANT*  pRetVal);
  HRESULT         __fastcall GetIsValid(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall GetIsValid(void);

};
typedef IBlockCompleteDispT<IBlockComplete> IBlockCompleteDisp;

typedef TComInterface<IOTABrowserModule>  TCOMIOTABrowserModule;

// *********************************************************************//
// DispIntf:  IOTABrowserModule
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {10F40E7C-2D93-45B4-B776-36A50D7511F8}
// *********************************************************************//
template<class T>
class IOTABrowserModuleDispT : public TAutoDriver<IOTABrowserModule>
{
public:
  IOTABrowserModuleDispT(){}

  IOTABrowserModuleDispT(IOTABrowserModule *pintf)
  {
    TAutoDriver<IOTABrowserModule>::Bind(pintf, false);
  }

  IOTABrowserModuleDispT(IOTABrowserModulePtr pintf)
  {
    TAutoDriver<IOTABrowserModule>::Bind(pintf, true);
  }

  IOTABrowserModuleDispT& operator=(IOTABrowserModule *pintf)
  {
    TAutoDriver<IOTABrowserModule>::Bind(pintf, false);
    return *this;
  }

  IOTABrowserModuleDispT& operator=(IOTABrowserModulePtr pintf)
  {
    TAutoDriver<IOTABrowserModule>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall BrowseToSymbol(BSTR symbolName/*[in]*/, 
                                            VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall BrowseToSymbol(BSTR symbolName/*[in]*/);

};
typedef IOTABrowserModuleDispT<IOTABrowserModule> IOTABrowserModuleDisp;

typedef TComInterface<IMethodNavigate>  TCOMIMethodNavigate;

// *********************************************************************//
// DispIntf:  IMethodNavigate
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {711E1D36-28A1-345B-9FB6-6814FF9005B5}
// *********************************************************************//
template<class T>
class IMethodNavigateDispT : public TAutoDriver<IMethodNavigate>
{
public:
  IMethodNavigateDispT(){}

  IMethodNavigateDispT(IMethodNavigate *pintf)
  {
    TAutoDriver<IMethodNavigate>::Bind(pintf, false);
  }

  IMethodNavigateDispT(IMethodNavigatePtr pintf)
  {
    TAutoDriver<IMethodNavigate>::Bind(pintf, true);
  }

  IMethodNavigateDispT& operator=(IMethodNavigate *pintf)
  {
    TAutoDriver<IMethodNavigate>::Bind(pintf, false);
    return *this;
  }

  IMethodNavigateDispT& operator=(IMethodNavigatePtr pintf)
  {
    TAutoDriver<IMethodNavigate>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall Navigate(Borland_studio_toolsapi_tlb::IOTAEditView* AView/*[in]*/, 
                                      BSTR fileName/*[in]*/, 
                                      Borland_studio_toolsapi_tlb::MethodNavigateType NavigateType/*[in]*/
                                      , VARIANT_BOOL ClassLock/*[in]*/, 
                                      VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall Navigate(Borland_studio_toolsapi_tlb::IOTAEditView* AView/*[in]*/, 
                                      BSTR fileName/*[in]*/, 
                                      Borland_studio_toolsapi_tlb::MethodNavigateType NavigateType/*[in]*/, 
                                      VARIANT_BOOL ClassLock/*[in]*/);

};
typedef IMethodNavigateDispT<IMethodNavigate> IMethodNavigateDisp;

typedef TComInterface<IStringList>  TCOMIStringList;

// *********************************************************************//
// DispIntf:  IStringList
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A987910E-C8B2-3C42-8063-06E02F35351A}
// *********************************************************************//
template<class T>
class IStringListDispT : public TAutoDriver<IStringList>
{
public:
  IStringListDispT(){}

  IStringListDispT(IStringList *pintf)
  {
    TAutoDriver<IStringList>::Bind(pintf, false);
  }

  IStringListDispT(IStringListPtr pintf)
  {
    TAutoDriver<IStringList>::Bind(pintf, true);
  }

  IStringListDispT& operator=(IStringList *pintf)
  {
    TAutoDriver<IStringList>::Bind(pintf, false);
    return *this;
  }

  IStringListDispT& operator=(IStringListPtr pintf)
  {
    TAutoDriver<IStringList>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall get_Count(long* pRetVal/*[out,retval]*/);
  long            __fastcall get_Count(void);
  HRESULT         __fastcall Add(BSTR value/*[in]*/, long* pRetVal/*[out,retval]*/);
  long            __fastcall Add(BSTR value/*[in]*/);
  HRESULT         __fastcall Remove(BSTR value/*[in]*/);
  HRESULT         __fastcall Clear();
  HRESULT         __fastcall IndexOf(BSTR value/*[in]*/, long* pRetVal/*[out,retval]*/);
  long            __fastcall IndexOf(BSTR value/*[in]*/);
  HRESULT         __fastcall get_Item(long index/*[in]*/, BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_Item(long index/*[in]*/);

  __property   long            Count = {read = get_Count};
};
typedef IStringListDispT<IStringList> IStringListDisp;

typedef TComInterface<IProject>  TCOMIProject;

// *********************************************************************//
// DispIntf:  IProject
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BF4941E6-EDBD-47BD-8839-B404170740F4}
// *********************************************************************//
template<class T>
class IProjectDispT : public TAutoDriver<IProject>
{
public:
  IProjectDispT(){}

  IProjectDispT(IProject *pintf)
  {
    TAutoDriver<IProject>::Bind(pintf, false);
  }

  IProjectDispT(IProjectPtr pintf)
  {
    TAutoDriver<IProject>::Bind(pintf, true);
  }

  IProjectDispT& operator=(IProject *pintf)
  {
    TAutoDriver<IProject>::Bind(pintf, false);
    return *this;
  }

  IProjectDispT& operator=(IProjectPtr pintf)
  {
    TAutoDriver<IProject>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall get_Ident(long* pRetVal/*[out,retval]*/);
  long            __fastcall get_Ident(void);
  HRESULT         __fastcall FileChanged(BSTR fileName/*[in]*/);
  HRESULT         __fastcall GetInternalProject(VARIANT* pRetVal/*[out,retval]*/);
  VARIANT         __fastcall GetInternalProject(void);
  HRESULT         __fastcall SynchronizeModel();
  HRESULT         __fastcall GetDomFile(BSTR fileName/*[in]*/, 
                                        Borland_studio_toolsapi_tlb::IOTACodeDomFile** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTACodeDomFile* __fastcall GetDomFile(BSTR fileName/*[in]*/);
  HRESULT         __fastcall GetDomFile_2(Borland_studio_toolsapi_tlb::IOTAModule* module/*[in]*/, 
                                          Borland_studio_toolsapi_tlb::IOTACodeDomFile** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTACodeDomFile* __fastcall GetDomFile_2(Borland_studio_toolsapi_tlb::IOTAModule* module/*[in]*/);
  HRESULT         __fastcall GetFileComments(Borland_studio_toolsapi_tlb::IComments** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IComments* __fastcall GetFileComments(void);

  __property   long            Ident = {read = get_Ident};
};
typedef IProjectDispT<IProject> IProjectDisp;

typedef TComInterface<ISymbolsInfo>  TCOMISymbolsInfo;

// *********************************************************************//
// DispIntf:  ISymbolsInfo
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {379617BD-F801-3978-A81D-7D406B8CF047}
// *********************************************************************//
template<class T>
class ISymbolsInfoDispT : public TAutoDriver<ISymbolsInfo>
{
public:
  ISymbolsInfoDispT(){}

  ISymbolsInfoDispT(ISymbolsInfo *pintf)
  {
    TAutoDriver<ISymbolsInfo>::Bind(pintf, false);
  }

  ISymbolsInfoDispT(ISymbolsInfoPtr pintf)
  {
    TAutoDriver<ISymbolsInfo>::Bind(pintf, true);
  }

  ISymbolsInfoDispT& operator=(ISymbolsInfo *pintf)
  {
    TAutoDriver<ISymbolsInfo>::Bind(pintf, false);
    return *this;
  }

  ISymbolsInfoDispT& operator=(ISymbolsInfoPtr pintf)
  {
    TAutoDriver<ISymbolsInfo>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall SetSortOrder(VARIANT_BOOL sortByName/*[in]*/, 
                                          long* bestMatchIndex/*[out]*/, 
                                          long* pRetVal/*[out,retval]*/);
  long            __fastcall SetSortOrder(VARIANT_BOOL sortByName/*[in]*/, 
                                          long* bestMatchIndex/*[out]*/);
  HRESULT         __fastcall SetFilter(BSTR filter/*[in]*/, long* bestMatchIndex/*[out]*/, 
                                       long* pRetVal/*[out,retval]*/);
  long            __fastcall SetFilter(BSTR filter/*[in]*/, long* bestMatchIndex/*[out]*/);
  HRESULT         __fastcall GetCount(long* pRetVal/*[out,retval]*/);
  long            __fastcall GetCount(void);
  HRESULT         __fastcall GetBestMatchIndex(long* pRetVal/*[out,retval]*/);
  long            __fastcall GetBestMatchIndex(void);
  HRESULT         __fastcall GetItems(long offset/*[in]*/, long length/*[in]*/, 
                                      LPSAFEARRAY* items/*[out]*/, long* pRetVal/*[out,retval]*/);
  long            __fastcall GetItems(long offset/*[in]*/, long length/*[in]*/, 
                                      LPSAFEARRAY* items/*[out]*/);
  HRESULT         __fastcall GetCompletionContext(Borland_studio_toolsapi_tlb::TCodeCompletionContext* pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::TCodeCompletionContext __fastcall GetCompletionContext(void);
  HRESULT         __fastcall GetHelpInsightHtml(long symbol/*[in]*/, BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall GetHelpInsightHtml(long symbol/*[in]*/);

};
typedef ISymbolsInfoDispT<ISymbolsInfo> ISymbolsInfoDisp;

typedef TComInterface<IInsite>  TCOMIInsite;

// *********************************************************************//
// DispIntf:  IInsite
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {529A4ED6-D770-3F07-89FA-4D5237BB1126}
// *********************************************************************//
template<class T>
class IInsiteDispT : public TAutoDriver<IInsite>
{
public:
  IInsiteDispT(){}

  IInsiteDispT(IInsite *pintf)
  {
    TAutoDriver<IInsite>::Bind(pintf, false);
  }

  IInsiteDispT(IInsitePtr pintf)
  {
    TAutoDriver<IInsite>::Bind(pintf, true);
  }

  IInsiteDispT& operator=(IInsite *pintf)
  {
    TAutoDriver<IInsite>::Bind(pintf, false);
    return *this;
  }

  IInsiteDispT& operator=(IInsitePtr pintf)
  {
    TAutoDriver<IInsite>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall GetFilename(long index/*[in]*/, BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall GetFilename(long index/*[in]*/);
  HRESULT         __fastcall GetIndex(BSTR fileName/*[in]*/, long* pRetVal/*[out,retval]*/);
  long            __fastcall GetIndex(BSTR fileName/*[in]*/);
  HRESULT         __fastcall symbolName(long sym/*[in]*/, BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall symbolName(long sym/*[in]*/);
  HRESULT         __fastcall SymbolHint(long sym/*[in]*/, BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall SymbolHint(long sym/*[in]*/);
  HRESULT         __fastcall SymbolLocation(long sym/*[in]*/, 
                                            /*AUTO_PARAM_ERROR(Borland_studio_toolsapi_tlb::SourceLocation* pRetVal)*/ VARIANT*  pRetVal);
  HRESULT         __fastcall GetSymbolAccessFlags(long sym/*[in]*/, 
                                                  Borland_studio_toolsapi_tlb::SymbolAccessFlags* pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::SymbolAccessFlags __fastcall GetSymbolAccessFlags(long sym/*[in]*/);
  HRESULT         __fastcall GetSymbolKind(long sym/*[in]*/, 
                                           Borland_studio_toolsapi_tlb::SymbolKind* pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::SymbolKind __fastcall GetSymbolKind(long sym/*[in]*/);
  HRESULT         __fastcall SymbolDocComment(long sym/*[in]*/, BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall SymbolDocComment(long sym/*[in]*/);
  HRESULT         __fastcall SymbolHelpQuery(long sym/*[in]*/, BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall SymbolHelpQuery(long sym/*[in]*/);
  HRESULT         __fastcall SymbolAt(/*AUTO_PARAM_ERROR(Borland_studio_toolsapi_tlb::SourceLocation location)*/ VARIANT  location
                                      , long* pRetVal/*[out,retval]*/);
  HRESULT         __fastcall ScopeAt(/*AUTO_PARAM_ERROR(Borland_studio_toolsapi_tlb::SourceLocation location)*/ VARIANT  location
                                     , long* pRetVal/*[out,retval]*/);
  HRESULT         __fastcall FindSymbol(BSTR Name/*[in]*/, long* pRetVal/*[out,retval]*/);
  long            __fastcall FindSymbol(BSTR Name/*[in]*/);
  HRESULT         __fastcall GetSourceContext(/*AUTO_PARAM_ERROR(Borland_studio_toolsapi_tlb::SourceLocation location)*/ VARIANT  location
                                              , long* pRetVal/*[out,retval]*/);
  HRESULT         __fastcall GetSymbols(long symbolOrScope/*[in]*/, long sourceContext/*[in]*/, 
                                        Borland_studio_toolsapi_tlb::QueryFlags flags/*[in]*/, 
                                        BSTR filter/*[in]*/, LPSAFEARRAY* symbols/*[out]*/, 
                                        long* bestMatch/*[out]*/);
  HRESULT         __fastcall GetParameters(/*AUTO_PARAM_ERROR(Borland_studio_toolsapi_tlb::SourceLocation location)*/ VARIANT  location
                                           , LPSAFEARRAY* parameters/*[out]*/, 
                                           LPSAFEARRAY* paramLocations/*[out]*/, 
                                           VARIANT_BOOL* pRetVal/*[out,retval]*/);
  HRESULT         __fastcall GetSymbolsInfo(long symbolOrScope/*[in]*/, long sourceContext/*[in]*/, 
                                            Borland_studio_toolsapi_tlb::QueryFlags flags/*[in]*/, 
                                            BSTR filter/*[in]*/, long* Count/*[out]*/, 
                                            long* bestMatch/*[out]*/, 
                                            Borland_studio_toolsapi_tlb::ISymbolsInfo** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::ISymbolsInfo* __fastcall GetSymbolsInfo(long symbolOrScope/*[in]*/, 
                                                                       long sourceContext/*[in]*/, 
                                                                       Borland_studio_toolsapi_tlb::QueryFlags flags/*[in]*/, 
                                                                       BSTR filter/*[in]*/, 
                                                                       long* Count/*[out]*/, 
                                                                       long* bestMatch/*[out]*/);

};
typedef IInsiteDispT<IInsite> IInsiteDisp;

typedef TComInterface<IComments>  TCOMIComments;

// *********************************************************************//
// DispIntf:  IComments
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9B70D729-12E1-3161-84FA-18CD633683F9}
// *********************************************************************//
template<class T>
class ICommentsDispT : public TAutoDriver<IComments>
{
public:
  ICommentsDispT(){}

  ICommentsDispT(IComments *pintf)
  {
    TAutoDriver<IComments>::Bind(pintf, false);
  }

  ICommentsDispT(ICommentsPtr pintf)
  {
    TAutoDriver<IComments>::Bind(pintf, true);
  }

  ICommentsDispT& operator=(IComments *pintf)
  {
    TAutoDriver<IComments>::Bind(pintf, false);
    return *this;
  }

  ICommentsDispT& operator=(ICommentsPtr pintf)
  {
    TAutoDriver<IComments>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall GetCommentInfo(BSTR fileName/*[in]*/, 
                                            LPSAFEARRAY* pRetVal/*[out,retval]*/);
  LPSAFEARRAY     __fastcall GetCommentInfo(BSTR fileName/*[in]*/);
  HRESULT         __fastcall AddComment(long start/*[in]*/, long end/*[in]*/, BSTR fileName/*[in]*/
                                        , BSTR CommentText/*[in]*/);
  HRESULT         __fastcall DeleteComment(long start/*[in]*/, long end/*[in]*/, 
                                           BSTR fileName/*[in]*/);
  HRESULT         __fastcall ChangeComment(long start/*[in]*/, long end/*[in]*/, 
                                           BSTR fileName/*[in]*/, BSTR CommentText/*[in]*/);

};
typedef ICommentsDispT<IComments> ICommentsDisp;

typedef TComInterface<IRegions>  TCOMIRegions;

// *********************************************************************//
// DispIntf:  IRegions
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5AD8A626-94F3-3EC9-839A-F4A509E2D38E}
// *********************************************************************//
template<class T>
class IRegionsDispT : public TAutoDriver<IRegions>
{
public:
  IRegionsDispT(){}

  IRegionsDispT(IRegions *pintf)
  {
    TAutoDriver<IRegions>::Bind(pintf, false);
  }

  IRegionsDispT(IRegionsPtr pintf)
  {
    TAutoDriver<IRegions>::Bind(pintf, true);
  }

  IRegionsDispT& operator=(IRegions *pintf)
  {
    TAutoDriver<IRegions>::Bind(pintf, false);
    return *this;
  }

  IRegionsDispT& operator=(IRegionsPtr pintf)
  {
    TAutoDriver<IRegions>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall GetRegionInfo(BSTR fileName/*[in]*/, 
                                           LPSAFEARRAY* pRetVal/*[out,retval]*/);
  LPSAFEARRAY     __fastcall GetRegionInfo(BSTR fileName/*[in]*/);

};
typedef IRegionsDispT<IRegions> IRegionsDisp;

typedef TComInterface<IErrors>  TCOMIErrors;

// *********************************************************************//
// DispIntf:  IErrors
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7F2B5BB4-D61D-3E6A-A7B6-0F1EA4A5C2F5}
// *********************************************************************//
template<class T>
class IErrorsDispT : public TAutoDriver<IErrors>
{
public:
  IErrorsDispT(){}

  IErrorsDispT(IErrors *pintf)
  {
    TAutoDriver<IErrors>::Bind(pintf, false);
  }

  IErrorsDispT(IErrorsPtr pintf)
  {
    TAutoDriver<IErrors>::Bind(pintf, true);
  }

  IErrorsDispT& operator=(IErrors *pintf)
  {
    TAutoDriver<IErrors>::Bind(pintf, false);
    return *this;
  }

  IErrorsDispT& operator=(IErrorsPtr pintf)
  {
    TAutoDriver<IErrors>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall GetErrorInfo(BSTR fileName/*[in]*/, 
                                          LPSAFEARRAY* pRetVal/*[out,retval]*/);
  LPSAFEARRAY     __fastcall GetErrorInfo(BSTR fileName/*[in]*/);

};
typedef IErrorsDispT<IErrors> IErrorsDisp;

typedef TComInterface<IModuleInfo>  TCOMIModuleInfo;

// *********************************************************************//
// DispIntf:  IModuleInfo
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EE6AF2AE-D709-3996-BA89-5A604C4C0B3C}
// *********************************************************************//
template<class T>
class IModuleInfoDispT : public TAutoDriver<IModuleInfo>
{
public:
  IModuleInfoDispT(){}

  IModuleInfoDispT(IModuleInfo *pintf)
  {
    TAutoDriver<IModuleInfo>::Bind(pintf, false);
  }

  IModuleInfoDispT(IModuleInfoPtr pintf)
  {
    TAutoDriver<IModuleInfo>::Bind(pintf, true);
  }

  IModuleInfoDispT& operator=(IModuleInfo *pintf)
  {
    TAutoDriver<IModuleInfo>::Bind(pintf, false);
    return *this;
  }

  IModuleInfoDispT& operator=(IModuleInfoPtr pintf)
  {
    TAutoDriver<IModuleInfo>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall GetModuleRoot(long* pRetVal/*[out,retval]*/);
  long            __fastcall GetModuleRoot(void);
  HRESULT         __fastcall GetChildren(long sym/*[in]*/, LPSAFEARRAY* pRetVal/*[out,retval]*/);
  LPSAFEARRAY     __fastcall GetChildren(long sym/*[in]*/);
  HRESULT         __fastcall symbolName(long sym/*[in]*/, BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall symbolName(long sym/*[in]*/);
  HRESULT         __fastcall SymbolText(long sym/*[in]*/, VARIANT_BOOL fullText/*[in]*/, 
                                        BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall SymbolText(long sym/*[in]*/, VARIANT_BOOL fullText/*[in]*/);
  HRESULT         __fastcall SymbolLocation(long sym/*[in]*/, 
                                            /*AUTO_PARAM_ERROR(Borland_studio_toolsapi_tlb::SourceLocation* pRetVal)*/ VARIANT*  pRetVal);
  HRESULT         __fastcall GetSymbolAccessFlags(long sym/*[in]*/, 
                                                  Borland_studio_toolsapi_tlb::SymbolAccessFlags* pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::SymbolAccessFlags __fastcall GetSymbolAccessFlags(long sym/*[in]*/);
  HRESULT         __fastcall GetSymbolKind(long sym/*[in]*/, 
                                           Borland_studio_toolsapi_tlb::SymbolKind* pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::SymbolKind __fastcall GetSymbolKind(long sym/*[in]*/);
  HRESULT         __fastcall Modifiable(long sym/*[in]*/, VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall Modifiable(long sym/*[in]*/);
  HRESULT         __fastcall ModifySymbol(long sym/*[in]*/, BSTR Text/*[in]*/, BSTR* Error/*[out]*/
                                          , long* offset/*[out]*/, 
                                          VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall ModifySymbol(long sym/*[in]*/, BSTR Text/*[in]*/, BSTR* Error/*[out]*/, 
                                          long* offset/*[out]*/);

};
typedef IModuleInfoDispT<IModuleInfo> IModuleInfoDisp;

// *********************************************************************//
// SmartIntf: TCOM_StringCollectionAdapter
// Interface: _StringCollectionAdapter
// *********************************************************************//
template <class T /* _StringCollectionAdapter */ >
class TCOM_StringCollectionAdapterT : public TComInterface<_StringCollectionAdapter>, public TComInterfaceBase<IUnknown>
{
public:
  TCOM_StringCollectionAdapterT() {}
  TCOM_StringCollectionAdapterT(_StringCollectionAdapter *intf, bool addRef = false) : TComInterface<_StringCollectionAdapter>(intf, addRef) {}
  TCOM_StringCollectionAdapterT(const TCOM_StringCollectionAdapterT& src) : TComInterface<_StringCollectionAdapter>(src) {}
  TCOM_StringCollectionAdapterT& operator=(const TCOM_StringCollectionAdapterT& src) { Bind(src, true); return *this;}


};
typedef TCOM_StringCollectionAdapterT<_StringCollectionAdapter> TCOM_StringCollectionAdapter;

// *********************************************************************//
// DispIntf:  _StringCollectionAdapter
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {0BC2F4A5-350A-3882-B8B3-BA6DE48E200A}
// *********************************************************************//
template<class T>
class _StringCollectionAdapterDispT : public TAutoDriver<_StringCollectionAdapter>
{
public:
  _StringCollectionAdapterDispT(){}

  _StringCollectionAdapterDispT(_StringCollectionAdapter *pintf)
  {
    TAutoDriver<_StringCollectionAdapter>::Bind(pintf, false);
  }

  _StringCollectionAdapterDispT(_StringCollectionAdapterPtr pintf)
  {
    TAutoDriver<_StringCollectionAdapter>::Bind(pintf, true);
  }

  _StringCollectionAdapterDispT& operator=(_StringCollectionAdapter *pintf)
  {
    TAutoDriver<_StringCollectionAdapter>::Bind(pintf, false);
    return *this;
  }

  _StringCollectionAdapterDispT& operator=(_StringCollectionAdapterPtr pintf)
  {
    TAutoDriver<_StringCollectionAdapter>::Bind(pintf, true);
    return *this;
  }

  HRESULT BindDefault()
  {
    return OLECHECK(Bind(CLSID_StringCollectionAdapter));
  }

  HRESULT BindRunning()
  {
    return BindToActive(CLSID_StringCollectionAdapter);
  }


};
typedef _StringCollectionAdapterDispT<_StringCollectionAdapter> _StringCollectionAdapterDisp;

// *********************************************************************//
// SmartIntf: TCOM_DocumentationManager
// Interface: _DocumentationManager
// *********************************************************************//
template <class T /* _DocumentationManager */ >
class TCOM_DocumentationManagerT : public TComInterface<_DocumentationManager>, public TComInterfaceBase<IUnknown>
{
public:
  TCOM_DocumentationManagerT() {}
  TCOM_DocumentationManagerT(_DocumentationManager *intf, bool addRef = false) : TComInterface<_DocumentationManager>(intf, addRef) {}
  TCOM_DocumentationManagerT(const TCOM_DocumentationManagerT& src) : TComInterface<_DocumentationManager>(src) {}
  TCOM_DocumentationManagerT& operator=(const TCOM_DocumentationManagerT& src) { Bind(src, true); return *this;}


};
typedef TCOM_DocumentationManagerT<_DocumentationManager> TCOM_DocumentationManager;

// *********************************************************************//
// DispIntf:  _DocumentationManager
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {82710262-BC20-34DE-B3DC-3343AB64A090}
// *********************************************************************//
template<class T>
class _DocumentationManagerDispT : public TAutoDriver<_DocumentationManager>
{
public:
  _DocumentationManagerDispT(){}

  _DocumentationManagerDispT(_DocumentationManager *pintf)
  {
    TAutoDriver<_DocumentationManager>::Bind(pintf, false);
  }

  _DocumentationManagerDispT(_DocumentationManagerPtr pintf)
  {
    TAutoDriver<_DocumentationManager>::Bind(pintf, true);
  }

  _DocumentationManagerDispT& operator=(_DocumentationManager *pintf)
  {
    TAutoDriver<_DocumentationManager>::Bind(pintf, false);
    return *this;
  }

  _DocumentationManagerDispT& operator=(_DocumentationManagerPtr pintf)
  {
    TAutoDriver<_DocumentationManager>::Bind(pintf, true);
    return *this;
  }

  HRESULT BindDefault()
  {
    return OLECHECK(Bind(CLSID_DocumentationManager));
  }

  HRESULT BindRunning()
  {
    return BindToActive(CLSID_DocumentationManager);
  }


};
typedef _DocumentationManagerDispT<_DocumentationManager> _DocumentationManagerDisp;

typedef TComInterface<IRefactoring>  TCOMIRefactoring;

// *********************************************************************//
// DispIntf:  IRefactoring
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {20163D8A-B5BB-39E5-90D3-6CED95A15A69}
// *********************************************************************//
template<class T>
class IRefactoringDispT : public TAutoDriver<IRefactoring>
{
public:
  IRefactoringDispT(){}

  IRefactoringDispT(IRefactoring *pintf)
  {
    TAutoDriver<IRefactoring>::Bind(pintf, false);
  }

  IRefactoringDispT(IRefactoringPtr pintf)
  {
    TAutoDriver<IRefactoring>::Bind(pintf, true);
  }

  IRefactoringDispT& operator=(IRefactoring *pintf)
  {
    TAutoDriver<IRefactoring>::Bind(pintf, false);
    return *this;
  }

  IRefactoringDispT& operator=(IRefactoringPtr pintf)
  {
    TAutoDriver<IRefactoring>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall DoRefactoring();
  HRESULT         __fastcall get_CanRefactor(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_CanRefactor(void);
  HRESULT         __fastcall Undo();
  HRESULT         __fastcall get_CanUndo(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_CanUndo(void);
  HRESULT         __fastcall Closed();

  __property   VARIANT_BOOL    CanRefactor = {read = get_CanRefactor};
  __property   VARIANT_BOOL    CanUndo = {read = get_CanUndo};
};
typedef IRefactoringDispT<IRefactoring> IRefactoringDisp;

// *********************************************************************//
// SmartIntf: TCOM_RefactoringException
// Interface: _RefactoringException
// *********************************************************************//
template <class T /* _RefactoringException */ >
class TCOM_RefactoringExceptionT : public TComInterface<_RefactoringException>, public TComInterfaceBase<IUnknown>
{
public:
  TCOM_RefactoringExceptionT() {}
  TCOM_RefactoringExceptionT(_RefactoringException *intf, bool addRef = false) : TComInterface<_RefactoringException>(intf, addRef) {}
  TCOM_RefactoringExceptionT(const TCOM_RefactoringExceptionT& src) : TComInterface<_RefactoringException>(src) {}
  TCOM_RefactoringExceptionT& operator=(const TCOM_RefactoringExceptionT& src) { Bind(src, true); return *this;}


};
typedef TCOM_RefactoringExceptionT<_RefactoringException> TCOM_RefactoringException;

// *********************************************************************//
// DispIntf:  _RefactoringException
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {16926FE4-1BE2-3EFE-BB38-BFFEE9517BDB}
// *********************************************************************//
template<class T>
class _RefactoringExceptionDispT : public TAutoDriver<_RefactoringException>
{
public:
  _RefactoringExceptionDispT(){}

  _RefactoringExceptionDispT(_RefactoringException *pintf)
  {
    TAutoDriver<_RefactoringException>::Bind(pintf, false);
  }

  _RefactoringExceptionDispT(_RefactoringExceptionPtr pintf)
  {
    TAutoDriver<_RefactoringException>::Bind(pintf, true);
  }

  _RefactoringExceptionDispT& operator=(_RefactoringException *pintf)
  {
    TAutoDriver<_RefactoringException>::Bind(pintf, false);
    return *this;
  }

  _RefactoringExceptionDispT& operator=(_RefactoringExceptionPtr pintf)
  {
    TAutoDriver<_RefactoringException>::Bind(pintf, true);
    return *this;
  }

  HRESULT BindDefault()
  {
    return OLECHECK(Bind(CLSID_RefactoringException));
  }

  HRESULT BindRunning()
  {
    return BindToActive(CLSID_RefactoringException);
  }


};
typedef _RefactoringExceptionDispT<_RefactoringException> _RefactoringExceptionDisp;

// *********************************************************************//
// SmartIntf: TCOM_RefactoringKinds
// Interface: _RefactoringKinds
// *********************************************************************//
template <class T /* _RefactoringKinds */ >
class TCOM_RefactoringKindsT : public TComInterface<_RefactoringKinds>, public TComInterfaceBase<IUnknown>
{
public:
  TCOM_RefactoringKindsT() {}
  TCOM_RefactoringKindsT(_RefactoringKinds *intf, bool addRef = false) : TComInterface<_RefactoringKinds>(intf, addRef) {}
  TCOM_RefactoringKindsT(const TCOM_RefactoringKindsT& src) : TComInterface<_RefactoringKinds>(src) {}
  TCOM_RefactoringKindsT& operator=(const TCOM_RefactoringKindsT& src) { Bind(src, true); return *this;}


};
typedef TCOM_RefactoringKindsT<_RefactoringKinds> TCOM_RefactoringKinds;

// *********************************************************************//
// DispIntf:  _RefactoringKinds
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {A5B0C318-839F-3CC7-8507-8D73312BFE10}
// *********************************************************************//
template<class T>
class _RefactoringKindsDispT : public TAutoDriver<_RefactoringKinds>
{
public:
  _RefactoringKindsDispT(){}

  _RefactoringKindsDispT(_RefactoringKinds *pintf)
  {
    TAutoDriver<_RefactoringKinds>::Bind(pintf, false);
  }

  _RefactoringKindsDispT(_RefactoringKindsPtr pintf)
  {
    TAutoDriver<_RefactoringKinds>::Bind(pintf, true);
  }

  _RefactoringKindsDispT& operator=(_RefactoringKinds *pintf)
  {
    TAutoDriver<_RefactoringKinds>::Bind(pintf, false);
    return *this;
  }

  _RefactoringKindsDispT& operator=(_RefactoringKindsPtr pintf)
  {
    TAutoDriver<_RefactoringKinds>::Bind(pintf, true);
    return *this;
  }

  HRESULT BindDefault()
  {
    return OLECHECK(Bind(CLSID_RefactoringKinds));
  }

  HRESULT BindRunning()
  {
    return BindToActive(CLSID_RefactoringKinds);
  }


};
typedef _RefactoringKindsDispT<_RefactoringKinds> _RefactoringKindsDisp;

// *********************************************************************//
// SmartIntf: TCOM_RefactoringHelpContextIds
// Interface: _RefactoringHelpContextIds
// *********************************************************************//
template <class T /* _RefactoringHelpContextIds */ >
class TCOM_RefactoringHelpContextIdsT : public TComInterface<_RefactoringHelpContextIds>, public TComInterfaceBase<IUnknown>
{
public:
  TCOM_RefactoringHelpContextIdsT() {}
  TCOM_RefactoringHelpContextIdsT(_RefactoringHelpContextIds *intf, bool addRef = false) : TComInterface<_RefactoringHelpContextIds>(intf, addRef) {}
  TCOM_RefactoringHelpContextIdsT(const TCOM_RefactoringHelpContextIdsT& src) : TComInterface<_RefactoringHelpContextIds>(src) {}
  TCOM_RefactoringHelpContextIdsT& operator=(const TCOM_RefactoringHelpContextIdsT& src) { Bind(src, true); return *this;}


};
typedef TCOM_RefactoringHelpContextIdsT<_RefactoringHelpContextIds> TCOM_RefactoringHelpContextIds;

// *********************************************************************//
// DispIntf:  _RefactoringHelpContextIds
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {D42A8462-B20E-3611-85A5-7086BD2690FF}
// *********************************************************************//
template<class T>
class _RefactoringHelpContextIdsDispT : public TAutoDriver<_RefactoringHelpContextIds>
{
public:
  _RefactoringHelpContextIdsDispT(){}

  _RefactoringHelpContextIdsDispT(_RefactoringHelpContextIds *pintf)
  {
    TAutoDriver<_RefactoringHelpContextIds>::Bind(pintf, false);
  }

  _RefactoringHelpContextIdsDispT(_RefactoringHelpContextIdsPtr pintf)
  {
    TAutoDriver<_RefactoringHelpContextIds>::Bind(pintf, true);
  }

  _RefactoringHelpContextIdsDispT& operator=(_RefactoringHelpContextIds *pintf)
  {
    TAutoDriver<_RefactoringHelpContextIds>::Bind(pintf, false);
    return *this;
  }

  _RefactoringHelpContextIdsDispT& operator=(_RefactoringHelpContextIdsPtr pintf)
  {
    TAutoDriver<_RefactoringHelpContextIds>::Bind(pintf, true);
    return *this;
  }

  HRESULT BindDefault()
  {
    return OLECHECK(Bind(CLSID_RefactoringHelpContextIds));
  }

  HRESULT BindRunning()
  {
    return BindToActive(CLSID_RefactoringHelpContextIds);
  }


};
typedef _RefactoringHelpContextIdsDispT<_RefactoringHelpContextIds> _RefactoringHelpContextIdsDisp;

typedef TComInterface<IRefactoringItem>  TCOMIRefactoringItem;

// *********************************************************************//
// DispIntf:  IRefactoringItem
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {AB8BE244-9291-3A05-9C56-29B82E1177A5}
// *********************************************************************//
template<class T>
class IRefactoringItemDispT : public TAutoDriver<IRefactoringItem>
{
public:
  IRefactoringItemDispT(){}

  IRefactoringItemDispT(IRefactoringItem *pintf)
  {
    TAutoDriver<IRefactoringItem>::Bind(pintf, false);
  }

  IRefactoringItemDispT(IRefactoringItemPtr pintf)
  {
    TAutoDriver<IRefactoringItem>::Bind(pintf, true);
  }

  IRefactoringItemDispT& operator=(IRefactoringItem *pintf)
  {
    TAutoDriver<IRefactoringItem>::Bind(pintf, false);
    return *this;
  }

  IRefactoringItemDispT& operator=(IRefactoringItemPtr pintf)
  {
    TAutoDriver<IRefactoringItem>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall get_Kind(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_Kind(void);
  HRESULT         __fastcall get_Caption(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_Caption(void);
  HRESULT         __fastcall get_HelpContextId(long* pRetVal/*[out,retval]*/);
  long            __fastcall get_HelpContextId(void);
  HRESULT         __fastcall get_Shortcut(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_Shortcut(void);
  HRESULT         __fastcall get_Enabled(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_Enabled(void);
  HRESULT         __fastcall Invoke_2();
  HRESULT         __fastcall _Update();

  __property   BSTR            Kind = {read = get_Kind};
  __property   BSTR            Caption = {read = get_Caption};
  __property   long            HelpContextId = {read = get_HelpContextId};
  __property   BSTR            Shortcut = {read = get_Shortcut};
  __property   VARIANT_BOOL    Enabled = {read = get_Enabled};
};
typedef IRefactoringItemDispT<IRefactoringItem> IRefactoringItemDisp;

typedef TComInterface<IDeclareVariableRefactoringItem>  TCOMIDeclareVariableRefactoringItem;

// *********************************************************************//
// DispIntf:  IDeclareVariableRefactoringItem
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {27AE3BC6-E171-33B9-8147-C5F74BA1F818}
// *********************************************************************//
template<class T>
class IDeclareVariableRefactoringItemDispT : public TAutoDriver<IDeclareVariableRefactoringItem>
{
public:
  IDeclareVariableRefactoringItemDispT(){}

  IDeclareVariableRefactoringItemDispT(IDeclareVariableRefactoringItem *pintf)
  {
    TAutoDriver<IDeclareVariableRefactoringItem>::Bind(pintf, false);
  }

  IDeclareVariableRefactoringItemDispT(IDeclareVariableRefactoringItemPtr pintf)
  {
    TAutoDriver<IDeclareVariableRefactoringItem>::Bind(pintf, true);
  }

  IDeclareVariableRefactoringItemDispT& operator=(IDeclareVariableRefactoringItem *pintf)
  {
    TAutoDriver<IDeclareVariableRefactoringItem>::Bind(pintf, false);
    return *this;
  }

  IDeclareVariableRefactoringItemDispT& operator=(IDeclareVariableRefactoringItemPtr pintf)
  {
    TAutoDriver<IDeclareVariableRefactoringItem>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall DeclareVariable(long AOffset/*[in]*/, BSTR AIdent/*[in]*/, 
                                             BSTR AType/*[in]*/);

};
typedef IDeclareVariableRefactoringItemDispT<IDeclareVariableRefactoringItem> IDeclareVariableRefactoringItemDisp;

typedef TComInterface<IImportScopeRefactoringItem>  TCOMIImportScopeRefactoringItem;

// *********************************************************************//
// DispIntf:  IImportScopeRefactoringItem
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {58411D13-D08E-3B57-A2D2-99B1C4974A9C}
// *********************************************************************//
template<class T>
class IImportScopeRefactoringItemDispT : public TAutoDriver<IImportScopeRefactoringItem>
{
public:
  IImportScopeRefactoringItemDispT(){}

  IImportScopeRefactoringItemDispT(IImportScopeRefactoringItem *pintf)
  {
    TAutoDriver<IImportScopeRefactoringItem>::Bind(pintf, false);
  }

  IImportScopeRefactoringItemDispT(IImportScopeRefactoringItemPtr pintf)
  {
    TAutoDriver<IImportScopeRefactoringItem>::Bind(pintf, true);
  }

  IImportScopeRefactoringItemDispT& operator=(IImportScopeRefactoringItem *pintf)
  {
    TAutoDriver<IImportScopeRefactoringItem>::Bind(pintf, false);
    return *this;
  }

  IImportScopeRefactoringItemDispT& operator=(IImportScopeRefactoringItemPtr pintf)
  {
    TAutoDriver<IImportScopeRefactoringItem>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall ImportScope(BSTR AScope/*[in]*/);

};
typedef IImportScopeRefactoringItemDispT<IImportScopeRefactoringItem> IImportScopeRefactoringItemDisp;

typedef TComInterface<IRefactorable>  TCOMIRefactorable;

// *********************************************************************//
// DispIntf:  IRefactorable
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6F5BCCA3-04E2-3B07-AACC-709FC958278A}
// *********************************************************************//
template<class T>
class IRefactorableDispT : public TAutoDriver<IRefactorable>
{
public:
  IRefactorableDispT(){}

  IRefactorableDispT(IRefactorable *pintf)
  {
    TAutoDriver<IRefactorable>::Bind(pintf, false);
  }

  IRefactorableDispT(IRefactorablePtr pintf)
  {
    TAutoDriver<IRefactorable>::Bind(pintf, true);
  }

  IRefactorableDispT& operator=(IRefactorable *pintf)
  {
    TAutoDriver<IRefactorable>::Bind(pintf, false);
    return *this;
  }

  IRefactorableDispT& operator=(IRefactorablePtr pintf)
  {
    TAutoDriver<IRefactorable>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall GetRefactoring(BSTR refactoringKind/*[in]*/, 
                                            Borland_studio_toolsapi_tlb::IRefactoringItem** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IRefactoringItem* __fastcall GetRefactoring(BSTR refactoringKind/*[in]*/);
  HRESULT         __fastcall GetRefactoringByIndex(long index/*[in]*/, 
                                                   Borland_studio_toolsapi_tlb::IRefactoringItem** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IRefactoringItem* __fastcall GetRefactoringByIndex(long index/*[in]*/);
  HRESULT         __fastcall GetRefactoringCount(long* pRetVal/*[out,retval]*/);
  long            __fastcall GetRefactoringCount(void);

};
typedef IRefactorableDispT<IRefactorable> IRefactorableDisp;

// *********************************************************************//
// SmartIntf: TCOM_RefactoringEventArgs
// Interface: _RefactoringEventArgs
// *********************************************************************//
template <class T /* _RefactoringEventArgs */ >
class TCOM_RefactoringEventArgsT : public TComInterface<_RefactoringEventArgs>, public TComInterfaceBase<IUnknown>
{
public:
  TCOM_RefactoringEventArgsT() {}
  TCOM_RefactoringEventArgsT(_RefactoringEventArgs *intf, bool addRef = false) : TComInterface<_RefactoringEventArgs>(intf, addRef) {}
  TCOM_RefactoringEventArgsT(const TCOM_RefactoringEventArgsT& src) : TComInterface<_RefactoringEventArgs>(src) {}
  TCOM_RefactoringEventArgsT& operator=(const TCOM_RefactoringEventArgsT& src) { Bind(src, true); return *this;}


};
typedef TCOM_RefactoringEventArgsT<_RefactoringEventArgs> TCOM_RefactoringEventArgs;

// *********************************************************************//
// DispIntf:  _RefactoringEventArgs
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {0C3D6B68-8238-3301-A34B-1F7806273B4E}
// *********************************************************************//
template<class T>
class _RefactoringEventArgsDispT : public TAutoDriver<_RefactoringEventArgs>
{
public:
  _RefactoringEventArgsDispT(){}

  _RefactoringEventArgsDispT(_RefactoringEventArgs *pintf)
  {
    TAutoDriver<_RefactoringEventArgs>::Bind(pintf, false);
  }

  _RefactoringEventArgsDispT(_RefactoringEventArgsPtr pintf)
  {
    TAutoDriver<_RefactoringEventArgs>::Bind(pintf, true);
  }

  _RefactoringEventArgsDispT& operator=(_RefactoringEventArgs *pintf)
  {
    TAutoDriver<_RefactoringEventArgs>::Bind(pintf, false);
    return *this;
  }

  _RefactoringEventArgsDispT& operator=(_RefactoringEventArgsPtr pintf)
  {
    TAutoDriver<_RefactoringEventArgs>::Bind(pintf, true);
    return *this;
  }

  HRESULT BindDefault()
  {
    return OLECHECK(Bind(CLSID_RefactoringEventArgs));
  }

  HRESULT BindRunning()
  {
    return BindToActive(CLSID_RefactoringEventArgs);
  }


};
typedef _RefactoringEventArgsDispT<_RefactoringEventArgs> _RefactoringEventArgsDisp;

// *********************************************************************//
// SmartIntf: TCOM_RefactoringEvent
// Interface: _RefactoringEvent
// *********************************************************************//
template <class T /* _RefactoringEvent */ >
class TCOM_RefactoringEventT : public TComInterface<_RefactoringEvent>, public TComInterfaceBase<IUnknown>
{
public:
  TCOM_RefactoringEventT() {}
  TCOM_RefactoringEventT(_RefactoringEvent *intf, bool addRef = false) : TComInterface<_RefactoringEvent>(intf, addRef) {}
  TCOM_RefactoringEventT(const TCOM_RefactoringEventT& src) : TComInterface<_RefactoringEvent>(src) {}
  TCOM_RefactoringEventT& operator=(const TCOM_RefactoringEventT& src) { Bind(src, true); return *this;}


};
typedef TCOM_RefactoringEventT<_RefactoringEvent> TCOM_RefactoringEvent;

// *********************************************************************//
// DispIntf:  _RefactoringEvent
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {191DF914-7AFD-3E49-B4A9-0EA9EE0F800D}
// *********************************************************************//
template<class T>
class _RefactoringEventDispT : public TAutoDriver<_RefactoringEvent>
{
public:
  _RefactoringEventDispT(){}

  _RefactoringEventDispT(_RefactoringEvent *pintf)
  {
    TAutoDriver<_RefactoringEvent>::Bind(pintf, false);
  }

  _RefactoringEventDispT(_RefactoringEventPtr pintf)
  {
    TAutoDriver<_RefactoringEvent>::Bind(pintf, true);
  }

  _RefactoringEventDispT& operator=(_RefactoringEvent *pintf)
  {
    TAutoDriver<_RefactoringEvent>::Bind(pintf, false);
    return *this;
  }

  _RefactoringEventDispT& operator=(_RefactoringEventPtr pintf)
  {
    TAutoDriver<_RefactoringEvent>::Bind(pintf, true);
    return *this;
  }

  HRESULT BindDefault()
  {
    return OLECHECK(Bind(CLSID_RefactoringEvent));
  }

  HRESULT BindRunning()
  {
    return BindToActive(CLSID_RefactoringEvent);
  }


};
typedef _RefactoringEventDispT<_RefactoringEvent> _RefactoringEventDisp;

typedef TComInterface<IRefactoringEngine>  TCOMIRefactoringEngine;

// *********************************************************************//
// DispIntf:  IRefactoringEngine
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CB56BAD6-B387-39A8-8321-5CBC270DD7DD}
// *********************************************************************//
template<class T>
class IRefactoringEngineDispT : public TAutoDriver<IRefactoringEngine>
{
public:
  IRefactoringEngineDispT(){}

  IRefactoringEngineDispT(IRefactoringEngine *pintf)
  {
    TAutoDriver<IRefactoringEngine>::Bind(pintf, false);
  }

  IRefactoringEngineDispT(IRefactoringEnginePtr pintf)
  {
    TAutoDriver<IRefactoringEngine>::Bind(pintf, true);
  }

  IRefactoringEngineDispT& operator=(IRefactoringEngine *pintf)
  {
    TAutoDriver<IRefactoringEngine>::Bind(pintf, false);
    return *this;
  }

  IRefactoringEngineDispT& operator=(IRefactoringEnginePtr pintf)
  {
    TAutoDriver<IRefactoringEngine>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall add_BeforeRefactoringSetup(Borland_studio_toolsapi_tlb::_RefactoringEvent* value/*[in]*/);
  HRESULT         __fastcall remove_BeforeRefactoringSetup(Borland_studio_toolsapi_tlb::_RefactoringEvent* value/*[in]*/);
  HRESULT         __fastcall add_AfterRefactoringSetup(Borland_studio_toolsapi_tlb::_RefactoringEvent* value/*[in]*/);
  HRESULT         __fastcall remove_AfterRefactoringSetup(Borland_studio_toolsapi_tlb::_RefactoringEvent* value/*[in]*/);
  HRESULT         __fastcall add_BeforeRefactoring(Borland_studio_toolsapi_tlb::_RefactoringEvent* value/*[in]*/);
  HRESULT         __fastcall remove_BeforeRefactoring(Borland_studio_toolsapi_tlb::_RefactoringEvent* value/*[in]*/);
  HRESULT         __fastcall add_AfterRefactoring(Borland_studio_toolsapi_tlb::_RefactoringEvent* value/*[in]*/);
  HRESULT         __fastcall remove_AfterRefactoring(Borland_studio_toolsapi_tlb::_RefactoringEvent* value/*[in]*/);
  HRESULT         __fastcall add_RefactoringUndone(Borland_studio_toolsapi_tlb::_RefactoringEvent* value/*[in]*/);
  HRESULT         __fastcall remove_RefactoringUndone(Borland_studio_toolsapi_tlb::_RefactoringEvent* value/*[in]*/);
  HRESULT         __fastcall add_RefactoringClosed(Borland_studio_toolsapi_tlb::_RefactoringEvent* value/*[in]*/);
  HRESULT         __fastcall remove_RefactoringClosed(Borland_studio_toolsapi_tlb::_RefactoringEvent* value/*[in]*/);
  HRESULT         __fastcall add_RefactoringCancelled(Borland_studio_toolsapi_tlb::_RefactoringEvent* value/*[in]*/);
  HRESULT         __fastcall remove_RefactoringCancelled(Borland_studio_toolsapi_tlb::_RefactoringEvent* value/*[in]*/);
  HRESULT         __fastcall OnBeforeRefactoringSetup(Borland_studio_toolsapi_tlb::IRefactoring* refactoring/*[in]*/
                                                      , LPUNKNOWN refactoringNode/*[in]*/, 
                                                      Borland_studio_toolsapi_tlb::IRefactoringUserInterface* refactoringUI/*[in]*/
                                                      , 
                                                      Borland_studio_toolsapi_tlb::IRefactoringNode* rootNode/*[in]*/);
  HRESULT         __fastcall OnAfterRefactoringSetup(Borland_studio_toolsapi_tlb::IRefactoring* refactoring/*[in]*/
                                                     , LPUNKNOWN refactoringNode/*[in]*/, 
                                                     Borland_studio_toolsapi_tlb::IRefactoringUserInterface* refactoringUI/*[in]*/
                                                     , 
                                                     Borland_studio_toolsapi_tlb::IRefactoringNode* rootNode/*[in]*/
                                                     , 
                                                     Mscorlib_tlb::IEnumerable* bufferPositions/*[in]*/);
  HRESULT         __fastcall OnBeforeRefactoring(Borland_studio_toolsapi_tlb::IRefactoring* refactoring/*[in]*/
                                                 , LPUNKNOWN refactoringNode/*[in]*/, 
                                                 Borland_studio_toolsapi_tlb::IRefactoringUserInterface* refactoringUI/*[in]*/
                                                 , 
                                                 Borland_studio_toolsapi_tlb::IRefactoringNode* rootNode/*[in]*/);
  HRESULT         __fastcall OnAfterRefactoring(Borland_studio_toolsapi_tlb::IRefactoring* refactoring/*[in]*/
                                                , LPUNKNOWN refactoringNode/*[in]*/, 
                                                Borland_studio_toolsapi_tlb::IRefactoringUserInterface* refactoringUI/*[in]*/
                                                , 
                                                Borland_studio_toolsapi_tlb::IRefactoringNode* rootNode/*[in]*/
                                                , Mscorlib_tlb::IEnumerable* bufferPositions/*[in]*/);
  HRESULT         __fastcall OnRefactoringUndone(Borland_studio_toolsapi_tlb::IRefactoring* refactoring/*[in]*/
                                                 , LPUNKNOWN refactoringNode/*[in]*/, 
                                                 Borland_studio_toolsapi_tlb::IRefactoringUserInterface* refactoringUI/*[in]*/
                                                 , 
                                                 Borland_studio_toolsapi_tlb::IRefactoringNode* rootNode/*[in]*/);
  HRESULT         __fastcall OnRefactoringClosed(Borland_studio_toolsapi_tlb::IRefactoring* refactoring/*[in]*/
                                                 , LPUNKNOWN refactoringNode/*[in]*/, 
                                                 Borland_studio_toolsapi_tlb::IRefactoringUserInterface* refactoringUI/*[in]*/
                                                 , 
                                                 Borland_studio_toolsapi_tlb::IRefactoringNode* rootNode/*[in]*/);
  HRESULT         __fastcall OnRefactoringCancelled(Borland_studio_toolsapi_tlb::IRefactoring* refactoring/*[in]*/
                                                    , LPUNKNOWN refactoringNode/*[in]*/, 
                                                    Borland_studio_toolsapi_tlb::IRefactoringUserInterface* refactoringUI/*[in]*/
                                                    , 
                                                    Borland_studio_toolsapi_tlb::IRefactoringNode* rootNode/*[in]*/);

};
typedef IRefactoringEngineDispT<IRefactoringEngine> IRefactoringEngineDisp;

typedef TComInterface<IRefactoringNode>  TCOMIRefactoringNode;

// *********************************************************************//
// DispIntf:  IRefactoringNode
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {98FD5A08-D076-36AF-A9C6-BDD9DA6ECC3B}
// *********************************************************************//
template<class T>
class IRefactoringNodeDispT : public TAutoDriver<IRefactoringNode>
{
public:
  IRefactoringNodeDispT(){}

  IRefactoringNodeDispT(IRefactoringNode *pintf)
  {
    TAutoDriver<IRefactoringNode>::Bind(pintf, false);
  }

  IRefactoringNodeDispT(IRefactoringNodePtr pintf)
  {
    TAutoDriver<IRefactoringNode>::Bind(pintf, true);
  }

  IRefactoringNodeDispT& operator=(IRefactoringNode *pintf)
  {
    TAutoDriver<IRefactoringNode>::Bind(pintf, false);
    return *this;
  }

  IRefactoringNodeDispT& operator=(IRefactoringNodePtr pintf)
  {
    TAutoDriver<IRefactoringNode>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall get_Icon(Borland_studio_toolsapi_tlb::RefactoringIcon* pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::RefactoringIcon __fastcall get_Icon(void);
  HRESULT         __fastcall get_Text(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_Text(void);
  HRESULT         __fastcall get_Hint(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_Hint(void);
  HRESULT         __fastcall get_Data(long* pRetVal/*[out,retval]*/);
  long            __fastcall get_Data(void);
  HRESULT         __fastcall set_Data(long pRetVal/*[in]*/);

  __property   Borland_studio_toolsapi_tlb::RefactoringIcon Icon = {read = get_Icon};
  __property   BSTR            Text = {read = get_Text};
  __property   BSTR            Hint = {read = get_Hint};
  __property   long            Data = {read = get_Data, write = set_Data};
};
typedef IRefactoringNodeDispT<IRefactoringNode> IRefactoringNodeDisp;

typedef TComInterface<IBoldNode>  TCOMIBoldNode;

// *********************************************************************//
// DispIntf:  IBoldNode
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F161CCE5-BF7B-3789-956C-24474506EC45}
// *********************************************************************//
template<class T>
class IBoldNodeDispT : public TAutoDriver<IBoldNode>
{
public:
  IBoldNodeDispT(){}

  IBoldNodeDispT(IBoldNode *pintf)
  {
    TAutoDriver<IBoldNode>::Bind(pintf, false);
  }

  IBoldNodeDispT(IBoldNodePtr pintf)
  {
    TAutoDriver<IBoldNode>::Bind(pintf, true);
  }

  IBoldNodeDispT& operator=(IBoldNode *pintf)
  {
    TAutoDriver<IBoldNode>::Bind(pintf, false);
    return *this;
  }

  IBoldNodeDispT& operator=(IBoldNodePtr pintf)
  {
    TAutoDriver<IBoldNode>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall get_BoldStart(long* pRetVal/*[out,retval]*/);
  long            __fastcall get_BoldStart(void);
  HRESULT         __fastcall get_BoldEnd(long* pRetVal/*[out,retval]*/);
  long            __fastcall get_BoldEnd(void);

  __property   long            BoldStart = {read = get_BoldStart};
  __property   long            BoldEnd = {read = get_BoldEnd};
};
typedef IBoldNodeDispT<IBoldNode> IBoldNodeDisp;

typedef TComInterface<IRefactoringFileNode>  TCOMIRefactoringFileNode;

// *********************************************************************//
// DispIntf:  IRefactoringFileNode
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {AD2C828B-04F2-3F73-AA1E-8423B34B1D5B}
// *********************************************************************//
template<class T>
class IRefactoringFileNodeDispT : public TAutoDriver<IRefactoringFileNode>
{
public:
  IRefactoringFileNodeDispT(){}

  IRefactoringFileNodeDispT(IRefactoringFileNode *pintf)
  {
    TAutoDriver<IRefactoringFileNode>::Bind(pintf, false);
  }

  IRefactoringFileNodeDispT(IRefactoringFileNodePtr pintf)
  {
    TAutoDriver<IRefactoringFileNode>::Bind(pintf, true);
  }

  IRefactoringFileNodeDispT& operator=(IRefactoringFileNode *pintf)
  {
    TAutoDriver<IRefactoringFileNode>::Bind(pintf, false);
    return *this;
  }

  IRefactoringFileNodeDispT& operator=(IRefactoringFileNodePtr pintf)
  {
    TAutoDriver<IRefactoringFileNode>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall get_fileName(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_fileName(void);
  HRESULT         __fastcall get_LineNumber(long* pRetVal/*[out,retval]*/);
  long            __fastcall get_LineNumber(void);
  HRESULT         __fastcall get_ColumnNumber(long* pRetVal/*[out,retval]*/);
  long            __fastcall get_ColumnNumber(void);

  __property   BSTR            fileName = {read = get_fileName};
  __property   long            LineNumber = {read = get_LineNumber};
  __property   long            ColumnNumber = {read = get_ColumnNumber};
};
typedef IRefactoringFileNodeDispT<IRefactoringFileNode> IRefactoringFileNodeDisp;

typedef TComInterface<IBaseRefactoringUserInterface>  TCOMIBaseRefactoringUserInterface;

// *********************************************************************//
// DispIntf:  IBaseRefactoringUserInterface
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5BDA4177-24B2-3439-8566-FD3DA833A7C0}
// *********************************************************************//
template<class T>
class IBaseRefactoringUserInterfaceDispT : public TAutoDriver<IBaseRefactoringUserInterface>
{
public:
  IBaseRefactoringUserInterfaceDispT(){}

  IBaseRefactoringUserInterfaceDispT(IBaseRefactoringUserInterface *pintf)
  {
    TAutoDriver<IBaseRefactoringUserInterface>::Bind(pintf, false);
  }

  IBaseRefactoringUserInterfaceDispT(IBaseRefactoringUserInterfacePtr pintf)
  {
    TAutoDriver<IBaseRefactoringUserInterface>::Bind(pintf, true);
  }

  IBaseRefactoringUserInterfaceDispT& operator=(IBaseRefactoringUserInterface *pintf)
  {
    TAutoDriver<IBaseRefactoringUserInterface>::Bind(pintf, false);
    return *this;
  }

  IBaseRefactoringUserInterfaceDispT& operator=(IBaseRefactoringUserInterfacePtr pintf)
  {
    TAutoDriver<IBaseRefactoringUserInterface>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall AddChild(Borland_studio_toolsapi_tlb::IRefactoringNode* parent/*[in]*/
                                      , Borland_studio_toolsapi_tlb::IRefactoringNode* child/*[in]*/);
  HRESULT         __fastcall InsertChild(Borland_studio_toolsapi_tlb::IRefactoringNode* parent/*[in]*/
                                         , 
                                         Borland_studio_toolsapi_tlb::IRefactoringNode* child/*[in]*/
                                         , 
                                         Borland_studio_toolsapi_tlb::NodeInsertType attachMode/*[in]*/);
  HRESULT         __fastcall RemoveChild(Borland_studio_toolsapi_tlb::IRefactoringNode* child/*[in]*/);
  HRESULT         __fastcall ClearChildren(Borland_studio_toolsapi_tlb::IRefactoringNode* parent/*[in]*/);
  HRESULT         __fastcall BeginUpdate();
  HRESULT         __fastcall EndUpdate();
  HRESULT         __fastcall ExpandNode(Borland_studio_toolsapi_tlb::IRefactoringNode* node/*[in]*/);
  HRESULT         __fastcall StatusMessage(BSTR message/*[in]*/);

};
typedef IBaseRefactoringUserInterfaceDispT<IBaseRefactoringUserInterface> IBaseRefactoringUserInterfaceDisp;

typedef TComInterface<IRefactoringUserInterface>  TCOMIRefactoringUserInterface;

// *********************************************************************//
// DispIntf:  IRefactoringUserInterface
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CB03956A-3CDF-35F9-9457-D7F456A05BE4}
// *********************************************************************//
template<class T>
class IRefactoringUserInterfaceDispT : public TAutoDriver<IRefactoringUserInterface>
{
public:
  IRefactoringUserInterfaceDispT(){}

  IRefactoringUserInterfaceDispT(IRefactoringUserInterface *pintf)
  {
    TAutoDriver<IRefactoringUserInterface>::Bind(pintf, false);
  }

  IRefactoringUserInterfaceDispT(IRefactoringUserInterfacePtr pintf)
  {
    TAutoDriver<IRefactoringUserInterface>::Bind(pintf, true);
  }

  IRefactoringUserInterfaceDispT& operator=(IRefactoringUserInterface *pintf)
  {
    TAutoDriver<IRefactoringUserInterface>::Bind(pintf, false);
    return *this;
  }

  IRefactoringUserInterfaceDispT& operator=(IRefactoringUserInterfacePtr pintf)
  {
    TAutoDriver<IRefactoringUserInterface>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall AddRootRefactoringNode(Borland_studio_toolsapi_tlb::IRefactoringNode* node/*[in]*/
                                                    , 
                                                    Borland_studio_toolsapi_tlb::IRefactoring* refactoring/*[in]*/);

};
typedef IRefactoringUserInterfaceDispT<IRefactoringUserInterface> IRefactoringUserInterfaceDisp;

typedef TComInterface<IFindReferenceUserInterface>  TCOMIFindReferenceUserInterface;

// *********************************************************************//
// DispIntf:  IFindReferenceUserInterface
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C06264F1-A014-3EA5-B09E-6C7D032764E2}
// *********************************************************************//
template<class T>
class IFindReferenceUserInterfaceDispT : public TAutoDriver<IFindReferenceUserInterface>
{
public:
  IFindReferenceUserInterfaceDispT(){}

  IFindReferenceUserInterfaceDispT(IFindReferenceUserInterface *pintf)
  {
    TAutoDriver<IFindReferenceUserInterface>::Bind(pintf, false);
  }

  IFindReferenceUserInterfaceDispT(IFindReferenceUserInterfacePtr pintf)
  {
    TAutoDriver<IFindReferenceUserInterface>::Bind(pintf, true);
  }

  IFindReferenceUserInterfaceDispT& operator=(IFindReferenceUserInterface *pintf)
  {
    TAutoDriver<IFindReferenceUserInterface>::Bind(pintf, false);
    return *this;
  }

  IFindReferenceUserInterfaceDispT& operator=(IFindReferenceUserInterfacePtr pintf)
  {
    TAutoDriver<IFindReferenceUserInterface>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall AddRootReferenceNode(Borland_studio_toolsapi_tlb::IRefactoringNode* node/*[in]*/);

};
typedef IFindReferenceUserInterfaceDispT<IFindReferenceUserInterface> IFindReferenceUserInterfaceDisp;

typedef TComInterface<IFindIdentifierRefactoring>  TCOMIFindIdentifierRefactoring;

// *********************************************************************//
// DispIntf:  IFindIdentifierRefactoring
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F542F4E7-4AF1-3BEE-A693-F20B3393A111}
// *********************************************************************//
template<class T>
class IFindIdentifierRefactoringDispT : public TAutoDriver<IFindIdentifierRefactoring>
{
public:
  IFindIdentifierRefactoringDispT(){}

  IFindIdentifierRefactoringDispT(IFindIdentifierRefactoring *pintf)
  {
    TAutoDriver<IFindIdentifierRefactoring>::Bind(pintf, false);
  }

  IFindIdentifierRefactoringDispT(IFindIdentifierRefactoringPtr pintf)
  {
    TAutoDriver<IFindIdentifierRefactoring>::Bind(pintf, true);
  }

  IFindIdentifierRefactoringDispT& operator=(IFindIdentifierRefactoring *pintf)
  {
    TAutoDriver<IFindIdentifierRefactoring>::Bind(pintf, false);
    return *this;
  }

  IFindIdentifierRefactoringDispT& operator=(IFindIdentifierRefactoringPtr pintf)
  {
    TAutoDriver<IFindIdentifierRefactoring>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall FindIdentifier(BSTR symbolName/*[in]*/, 
                                            VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall FindIdentifier(BSTR symbolName/*[in]*/);

};
typedef IFindIdentifierRefactoringDispT<IFindIdentifierRefactoring> IFindIdentifierRefactoringDisp;

typedef TComInterface<IRefactoringRegistrar>  TCOMIRefactoringRegistrar;

// *********************************************************************//
// DispIntf:  IRefactoringRegistrar
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {71BF7B07-B420-3E5A-979A-03BFF80FCCBE}
// *********************************************************************//
template<class T>
class IRefactoringRegistrarDispT : public TAutoDriver<IRefactoringRegistrar>
{
public:
  IRefactoringRegistrarDispT(){}

  IRefactoringRegistrarDispT(IRefactoringRegistrar *pintf)
  {
    TAutoDriver<IRefactoringRegistrar>::Bind(pintf, false);
  }

  IRefactoringRegistrarDispT(IRefactoringRegistrarPtr pintf)
  {
    TAutoDriver<IRefactoringRegistrar>::Bind(pintf, true);
  }

  IRefactoringRegistrarDispT& operator=(IRefactoringRegistrar *pintf)
  {
    TAutoDriver<IRefactoringRegistrar>::Bind(pintf, false);
    return *this;
  }

  IRefactoringRegistrarDispT& operator=(IRefactoringRegistrarPtr pintf)
  {
    TAutoDriver<IRefactoringRegistrar>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall RegisterRefactoring(Borland_studio_toolsapi_tlb::IRefactoringItem* Item/*[in]*/
                                                 , BSTR personality/*[in]*/);
  HRESULT         __fastcall UnregisterRefactoring(Borland_studio_toolsapi_tlb::IRefactoringItem* Item/*[in]*/
                                                   , BSTR personality/*[in]*/);
  HRESULT         __fastcall GetRefactoringsEnumerator(BSTR personality/*[in]*/, 
                                                       IEnumVARIANT** pRetVal/*[out,retval]*/);
  IEnumVARIANT*   __fastcall GetRefactoringsEnumerator(BSTR personality/*[in]*/);
  HRESULT         __fastcall add_RefactoringListChanged(Borland_studio_toolsapi_tlb::_RefactoringRegistrarEventHandler* value/*[in]*/);
  HRESULT         __fastcall remove_RefactoringListChanged(Borland_studio_toolsapi_tlb::_RefactoringRegistrarEventHandler* value/*[in]*/);
  HRESULT         __fastcall OnRefactoringListChanged();

};
typedef IRefactoringRegistrarDispT<IRefactoringRegistrar> IRefactoringRegistrarDisp;

// *********************************************************************//
// SmartIntf: TCOM_RefactoringRegistrarEventHandler
// Interface: _RefactoringRegistrarEventHandler
// *********************************************************************//
template <class T /* _RefactoringRegistrarEventHandler */ >
class TCOM_RefactoringRegistrarEventHandlerT : public TComInterface<_RefactoringRegistrarEventHandler>, public TComInterfaceBase<IUnknown>
{
public:
  TCOM_RefactoringRegistrarEventHandlerT() {}
  TCOM_RefactoringRegistrarEventHandlerT(_RefactoringRegistrarEventHandler *intf, bool addRef = false) : TComInterface<_RefactoringRegistrarEventHandler>(intf, addRef) {}
  TCOM_RefactoringRegistrarEventHandlerT(const TCOM_RefactoringRegistrarEventHandlerT& src) : TComInterface<_RefactoringRegistrarEventHandler>(src) {}
  TCOM_RefactoringRegistrarEventHandlerT& operator=(const TCOM_RefactoringRegistrarEventHandlerT& src) { Bind(src, true); return *this;}


};
typedef TCOM_RefactoringRegistrarEventHandlerT<_RefactoringRegistrarEventHandler> TCOM_RefactoringRegistrarEventHandler;

// *********************************************************************//
// DispIntf:  _RefactoringRegistrarEventHandler
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {E374BD1F-8457-30A6-9B09-B934711DDACF}
// *********************************************************************//
template<class T>
class _RefactoringRegistrarEventHandlerDispT : public TAutoDriver<_RefactoringRegistrarEventHandler>
{
public:
  _RefactoringRegistrarEventHandlerDispT(){}

  _RefactoringRegistrarEventHandlerDispT(_RefactoringRegistrarEventHandler *pintf)
  {
    TAutoDriver<_RefactoringRegistrarEventHandler>::Bind(pintf, false);
  }

  _RefactoringRegistrarEventHandlerDispT(_RefactoringRegistrarEventHandlerPtr pintf)
  {
    TAutoDriver<_RefactoringRegistrarEventHandler>::Bind(pintf, true);
  }

  _RefactoringRegistrarEventHandlerDispT& operator=(_RefactoringRegistrarEventHandler *pintf)
  {
    TAutoDriver<_RefactoringRegistrarEventHandler>::Bind(pintf, false);
    return *this;
  }

  _RefactoringRegistrarEventHandlerDispT& operator=(_RefactoringRegistrarEventHandlerPtr pintf)
  {
    TAutoDriver<_RefactoringRegistrarEventHandler>::Bind(pintf, true);
    return *this;
  }

  HRESULT BindDefault()
  {
    return OLECHECK(Bind(CLSID_RefactoringRegistrarEventHandler));
  }

  HRESULT BindRunning()
  {
    return BindToActive(CLSID_RefactoringRegistrarEventHandler);
  }


};
typedef _RefactoringRegistrarEventHandlerDispT<_RefactoringRegistrarEventHandler> _RefactoringRegistrarEventHandlerDisp;

// *********************************************************************//
// SmartIntf: TCOM_Platforms
// Interface: _Platforms
// *********************************************************************//
template <class T /* _Platforms */ >
class TCOM_PlatformsT : public TComInterface<_Platforms>, public TComInterfaceBase<IUnknown>
{
public:
  TCOM_PlatformsT() {}
  TCOM_PlatformsT(_Platforms *intf, bool addRef = false) : TComInterface<_Platforms>(intf, addRef) {}
  TCOM_PlatformsT(const TCOM_PlatformsT& src) : TComInterface<_Platforms>(src) {}
  TCOM_PlatformsT& operator=(const TCOM_PlatformsT& src) { Bind(src, true); return *this;}


};
typedef TCOM_PlatformsT<_Platforms> TCOM_Platforms;

// *********************************************************************//
// DispIntf:  _Platforms
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {78E17028-1AD5-3077-972A-189336D59753}
// *********************************************************************//
template<class T>
class _PlatformsDispT : public TAutoDriver<_Platforms>
{
public:
  _PlatformsDispT(){}

  _PlatformsDispT(_Platforms *pintf)
  {
    TAutoDriver<_Platforms>::Bind(pintf, false);
  }

  _PlatformsDispT(_PlatformsPtr pintf)
  {
    TAutoDriver<_Platforms>::Bind(pintf, true);
  }

  _PlatformsDispT& operator=(_Platforms *pintf)
  {
    TAutoDriver<_Platforms>::Bind(pintf, false);
    return *this;
  }

  _PlatformsDispT& operator=(_PlatformsPtr pintf)
  {
    TAutoDriver<_Platforms>::Bind(pintf, true);
    return *this;
  }

  HRESULT BindDefault()
  {
    return OLECHECK(Bind(CLSID_Platforms));
  }

  HRESULT BindRunning()
  {
    return BindToActive(CLSID_Platforms);
  }


};
typedef _PlatformsDispT<_Platforms> _PlatformsDisp;

typedef TComInterface<IOTAHelpInsight>  TCOMIOTAHelpInsight;

// *********************************************************************//
// DispIntf:  IOTAHelpInsight
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D05FBF46-8468-4934-BF70-7EAE1AB8FEAB}
// *********************************************************************//
template<class T>
class IOTAHelpInsightDispT : public TAutoDriver<IOTAHelpInsight>
{
public:
  IOTAHelpInsightDispT(){}

  IOTAHelpInsightDispT(IOTAHelpInsight *pintf)
  {
    TAutoDriver<IOTAHelpInsight>::Bind(pintf, false);
  }

  IOTAHelpInsightDispT(IOTAHelpInsightPtr pintf)
  {
    TAutoDriver<IOTAHelpInsight>::Bind(pintf, true);
  }

  IOTAHelpInsightDispT& operator=(IOTAHelpInsight *pintf)
  {
    TAutoDriver<IOTAHelpInsight>::Bind(pintf, false);
    return *this;
  }

  IOTAHelpInsightDispT& operator=(IOTAHelpInsightPtr pintf)
  {
    TAutoDriver<IOTAHelpInsight>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall GetEditorDocInfo(long* line/*[in,out]*/, long* col/*[in,out]*/, 
                                              long* width/*[in,out]*/, BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall GetEditorDocInfo(long* line/*[in,out]*/, long* col/*[in,out]*/, 
                                              long* width/*[in,out]*/);
  HRESULT         __fastcall GetSymbolDocInfo(BSTR symbolName/*[in]*/, BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall GetSymbolDocInfo(BSTR symbolName/*[in]*/);
  HRESULT         __fastcall IsEnabled(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall IsEnabled(void);

};
typedef IOTAHelpInsightDispT<IOTAHelpInsight> IOTAHelpInsightDisp;

typedef TComInterface<IOTAModuleServices>  TCOMIOTAModuleServices;

// *********************************************************************//
// DispIntf:  IOTAModuleServices
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D1FB17B4-C46C-4C65-97AF-1BA38016E80D}
// *********************************************************************//
template<class T>
class IOTAModuleServicesDispT : public TAutoDriver<IOTAModuleServices>
{
public:
  IOTAModuleServicesDispT(){}

  IOTAModuleServicesDispT(IOTAModuleServices *pintf)
  {
    TAutoDriver<IOTAModuleServices>::Bind(pintf, false);
  }

  IOTAModuleServicesDispT(IOTAModuleServicesPtr pintf)
  {
    TAutoDriver<IOTAModuleServices>::Bind(pintf, true);
  }

  IOTAModuleServicesDispT& operator=(IOTAModuleServices *pintf)
  {
    TAutoDriver<IOTAModuleServices>::Bind(pintf, false);
    return *this;
  }

  IOTAModuleServicesDispT& operator=(IOTAModuleServicesPtr pintf)
  {
    TAutoDriver<IOTAModuleServices>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall CloseAll(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall CloseAll(void);
  HRESULT         __fastcall CreateModule(Borland_studio_toolsapi_tlb::IOTACreator* Creator/*[in]*/
                                          , 
                                          Borland_studio_toolsapi_tlb::IOTAModule** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAModule* __fastcall CreateModule(Borland_studio_toolsapi_tlb::IOTACreator* Creator/*[in]*/);
  HRESULT         __fastcall get_CurrentModule(Borland_studio_toolsapi_tlb::IOTAModule** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAModulePtr __fastcall get_CurrentModule(void);
  HRESULT         __fastcall FindModule(BSTR fileName/*[in]*/, 
                                        Borland_studio_toolsapi_tlb::IOTAModule** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAModule* __fastcall FindModule(BSTR fileName/*[in]*/);
  HRESULT         __fastcall get_ModuleCount(long* pRetVal/*[out,retval]*/);
  long            __fastcall get_ModuleCount(void);
  HRESULT         __fastcall GetModule(long index/*[in]*/, 
                                       Borland_studio_toolsapi_tlb::IOTAModule** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAModule* __fastcall GetModule(long index/*[in]*/);
  HRESULT         __fastcall NewModule(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall NewModule(void);
  HRESULT         __fastcall SaveAll(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall SaveAll(void);
  HRESULT         __fastcall get_MainProjectGroup(Borland_studio_toolsapi_tlb::IOTAProjectGroup** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAProjectGroupPtr __fastcall get_MainProjectGroup(void);
  HRESULT         __fastcall get_ActiveProject(Borland_studio_toolsapi_tlb::IOTAProject** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAProjectPtr __fastcall get_ActiveProject(void);
  HRESULT         __fastcall FindProjectFromFileNameEntry(BSTR fileName/*[in]*/, 
                                                          Borland_studio_toolsapi_tlb::IOTAProject** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAProject* __fastcall FindProjectFromFileNameEntry(BSTR fileName/*[in]*/);
  HRESULT         __fastcall OpenModule(BSTR fileName/*[in]*/, 
                                        Borland_studio_toolsapi_tlb::IOTAModule** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAModule* __fastcall OpenModule(BSTR fileName/*[in]*/);
  HRESULT         __fastcall AddFileSystem(Borland_studio_toolsapi_tlb::IOTAFileSystem* fileSystem/*[in]*/
                                           , long* pRetVal/*[out,retval]*/);
  long            __fastcall AddFileSystem(Borland_studio_toolsapi_tlb::IOTAFileSystem* fileSystem/*[in]*/);
  HRESULT         __fastcall RemoveFileSystem(long index/*[in]*/);
  HRESULT         __fastcall GetNewModuleAndClassName(BSTR Prefix/*[in]*/, 
                                                      BSTR* unitIdent/*[in,out]*/, 
                                                      BSTR* className/*[in,out]*/, 
                                                      BSTR* fileName/*[in,out]*/);

  __property   Borland_studio_toolsapi_tlb::IOTAModulePtr CurrentModule = {read = get_CurrentModule};
  __property   long            ModuleCount = {read = get_ModuleCount};
  __property   Borland_studio_toolsapi_tlb::IOTAProjectGroupPtr MainProjectGroup = {read = get_MainProjectGroup};
  __property   Borland_studio_toolsapi_tlb::IOTAProjectPtr ActiveProject = {read = get_ActiveProject};
};
typedef IOTAModuleServicesDispT<IOTAModuleServices> IOTAModuleServicesDisp;

typedef TComInterface<IOTAEditBlock>  TCOMIOTAEditBlock;

// *********************************************************************//
// DispIntf:  IOTAEditBlock
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F668E20A-7DCF-4D9D-82B1-EB5A6D32FD18}
// *********************************************************************//
template<class T>
class IOTAEditBlockDispT : public TAutoDriver<IOTAEditBlock>
{
public:
  IOTAEditBlockDispT(){}

  IOTAEditBlockDispT(IOTAEditBlock *pintf)
  {
    TAutoDriver<IOTAEditBlock>::Bind(pintf, false);
  }

  IOTAEditBlockDispT(IOTAEditBlockPtr pintf)
  {
    TAutoDriver<IOTAEditBlock>::Bind(pintf, true);
  }

  IOTAEditBlockDispT& operator=(IOTAEditBlock *pintf)
  {
    TAutoDriver<IOTAEditBlock>::Bind(pintf, false);
    return *this;
  }

  IOTAEditBlockDispT& operator=(IOTAEditBlockPtr pintf)
  {
    TAutoDriver<IOTAEditBlock>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall BeginBlock();
  HRESULT         __fastcall Copy(VARIANT_BOOL append/*[in]*/);
  HRESULT         __fastcall Cut(VARIANT_BOOL append/*[in]*/);
  HRESULT         __fastcall Delete(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall Delete(void);
  HRESULT         __fastcall EndBlock();
  HRESULT         __fastcall Extend(long newRow/*[in]*/, long newCol/*[in]*/, 
                                    VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall Extend(long newRow/*[in]*/, long newCol/*[in]*/);
  HRESULT         __fastcall ExtendPageUp(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall ExtendPageUp(void);
  HRESULT         __fastcall ExtendPageDown(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall ExtendPageDown(void);
  HRESULT         __fastcall ExtendReal(long newRow/*[in]*/, long newCol/*[in]*/, 
                                        VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall ExtendReal(long newRow/*[in]*/, long newCol/*[in]*/);
  HRESULT         __fastcall ExtendRelative(long deltaRow/*[in]*/, long deltaCol/*[in]*/, 
                                            VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall ExtendRelative(long deltaRow/*[in]*/, long deltaCol/*[in]*/);
  HRESULT         __fastcall get_EndingColumn(long* pRetVal/*[out,retval]*/);
  long            __fastcall get_EndingColumn(void);
  HRESULT         __fastcall get_EndingRow(long* pRetVal/*[out,retval]*/);
  long            __fastcall get_EndingRow(void);
  HRESULT         __fastcall get_IsValid(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_IsValid(void);
  HRESULT         __fastcall get_Size(long* pRetVal/*[out,retval]*/);
  long            __fastcall get_Size(void);
  HRESULT         __fastcall get_StartingColumn(long* pRetVal/*[out,retval]*/);
  long            __fastcall get_StartingColumn(void);
  HRESULT         __fastcall get_StartingRow(long* pRetVal/*[out,retval]*/);
  long            __fastcall get_StartingRow(void);
  HRESULT         __fastcall get_Style(Borland_studio_toolsapi_tlb::OTABlockType* pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::OTABlockType __fastcall get_Style(void);
  HRESULT         __fastcall set_Style(Borland_studio_toolsapi_tlb::OTABlockType pRetVal/*[in]*/);
  HRESULT         __fastcall get_Text(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_Text(void);
  HRESULT         __fastcall get_Visible(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_Visible(void);
  HRESULT         __fastcall set_Visible(VARIANT_BOOL pRetVal/*[in]*/);
  HRESULT         __fastcall Indent(long magnitude/*[in]*/);
  HRESULT         __fastcall LowerCase();
  HRESULT         __fastcall Print(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall Print(void);
  HRESULT         __fastcall Reset();
  HRESULT         __fastcall Restore();
  HRESULT         __fastcall Save();
  HRESULT         __fastcall SaveToFile(BSTR fileName/*[in]*/, VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall SaveToFile(BSTR fileName/*[in]*/);
  HRESULT         __fastcall ToggleCase();
  HRESULT         __fastcall UpperCase();

  __property   long            EndingColumn = {read = get_EndingColumn};
  __property   long            EndingRow = {read = get_EndingRow};
  __property   VARIANT_BOOL    IsValid = {read = get_IsValid};
  __property   long            Size = {read = get_Size};
  __property   long            StartingColumn = {read = get_StartingColumn};
  __property   long            StartingRow = {read = get_StartingRow};
  __property   Borland_studio_toolsapi_tlb::OTABlockType Style = {read = get_Style, write = set_Style};
  __property   BSTR            Text = {read = get_Text};
  __property   VARIANT_BOOL    Visible = {read = get_Visible, write = set_Visible};
};
typedef IOTAEditBlockDispT<IOTAEditBlock> IOTAEditBlockDisp;

typedef TComInterface<IOTABufferOptions>  TCOMIOTABufferOptions;

// *********************************************************************//
// DispIntf:  IOTABufferOptions
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D724AD3A-A9A3-47CB-A160-B29BB427B34F}
// *********************************************************************//
template<class T>
class IOTABufferOptionsDispT : public TAutoDriver<IOTABufferOptions>
{
public:
  IOTABufferOptionsDispT(){}

  IOTABufferOptionsDispT(IOTABufferOptions *pintf)
  {
    TAutoDriver<IOTABufferOptions>::Bind(pintf, false);
  }

  IOTABufferOptionsDispT(IOTABufferOptionsPtr pintf)
  {
    TAutoDriver<IOTABufferOptions>::Bind(pintf, true);
  }

  IOTABufferOptionsDispT& operator=(IOTABufferOptions *pintf)
  {
    TAutoDriver<IOTABufferOptions>::Bind(pintf, false);
    return *this;
  }

  IOTABufferOptionsDispT& operator=(IOTABufferOptionsPtr pintf)
  {
    TAutoDriver<IOTABufferOptions>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall get_AutoIndent(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_AutoIndent(void);
  HRESULT         __fastcall set_AutoIndent(VARIANT_BOOL pRetVal/*[in]*/);
  HRESULT         __fastcall get_BackspaceUnindents(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_BackspaceUnindents(void);
  HRESULT         __fastcall set_BackspaceUnindents(VARIANT_BOOL pRetVal/*[in]*/);
  HRESULT         __fastcall get_CreateBackupFile(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_CreateBackupFile(void);
  HRESULT         __fastcall set_CreateBackupFile(VARIANT_BOOL pRetVal/*[in]*/);
  HRESULT         __fastcall get_CursorThroughTabs(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_CursorThroughTabs(void);
  HRESULT         __fastcall set_CursorThroughTabs(VARIANT_BOOL pRetVal/*[in]*/);
  HRESULT         __fastcall get_InsertMode(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_InsertMode(void);
  HRESULT         __fastcall set_InsertMode(VARIANT_BOOL pRetVal/*[in]*/);
  HRESULT         __fastcall get_GroupUndo(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_GroupUndo(void);
  HRESULT         __fastcall set_GroupUndo(VARIANT_BOOL pRetVal/*[in]*/);
  HRESULT         __fastcall get_KeepTrailingBlanks(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_KeepTrailingBlanks(void);
  HRESULT         __fastcall set_KeepTrailingBlanks(VARIANT_BOOL pRetVal/*[in]*/);
  HRESULT         __fastcall get_LeftGutterWidth(long* pRetVal/*[out,retval]*/);
  long            __fastcall get_LeftGutterWidth(void);
  HRESULT         __fastcall set_LeftGutterWidth(long pRetVal/*[in]*/);
  HRESULT         __fastcall get_RightMargin(long* pRetVal/*[out,retval]*/);
  long            __fastcall get_RightMargin(void);
  HRESULT         __fastcall set_RightMargin(long pRetVal/*[in]*/);
  HRESULT         __fastcall get_OverwriteBlocks(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_OverwriteBlocks(void);
  HRESULT         __fastcall set_OverwriteBlocks(VARIANT_BOOL pRetVal/*[in]*/);
  HRESULT         __fastcall get_PersistentBlocks(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_PersistentBlocks(void);
  HRESULT         __fastcall set_PersistentBlocks(VARIANT_BOOL pRetVal/*[in]*/);
  HRESULT         __fastcall get_PreserveLineEnds(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_PreserveLineEnds(void);
  HRESULT         __fastcall set_PreserveLineEnds(VARIANT_BOOL pRetVal/*[in]*/);
  HRESULT         __fastcall get_SmartTab(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_SmartTab(void);
  HRESULT         __fastcall set_SmartTab(VARIANT_BOOL pRetVal/*[in]*/);
  HRESULT         __fastcall get_SyntaxHighlight(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_SyntaxHighlight(void);
  HRESULT         __fastcall set_SyntaxHighlight(VARIANT_BOOL pRetVal/*[in]*/);
  HRESULT         __fastcall get_TabStops(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_TabStops(void);
  HRESULT         __fastcall set_TabStops(BSTR pRetVal/*[in]*/);
  HRESULT         __fastcall get_UndoAfterSave(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_UndoAfterSave(void);
  HRESULT         __fastcall set_UndoAfterSave(VARIANT_BOOL pRetVal/*[in]*/);
  HRESULT         __fastcall get_UndoLimit(long* pRetVal/*[out,retval]*/);
  long            __fastcall get_UndoLimit(void);
  HRESULT         __fastcall set_UndoLimit(long pRetVal/*[in]*/);
  HRESULT         __fastcall get_UseTabCharacter(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_UseTabCharacter(void);
  HRESULT         __fastcall set_UseTabCharacter(VARIANT_BOOL pRetVal/*[in]*/);
  HRESULT         __fastcall get_ShowSpace(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_ShowSpace(void);
  HRESULT         __fastcall set_ShowSpace(VARIANT_BOOL pRetVal/*[in]*/);
  HRESULT         __fastcall get_ShowTab(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_ShowTab(void);
  HRESULT         __fastcall set_ShowTab(VARIANT_BOOL pRetVal/*[in]*/);

  __property   VARIANT_BOOL    AutoIndent = {read = get_AutoIndent, write = set_AutoIndent};
  __property   VARIANT_BOOL    BackspaceUnindents = {read = get_BackspaceUnindents, write = set_BackspaceUnindents};
  __property   VARIANT_BOOL    CreateBackupFile = {read = get_CreateBackupFile, write = set_CreateBackupFile};
  __property   VARIANT_BOOL    CursorThroughTabs = {read = get_CursorThroughTabs, write = set_CursorThroughTabs};
  __property   VARIANT_BOOL    InsertMode = {read = get_InsertMode, write = set_InsertMode};
  __property   VARIANT_BOOL    GroupUndo = {read = get_GroupUndo, write = set_GroupUndo};
  __property   VARIANT_BOOL    KeepTrailingBlanks = {read = get_KeepTrailingBlanks, write = set_KeepTrailingBlanks};
  __property   long            LeftGutterWidth = {read = get_LeftGutterWidth, write = set_LeftGutterWidth};
  __property   long            RightMargin = {read = get_RightMargin, write = set_RightMargin};
  __property   VARIANT_BOOL    OverwriteBlocks = {read = get_OverwriteBlocks, write = set_OverwriteBlocks};
  __property   VARIANT_BOOL    PersistentBlocks = {read = get_PersistentBlocks, write = set_PersistentBlocks};
  __property   VARIANT_BOOL    PreserveLineEnds = {read = get_PreserveLineEnds, write = set_PreserveLineEnds};
  __property   VARIANT_BOOL    SmartTab = {read = get_SmartTab, write = set_SmartTab};
  __property   VARIANT_BOOL    SyntaxHighlight = {read = get_SyntaxHighlight, write = set_SyntaxHighlight};
  __property   BSTR            TabStops = {read = get_TabStops, write = set_TabStops};
  __property   VARIANT_BOOL    UndoAfterSave = {read = get_UndoAfterSave, write = set_UndoAfterSave};
  __property   long            UndoLimit = {read = get_UndoLimit, write = set_UndoLimit};
  __property   VARIANT_BOOL    UseTabCharacter = {read = get_UseTabCharacter, write = set_UseTabCharacter};
  __property   VARIANT_BOOL    ShowSpace = {read = get_ShowSpace, write = set_ShowSpace};
  __property   VARIANT_BOOL    ShowTab = {read = get_ShowTab, write = set_ShowTab};
};
typedef IOTABufferOptionsDispT<IOTABufferOptions> IOTABufferOptionsDisp;

// *********************************************************************//
// SmartIntf: TCOM_OTAEditorFileTypes
// Interface: _OTAEditorFileTypes
// *********************************************************************//
template <class T /* _OTAEditorFileTypes */ >
class TCOM_OTAEditorFileTypesT : public TComInterface<_OTAEditorFileTypes>, public TComInterfaceBase<IUnknown>
{
public:
  TCOM_OTAEditorFileTypesT() {}
  TCOM_OTAEditorFileTypesT(_OTAEditorFileTypes *intf, bool addRef = false) : TComInterface<_OTAEditorFileTypes>(intf, addRef) {}
  TCOM_OTAEditorFileTypesT(const TCOM_OTAEditorFileTypesT& src) : TComInterface<_OTAEditorFileTypes>(src) {}
  TCOM_OTAEditorFileTypesT& operator=(const TCOM_OTAEditorFileTypesT& src) { Bind(src, true); return *this;}


};
typedef TCOM_OTAEditorFileTypesT<_OTAEditorFileTypes> TCOM_OTAEditorFileTypes;

// *********************************************************************//
// DispIntf:  _OTAEditorFileTypes
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {D3BE9DD0-F947-3AC2-8F33-675A038E0E81}
// *********************************************************************//
template<class T>
class _OTAEditorFileTypesDispT : public TAutoDriver<_OTAEditorFileTypes>
{
public:
  _OTAEditorFileTypesDispT(){}

  _OTAEditorFileTypesDispT(_OTAEditorFileTypes *pintf)
  {
    TAutoDriver<_OTAEditorFileTypes>::Bind(pintf, false);
  }

  _OTAEditorFileTypesDispT(_OTAEditorFileTypesPtr pintf)
  {
    TAutoDriver<_OTAEditorFileTypes>::Bind(pintf, true);
  }

  _OTAEditorFileTypesDispT& operator=(_OTAEditorFileTypes *pintf)
  {
    TAutoDriver<_OTAEditorFileTypes>::Bind(pintf, false);
    return *this;
  }

  _OTAEditorFileTypesDispT& operator=(_OTAEditorFileTypesPtr pintf)
  {
    TAutoDriver<_OTAEditorFileTypes>::Bind(pintf, true);
    return *this;
  }

  HRESULT BindDefault()
  {
    return OLECHECK(Bind(CLSID_OTAEditorFileTypes));
  }

  HRESULT BindRunning()
  {
    return BindToActive(CLSID_OTAEditorFileTypes);
  }


};
typedef _OTAEditorFileTypesDispT<_OTAEditorFileTypes> _OTAEditorFileTypesDisp;

typedef TComInterface<IOTAEditorService>  TCOMIOTAEditorService;

// *********************************************************************//
// DispIntf:  IOTAEditorService
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B51B7655-F1F7-477D-9B35-395BFB5BA9AA}
// *********************************************************************//
template<class T>
class IOTAEditorServiceDispT : public TAutoDriver<IOTAEditorService>
{
public:
  IOTAEditorServiceDispT(){}

  IOTAEditorServiceDispT(IOTAEditorService *pintf)
  {
    TAutoDriver<IOTAEditorService>::Bind(pintf, false);
  }

  IOTAEditorServiceDispT(IOTAEditorServicePtr pintf)
  {
    TAutoDriver<IOTAEditorService>::Bind(pintf, true);
  }

  IOTAEditorServiceDispT& operator=(IOTAEditorService *pintf)
  {
    TAutoDriver<IOTAEditorService>::Bind(pintf, false);
    return *this;
  }

  IOTAEditorServiceDispT& operator=(IOTAEditorServicePtr pintf)
  {
    TAutoDriver<IOTAEditorService>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall get_EditOptions(Borland_studio_toolsapi_tlb::IOTAEditOptions** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAEditOptionsPtr __fastcall get_EditOptions(void);
  HRESULT         __fastcall GetEditOptions(BSTR IDString/*[in]*/, 
                                            Borland_studio_toolsapi_tlb::IOTAEditOptions** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAEditOptions* __fastcall GetEditOptions(BSTR IDString/*[in]*/);
  HRESULT         __fastcall GetEditOptionsForFile(BSTR fileName/*[in]*/, 
                                                   Borland_studio_toolsapi_tlb::IOTAEditOptions** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAEditOptions* __fastcall GetEditOptionsForFile(BSTR fileName/*[in]*/);

  __property   Borland_studio_toolsapi_tlb::IOTAEditOptionsPtr EditOptions = {read = get_EditOptions};
};
typedef IOTAEditorServiceDispT<IOTAEditorService> IOTAEditorServiceDisp;

typedef TComInterface<IOTAEditOptions>  TCOMIOTAEditOptions;

// *********************************************************************//
// DispIntf:  IOTAEditOptions
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CD847E36-EBE2-4448-9106-4D67835D4995}
// *********************************************************************//
template<class T>
class IOTAEditOptionsDispT : public TAutoDriver<IOTAEditOptions>
{
public:
  IOTAEditOptionsDispT(){}

  IOTAEditOptionsDispT(IOTAEditOptions *pintf)
  {
    TAutoDriver<IOTAEditOptions>::Bind(pintf, false);
  }

  IOTAEditOptionsDispT(IOTAEditOptionsPtr pintf)
  {
    TAutoDriver<IOTAEditOptions>::Bind(pintf, true);
  }

  IOTAEditOptionsDispT& operator=(IOTAEditOptions *pintf)
  {
    TAutoDriver<IOTAEditOptions>::Bind(pintf, false);
    return *this;
  }

  IOTAEditOptionsDispT& operator=(IOTAEditOptionsPtr pintf)
  {
    TAutoDriver<IOTAEditOptions>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall BeginUpdate();
  HRESULT         __fastcall EndUpdate();
  HRESULT         __fastcall get_BlockIndent(long* pRetVal/*[out,retval]*/);
  long            __fastcall get_BlockIndent(void);
  HRESULT         __fastcall set_BlockIndent(long pRetVal/*[in]*/);
  HRESULT         __fastcall get_BufferOptions(Borland_studio_toolsapi_tlb::IOTABufferOptions** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTABufferOptionsPtr __fastcall get_BufferOptions(void);
  HRESULT         __fastcall get_FontName(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_FontName(void);
  HRESULT         __fastcall set_FontName(BSTR pRetVal/*[in]*/);
  HRESULT         __fastcall get_FontSize(long* pRetVal/*[out,retval]*/);
  long            __fastcall get_FontSize(void);
  HRESULT         __fastcall set_FontSize(long pRetVal/*[in]*/);
  HRESULT         __fastcall get_ForceCutCopyEnabled(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_ForceCutCopyEnabled(void);
  HRESULT         __fastcall set_ForceCutCopyEnabled(VARIANT_BOOL pRetVal/*[in]*/);
  HRESULT         __fastcall get_UseBriefCursorShapes(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_UseBriefCursorShapes(void);
  HRESULT         __fastcall set_UseBriefCursorShapes(VARIANT_BOOL pRetVal/*[in]*/);
  HRESULT         __fastcall get_UseBriefRegularExpressions(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_UseBriefRegularExpressions(void);
  HRESULT         __fastcall set_UseBriefRegularExpressions(VARIANT_BOOL pRetVal/*[in]*/);
  HRESULT         __fastcall get_Extensions(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_Extensions(void);
  HRESULT         __fastcall set_Extensions(BSTR pRetVal/*[in]*/);
  HRESULT         __fastcall get_OptionsName(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_OptionsName(void);
  HRESULT         __fastcall set_OptionsName(BSTR pRetVal/*[in]*/);
  HRESULT         __fastcall get_OptionsIDString(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_OptionsIDString(void);
  HRESULT         __fastcall get_OptionsIndex(long* pRetVal/*[out,retval]*/);
  long            __fastcall get_OptionsIndex(void);

  __property   long            BlockIndent = {read = get_BlockIndent, write = set_BlockIndent};
  __property   Borland_studio_toolsapi_tlb::IOTABufferOptionsPtr BufferOptions = {read = get_BufferOptions};
  __property   BSTR            FontName = {read = get_FontName, write = set_FontName};
  __property   long            FontSize = {read = get_FontSize, write = set_FontSize};
  __property   VARIANT_BOOL    ForceCutCopyEnabled = {read = get_ForceCutCopyEnabled, write = set_ForceCutCopyEnabled};
  __property   VARIANT_BOOL    UseBriefCursorShapes = {read = get_UseBriefCursorShapes, write = set_UseBriefCursorShapes};
  __property   VARIANT_BOOL    UseBriefRegularExpressions = {read = get_UseBriefRegularExpressions, write = set_UseBriefRegularExpressions};
  __property   BSTR            Extensions = {read = get_Extensions, write = set_Extensions};
  __property   BSTR            OptionsName = {read = get_OptionsName, write = set_OptionsName};
  __property   BSTR            OptionsIDString = {read = get_OptionsIDString};
  __property   long            OptionsIndex = {read = get_OptionsIndex};
};
typedef IOTAEditOptionsDispT<IOTAEditOptions> IOTAEditOptionsDisp;

typedef TComInterface<IOTAEditBuffer>  TCOMIOTAEditBuffer;

// *********************************************************************//
// DispIntf:  IOTAEditBuffer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7F71A0BA-1A6D-411C-B763-73434ACD7DF5}
// *********************************************************************//
template<class T>
class IOTAEditBufferDispT : public TAutoDriver<IOTAEditBuffer>
{
public:
  IOTAEditBufferDispT(){}

  IOTAEditBufferDispT(IOTAEditBuffer *pintf)
  {
    TAutoDriver<IOTAEditBuffer>::Bind(pintf, false);
  }

  IOTAEditBufferDispT(IOTAEditBufferPtr pintf)
  {
    TAutoDriver<IOTAEditBuffer>::Bind(pintf, true);
  }

  IOTAEditBufferDispT& operator=(IOTAEditBuffer *pintf)
  {
    TAutoDriver<IOTAEditBuffer>::Bind(pintf, false);
    return *this;
  }

  IOTAEditBufferDispT& operator=(IOTAEditBufferPtr pintf)
  {
    TAutoDriver<IOTAEditBuffer>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall ClearUndo();
  HRESULT         __fastcall get_BufferOptions(Borland_studio_toolsapi_tlb::IOTABufferOptions** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTABufferOptionsPtr __fastcall get_BufferOptions(void);
  HRESULT         __fastcall get_CurrentDate(DATE* pRetVal/*[out,retval]*/);
  DATE            __fastcall get_CurrentDate(void);
  HRESULT         __fastcall get_EditBlock(Borland_studio_toolsapi_tlb::IOTAEditBlock** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAEditBlockPtr __fastcall get_EditBlock(void);
  HRESULT         __fastcall get_EditPosition(Borland_studio_toolsapi_tlb::IOTAEditPosition** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAEditPositionPtr __fastcall get_EditPosition(void);
  HRESULT         __fastcall get_InitialDate(DATE* pRetVal/*[out,retval]*/);
  DATE            __fastcall get_InitialDate(void);
  HRESULT         __fastcall get_IsModified(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_IsModified(void);
  HRESULT         __fastcall get_IsReadOnly(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_IsReadOnly(void);
  HRESULT         __fastcall set_IsReadOnly(VARIANT_BOOL pRetVal/*[in]*/);
  HRESULT         __fastcall get_TopView(Borland_studio_toolsapi_tlb::IOTAEditView** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAEditViewPtr __fastcall get_TopView(void);
  HRESULT         __fastcall Print(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall Print(void);
  HRESULT         __fastcall Redo(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall Redo(void);
  HRESULT         __fastcall Undo(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall Undo(void);
  HRESULT         __fastcall get_EditOptions(Borland_studio_toolsapi_tlb::IOTAEditOptions** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAEditOptionsPtr __fastcall get_EditOptions(void);

  __property   Borland_studio_toolsapi_tlb::IOTABufferOptionsPtr BufferOptions = {read = get_BufferOptions};
  __property   DATE            CurrentDate = {read = get_CurrentDate};
  __property   Borland_studio_toolsapi_tlb::IOTAEditBlockPtr EditBlock = {read = get_EditBlock};
  __property   Borland_studio_toolsapi_tlb::IOTAEditPositionPtr EditPosition = {read = get_EditPosition};
  __property   DATE            InitialDate = {read = get_InitialDate};
  __property   VARIANT_BOOL    IsModified = {read = get_IsModified};
  __property   VARIANT_BOOL    IsReadOnly = {read = get_IsReadOnly, write = set_IsReadOnly};
  __property   Borland_studio_toolsapi_tlb::IOTAEditViewPtr TopView = {read = get_TopView};
  __property   Borland_studio_toolsapi_tlb::IOTAEditOptionsPtr EditOptions = {read = get_EditOptions};
};
typedef IOTAEditBufferDispT<IOTAEditBuffer> IOTAEditBufferDisp;

typedef TComInterface<IOTASearchOptions>  TCOMIOTASearchOptions;

// *********************************************************************//
// DispIntf:  IOTASearchOptions
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {29D0A5EE-10B9-4792-B7EE-8A462A28BDCE}
// *********************************************************************//
template<class T>
class IOTASearchOptionsDispT : public TAutoDriver<IOTASearchOptions>
{
public:
  IOTASearchOptionsDispT(){}

  IOTASearchOptionsDispT(IOTASearchOptions *pintf)
  {
    TAutoDriver<IOTASearchOptions>::Bind(pintf, false);
  }

  IOTASearchOptionsDispT(IOTASearchOptionsPtr pintf)
  {
    TAutoDriver<IOTASearchOptions>::Bind(pintf, true);
  }

  IOTASearchOptionsDispT& operator=(IOTASearchOptions *pintf)
  {
    TAutoDriver<IOTASearchOptions>::Bind(pintf, false);
    return *this;
  }

  IOTASearchOptionsDispT& operator=(IOTASearchOptionsPtr pintf)
  {
    TAutoDriver<IOTASearchOptions>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall get_CaseSensitive(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_CaseSensitive(void);
  HRESULT         __fastcall set_CaseSensitive(VARIANT_BOOL pRetVal/*[in]*/);
  HRESULT         __fastcall get_Direction(Borland_studio_toolsapi_tlb::OTASearchDirection* pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::OTASearchDirection __fastcall get_Direction(void);
  HRESULT         __fastcall set_Direction(Borland_studio_toolsapi_tlb::OTASearchDirection pRetVal/*[in]*/);
  HRESULT         __fastcall get_FromCursor(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_FromCursor(void);
  HRESULT         __fastcall set_FromCursor(VARIANT_BOOL pRetVal/*[in]*/);
  HRESULT         __fastcall get_RegularExpression(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_RegularExpression(void);
  HRESULT         __fastcall set_RegularExpression(VARIANT_BOOL pRetVal/*[in]*/);
  HRESULT         __fastcall get_SearchText(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_SearchText(void);
  HRESULT         __fastcall set_SearchText(BSTR pRetVal/*[in]*/);
  HRESULT         __fastcall get_WholeFile(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_WholeFile(void);
  HRESULT         __fastcall set_WholeFile(VARIANT_BOOL pRetVal/*[in]*/);
  HRESULT         __fastcall get_WordBoundary(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_WordBoundary(void);
  HRESULT         __fastcall set_WordBoundary(VARIANT_BOOL pRetVal/*[in]*/);

  __property   VARIANT_BOOL    CaseSensitive = {read = get_CaseSensitive, write = set_CaseSensitive};
  __property   Borland_studio_toolsapi_tlb::OTASearchDirection Direction = {read = get_Direction, write = set_Direction};
  __property   VARIANT_BOOL    FromCursor = {read = get_FromCursor, write = set_FromCursor};
  __property   VARIANT_BOOL    RegularExpression = {read = get_RegularExpression, write = set_RegularExpression};
  __property   BSTR            SearchText = {read = get_SearchText, write = set_SearchText};
  __property   VARIANT_BOOL    WholeFile = {read = get_WholeFile, write = set_WholeFile};
  __property   VARIANT_BOOL    WordBoundary = {read = get_WordBoundary, write = set_WordBoundary};
};
typedef IOTASearchOptionsDispT<IOTASearchOptions> IOTASearchOptionsDisp;

typedef TComInterface<IOTAReplaceOptions>  TCOMIOTAReplaceOptions;

// *********************************************************************//
// DispIntf:  IOTAReplaceOptions
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4FAFD11A-91B1-41D5-BCA7-8B0C2389D37C}
// *********************************************************************//
template<class T>
class IOTAReplaceOptionsDispT : public TAutoDriver<IOTAReplaceOptions>
{
public:
  IOTAReplaceOptionsDispT(){}

  IOTAReplaceOptionsDispT(IOTAReplaceOptions *pintf)
  {
    TAutoDriver<IOTAReplaceOptions>::Bind(pintf, false);
  }

  IOTAReplaceOptionsDispT(IOTAReplaceOptionsPtr pintf)
  {
    TAutoDriver<IOTAReplaceOptions>::Bind(pintf, true);
  }

  IOTAReplaceOptionsDispT& operator=(IOTAReplaceOptions *pintf)
  {
    TAutoDriver<IOTAReplaceOptions>::Bind(pintf, false);
    return *this;
  }

  IOTAReplaceOptionsDispT& operator=(IOTAReplaceOptionsPtr pintf)
  {
    TAutoDriver<IOTAReplaceOptions>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall get_PromptOnReplace(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_PromptOnReplace(void);
  HRESULT         __fastcall set_PromptOnReplace(VARIANT_BOOL pRetVal/*[in]*/);
  HRESULT         __fastcall get_ReplaceAll(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_ReplaceAll(void);
  HRESULT         __fastcall set_ReplaceAll(VARIANT_BOOL pRetVal/*[in]*/);
  HRESULT         __fastcall get_ReplaceText(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_ReplaceText(void);
  HRESULT         __fastcall set_ReplaceText(BSTR pRetVal/*[in]*/);

  __property   VARIANT_BOOL    PromptOnReplace = {read = get_PromptOnReplace, write = set_PromptOnReplace};
  __property   VARIANT_BOOL    ReplaceAll = {read = get_ReplaceAll, write = set_ReplaceAll};
  __property   BSTR            ReplaceText = {read = get_ReplaceText, write = set_ReplaceText};
};
typedef IOTAReplaceOptionsDispT<IOTAReplaceOptions> IOTAReplaceOptionsDisp;

typedef TComInterface<IOTAEditPosition>  TCOMIOTAEditPosition;

// *********************************************************************//
// DispIntf:  IOTAEditPosition
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {64962216-E0E1-458F-B984-38561573DE94}
// *********************************************************************//
template<class T>
class IOTAEditPositionDispT : public TAutoDriver<IOTAEditPosition>
{
public:
  IOTAEditPositionDispT(){}

  IOTAEditPositionDispT(IOTAEditPosition *pintf)
  {
    TAutoDriver<IOTAEditPosition>::Bind(pintf, false);
  }

  IOTAEditPositionDispT(IOTAEditPositionPtr pintf)
  {
    TAutoDriver<IOTAEditPosition>::Bind(pintf, true);
  }

  IOTAEditPositionDispT& operator=(IOTAEditPosition *pintf)
  {
    TAutoDriver<IOTAEditPosition>::Bind(pintf, false);
    return *this;
  }

  IOTAEditPositionDispT& operator=(IOTAEditPositionPtr pintf)
  {
    TAutoDriver<IOTAEditPosition>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall Align(long magnitude/*[in]*/);
  HRESULT         __fastcall BackspaceDelete(long howMany/*[in]*/, 
                                             VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall BackspaceDelete(long howMany/*[in]*/);
  HRESULT         __fastcall Delete(long howMany/*[in]*/, VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall Delete(long howMany/*[in]*/);
  HRESULT         __fastcall DistanceToTab(Borland_studio_toolsapi_tlb::OTASearchDirection Direction/*[in]*/
                                           , long* pRetVal/*[out,retval]*/);
  long            __fastcall DistanceToTab(Borland_studio_toolsapi_tlb::OTASearchDirection Direction/*[in]*/);
  HRESULT         __fastcall get_Character(unsigned_short* pRetVal/*[out,retval]*/);
  unsigned_short  __fastcall get_Character(void);
  HRESULT         __fastcall get_column(long* pRetVal/*[out,retval]*/);
  long            __fastcall get_column(void);
  HRESULT         __fastcall get_IsSpecialCharacter(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_IsSpecialCharacter(void);
  HRESULT         __fastcall get_IsWhitespace(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_IsWhitespace(void);
  HRESULT         __fastcall get_IsWordCharacter(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_IsWordCharacter(void);
  HRESULT         __fastcall get_LastRow(long* pRetVal/*[out,retval]*/);
  long            __fastcall get_LastRow(void);
  HRESULT         __fastcall get_ReplaceOptions(Borland_studio_toolsapi_tlb::IOTAReplaceOptions** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAReplaceOptionsPtr __fastcall get_ReplaceOptions(void);
  HRESULT         __fastcall get_Row(long* pRetVal/*[out,retval]*/);
  long            __fastcall get_Row(void);
  HRESULT         __fastcall GetSearchErrorString(long errorCode/*[in]*/, 
                                                  BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall GetSearchErrorString(long errorCode/*[in]*/);
  HRESULT         __fastcall get_SearchOptions(Borland_studio_toolsapi_tlb::IOTASearchOptions** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTASearchOptionsPtr __fastcall get_SearchOptions(void);
  HRESULT         __fastcall GotoLine(long LineNumber/*[in]*/, VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall GotoLine(long LineNumber/*[in]*/);
  HRESULT         __fastcall InsertBlock(Borland_studio_toolsapi_tlb::IOTAEditBlock* block/*[in]*/);
  HRESULT         __fastcall InsertCharacter(unsigned_short Character/*[in]*/);
  HRESULT         __fastcall InsertFile(BSTR fileName/*[in]*/);
  HRESULT         __fastcall InsertText(BSTR Text/*[in]*/);
  HRESULT         __fastcall Move(long Row/*[in]*/, long col/*[in]*/, 
                                  VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall Move(long Row/*[in]*/, long col/*[in]*/);
  HRESULT         __fastcall MoveBOL(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall MoveBOL(void);
  HRESULT         __fastcall MoveEOF(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall MoveEOF(void);
  HRESULT         __fastcall MoveEOL(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall MoveEOL(void);
  HRESULT         __fastcall MoveCursor(Borland_studio_toolsapi_tlb::OTAMoveCursorMasks moveMask/*[in]*/
                                        , VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall MoveCursor(Borland_studio_toolsapi_tlb::OTAMoveCursorMasks moveMask/*[in]*/);
  HRESULT         __fastcall MoveReal(long Row/*[in]*/, long col/*[in]*/, 
                                      VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall MoveReal(long Row/*[in]*/, long col/*[in]*/);
  HRESULT         __fastcall MoveRelative(long Row/*[in]*/, long col/*[in]*/, 
                                          VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall MoveRelative(long Row/*[in]*/, long col/*[in]*/);
  HRESULT         __fastcall Paste();
  HRESULT         __fastcall Read(long numberOfCharacters/*[in]*/, BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall Read(long numberOfCharacters/*[in]*/);
  HRESULT         __fastcall RepeatLastSearchOrReplace(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall RepeatLastSearchOrReplace(void);
  HRESULT         __fastcall Replace(BSTR pattern/*[in]*/, BSTR ReplaceText/*[in]*/, 
                                     VARIANT_BOOL CaseSensitive/*[in]*/, 
                                     VARIANT_BOOL RegularExpression/*[in]*/, 
                                     VARIANT_BOOL WholeFile/*[in]*/, 
                                     Borland_studio_toolsapi_tlb::OTASearchDirection Direction/*[in]*/
                                     , long* errorCode/*[out]*/, long* pRetVal/*[out,retval]*/);
  long            __fastcall Replace(BSTR pattern/*[in]*/, BSTR ReplaceText/*[in]*/, 
                                     VARIANT_BOOL CaseSensitive/*[in]*/, 
                                     VARIANT_BOOL RegularExpression/*[in]*/, 
                                     VARIANT_BOOL WholeFile/*[in]*/, 
                                     Borland_studio_toolsapi_tlb::OTASearchDirection Direction/*[in]*/, 
                                     long* errorCode/*[out]*/);
  HRESULT         __fastcall Replace_2(long* pRetVal/*[out,retval]*/);
  long            __fastcall Replace_2(void);
  HRESULT         __fastcall ReplaceAgain(long* pRetVal/*[out,retval]*/);
  long            __fastcall ReplaceAgain(void);
  HRESULT         __fastcall Restore();
  HRESULT         __fastcall RipText(BSTR validChars/*[in]*/, 
                                     Borland_studio_toolsapi_tlb::OTARipFlags ripFlags/*[in]*/, 
                                     BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall RipText(BSTR validChars/*[in]*/, 
                                     Borland_studio_toolsapi_tlb::OTARipFlags ripFlags/*[in]*/);
  HRESULT         __fastcall Save();
  HRESULT         __fastcall Search(BSTR pattern/*[in]*/, VARIANT_BOOL CaseSensitive/*[in]*/, 
                                    VARIANT_BOOL RegularExpression/*[in]*/, 
                                    VARIANT_BOOL WholeFile/*[in]*/, 
                                    Borland_studio_toolsapi_tlb::OTASearchDirection Direction/*[in]*/
                                    , long* errorCode/*[out]*/, 
                                    VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall Search(BSTR pattern/*[in]*/, VARIANT_BOOL CaseSensitive/*[in]*/, 
                                    VARIANT_BOOL RegularExpression/*[in]*/, 
                                    VARIANT_BOOL WholeFile/*[in]*/, 
                                    Borland_studio_toolsapi_tlb::OTASearchDirection Direction/*[in]*/, 
                                    long* errorCode/*[out]*/);
  HRESULT         __fastcall Search_2(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall Search_2(void);
  HRESULT         __fastcall SearchAgain(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall SearchAgain(void);
  HRESULT         __fastcall Tab(long magnitude/*[in]*/);

  __property   unsigned_short  Character = {read = get_Character};
  __property   long            column = {read = get_column};
  __property   VARIANT_BOOL    IsSpecialCharacter = {read = get_IsSpecialCharacter};
  __property   VARIANT_BOOL    IsWhitespace = {read = get_IsWhitespace};
  __property   VARIANT_BOOL    IsWordCharacter = {read = get_IsWordCharacter};
  __property   long            LastRow = {read = get_LastRow};
  __property   Borland_studio_toolsapi_tlb::IOTAReplaceOptionsPtr ReplaceOptions = {read = get_ReplaceOptions};
  __property   long            Row = {read = get_Row};
  __property   Borland_studio_toolsapi_tlb::IOTASearchOptionsPtr SearchOptions = {read = get_SearchOptions};
};
typedef IOTAEditPositionDispT<IOTAEditPosition> IOTAEditPositionDisp;

typedef TComInterface<IOTAEditView>  TCOMIOTAEditView;

// *********************************************************************//
// DispIntf:  IOTAEditView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A97FEAE3-7BE3-458D-B6B2-4A9EF6400AFC}
// *********************************************************************//
template<class T>
class IOTAEditViewDispT : public TAutoDriver<IOTAEditView>
{
public:
  IOTAEditViewDispT(){}

  IOTAEditViewDispT(IOTAEditView *pintf)
  {
    TAutoDriver<IOTAEditView>::Bind(pintf, false);
  }

  IOTAEditViewDispT(IOTAEditViewPtr pintf)
  {
    TAutoDriver<IOTAEditView>::Bind(pintf, true);
  }

  IOTAEditViewDispT& operator=(IOTAEditView *pintf)
  {
    TAutoDriver<IOTAEditView>::Bind(pintf, false);
    return *this;
  }

  IOTAEditViewDispT& operator=(IOTAEditViewPtr pintf)
  {
    TAutoDriver<IOTAEditView>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall get_CursorPos(/*AUTO_PARAM_ERROR(Borland_studio_toolsapi_tlb::OTAEditPos* pRetVal)*/ VARIANT*  pRetVal);
  HRESULT         __fastcall set_CursorPos(/*AUTO_PARAM_ERROR(Borland_studio_toolsapi_tlb::OTAEditPos pRetVal)*/ VARIANT  pRetVal);
  HRESULT         __fastcall get_TopPos(/*AUTO_PARAM_ERROR(Borland_studio_toolsapi_tlb::OTAEditPos* pRetVal)*/ VARIANT*  pRetVal);
  HRESULT         __fastcall set_TopPos(/*AUTO_PARAM_ERROR(Borland_studio_toolsapi_tlb::OTAEditPos pRetVal)*/ VARIANT  pRetVal);
  HRESULT         __fastcall get_ViewSize(/*AUTO_PARAM_ERROR(Borland_studio_toolsapi_tlb::OTASize* pRetVal)*/ VARIANT*  pRetVal);
  HRESULT         __fastcall PosToCharPos(long pos/*[in]*/, 
                                          /*AUTO_PARAM_ERROR(Borland_studio_toolsapi_tlb::OTACharPos* pRetVal)*/ VARIANT*  pRetVal);
  HRESULT         __fastcall CharPosToPos(/*AUTO_PARAM_ERROR(Borland_studio_toolsapi_tlb::OTACharPos charPos)*/ VARIANT  charPos
                                          , long* pRetVal/*[out,retval]*/);
  HRESULT         __fastcall ConvertPos(VARIANT_BOOL EdPosToCharPos/*[in]*/, 
                                        /*AUTO_PARAM_ERROR(Borland_studio_toolsapi_tlb::OTAEditPos* editPos)*/ VARIANT  editPos
                                        , 
                                        /*AUTO_PARAM_ERROR(Borland_studio_toolsapi_tlb::OTACharPos* charPos)*/ VARIANT  charPos);
  HRESULT         __fastcall GetAttributeAtPos(/*AUTO_PARAM_ERROR(Borland_studio_toolsapi_tlb::OTAEditPos edPos)*/ VARIANT  edPos
                                               , VARIANT_BOOL includeMargin/*[in]*/, 
                                               long* element/*[out]*/, long* lineFlag/*[out]*/);
  HRESULT         __fastcall SameView(Borland_studio_toolsapi_tlb::IOTAEditView* editView/*[in]*/, 
                                      VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall SameView(Borland_studio_toolsapi_tlb::IOTAEditView* editView/*[in]*/);
  HRESULT         __fastcall BookmarkGoto(long bookmarkID/*[in]*/, 
                                          VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall BookmarkGoto(long bookmarkID/*[in]*/);
  HRESULT         __fastcall BookmarkRecord(long bookmarkID/*[in]*/, 
                                            VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall BookmarkRecord(long bookmarkID/*[in]*/);
  HRESULT         __fastcall BookmarkToggle(long bookmarkID/*[in]*/, 
                                            VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall BookmarkToggle(long bookmarkID/*[in]*/);
  HRESULT         __fastcall ClearAllBookmarks();
  HRESULT         __fastcall Center(long Row/*[in]*/, long col/*[in]*/);
  HRESULT         __fastcall get_block(Borland_studio_toolsapi_tlb::IOTAEditBlock** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAEditBlockPtr __fastcall get_block(void);
  HRESULT         __fastcall GetBookmarkPos(long bookmarkID/*[in]*/, 
                                            /*AUTO_PARAM_ERROR(Borland_studio_toolsapi_tlb::OTACharPos* pRetVal)*/ VARIANT*  pRetVal);
  HRESULT         __fastcall get_BottomRow(long* pRetVal/*[out,retval]*/);
  long            __fastcall get_BottomRow(void);
  HRESULT         __fastcall get_Buffer(Borland_studio_toolsapi_tlb::IOTAEditBuffer** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAEditBufferPtr __fastcall get_Buffer(void);
  HRESULT         __fastcall get_LastEditColumn(long* pRetVal/*[out,retval]*/);
  long            __fastcall get_LastEditColumn(void);
  HRESULT         __fastcall get_LastEditRow(long* pRetVal/*[out,retval]*/);
  long            __fastcall get_LastEditRow(void);
  HRESULT         __fastcall get_LeftColumn(long* pRetVal/*[out,retval]*/);
  long            __fastcall get_LeftColumn(void);
  HRESULT         __fastcall get_Position(Borland_studio_toolsapi_tlb::IOTAEditPosition** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAEditPositionPtr __fastcall get_Position(void);
  HRESULT         __fastcall get_RightColumn(long* pRetVal/*[out,retval]*/);
  long            __fastcall get_RightColumn(void);
  HRESULT         __fastcall get_TopRow(long* pRetVal/*[out,retval]*/);
  long            __fastcall get_TopRow(void);
  HRESULT         __fastcall MoveCursorToView();
  HRESULT         __fastcall MoveViewToCursor();
  HRESULT         __fastcall PageDown();
  HRESULT         __fastcall PageUp();
  HRESULT         __fastcall Paint();
  HRESULT         __fastcall Scroll(long deltaRow/*[in]*/, long deltaCol/*[in]*/, 
                                    long* pRetVal/*[out,retval]*/);
  long            __fastcall Scroll(long deltaRow/*[in]*/, long deltaCol/*[in]*/);
  HRESULT         __fastcall SetTopLeft(long TopRow/*[in]*/, long leftCol/*[in]*/);
  HRESULT         __fastcall SetTempMsg(BSTR msg/*[in]*/);

  __property   Borland_studio_toolsapi_tlb::IOTAEditBlockPtr block = {read = get_block};
  __property   long            BottomRow = {read = get_BottomRow};
  __property   Borland_studio_toolsapi_tlb::IOTAEditBufferPtr Buffer = {read = get_Buffer};
  __property   long            LastEditColumn = {read = get_LastEditColumn};
  __property   long            LastEditRow = {read = get_LastEditRow};
  __property   long            LeftColumn = {read = get_LeftColumn};
  __property   Borland_studio_toolsapi_tlb::IOTAEditPositionPtr Position = {read = get_Position};
  __property   long            RightColumn = {read = get_RightColumn};
  __property   long            TopRow = {read = get_TopRow};
};
typedef IOTAEditViewDispT<IOTAEditView> IOTAEditViewDisp;

typedef TComInterface<IOTAElideActions>  TCOMIOTAElideActions;

// *********************************************************************//
// DispIntf:  IOTAElideActions
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BC19685E-1C37-4492-81E8-BDB8634C6F8C}
// *********************************************************************//
template<class T>
class IOTAElideActionsDispT : public TAutoDriver<IOTAElideActions>
{
public:
  IOTAElideActionsDispT(){}

  IOTAElideActionsDispT(IOTAElideActions *pintf)
  {
    TAutoDriver<IOTAElideActions>::Bind(pintf, false);
  }

  IOTAElideActionsDispT(IOTAElideActionsPtr pintf)
  {
    TAutoDriver<IOTAElideActions>::Bind(pintf, true);
  }

  IOTAElideActionsDispT& operator=(IOTAElideActions *pintf)
  {
    TAutoDriver<IOTAElideActions>::Bind(pintf, false);
    return *this;
  }

  IOTAElideActionsDispT& operator=(IOTAElideActionsPtr pintf)
  {
    TAutoDriver<IOTAElideActions>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall ElideNearestBlock();
  HRESULT         __fastcall UnElideNearestBlock();
  HRESULT         __fastcall UnElideAllBlocks();
  HRESULT         __fastcall EnableElisions();

};
typedef IOTAElideActionsDispT<IOTAElideActions> IOTAElideActionsDisp;

typedef TComInterface<IOTAEditor>  TCOMIOTAEditor;

// *********************************************************************//
// DispIntf:  IOTAEditor
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {614847EC-D01E-4170-8F12-58E5A162F250}
// *********************************************************************//
template<class T>
class IOTAEditorDispT : public TAutoDriver<IOTAEditor>
{
public:
  IOTAEditorDispT(){}

  IOTAEditorDispT(IOTAEditor *pintf)
  {
    TAutoDriver<IOTAEditor>::Bind(pintf, false);
  }

  IOTAEditorDispT(IOTAEditorPtr pintf)
  {
    TAutoDriver<IOTAEditor>::Bind(pintf, true);
  }

  IOTAEditorDispT& operator=(IOTAEditor *pintf)
  {
    TAutoDriver<IOTAEditor>::Bind(pintf, false);
    return *this;
  }

  IOTAEditorDispT& operator=(IOTAEditorPtr pintf)
  {
    TAutoDriver<IOTAEditor>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall add_BeforeSave(Mscorlib_tlb::_EventHandler* value/*[in]*/);
  HRESULT         __fastcall remove_BeforeSave(Mscorlib_tlb::_EventHandler* value/*[in]*/);
  HRESULT         __fastcall add_AfterSave(Mscorlib_tlb::_EventHandler* value/*[in]*/);
  HRESULT         __fastcall remove_AfterSave(Mscorlib_tlb::_EventHandler* value/*[in]*/);
  HRESULT         __fastcall add_Closed(Mscorlib_tlb::_EventHandler* value/*[in]*/);
  HRESULT         __fastcall remove_Closed(Mscorlib_tlb::_EventHandler* value/*[in]*/);
  HRESULT         __fastcall add_Modified(Mscorlib_tlb::_EventHandler* value/*[in]*/);
  HRESULT         __fastcall remove_Modified(Mscorlib_tlb::_EventHandler* value/*[in]*/);
  HRESULT         __fastcall get_fileName(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_fileName(void);
  HRESULT         __fastcall get_IsModified(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_IsModified(void);
  HRESULT         __fastcall get_module(Borland_studio_toolsapi_tlb::IOTAModule** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAModulePtr __fastcall get_module(void);
  HRESULT         __fastcall MarkModified();
  HRESULT         __fastcall Show();

  __property   BSTR            fileName = {read = get_fileName};
  __property   VARIANT_BOOL    IsModified = {read = get_IsModified};
  __property   Borland_studio_toolsapi_tlb::IOTAModulePtr module = {read = get_module};
};
typedef IOTAEditorDispT<IOTAEditor> IOTAEditorDisp;

typedef TComInterface<IOTAProjectResource>  TCOMIOTAProjectResource;

// *********************************************************************//
// DispIntf:  IOTAProjectResource
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C706DF59-7EDF-4E70-98F5-765F195F930C}
// *********************************************************************//
template<class T>
class IOTAProjectResourceDispT : public TAutoDriver<IOTAProjectResource>
{
public:
  IOTAProjectResourceDispT(){}

  IOTAProjectResourceDispT(IOTAProjectResource *pintf)
  {
    TAutoDriver<IOTAProjectResource>::Bind(pintf, false);
  }

  IOTAProjectResourceDispT(IOTAProjectResourcePtr pintf)
  {
    TAutoDriver<IOTAProjectResource>::Bind(pintf, true);
  }

  IOTAProjectResourceDispT& operator=(IOTAProjectResource *pintf)
  {
    TAutoDriver<IOTAProjectResource>::Bind(pintf, false);
    return *this;
  }

  IOTAProjectResourceDispT& operator=(IOTAProjectResourcePtr pintf)
  {
    TAutoDriver<IOTAProjectResource>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall GetEntryCount(long* pRetVal/*[out,retval]*/);
  long            __fastcall GetEntryCount(void);
  HRESULT         __fastcall GetEntry(long index/*[in]*/, 
                                      Borland_studio_toolsapi_tlb::IOTAResourceEntry** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAResourceEntry* __fastcall GetEntry(long index/*[in]*/);
  HRESULT         __fastcall GetEntryFromHandle(Borland_studio_toolsapi_tlb::_TOTAHandle* EntryHandle/*[in]*/
                                                , 
                                                Borland_studio_toolsapi_tlb::IOTAResourceEntry** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAResourceEntry* __fastcall GetEntryFromHandle(Borland_studio_toolsapi_tlb::_TOTAHandle* EntryHandle/*[in]*/);
  HRESULT         __fastcall FindEntry(BSTR ResType/*[in]*/, BSTR Name/*[in]*/, 
                                       Borland_studio_toolsapi_tlb::IOTAResourceEntry** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAResourceEntry* __fastcall FindEntry(BSTR ResType/*[in]*/, 
                                                                       BSTR Name/*[in]*/);
  HRESULT         __fastcall DeleteEntry(Borland_studio_toolsapi_tlb::_TOTAHandle* EntryHandle/*[in]*/);
  HRESULT         __fastcall CreateEntry(BSTR ResType/*[in]*/, BSTR Name/*[in]*/, 
                                         unsigned_short flags/*[in]*/, 
                                         unsigned_short LanguageId/*[in]*/, long DataVersion/*[in]*/
                                         , long Version/*[in]*/, long Characteristics/*[in]*/, 
                                         Borland_studio_toolsapi_tlb::IOTAResourceEntry** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAResourceEntry* __fastcall CreateEntry(BSTR ResType/*[in]*/, 
                                                                         BSTR Name/*[in]*/, 
                                                                         unsigned_short flags/*[in]*/, 
                                                                         unsigned_short LanguageId/*[in]*/, 
                                                                         long DataVersion/*[in]*/, 
                                                                         long Version/*[in]*/, 
                                                                         long Characteristics/*[in]*/);

};
typedef IOTAProjectResourceDispT<IOTAProjectResource> IOTAProjectResourceDisp;

typedef TComInterface<IOTAResourceEntry>  TCOMIOTAResourceEntry;

// *********************************************************************//
// DispIntf:  IOTAResourceEntry
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C198D6D5-145C-40D0-8E4E-9261FCE5C21F}
// *********************************************************************//
template<class T>
class IOTAResourceEntryDispT : public TAutoDriver<IOTAResourceEntry>
{
public:
  IOTAResourceEntryDispT(){}

  IOTAResourceEntryDispT(IOTAResourceEntry *pintf)
  {
    TAutoDriver<IOTAResourceEntry>::Bind(pintf, false);
  }

  IOTAResourceEntryDispT(IOTAResourceEntryPtr pintf)
  {
    TAutoDriver<IOTAResourceEntry>::Bind(pintf, true);
  }

  IOTAResourceEntryDispT& operator=(IOTAResourceEntry *pintf)
  {
    TAutoDriver<IOTAResourceEntry>::Bind(pintf, false);
    return *this;
  }

  IOTAResourceEntryDispT& operator=(IOTAResourceEntryPtr pintf)
  {
    TAutoDriver<IOTAResourceEntry>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall GetResourceType(long* pRetVal/*[out,retval]*/);
  long            __fastcall GetResourceType(void);
  HRESULT         __fastcall GetResourceName(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall GetResourceName(void);
  HRESULT         __fastcall Change(BSTR NewType/*[in]*/, BSTR NewName/*[in]*/, 
                                    VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall Change(BSTR NewType/*[in]*/, BSTR NewName/*[in]*/);
  HRESULT         __fastcall GetHeaderValue(Borland_studio_toolsapi_tlb::TOTAResHeaderValue HeaderValue/*[in]*/
                                            , long* value/*[in,out]*/, 
                                            VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall GetHeaderValue(Borland_studio_toolsapi_tlb::TOTAResHeaderValue HeaderValue/*[in]*/, 
                                            long* value/*[in,out]*/);
  HRESULT         __fastcall SetHeaderValue(Borland_studio_toolsapi_tlb::TOTAResHeaderValue HeaderValue/*[in]*/
                                            , long value/*[in]*/, 
                                            VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall SetHeaderValue(Borland_studio_toolsapi_tlb::TOTAResHeaderValue HeaderValue/*[in]*/, 
                                            long value/*[in]*/);
  HRESULT         __fastcall GetData(long* pRetVal/*[out,retval]*/);
  long            __fastcall GetData(void);
  HRESULT         __fastcall get_DataSize(long* pRetVal/*[out,retval]*/);
  long            __fastcall get_DataSize(void);
  HRESULT         __fastcall set_DataSize(long pRetVal/*[in]*/);
  HRESULT         __fastcall GetEntryHandle(Borland_studio_toolsapi_tlb::_TOTAHandle** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::_TOTAHandle* __fastcall GetEntryHandle(void);

  __property   long            DataSize = {read = get_DataSize, write = set_DataSize};
};
typedef IOTAResourceEntryDispT<IOTAResourceEntry> IOTAResourceEntryDisp;

typedef TComInterface<IOTAEditorContent>  TCOMIOTAEditorContent;

// *********************************************************************//
// DispIntf:  IOTAEditorContent
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F203BC3F-2DA9-4F40-B05D-8EA610F24B2E}
// *********************************************************************//
template<class T>
class IOTAEditorContentDispT : public TAutoDriver<IOTAEditorContent>
{
public:
  IOTAEditorContentDispT(){}

  IOTAEditorContentDispT(IOTAEditorContent *pintf)
  {
    TAutoDriver<IOTAEditorContent>::Bind(pintf, false);
  }

  IOTAEditorContentDispT(IOTAEditorContentPtr pintf)
  {
    TAutoDriver<IOTAEditorContent>::Bind(pintf, true);
  }

  IOTAEditorContentDispT& operator=(IOTAEditorContent *pintf)
  {
    TAutoDriver<IOTAEditorContent>::Bind(pintf, false);
    return *this;
  }

  IOTAEditorContentDispT& operator=(IOTAEditorContentPtr pintf)
  {
    TAutoDriver<IOTAEditorContent>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall get_Content(LPUNKNOWN* pRetVal/*[out,retval]*/);
  LPUNKNOWN       __fastcall get_Content(void);
  HRESULT         __fastcall _set_Content(LPUNKNOWN pRetVal/*[in]*/);
  HRESULT         __fastcall get_ContentAge(DATE* pRetVal/*[out,retval]*/);
  DATE            __fastcall get_ContentAge(void);
  HRESULT         __fastcall ResetDiskAge();

  __property   LPUNKNOWN       Content = {read = get_Content, write = _set_Content};
  __property   DATE            ContentAge = {read = get_ContentAge};
};
typedef IOTAEditorContentDispT<IOTAEditorContent> IOTAEditorContentDisp;

// *********************************************************************//
// SmartIntf: TCOM_ViewActivatedEventArgs
// Interface: _ViewActivatedEventArgs
// *********************************************************************//
template <class T /* _ViewActivatedEventArgs */ >
class TCOM_ViewActivatedEventArgsT : public TComInterface<_ViewActivatedEventArgs>, public TComInterfaceBase<IUnknown>
{
public:
  TCOM_ViewActivatedEventArgsT() {}
  TCOM_ViewActivatedEventArgsT(_ViewActivatedEventArgs *intf, bool addRef = false) : TComInterface<_ViewActivatedEventArgs>(intf, addRef) {}
  TCOM_ViewActivatedEventArgsT(const TCOM_ViewActivatedEventArgsT& src) : TComInterface<_ViewActivatedEventArgs>(src) {}
  TCOM_ViewActivatedEventArgsT& operator=(const TCOM_ViewActivatedEventArgsT& src) { Bind(src, true); return *this;}


};
typedef TCOM_ViewActivatedEventArgsT<_ViewActivatedEventArgs> TCOM_ViewActivatedEventArgs;

// *********************************************************************//
// DispIntf:  _ViewActivatedEventArgs
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {329F6CBF-1039-366A-8E14-57D7C3E7B0CB}
// *********************************************************************//
template<class T>
class _ViewActivatedEventArgsDispT : public TAutoDriver<_ViewActivatedEventArgs>
{
public:
  _ViewActivatedEventArgsDispT(){}

  _ViewActivatedEventArgsDispT(_ViewActivatedEventArgs *pintf)
  {
    TAutoDriver<_ViewActivatedEventArgs>::Bind(pintf, false);
  }

  _ViewActivatedEventArgsDispT(_ViewActivatedEventArgsPtr pintf)
  {
    TAutoDriver<_ViewActivatedEventArgs>::Bind(pintf, true);
  }

  _ViewActivatedEventArgsDispT& operator=(_ViewActivatedEventArgs *pintf)
  {
    TAutoDriver<_ViewActivatedEventArgs>::Bind(pintf, false);
    return *this;
  }

  _ViewActivatedEventArgsDispT& operator=(_ViewActivatedEventArgsPtr pintf)
  {
    TAutoDriver<_ViewActivatedEventArgs>::Bind(pintf, true);
    return *this;
  }

  HRESULT BindDefault()
  {
    return OLECHECK(Bind(CLSID_ViewActivatedEventArgs));
  }

  HRESULT BindRunning()
  {
    return BindToActive(CLSID_ViewActivatedEventArgs);
  }


};
typedef _ViewActivatedEventArgsDispT<_ViewActivatedEventArgs> _ViewActivatedEventArgsDisp;

// *********************************************************************//
// SmartIntf: TCOM_ViewNotificationEventArgs
// Interface: _ViewNotificationEventArgs
// *********************************************************************//
template <class T /* _ViewNotificationEventArgs */ >
class TCOM_ViewNotificationEventArgsT : public TComInterface<_ViewNotificationEventArgs>, public TComInterfaceBase<IUnknown>
{
public:
  TCOM_ViewNotificationEventArgsT() {}
  TCOM_ViewNotificationEventArgsT(_ViewNotificationEventArgs *intf, bool addRef = false) : TComInterface<_ViewNotificationEventArgs>(intf, addRef) {}
  TCOM_ViewNotificationEventArgsT(const TCOM_ViewNotificationEventArgsT& src) : TComInterface<_ViewNotificationEventArgs>(src) {}
  TCOM_ViewNotificationEventArgsT& operator=(const TCOM_ViewNotificationEventArgsT& src) { Bind(src, true); return *this;}


};
typedef TCOM_ViewNotificationEventArgsT<_ViewNotificationEventArgs> TCOM_ViewNotificationEventArgs;

// *********************************************************************//
// DispIntf:  _ViewNotificationEventArgs
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {4A746E50-D362-3EEB-948F-70E30834C620}
// *********************************************************************//
template<class T>
class _ViewNotificationEventArgsDispT : public TAutoDriver<_ViewNotificationEventArgs>
{
public:
  _ViewNotificationEventArgsDispT(){}

  _ViewNotificationEventArgsDispT(_ViewNotificationEventArgs *pintf)
  {
    TAutoDriver<_ViewNotificationEventArgs>::Bind(pintf, false);
  }

  _ViewNotificationEventArgsDispT(_ViewNotificationEventArgsPtr pintf)
  {
    TAutoDriver<_ViewNotificationEventArgs>::Bind(pintf, true);
  }

  _ViewNotificationEventArgsDispT& operator=(_ViewNotificationEventArgs *pintf)
  {
    TAutoDriver<_ViewNotificationEventArgs>::Bind(pintf, false);
    return *this;
  }

  _ViewNotificationEventArgsDispT& operator=(_ViewNotificationEventArgsPtr pintf)
  {
    TAutoDriver<_ViewNotificationEventArgs>::Bind(pintf, true);
    return *this;
  }

  HRESULT BindDefault()
  {
    return OLECHECK(Bind(CLSID_ViewNotificationEventArgs));
  }

  HRESULT BindRunning()
  {
    return BindToActive(CLSID_ViewNotificationEventArgs);
  }


};
typedef _ViewNotificationEventArgsDispT<_ViewNotificationEventArgs> _ViewNotificationEventArgsDisp;

// *********************************************************************//
// SmartIntf: TCOM_ViewActivatedEventHandler
// Interface: _ViewActivatedEventHandler
// *********************************************************************//
template <class T /* _ViewActivatedEventHandler */ >
class TCOM_ViewActivatedEventHandlerT : public TComInterface<_ViewActivatedEventHandler>, public TComInterfaceBase<IUnknown>
{
public:
  TCOM_ViewActivatedEventHandlerT() {}
  TCOM_ViewActivatedEventHandlerT(_ViewActivatedEventHandler *intf, bool addRef = false) : TComInterface<_ViewActivatedEventHandler>(intf, addRef) {}
  TCOM_ViewActivatedEventHandlerT(const TCOM_ViewActivatedEventHandlerT& src) : TComInterface<_ViewActivatedEventHandler>(src) {}
  TCOM_ViewActivatedEventHandlerT& operator=(const TCOM_ViewActivatedEventHandlerT& src) { Bind(src, true); return *this;}


};
typedef TCOM_ViewActivatedEventHandlerT<_ViewActivatedEventHandler> TCOM_ViewActivatedEventHandler;

// *********************************************************************//
// DispIntf:  _ViewActivatedEventHandler
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {8C5CE0CB-419E-372B-9730-345188F4FE46}
// *********************************************************************//
template<class T>
class _ViewActivatedEventHandlerDispT : public TAutoDriver<_ViewActivatedEventHandler>
{
public:
  _ViewActivatedEventHandlerDispT(){}

  _ViewActivatedEventHandlerDispT(_ViewActivatedEventHandler *pintf)
  {
    TAutoDriver<_ViewActivatedEventHandler>::Bind(pintf, false);
  }

  _ViewActivatedEventHandlerDispT(_ViewActivatedEventHandlerPtr pintf)
  {
    TAutoDriver<_ViewActivatedEventHandler>::Bind(pintf, true);
  }

  _ViewActivatedEventHandlerDispT& operator=(_ViewActivatedEventHandler *pintf)
  {
    TAutoDriver<_ViewActivatedEventHandler>::Bind(pintf, false);
    return *this;
  }

  _ViewActivatedEventHandlerDispT& operator=(_ViewActivatedEventHandlerPtr pintf)
  {
    TAutoDriver<_ViewActivatedEventHandler>::Bind(pintf, true);
    return *this;
  }

  HRESULT BindDefault()
  {
    return OLECHECK(Bind(CLSID_ViewActivatedEventHandler));
  }

  HRESULT BindRunning()
  {
    return BindToActive(CLSID_ViewActivatedEventHandler);
  }


};
typedef _ViewActivatedEventHandlerDispT<_ViewActivatedEventHandler> _ViewActivatedEventHandlerDisp;

// *********************************************************************//
// SmartIntf: TCOM_ViewNotificationEventHandler
// Interface: _ViewNotificationEventHandler
// *********************************************************************//
template <class T /* _ViewNotificationEventHandler */ >
class TCOM_ViewNotificationEventHandlerT : public TComInterface<_ViewNotificationEventHandler>, public TComInterfaceBase<IUnknown>
{
public:
  TCOM_ViewNotificationEventHandlerT() {}
  TCOM_ViewNotificationEventHandlerT(_ViewNotificationEventHandler *intf, bool addRef = false) : TComInterface<_ViewNotificationEventHandler>(intf, addRef) {}
  TCOM_ViewNotificationEventHandlerT(const TCOM_ViewNotificationEventHandlerT& src) : TComInterface<_ViewNotificationEventHandler>(src) {}
  TCOM_ViewNotificationEventHandlerT& operator=(const TCOM_ViewNotificationEventHandlerT& src) { Bind(src, true); return *this;}


};
typedef TCOM_ViewNotificationEventHandlerT<_ViewNotificationEventHandler> TCOM_ViewNotificationEventHandler;

// *********************************************************************//
// DispIntf:  _ViewNotificationEventHandler
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {21C2C2F6-77F7-342C-84D8-1ABBC6ECE631}
// *********************************************************************//
template<class T>
class _ViewNotificationEventHandlerDispT : public TAutoDriver<_ViewNotificationEventHandler>
{
public:
  _ViewNotificationEventHandlerDispT(){}

  _ViewNotificationEventHandlerDispT(_ViewNotificationEventHandler *pintf)
  {
    TAutoDriver<_ViewNotificationEventHandler>::Bind(pintf, false);
  }

  _ViewNotificationEventHandlerDispT(_ViewNotificationEventHandlerPtr pintf)
  {
    TAutoDriver<_ViewNotificationEventHandler>::Bind(pintf, true);
  }

  _ViewNotificationEventHandlerDispT& operator=(_ViewNotificationEventHandler *pintf)
  {
    TAutoDriver<_ViewNotificationEventHandler>::Bind(pintf, false);
    return *this;
  }

  _ViewNotificationEventHandlerDispT& operator=(_ViewNotificationEventHandlerPtr pintf)
  {
    TAutoDriver<_ViewNotificationEventHandler>::Bind(pintf, true);
    return *this;
  }

  HRESULT BindDefault()
  {
    return OLECHECK(Bind(CLSID_ViewNotificationEventHandler));
  }

  HRESULT BindRunning()
  {
    return BindToActive(CLSID_ViewNotificationEventHandler);
  }


};
typedef _ViewNotificationEventHandlerDispT<_ViewNotificationEventHandler> _ViewNotificationEventHandlerDisp;

typedef TComInterface<IOTASourceEditor>  TCOMIOTASourceEditor;

// *********************************************************************//
// DispIntf:  IOTASourceEditor
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FB7521C9-358F-4F81-AAE6-590B64A74107}
// *********************************************************************//
template<class T>
class IOTASourceEditorDispT : public TAutoDriver<IOTASourceEditor>
{
public:
  IOTASourceEditorDispT(){}

  IOTASourceEditorDispT(IOTASourceEditor *pintf)
  {
    TAutoDriver<IOTASourceEditor>::Bind(pintf, false);
  }

  IOTASourceEditorDispT(IOTASourceEditorPtr pintf)
  {
    TAutoDriver<IOTASourceEditor>::Bind(pintf, true);
  }

  IOTASourceEditorDispT& operator=(IOTASourceEditor *pintf)
  {
    TAutoDriver<IOTASourceEditor>::Bind(pintf, false);
    return *this;
  }

  IOTASourceEditorDispT& operator=(IOTASourceEditorPtr pintf)
  {
    TAutoDriver<IOTASourceEditor>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall CreateReader(Borland_studio_toolsapi_tlb::IOTAFileReader** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAFileReader* __fastcall CreateReader(void);
  HRESULT         __fastcall CreateWriter(Borland_studio_toolsapi_tlb::IOTAFileWriter** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAFileWriter* __fastcall CreateWriter(void);
  HRESULT         __fastcall get_EditViewCount(long* pRetVal/*[out,retval]*/);
  long            __fastcall get_EditViewCount(void);
  HRESULT         __fastcall GetEditView(long index/*[in]*/, 
                                         Borland_studio_toolsapi_tlb::IOTAEditView** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAEditView* __fastcall GetEditView(long index/*[in]*/);
  HRESULT         __fastcall get_LinesInBuffer(long* pRetVal/*[out,retval]*/);
  long            __fastcall get_LinesInBuffer(void);
  HRESULT         __fastcall get_BlockAfter(/*AUTO_PARAM_ERROR(Borland_studio_toolsapi_tlb::OTACharPos* pRetVal)*/ VARIANT*  pRetVal);
  HRESULT         __fastcall set_BlockAfter(/*AUTO_PARAM_ERROR(Borland_studio_toolsapi_tlb::OTACharPos pRetVal)*/ VARIANT  pRetVal);
  HRESULT         __fastcall get_BlockStart(/*AUTO_PARAM_ERROR(Borland_studio_toolsapi_tlb::OTACharPos* pRetVal)*/ VARIANT*  pRetVal);
  HRESULT         __fastcall set_BlockStart(/*AUTO_PARAM_ERROR(Borland_studio_toolsapi_tlb::OTACharPos pRetVal)*/ VARIANT  pRetVal);
  HRESULT         __fastcall get_BlockType(Borland_studio_toolsapi_tlb::OTABlockType* pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::OTABlockType __fastcall get_BlockType(void);
  HRESULT         __fastcall set_BlockType(Borland_studio_toolsapi_tlb::OTABlockType pRetVal/*[in]*/);
  HRESULT         __fastcall get_BlockVisible(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_BlockVisible(void);
  HRESULT         __fastcall set_BlockVisible(VARIANT_BOOL pRetVal/*[in]*/);
  HRESULT         __fastcall get_SubViewCount(long* pRetVal/*[out,retval]*/);
  long            __fastcall get_SubViewCount(void);
  HRESULT         __fastcall GetSubViewIdentifier(long index/*[in]*/, BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall GetSubViewIdentifier(long index/*[in]*/);
  HRESULT         __fastcall get_SubViewIndex(long* pRetVal/*[out,retval]*/);
  long            __fastcall get_SubViewIndex(void);
  HRESULT         __fastcall SwitchToView(long index/*[in]*/);
  HRESULT         __fastcall SwitchToView_2(BSTR viewIdentifier/*[in]*/);
  HRESULT         __fastcall add_ViewNotification(Borland_studio_toolsapi_tlb::_ViewNotificationEventHandler* value/*[in]*/);
  HRESULT         __fastcall remove_ViewNotification(Borland_studio_toolsapi_tlb::_ViewNotificationEventHandler* value/*[in]*/);
  HRESULT         __fastcall add_ViewActivated(Borland_studio_toolsapi_tlb::_ViewActivatedEventHandler* value/*[in]*/);
  HRESULT         __fastcall remove_ViewActivated(Borland_studio_toolsapi_tlb::_ViewActivatedEventHandler* value/*[in]*/);

  __property   long            EditViewCount = {read = get_EditViewCount};
  __property   long            LinesInBuffer = {read = get_LinesInBuffer};
  __property   Borland_studio_toolsapi_tlb::OTABlockType BlockType = {read = get_BlockType, write = set_BlockType};
  __property   VARIANT_BOOL    BlockVisible = {read = get_BlockVisible, write = set_BlockVisible};
  __property   long            SubViewCount = {read = get_SubViewCount};
  __property   long            SubViewIndex = {read = get_SubViewIndex};
};
typedef IOTASourceEditorDispT<IOTASourceEditor> IOTASourceEditorDisp;

// *********************************************************************//
// SmartIntf: TCOM_RenameNotificationEventArgs
// Interface: _RenameNotificationEventArgs
// *********************************************************************//
template <class T /* _RenameNotificationEventArgs */ >
class TCOM_RenameNotificationEventArgsT : public TComInterface<_RenameNotificationEventArgs>, public TComInterfaceBase<IUnknown>
{
public:
  TCOM_RenameNotificationEventArgsT() {}
  TCOM_RenameNotificationEventArgsT(_RenameNotificationEventArgs *intf, bool addRef = false) : TComInterface<_RenameNotificationEventArgs>(intf, addRef) {}
  TCOM_RenameNotificationEventArgsT(const TCOM_RenameNotificationEventArgsT& src) : TComInterface<_RenameNotificationEventArgs>(src) {}
  TCOM_RenameNotificationEventArgsT& operator=(const TCOM_RenameNotificationEventArgsT& src) { Bind(src, true); return *this;}


};
typedef TCOM_RenameNotificationEventArgsT<_RenameNotificationEventArgs> TCOM_RenameNotificationEventArgs;

// *********************************************************************//
// DispIntf:  _RenameNotificationEventArgs
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {12CB5FE4-DB0F-39B9-BB64-AF97C7B8C5D2}
// *********************************************************************//
template<class T>
class _RenameNotificationEventArgsDispT : public TAutoDriver<_RenameNotificationEventArgs>
{
public:
  _RenameNotificationEventArgsDispT(){}

  _RenameNotificationEventArgsDispT(_RenameNotificationEventArgs *pintf)
  {
    TAutoDriver<_RenameNotificationEventArgs>::Bind(pintf, false);
  }

  _RenameNotificationEventArgsDispT(_RenameNotificationEventArgsPtr pintf)
  {
    TAutoDriver<_RenameNotificationEventArgs>::Bind(pintf, true);
  }

  _RenameNotificationEventArgsDispT& operator=(_RenameNotificationEventArgs *pintf)
  {
    TAutoDriver<_RenameNotificationEventArgs>::Bind(pintf, false);
    return *this;
  }

  _RenameNotificationEventArgsDispT& operator=(_RenameNotificationEventArgsPtr pintf)
  {
    TAutoDriver<_RenameNotificationEventArgs>::Bind(pintf, true);
    return *this;
  }

  HRESULT BindDefault()
  {
    return OLECHECK(Bind(CLSID_RenameNotificationEventArgs));
  }

  HRESULT BindRunning()
  {
    return BindToActive(CLSID_RenameNotificationEventArgs);
  }


};
typedef _RenameNotificationEventArgsDispT<_RenameNotificationEventArgs> _RenameNotificationEventArgsDisp;

// *********************************************************************//
// SmartIntf: TCOM_RenameNotificationEventHandler
// Interface: _RenameNotificationEventHandler
// *********************************************************************//
template <class T /* _RenameNotificationEventHandler */ >
class TCOM_RenameNotificationEventHandlerT : public TComInterface<_RenameNotificationEventHandler>, public TComInterfaceBase<IUnknown>
{
public:
  TCOM_RenameNotificationEventHandlerT() {}
  TCOM_RenameNotificationEventHandlerT(_RenameNotificationEventHandler *intf, bool addRef = false) : TComInterface<_RenameNotificationEventHandler>(intf, addRef) {}
  TCOM_RenameNotificationEventHandlerT(const TCOM_RenameNotificationEventHandlerT& src) : TComInterface<_RenameNotificationEventHandler>(src) {}
  TCOM_RenameNotificationEventHandlerT& operator=(const TCOM_RenameNotificationEventHandlerT& src) { Bind(src, true); return *this;}


};
typedef TCOM_RenameNotificationEventHandlerT<_RenameNotificationEventHandler> TCOM_RenameNotificationEventHandler;

// *********************************************************************//
// DispIntf:  _RenameNotificationEventHandler
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {D4246AF0-AA90-3FAD-9A4D-64E12E8609C4}
// *********************************************************************//
template<class T>
class _RenameNotificationEventHandlerDispT : public TAutoDriver<_RenameNotificationEventHandler>
{
public:
  _RenameNotificationEventHandlerDispT(){}

  _RenameNotificationEventHandlerDispT(_RenameNotificationEventHandler *pintf)
  {
    TAutoDriver<_RenameNotificationEventHandler>::Bind(pintf, false);
  }

  _RenameNotificationEventHandlerDispT(_RenameNotificationEventHandlerPtr pintf)
  {
    TAutoDriver<_RenameNotificationEventHandler>::Bind(pintf, true);
  }

  _RenameNotificationEventHandlerDispT& operator=(_RenameNotificationEventHandler *pintf)
  {
    TAutoDriver<_RenameNotificationEventHandler>::Bind(pintf, false);
    return *this;
  }

  _RenameNotificationEventHandlerDispT& operator=(_RenameNotificationEventHandlerPtr pintf)
  {
    TAutoDriver<_RenameNotificationEventHandler>::Bind(pintf, true);
    return *this;
  }

  HRESULT BindDefault()
  {
    return OLECHECK(Bind(CLSID_RenameNotificationEventHandler));
  }

  HRESULT BindRunning()
  {
    return BindToActive(CLSID_RenameNotificationEventHandler);
  }


};
typedef _RenameNotificationEventHandlerDispT<_RenameNotificationEventHandler> _RenameNotificationEventHandlerDisp;

typedef TComInterface<IOTAModule>  TCOMIOTAModule;

// *********************************************************************//
// DispIntf:  IOTAModule
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9F18CD2A-DCEE-48D9-8507-4C45D3D1F551}
// *********************************************************************//
template<class T>
class IOTAModuleDispT : public TAutoDriver<IOTAModule>
{
public:
  IOTAModuleDispT(){}

  IOTAModuleDispT(IOTAModule *pintf)
  {
    TAutoDriver<IOTAModule>::Bind(pintf, false);
  }

  IOTAModuleDispT(IOTAModulePtr pintf)
  {
    TAutoDriver<IOTAModule>::Bind(pintf, true);
  }

  IOTAModuleDispT& operator=(IOTAModule *pintf)
  {
    TAutoDriver<IOTAModule>::Bind(pintf, false);
    return *this;
  }

  IOTAModuleDispT& operator=(IOTAModulePtr pintf)
  {
    TAutoDriver<IOTAModule>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall add_BeforeSave(Mscorlib_tlb::_EventHandler* value/*[in]*/);
  HRESULT         __fastcall remove_BeforeSave(Mscorlib_tlb::_EventHandler* value/*[in]*/);
  HRESULT         __fastcall add_AfterSave(Mscorlib_tlb::_EventHandler* value/*[in]*/);
  HRESULT         __fastcall remove_AfterSave(Mscorlib_tlb::_EventHandler* value/*[in]*/);
  HRESULT         __fastcall add_Closed(Mscorlib_tlb::_EventHandler* value/*[in]*/);
  HRESULT         __fastcall remove_Closed(Mscorlib_tlb::_EventHandler* value/*[in]*/);
  HRESULT         __fastcall add_Modified(Mscorlib_tlb::_EventHandler* value/*[in]*/);
  HRESULT         __fastcall remove_Modified(Mscorlib_tlb::_EventHandler* value/*[in]*/);
  HRESULT         __fastcall add_Renamed(Mscorlib_tlb::_EventHandler* value/*[in]*/);
  HRESULT         __fastcall remove_Renamed(Mscorlib_tlb::_EventHandler* value/*[in]*/);
  HRESULT         __fastcall Close(VARIANT_BOOL forceClosed/*[in]*/, 
                                   VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall Close(VARIANT_BOOL forceClosed/*[in]*/);
  HRESULT         __fastcall Save(VARIANT_BOOL changeName/*[in]*/, VARIANT_BOOL forceSave/*[in]*/, 
                                  VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall Save(VARIANT_BOOL changeName/*[in]*/, VARIANT_BOOL forceSave/*[in]*/);
  HRESULT         __fastcall get_fileName(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_fileName(void);
  HRESULT         __fastcall set_fileName(BSTR pRetVal/*[in]*/);
  HRESULT         __fastcall get_fileSystem(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_fileSystem(void);
  HRESULT         __fastcall set_fileSystem(BSTR pRetVal/*[in]*/);
  HRESULT         __fastcall get_ModuleFileCount(long* pRetVal/*[out,retval]*/);
  long            __fastcall get_ModuleFileCount(void);
  HRESULT         __fastcall ModuleFileEditors(long index/*[in]*/, 
                                               Borland_studio_toolsapi_tlb::IOTAEditor** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAEditor* __fastcall ModuleFileEditors(long index/*[in]*/);
  HRESULT         __fastcall get_CurrentEditor(Borland_studio_toolsapi_tlb::IOTAEditor** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAEditorPtr __fastcall get_CurrentEditor(void);
  HRESULT         __fastcall MarkModified();
  HRESULT         __fastcall get_OwnerModuleCount(long* pRetVal/*[out,retval]*/);
  long            __fastcall get_OwnerModuleCount(void);
  HRESULT         __fastcall GetOwnerModule(long index/*[in]*/, 
                                            Borland_studio_toolsapi_tlb::IOTAModule** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAModule* __fastcall GetOwnerModule(long index/*[in]*/);
  HRESULT         __fastcall Show();
  HRESULT         __fastcall ShowFileName(BSTR fileName/*[in]*/);
  HRESULT         __fastcall add_BeforeRename(Borland_studio_toolsapi_tlb::_RenameNotificationEventHandler* value/*[in]*/);
  HRESULT         __fastcall remove_BeforeRename(Borland_studio_toolsapi_tlb::_RenameNotificationEventHandler* value/*[in]*/);
  HRESULT         __fastcall add_AfterRename(Borland_studio_toolsapi_tlb::_RenameNotificationEventHandler* value/*[in]*/);
  HRESULT         __fastcall remove_AfterRename(Borland_studio_toolsapi_tlb::_RenameNotificationEventHandler* value/*[in]*/);

  __property   BSTR            fileName = {read = get_fileName, write = set_fileName};
  __property   BSTR            fileSystem = {read = get_fileSystem, write = set_fileSystem};
  __property   long            ModuleFileCount = {read = get_ModuleFileCount};
  __property   Borland_studio_toolsapi_tlb::IOTAEditorPtr CurrentEditor = {read = get_CurrentEditor};
  __property   long            OwnerModuleCount = {read = get_OwnerModuleCount};
};
typedef IOTAModuleDispT<IOTAModule> IOTAModuleDisp;

typedef TComInterface<IOTADotNetModule>  TCOMIOTADotNetModule;

// *********************************************************************//
// DispIntf:  IOTADotNetModule
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DD4C2119-66FA-4166-A62A-22E3C9236291}
// *********************************************************************//
template<class T>
class IOTADotNetModuleDispT : public TAutoDriver<IOTADotNetModule>
{
public:
  IOTADotNetModuleDispT(){}

  IOTADotNetModuleDispT(IOTADotNetModule *pintf)
  {
    TAutoDriver<IOTADotNetModule>::Bind(pintf, false);
  }

  IOTADotNetModuleDispT(IOTADotNetModulePtr pintf)
  {
    TAutoDriver<IOTADotNetModule>::Bind(pintf, true);
  }

  IOTADotNetModuleDispT& operator=(IOTADotNetModule *pintf)
  {
    TAutoDriver<IOTADotNetModule>::Bind(pintf, false);
    return *this;
  }

  IOTADotNetModuleDispT& operator=(IOTADotNetModulePtr pintf)
  {
    TAutoDriver<IOTADotNetModule>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall ShowCode(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall ShowCode(void);
  HRESULT         __fastcall ShowCode_2(long LineNumber/*[in]*/, 
                                        VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall ShowCode_2(long LineNumber/*[in]*/);
  HRESULT         __fastcall ShowCode_3(long LineNumber/*[in]*/, long colNumber/*[in]*/, 
                                        VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall ShowCode_3(long LineNumber/*[in]*/, long colNumber/*[in]*/);
  HRESULT         __fastcall ShowCode_4(long topLineNumber/*[in]*/, long LineNumber/*[in]*/, 
                                        long colNumber/*[in]*/, 
                                        VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall ShowCode_4(long topLineNumber/*[in]*/, long LineNumber/*[in]*/, 
                                        long colNumber/*[in]*/);
  HRESULT         __fastcall ShowCodeOffset(long offset/*[in]*/, 
                                            VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall ShowCodeOffset(long offset/*[in]*/);
  HRESULT         __fastcall ShowDesigner(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall ShowDesigner(void);
  HRESULT         __fastcall get_CodeGeneratorOptions(Borland_studio_toolsapi_tlb::IOTACodeDomGeneratorOptions** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTACodeDomGeneratorOptionsPtr __fastcall get_CodeGeneratorOptions(void);
  HRESULT         __fastcall get_RootComponentClassName(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_RootComponentClassName(void);
  HRESULT         __fastcall set_RootComponentClassName(BSTR pRetVal/*[in]*/);
  HRESULT         __fastcall get_HasDesignableType(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_HasDesignableType(void);
  HRESULT         __fastcall get_DesignerActive(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_DesignerActive(void);
  HRESULT         __fastcall FlushDesigner();
  HRESULT         __fastcall ReloadDesigner(VARIANT_BOOL synchronous/*[in]*/);
  HRESULT         __fastcall get_DesignerHost(System_tlb::IDesignerHost** pRetVal/*[out,retval]*/);
  System_tlb::IDesignerHostPtr __fastcall get_DesignerHost(void);
  HRESULT         __fastcall get_MainSourceFileName(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_MainSourceFileName(void);

  __property   Borland_studio_toolsapi_tlb::IOTACodeDomGeneratorOptionsPtr CodeGeneratorOptions = {read = get_CodeGeneratorOptions};
  __property   BSTR            RootComponentClassName = {read = get_RootComponentClassName, write = set_RootComponentClassName};
  __property   VARIANT_BOOL    HasDesignableType = {read = get_HasDesignableType};
  __property   VARIANT_BOOL    DesignerActive = {read = get_DesignerActive};
  __property   System_tlb::IDesignerHostPtr DesignerHost = {read = get_DesignerHost};
  __property   BSTR            MainSourceFileName = {read = get_MainSourceFileName};
};
typedef IOTADotNetModuleDispT<IOTADotNetModule> IOTADotNetModuleDisp;

typedef TComInterface<IOTADotNetProject>  TCOMIOTADotNetProject;

// *********************************************************************//
// DispIntf:  IOTADotNetProject
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7E063121-7FCB-406D-AF70-E07D618D88C8}
// *********************************************************************//
template<class T>
class IOTADotNetProjectDispT : public TAutoDriver<IOTADotNetProject>
{
public:
  IOTADotNetProjectDispT(){}

  IOTADotNetProjectDispT(IOTADotNetProject *pintf)
  {
    TAutoDriver<IOTADotNetProject>::Bind(pintf, false);
  }

  IOTADotNetProjectDispT(IOTADotNetProjectPtr pintf)
  {
    TAutoDriver<IOTADotNetProject>::Bind(pintf, true);
  }

  IOTADotNetProjectDispT& operator=(IOTADotNetProject *pintf)
  {
    TAutoDriver<IOTADotNetProject>::Bind(pintf, false);
    return *this;
  }

  IOTADotNetProjectDispT& operator=(IOTADotNetProjectPtr pintf)
  {
    TAutoDriver<IOTADotNetProject>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall get_References(Borland_studio_toolsapi_tlb::IOTAReferences** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAReferencesPtr __fastcall get_References(void);
  HRESULT         __fastcall get_LicenseProvider(Borland_studio_toolsapi_tlb::IOTAProjectLicenseProvider** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAProjectLicenseProviderPtr __fastcall get_LicenseProvider(void);
  HRESULT         __fastcall get_ConfigurationProvider(Borland_studio_toolsapi_tlb::IOTAProjectConfigurationProvider** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAProjectConfigurationProviderPtr __fastcall get_ConfigurationProvider(void);

  __property   Borland_studio_toolsapi_tlb::IOTAReferencesPtr References = {read = get_References};
  __property   Borland_studio_toolsapi_tlb::IOTAProjectLicenseProviderPtr LicenseProvider = {read = get_LicenseProvider};
  __property   Borland_studio_toolsapi_tlb::IOTAProjectConfigurationProviderPtr ConfigurationProvider = {read = get_ConfigurationProvider};
};
typedef IOTADotNetProjectDispT<IOTADotNetProject> IOTADotNetProjectDisp;

typedef TComInterface<IOTAReference>  TCOMIOTAReference;

// *********************************************************************//
// DispIntf:  IOTAReference
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {35BC768A-B1A2-4036-8F9E-8C2D986D831A}
// *********************************************************************//
template<class T>
class IOTAReferenceDispT : public TAutoDriver<IOTAReference>
{
public:
  IOTAReferenceDispT(){}

  IOTAReferenceDispT(IOTAReference *pintf)
  {
    TAutoDriver<IOTAReference>::Bind(pintf, false);
  }

  IOTAReferenceDispT(IOTAReferencePtr pintf)
  {
    TAutoDriver<IOTAReference>::Bind(pintf, true);
  }

  IOTAReferenceDispT& operator=(IOTAReference *pintf)
  {
    TAutoDriver<IOTAReference>::Bind(pintf, false);
    return *this;
  }

  IOTAReferenceDispT& operator=(IOTAReferencePtr pintf)
  {
    TAutoDriver<IOTAReference>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall get_CopyLocal(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_CopyLocal(void);
  HRESULT         __fastcall set_CopyLocal(VARIANT_BOOL pRetVal/*[in]*/);
  HRESULT         __fastcall get_Name(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_Name(void);
  HRESULT         __fastcall get_Path(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_Path(void);
  HRESULT         __fastcall get_Version(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_Version(void);
  HRESULT         __fastcall get_Culture(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_Culture(void);
  HRESULT         __fastcall get_ProjectGUID(/*AUTO_PARAM_ERROR(System::TGUID* pRetVal)*/ VARIANT*  pRetVal);

  __property   VARIANT_BOOL    CopyLocal = {read = get_CopyLocal, write = set_CopyLocal};
  __property   BSTR            Name = {read = get_Name};
  __property   BSTR            Path = {read = get_Path};
  __property   BSTR            Version = {read = get_Version};
  __property   BSTR            Culture = {read = get_Culture};
};
typedef IOTAReferenceDispT<IOTAReference> IOTAReferenceDisp;

typedef TComInterface<IOTAReferences>  TCOMIOTAReferences;

// *********************************************************************//
// DispIntf:  IOTAReferences
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6100CC1A-E0D4-4600-A889-5C510E8BC9EA}
// *********************************************************************//
template<class T>
class IOTAReferencesDispT : public TAutoDriver<IOTAReferences>
{
public:
  IOTAReferencesDispT(){}

  IOTAReferencesDispT(IOTAReferences *pintf)
  {
    TAutoDriver<IOTAReferences>::Bind(pintf, false);
  }

  IOTAReferencesDispT(IOTAReferencesPtr pintf)
  {
    TAutoDriver<IOTAReferences>::Bind(pintf, true);
  }

  IOTAReferencesDispT& operator=(IOTAReferences *pintf)
  {
    TAutoDriver<IOTAReferences>::Bind(pintf, false);
    return *this;
  }

  IOTAReferencesDispT& operator=(IOTAReferencesPtr pintf)
  {
    TAutoDriver<IOTAReferences>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall AddReference(BSTR fileName/*[in]*/, 
                                          Borland_studio_toolsapi_tlb::IOTAReference** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAReference* __fastcall AddReference(BSTR fileName/*[in]*/);
  HRESULT         __fastcall AddComReference(BSTR guid/*[in]*/, BSTR Version/*[in]*/, 
                                             BSTR lcid/*[in]*/, 
                                             Borland_studio_toolsapi_tlb::IOTAReference** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAReference* __fastcall AddComReference(BSTR guid/*[in]*/, 
                                                                         BSTR Version/*[in]*/, 
                                                                         BSTR lcid/*[in]*/);
  HRESULT         __fastcall AddActiveXReference(BSTR guid/*[in]*/, BSTR Version/*[in]*/, 
                                                 BSTR lcid/*[in]*/, 
                                                 Borland_studio_toolsapi_tlb::IOTAReference** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAReference* __fastcall AddActiveXReference(BSTR guid/*[in]*/, 
                                                                             BSTR Version/*[in]*/, 
                                                                             BSTR lcid/*[in]*/);
  HRESULT         __fastcall AddProjectReference(Borland_studio_toolsapi_tlb::IOTAProject* project/*[in]*/
                                                 , 
                                                 Borland_studio_toolsapi_tlb::IOTAReference** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAReference* __fastcall AddProjectReference(Borland_studio_toolsapi_tlb::IOTAProject* project/*[in]*/);
  HRESULT         __fastcall Contains(BSTR fileName/*[in]*/, VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall Contains(BSTR fileName/*[in]*/);
  HRESULT         __fastcall RemoveReference(Borland_studio_toolsapi_tlb::IOTAReference* reference/*[in]*/);
  HRESULT         __fastcall get_Count(long* pRetVal/*[out,retval]*/);
  long            __fastcall get_Count(void);
  HRESULT         __fastcall get_Item(long index/*[in]*/, 
                                      Borland_studio_toolsapi_tlb::IOTAReference** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAReference* __fastcall get_Item(long index/*[in]*/);
  HRESULT         __fastcall get_project(Borland_studio_toolsapi_tlb::IOTAProject** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAProjectPtr __fastcall get_project(void);

  __property   long            Count = {read = get_Count};
  __property   Borland_studio_toolsapi_tlb::IOTAProjectPtr project = {read = get_project};
};
typedef IOTAReferencesDispT<IOTAReferences> IOTAReferencesDisp;

typedef TComInterface<IOTAModuleInfo>  TCOMIOTAModuleInfo;

// *********************************************************************//
// DispIntf:  IOTAModuleInfo
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D0787E83-F5A2-467E-A871-FDB50A5925F5}
// *********************************************************************//
template<class T>
class IOTAModuleInfoDispT : public TAutoDriver<IOTAModuleInfo>
{
public:
  IOTAModuleInfoDispT(){}

  IOTAModuleInfoDispT(IOTAModuleInfo *pintf)
  {
    TAutoDriver<IOTAModuleInfo>::Bind(pintf, false);
  }

  IOTAModuleInfoDispT(IOTAModuleInfoPtr pintf)
  {
    TAutoDriver<IOTAModuleInfo>::Bind(pintf, true);
  }

  IOTAModuleInfoDispT& operator=(IOTAModuleInfo *pintf)
  {
    TAutoDriver<IOTAModuleInfo>::Bind(pintf, false);
    return *this;
  }

  IOTAModuleInfoDispT& operator=(IOTAModuleInfoPtr pintf)
  {
    TAutoDriver<IOTAModuleInfo>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall get_Name(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_Name(void);
  HRESULT         __fastcall get_fileName(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_fileName(void);
  HRESULT         __fastcall get_ModuleType(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_ModuleType(void);
  HRESULT         __fastcall OpenModule(Borland_studio_toolsapi_tlb::IOTAModule** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAModule* __fastcall OpenModule(void);
  HRESULT         __fastcall get_className(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_className(void);
  HRESULT         __fastcall get_DesignClassName(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_DesignClassName(void);
  HRESULT         __fastcall get_AdditionalFilesCount(long* pRetVal/*[out,retval]*/);
  long            __fastcall get_AdditionalFilesCount(void);
  HRESULT         __fastcall AdditionalFiles(long index/*[in]*/, BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall AdditionalFiles(long index/*[in]*/);

  __property   BSTR            Name = {read = get_Name};
  __property   BSTR            fileName = {read = get_fileName};
  __property   BSTR            ModuleType = {read = get_ModuleType};
  __property   BSTR            className = {read = get_className};
  __property   BSTR            DesignClassName = {read = get_DesignClassName};
  __property   long            AdditionalFilesCount = {read = get_AdditionalFilesCount};
};
typedef IOTAModuleInfoDispT<IOTAModuleInfo> IOTAModuleInfoDisp;

typedef TComInterface<IOTACodeDomProvider>  TCOMIOTACodeDomProvider;

// *********************************************************************//
// DispIntf:  IOTACodeDomProvider
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {35501657-34C3-47A5-BE03-3E8AF77FD860}
// *********************************************************************//
template<class T>
class IOTACodeDomProviderDispT : public TAutoDriver<IOTACodeDomProvider>
{
public:
  IOTACodeDomProviderDispT(){}

  IOTACodeDomProviderDispT(IOTACodeDomProvider *pintf)
  {
    TAutoDriver<IOTACodeDomProvider>::Bind(pintf, false);
  }

  IOTACodeDomProviderDispT(IOTACodeDomProviderPtr pintf)
  {
    TAutoDriver<IOTACodeDomProvider>::Bind(pintf, true);
  }

  IOTACodeDomProviderDispT& operator=(IOTACodeDomProvider *pintf)
  {
    TAutoDriver<IOTACodeDomProvider>::Bind(pintf, false);
    return *this;
  }

  IOTACodeDomProviderDispT& operator=(IOTACodeDomProviderPtr pintf)
  {
    TAutoDriver<IOTACodeDomProvider>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall get_CodeDomFile(Borland_studio_toolsapi_tlb::IOTACodeDomFile** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTACodeDomFilePtr __fastcall get_CodeDomFile(void);

  __property   Borland_studio_toolsapi_tlb::IOTACodeDomFilePtr CodeDomFile = {read = get_CodeDomFile};
};
typedef IOTACodeDomProviderDispT<IOTACodeDomProvider> IOTACodeDomProviderDisp;

// *********************************************************************//
// SmartIntf: TCOM_ModuleAddedRemovedEventArgs
// Interface: _ModuleAddedRemovedEventArgs
// *********************************************************************//
template <class T /* _ModuleAddedRemovedEventArgs */ >
class TCOM_ModuleAddedRemovedEventArgsT : public TComInterface<_ModuleAddedRemovedEventArgs>, public TComInterfaceBase<IUnknown>
{
public:
  TCOM_ModuleAddedRemovedEventArgsT() {}
  TCOM_ModuleAddedRemovedEventArgsT(_ModuleAddedRemovedEventArgs *intf, bool addRef = false) : TComInterface<_ModuleAddedRemovedEventArgs>(intf, addRef) {}
  TCOM_ModuleAddedRemovedEventArgsT(const TCOM_ModuleAddedRemovedEventArgsT& src) : TComInterface<_ModuleAddedRemovedEventArgs>(src) {}
  TCOM_ModuleAddedRemovedEventArgsT& operator=(const TCOM_ModuleAddedRemovedEventArgsT& src) { Bind(src, true); return *this;}


};
typedef TCOM_ModuleAddedRemovedEventArgsT<_ModuleAddedRemovedEventArgs> TCOM_ModuleAddedRemovedEventArgs;

// *********************************************************************//
// DispIntf:  _ModuleAddedRemovedEventArgs
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {9A6F1634-F602-3669-AF26-975C6FC35DD2}
// *********************************************************************//
template<class T>
class _ModuleAddedRemovedEventArgsDispT : public TAutoDriver<_ModuleAddedRemovedEventArgs>
{
public:
  _ModuleAddedRemovedEventArgsDispT(){}

  _ModuleAddedRemovedEventArgsDispT(_ModuleAddedRemovedEventArgs *pintf)
  {
    TAutoDriver<_ModuleAddedRemovedEventArgs>::Bind(pintf, false);
  }

  _ModuleAddedRemovedEventArgsDispT(_ModuleAddedRemovedEventArgsPtr pintf)
  {
    TAutoDriver<_ModuleAddedRemovedEventArgs>::Bind(pintf, true);
  }

  _ModuleAddedRemovedEventArgsDispT& operator=(_ModuleAddedRemovedEventArgs *pintf)
  {
    TAutoDriver<_ModuleAddedRemovedEventArgs>::Bind(pintf, false);
    return *this;
  }

  _ModuleAddedRemovedEventArgsDispT& operator=(_ModuleAddedRemovedEventArgsPtr pintf)
  {
    TAutoDriver<_ModuleAddedRemovedEventArgs>::Bind(pintf, true);
    return *this;
  }

  HRESULT BindDefault()
  {
    return OLECHECK(Bind(CLSID_ModuleAddedRemovedEventArgs));
  }

  HRESULT BindRunning()
  {
    return BindToActive(CLSID_ModuleAddedRemovedEventArgs);
  }


};
typedef _ModuleAddedRemovedEventArgsDispT<_ModuleAddedRemovedEventArgs> _ModuleAddedRemovedEventArgsDisp;

// *********************************************************************//
// SmartIntf: TCOM_ModuleRenamedEventArgs
// Interface: _ModuleRenamedEventArgs
// *********************************************************************//
template <class T /* _ModuleRenamedEventArgs */ >
class TCOM_ModuleRenamedEventArgsT : public TComInterface<_ModuleRenamedEventArgs>, public TComInterfaceBase<IUnknown>
{
public:
  TCOM_ModuleRenamedEventArgsT() {}
  TCOM_ModuleRenamedEventArgsT(_ModuleRenamedEventArgs *intf, bool addRef = false) : TComInterface<_ModuleRenamedEventArgs>(intf, addRef) {}
  TCOM_ModuleRenamedEventArgsT(const TCOM_ModuleRenamedEventArgsT& src) : TComInterface<_ModuleRenamedEventArgs>(src) {}
  TCOM_ModuleRenamedEventArgsT& operator=(const TCOM_ModuleRenamedEventArgsT& src) { Bind(src, true); return *this;}


};
typedef TCOM_ModuleRenamedEventArgsT<_ModuleRenamedEventArgs> TCOM_ModuleRenamedEventArgs;

// *********************************************************************//
// DispIntf:  _ModuleRenamedEventArgs
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {D5523F8B-9E2E-3D96-8228-D5FBEE2F00DB}
// *********************************************************************//
template<class T>
class _ModuleRenamedEventArgsDispT : public TAutoDriver<_ModuleRenamedEventArgs>
{
public:
  _ModuleRenamedEventArgsDispT(){}

  _ModuleRenamedEventArgsDispT(_ModuleRenamedEventArgs *pintf)
  {
    TAutoDriver<_ModuleRenamedEventArgs>::Bind(pintf, false);
  }

  _ModuleRenamedEventArgsDispT(_ModuleRenamedEventArgsPtr pintf)
  {
    TAutoDriver<_ModuleRenamedEventArgs>::Bind(pintf, true);
  }

  _ModuleRenamedEventArgsDispT& operator=(_ModuleRenamedEventArgs *pintf)
  {
    TAutoDriver<_ModuleRenamedEventArgs>::Bind(pintf, false);
    return *this;
  }

  _ModuleRenamedEventArgsDispT& operator=(_ModuleRenamedEventArgsPtr pintf)
  {
    TAutoDriver<_ModuleRenamedEventArgs>::Bind(pintf, true);
    return *this;
  }

  HRESULT BindDefault()
  {
    return OLECHECK(Bind(CLSID_ModuleRenamedEventArgs));
  }

  HRESULT BindRunning()
  {
    return BindToActive(CLSID_ModuleRenamedEventArgs);
  }


};
typedef _ModuleRenamedEventArgsDispT<_ModuleRenamedEventArgs> _ModuleRenamedEventArgsDisp;

// *********************************************************************//
// SmartIntf: TCOM_ModuleAddedRemovedEventHandler
// Interface: _ModuleAddedRemovedEventHandler
// *********************************************************************//
template <class T /* _ModuleAddedRemovedEventHandler */ >
class TCOM_ModuleAddedRemovedEventHandlerT : public TComInterface<_ModuleAddedRemovedEventHandler>, public TComInterfaceBase<IUnknown>
{
public:
  TCOM_ModuleAddedRemovedEventHandlerT() {}
  TCOM_ModuleAddedRemovedEventHandlerT(_ModuleAddedRemovedEventHandler *intf, bool addRef = false) : TComInterface<_ModuleAddedRemovedEventHandler>(intf, addRef) {}
  TCOM_ModuleAddedRemovedEventHandlerT(const TCOM_ModuleAddedRemovedEventHandlerT& src) : TComInterface<_ModuleAddedRemovedEventHandler>(src) {}
  TCOM_ModuleAddedRemovedEventHandlerT& operator=(const TCOM_ModuleAddedRemovedEventHandlerT& src) { Bind(src, true); return *this;}


};
typedef TCOM_ModuleAddedRemovedEventHandlerT<_ModuleAddedRemovedEventHandler> TCOM_ModuleAddedRemovedEventHandler;

// *********************************************************************//
// DispIntf:  _ModuleAddedRemovedEventHandler
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {15165F5A-EEF4-3A67-8EE4-08B2BC7B33CE}
// *********************************************************************//
template<class T>
class _ModuleAddedRemovedEventHandlerDispT : public TAutoDriver<_ModuleAddedRemovedEventHandler>
{
public:
  _ModuleAddedRemovedEventHandlerDispT(){}

  _ModuleAddedRemovedEventHandlerDispT(_ModuleAddedRemovedEventHandler *pintf)
  {
    TAutoDriver<_ModuleAddedRemovedEventHandler>::Bind(pintf, false);
  }

  _ModuleAddedRemovedEventHandlerDispT(_ModuleAddedRemovedEventHandlerPtr pintf)
  {
    TAutoDriver<_ModuleAddedRemovedEventHandler>::Bind(pintf, true);
  }

  _ModuleAddedRemovedEventHandlerDispT& operator=(_ModuleAddedRemovedEventHandler *pintf)
  {
    TAutoDriver<_ModuleAddedRemovedEventHandler>::Bind(pintf, false);
    return *this;
  }

  _ModuleAddedRemovedEventHandlerDispT& operator=(_ModuleAddedRemovedEventHandlerPtr pintf)
  {
    TAutoDriver<_ModuleAddedRemovedEventHandler>::Bind(pintf, true);
    return *this;
  }

  HRESULT BindDefault()
  {
    return OLECHECK(Bind(CLSID_ModuleAddedRemovedEventHandler));
  }

  HRESULT BindRunning()
  {
    return BindToActive(CLSID_ModuleAddedRemovedEventHandler);
  }


};
typedef _ModuleAddedRemovedEventHandlerDispT<_ModuleAddedRemovedEventHandler> _ModuleAddedRemovedEventHandlerDisp;

// *********************************************************************//
// SmartIntf: TCOM_ModuleRenamedEventHandler
// Interface: _ModuleRenamedEventHandler
// *********************************************************************//
template <class T /* _ModuleRenamedEventHandler */ >
class TCOM_ModuleRenamedEventHandlerT : public TComInterface<_ModuleRenamedEventHandler>, public TComInterfaceBase<IUnknown>
{
public:
  TCOM_ModuleRenamedEventHandlerT() {}
  TCOM_ModuleRenamedEventHandlerT(_ModuleRenamedEventHandler *intf, bool addRef = false) : TComInterface<_ModuleRenamedEventHandler>(intf, addRef) {}
  TCOM_ModuleRenamedEventHandlerT(const TCOM_ModuleRenamedEventHandlerT& src) : TComInterface<_ModuleRenamedEventHandler>(src) {}
  TCOM_ModuleRenamedEventHandlerT& operator=(const TCOM_ModuleRenamedEventHandlerT& src) { Bind(src, true); return *this;}


};
typedef TCOM_ModuleRenamedEventHandlerT<_ModuleRenamedEventHandler> TCOM_ModuleRenamedEventHandler;

// *********************************************************************//
// DispIntf:  _ModuleRenamedEventHandler
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {E7410390-B6CF-3182-9610-BB1207CCA5BC}
// *********************************************************************//
template<class T>
class _ModuleRenamedEventHandlerDispT : public TAutoDriver<_ModuleRenamedEventHandler>
{
public:
  _ModuleRenamedEventHandlerDispT(){}

  _ModuleRenamedEventHandlerDispT(_ModuleRenamedEventHandler *pintf)
  {
    TAutoDriver<_ModuleRenamedEventHandler>::Bind(pintf, false);
  }

  _ModuleRenamedEventHandlerDispT(_ModuleRenamedEventHandlerPtr pintf)
  {
    TAutoDriver<_ModuleRenamedEventHandler>::Bind(pintf, true);
  }

  _ModuleRenamedEventHandlerDispT& operator=(_ModuleRenamedEventHandler *pintf)
  {
    TAutoDriver<_ModuleRenamedEventHandler>::Bind(pintf, false);
    return *this;
  }

  _ModuleRenamedEventHandlerDispT& operator=(_ModuleRenamedEventHandlerPtr pintf)
  {
    TAutoDriver<_ModuleRenamedEventHandler>::Bind(pintf, true);
    return *this;
  }

  HRESULT BindDefault()
  {
    return OLECHECK(Bind(CLSID_ModuleRenamedEventHandler));
  }

  HRESULT BindRunning()
  {
    return BindToActive(CLSID_ModuleRenamedEventHandler);
  }


};
typedef _ModuleRenamedEventHandlerDispT<_ModuleRenamedEventHandler> _ModuleRenamedEventHandlerDisp;

typedef TComInterface<IOTAProject>  TCOMIOTAProject;

// *********************************************************************//
// DispIntf:  IOTAProject
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {42B792B0-229C-4D53-A9B5-BF9C90630BE0}
// *********************************************************************//
template<class T>
class IOTAProjectDispT : public TAutoDriver<IOTAProject>
{
public:
  IOTAProjectDispT(){}

  IOTAProjectDispT(IOTAProject *pintf)
  {
    TAutoDriver<IOTAProject>::Bind(pintf, false);
  }

  IOTAProjectDispT(IOTAProjectPtr pintf)
  {
    TAutoDriver<IOTAProject>::Bind(pintf, true);
  }

  IOTAProjectDispT& operator=(IOTAProject *pintf)
  {
    TAutoDriver<IOTAProject>::Bind(pintf, false);
    return *this;
  }

  IOTAProjectDispT& operator=(IOTAProjectPtr pintf)
  {
    TAutoDriver<IOTAProject>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall add_ModuleAdded(Borland_studio_toolsapi_tlb::_ModuleAddedRemovedEventHandler* value/*[in]*/);
  HRESULT         __fastcall remove_ModuleAdded(Borland_studio_toolsapi_tlb::_ModuleAddedRemovedEventHandler* value/*[in]*/);
  HRESULT         __fastcall add_ModuleRemoved(Borland_studio_toolsapi_tlb::_ModuleAddedRemovedEventHandler* value/*[in]*/);
  HRESULT         __fastcall remove_ModuleRemoved(Borland_studio_toolsapi_tlb::_ModuleAddedRemovedEventHandler* value/*[in]*/);
  HRESULT         __fastcall add_ModuleRenamed(Borland_studio_toolsapi_tlb::_ModuleRenamedEventHandler* value/*[in]*/);
  HRESULT         __fastcall remove_ModuleRenamed(Borland_studio_toolsapi_tlb::_ModuleRenamedEventHandler* value/*[in]*/);
  HRESULT         __fastcall get_ModuleCount(long* pRetVal/*[out,retval]*/);
  long            __fastcall get_ModuleCount(void);
  HRESULT         __fastcall GetModuleInfo(long index/*[in]*/, 
                                           Borland_studio_toolsapi_tlb::IOTAModuleInfo** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAModuleInfo* __fastcall GetModuleInfo(long index/*[in]*/);
  HRESULT         __fastcall GetModuleFileName(long index/*[in]*/, BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall GetModuleFileName(long index/*[in]*/);
  HRESULT         __fastcall get_ProjectOptions(Borland_studio_toolsapi_tlb::IOTAProjectOptions** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAProjectOptionsPtr __fastcall get_ProjectOptions(void);
  HRESULT         __fastcall get_ProjectBuilder(Borland_studio_toolsapi_tlb::IOTAProjectBuilder** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAProjectBuilderPtr __fastcall get_ProjectBuilder(void);
  HRESULT         __fastcall get_ProjectGUID(/*AUTO_PARAM_ERROR(System::TGUID* pRetVal)*/ VARIANT*  pRetVal);
  HRESULT         __fastcall AddFile(BSTR fileName/*[in]*/);
  HRESULT         __fastcall AddFile_2(BSTR fileName/*[in]*/, BSTR parentFile/*[in]*/);
  HRESULT         __fastcall AddFile_3(BSTR AFileName/*[in]*/, VARIANT_BOOL IsUnitOrForm/*[in]*/);
  HRESULT         __fastcall RemoveFile(BSTR fileName/*[in]*/);
  HRESULT         __fastcall FileInProject(BSTR fileName/*[in]*/, 
                                           VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall FileInProject(BSTR fileName/*[in]*/);
  HRESULT         __fastcall Activate();
  HRESULT         __fastcall get_personality(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_personality(void);
  HRESULT         __fastcall Rename(BSTR OldFileName/*[in]*/, BSTR NewFileName/*[in]*/);
  HRESULT         __fastcall get_CurrentConfiguration(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_CurrentConfiguration(void);
  HRESULT         __fastcall get_CurrentPlatform(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_CurrentPlatform(void);

  __property   long            ModuleCount = {read = get_ModuleCount};
  __property   Borland_studio_toolsapi_tlb::IOTAProjectOptionsPtr ProjectOptions = {read = get_ProjectOptions};
  __property   Borland_studio_toolsapi_tlb::IOTAProjectBuilderPtr ProjectBuilder = {read = get_ProjectBuilder};
  __property   BSTR            personality = {read = get_personality};
  __property   BSTR            CurrentConfiguration = {read = get_CurrentConfiguration};
  __property   BSTR            CurrentPlatform = {read = get_CurrentPlatform};
};
typedef IOTAProjectDispT<IOTAProject> IOTAProjectDisp;

typedef TComInterface<IOTAProjectMainSource>  TCOMIOTAProjectMainSource;

// *********************************************************************//
// DispIntf:  IOTAProjectMainSource
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0A4619FA-DE5E-4A25-A56F-C3D3DE1EA293}
// *********************************************************************//
template<class T>
class IOTAProjectMainSourceDispT : public TAutoDriver<IOTAProjectMainSource>
{
public:
  IOTAProjectMainSourceDispT(){}

  IOTAProjectMainSourceDispT(IOTAProjectMainSource *pintf)
  {
    TAutoDriver<IOTAProjectMainSource>::Bind(pintf, false);
  }

  IOTAProjectMainSourceDispT(IOTAProjectMainSourcePtr pintf)
  {
    TAutoDriver<IOTAProjectMainSource>::Bind(pintf, true);
  }

  IOTAProjectMainSourceDispT& operator=(IOTAProjectMainSource *pintf)
  {
    TAutoDriver<IOTAProjectMainSource>::Bind(pintf, false);
    return *this;
  }

  IOTAProjectMainSourceDispT& operator=(IOTAProjectMainSourcePtr pintf)
  {
    TAutoDriver<IOTAProjectMainSource>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall get_MainSourceName(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_MainSourceName(void);

  __property   BSTR            MainSourceName = {read = get_MainSourceName};
};
typedef IOTAProjectMainSourceDispT<IOTAProjectMainSource> IOTAProjectMainSourceDisp;

typedef TComInterface<IOTAProjectLicenseProvider>  TCOMIOTAProjectLicenseProvider;

// *********************************************************************//
// DispIntf:  IOTAProjectLicenseProvider
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {637694C4-B01F-48F5-A06C-FC5FDF9F0951}
// *********************************************************************//
template<class T>
class IOTAProjectLicenseProviderDispT : public TAutoDriver<IOTAProjectLicenseProvider>
{
public:
  IOTAProjectLicenseProviderDispT(){}

  IOTAProjectLicenseProviderDispT(IOTAProjectLicenseProvider *pintf)
  {
    TAutoDriver<IOTAProjectLicenseProvider>::Bind(pintf, false);
  }

  IOTAProjectLicenseProviderDispT(IOTAProjectLicenseProviderPtr pintf)
  {
    TAutoDriver<IOTAProjectLicenseProvider>::Bind(pintf, true);
  }

  IOTAProjectLicenseProviderDispT& operator=(IOTAProjectLicenseProvider *pintf)
  {
    TAutoDriver<IOTAProjectLicenseProvider>::Bind(pintf, false);
    return *this;
  }

  IOTAProjectLicenseProviderDispT& operator=(IOTAProjectLicenseProviderPtr pintf)
  {
    TAutoDriver<IOTAProjectLicenseProvider>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall AddLicensedControl(BSTR LicensedControl/*[in]*/);
  HRESULT         __fastcall Clear();
  HRESULT         __fastcall get_LicensedControlCount(long* pRetVal/*[out,retval]*/);
  long            __fastcall get_LicensedControlCount(void);
  HRESULT         __fastcall get_Item(long index/*[in]*/, BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_Item(long index/*[in]*/);

  __property   long            LicensedControlCount = {read = get_LicensedControlCount};
};
typedef IOTAProjectLicenseProviderDispT<IOTAProjectLicenseProvider> IOTAProjectLicenseProviderDisp;

typedef TComInterface<IOTAProjectConfigurationProvider>  TCOMIOTAProjectConfigurationProvider;

// *********************************************************************//
// DispIntf:  IOTAProjectConfigurationProvider
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {40A6AFE4-E560-404A-AE84-586528C8D931}
// *********************************************************************//
template<class T>
class IOTAProjectConfigurationProviderDispT : public TAutoDriver<IOTAProjectConfigurationProvider>
{
public:
  IOTAProjectConfigurationProviderDispT(){}

  IOTAProjectConfigurationProviderDispT(IOTAProjectConfigurationProvider *pintf)
  {
    TAutoDriver<IOTAProjectConfigurationProvider>::Bind(pintf, false);
  }

  IOTAProjectConfigurationProviderDispT(IOTAProjectConfigurationProviderPtr pintf)
  {
    TAutoDriver<IOTAProjectConfigurationProvider>::Bind(pintf, true);
  }

  IOTAProjectConfigurationProviderDispT& operator=(IOTAProjectConfigurationProvider *pintf)
  {
    TAutoDriver<IOTAProjectConfigurationProvider>::Bind(pintf, false);
    return *this;
  }

  IOTAProjectConfigurationProviderDispT& operator=(IOTAProjectConfigurationProviderPtr pintf)
  {
    TAutoDriver<IOTAProjectConfigurationProvider>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall ReadProjectConfigData(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall ReadProjectConfigData(void);
  HRESULT         __fastcall WriteProjectConfigData(BSTR Data/*[in]*/);

};
typedef IOTAProjectConfigurationProviderDispT<IOTAProjectConfigurationProvider> IOTAProjectConfigurationProviderDisp;

typedef TComInterface<IOTAProjectBuilder>  TCOMIOTAProjectBuilder;

// *********************************************************************//
// DispIntf:  IOTAProjectBuilder
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {14D562B2-A1B4-41BC-B6A7-65878CE44DB6}
// *********************************************************************//
template<class T>
class IOTAProjectBuilderDispT : public TAutoDriver<IOTAProjectBuilder>
{
public:
  IOTAProjectBuilderDispT(){}

  IOTAProjectBuilderDispT(IOTAProjectBuilder *pintf)
  {
    TAutoDriver<IOTAProjectBuilder>::Bind(pintf, false);
  }

  IOTAProjectBuilderDispT(IOTAProjectBuilderPtr pintf)
  {
    TAutoDriver<IOTAProjectBuilder>::Bind(pintf, true);
  }

  IOTAProjectBuilderDispT& operator=(IOTAProjectBuilder *pintf)
  {
    TAutoDriver<IOTAProjectBuilder>::Bind(pintf, false);
    return *this;
  }

  IOTAProjectBuilderDispT& operator=(IOTAProjectBuilderPtr pintf)
  {
    TAutoDriver<IOTAProjectBuilder>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall get_ShouldBuild(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_ShouldBuild(void);
  HRESULT         __fastcall BuildProject(Borland_studio_toolsapi_tlb::OTACompileMode CompileMode/*[in]*/
                                          , VARIANT_BOOL Wait/*[in]*/, 
                                          VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall BuildProject(Borland_studio_toolsapi_tlb::OTACompileMode CompileMode/*[in]*/, 
                                          VARIANT_BOOL Wait/*[in]*/);
  HRESULT         __fastcall BuildProject_2(Borland_studio_toolsapi_tlb::OTACompileMode CompileMode/*[in]*/
                                            , VARIANT_BOOL Wait/*[in]*/, 
                                            VARIANT_BOOL ClearMessages/*[in]*/, 
                                            VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall BuildProject_2(Borland_studio_toolsapi_tlb::OTACompileMode CompileMode/*[in]*/, 
                                            VARIANT_BOOL Wait/*[in]*/, 
                                            VARIANT_BOOL ClearMessages/*[in]*/);

  __property   VARIANT_BOOL    ShouldBuild = {read = get_ShouldBuild};
};
typedef IOTAProjectBuilderDispT<IOTAProjectBuilder> IOTAProjectBuilderDisp;

typedef TComInterface<IOTAOptionNames>  TCOMIOTAOptionNames;

// *********************************************************************//
// DispIntf:  IOTAOptionNames
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2F0ACB55-2F39-483F-9046-1037790576AE}
// *********************************************************************//
template<class T>
class IOTAOptionNamesDispT : public TAutoDriver<IOTAOptionNames>
{
public:
  IOTAOptionNamesDispT(){}

  IOTAOptionNamesDispT(IOTAOptionNames *pintf)
  {
    TAutoDriver<IOTAOptionNames>::Bind(pintf, false);
  }

  IOTAOptionNamesDispT(IOTAOptionNamesPtr pintf)
  {
    TAutoDriver<IOTAOptionNames>::Bind(pintf, true);
  }

  IOTAOptionNamesDispT& operator=(IOTAOptionNames *pintf)
  {
    TAutoDriver<IOTAOptionNames>::Bind(pintf, false);
    return *this;
  }

  IOTAOptionNamesDispT& operator=(IOTAOptionNamesPtr pintf)
  {
    TAutoDriver<IOTAOptionNames>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall get_Count(long* pRetVal/*[out,retval]*/);
  long            __fastcall get_Count(void);
  HRESULT         __fastcall GetName(long index/*[in]*/, BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall GetName(long index/*[in]*/);
  HRESULT         __fastcall GetType(long index/*[in]*/, 
                                     Borland_studio_toolsapi_tlb::OTATypeKind* pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::OTATypeKind __fastcall GetType(long index/*[in]*/);

  __property   long            Count = {read = get_Count};
};
typedef IOTAOptionNamesDispT<IOTAOptionNames> IOTAOptionNamesDisp;

typedef TComInterface<IOTAOptions>  TCOMIOTAOptions;

// *********************************************************************//
// DispIntf:  IOTAOptions
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BD8042B4-A87C-4816-A396-5B291C83F225}
// *********************************************************************//
template<class T>
class IOTAOptionsDispT : public TAutoDriver<IOTAOptions>
{
public:
  IOTAOptionsDispT(){}

  IOTAOptionsDispT(IOTAOptions *pintf)
  {
    TAutoDriver<IOTAOptions>::Bind(pintf, false);
  }

  IOTAOptionsDispT(IOTAOptionsPtr pintf)
  {
    TAutoDriver<IOTAOptions>::Bind(pintf, true);
  }

  IOTAOptionsDispT& operator=(IOTAOptions *pintf)
  {
    TAutoDriver<IOTAOptions>::Bind(pintf, false);
    return *this;
  }

  IOTAOptionsDispT& operator=(IOTAOptionsPtr pintf)
  {
    TAutoDriver<IOTAOptions>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall EditOptions();
  HRESULT         __fastcall GetOptionValue(BSTR ValueName/*[in]*/, VARIANT* pRetVal/*[out,retval]*/);
  VARIANT         __fastcall GetOptionValue(BSTR ValueName/*[in]*/);
  HRESULT         __fastcall SetOptionValue(BSTR ValueName/*[in]*/, VARIANT value/*[in]*/);
  HRESULT         __fastcall get_OptionNames(Borland_studio_toolsapi_tlb::IOTAOptionNames** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAOptionNamesPtr __fastcall get_OptionNames(void);

  __property   Borland_studio_toolsapi_tlb::IOTAOptionNamesPtr OptionNames = {read = get_OptionNames};
};
typedef IOTAOptionsDispT<IOTAOptions> IOTAOptionsDisp;

typedef TComInterface<IOTAProjectOptions>  TCOMIOTAProjectOptions;

// *********************************************************************//
// DispIntf:  IOTAProjectOptions
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {41136635-A785-45F0-8DF3-3EB768DC0F22}
// *********************************************************************//
template<class T>
class IOTAProjectOptionsDispT : public TAutoDriver<IOTAProjectOptions>
{
public:
  IOTAProjectOptionsDispT(){}

  IOTAProjectOptionsDispT(IOTAProjectOptions *pintf)
  {
    TAutoDriver<IOTAProjectOptions>::Bind(pintf, false);
  }

  IOTAProjectOptionsDispT(IOTAProjectOptionsPtr pintf)
  {
    TAutoDriver<IOTAProjectOptions>::Bind(pintf, true);
  }

  IOTAProjectOptionsDispT& operator=(IOTAProjectOptions *pintf)
  {
    TAutoDriver<IOTAProjectOptions>::Bind(pintf, false);
    return *this;
  }

  IOTAProjectOptionsDispT& operator=(IOTAProjectOptionsPtr pintf)
  {
    TAutoDriver<IOTAProjectOptions>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall get_ModifiedState(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_ModifiedState(void);
  HRESULT         __fastcall set_ModifiedState(VARIANT_BOOL pRetVal/*[in]*/);
  HRESULT         __fastcall get_TargetName(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_TargetName(void);
  HRESULT         __fastcall get_Configurations(Borland_studio_toolsapi_tlb::IOTAProjectOptionsConfigurations** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAProjectOptionsConfigurationsPtr __fastcall get_Configurations(void);

  __property   VARIANT_BOOL    ModifiedState = {read = get_ModifiedState, write = set_ModifiedState};
  __property   BSTR            TargetName = {read = get_TargetName};
  __property   Borland_studio_toolsapi_tlb::IOTAProjectOptionsConfigurationsPtr Configurations = {read = get_Configurations};
};
typedef IOTAProjectOptionsDispT<IOTAProjectOptions> IOTAProjectOptionsDisp;

typedef TComInterface<IOTABuildConfiguration>  TCOMIOTABuildConfiguration;

// *********************************************************************//
// DispIntf:  IOTABuildConfiguration
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6C5B5235-01D0-48FD-B410-EF50F064687F}
// *********************************************************************//
template<class T>
class IOTABuildConfigurationDispT : public TAutoDriver<IOTABuildConfiguration>
{
public:
  IOTABuildConfigurationDispT(){}

  IOTABuildConfigurationDispT(IOTABuildConfiguration *pintf)
  {
    TAutoDriver<IOTABuildConfiguration>::Bind(pintf, false);
  }

  IOTABuildConfigurationDispT(IOTABuildConfigurationPtr pintf)
  {
    TAutoDriver<IOTABuildConfiguration>::Bind(pintf, true);
  }

  IOTABuildConfigurationDispT& operator=(IOTABuildConfiguration *pintf)
  {
    TAutoDriver<IOTABuildConfiguration>::Bind(pintf, false);
    return *this;
  }

  IOTABuildConfigurationDispT& operator=(IOTABuildConfigurationPtr pintf)
  {
    TAutoDriver<IOTABuildConfiguration>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall get_Name(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_Name(void);
  HRESULT         __fastcall set_Name(BSTR pRetVal/*[in]*/);
  HRESULT         __fastcall get_Key(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_Key(void);
  HRESULT         __fastcall get_parent(Borland_studio_toolsapi_tlb::IOTABuildConfiguration** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTABuildConfigurationPtr __fastcall get_parent(void);
  HRESULT         __fastcall get_Count(long* pRetVal/*[out,retval]*/);
  long            __fastcall get_Count(void);
  HRESULT         __fastcall GetChild(long index/*[in]*/, 
                                      Borland_studio_toolsapi_tlb::IOTABuildConfiguration** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTABuildConfiguration* __fastcall GetChild(long index/*[in]*/);
  HRESULT         __fastcall get_PropertyCount(long* pRetVal/*[out,retval]*/);
  long            __fastcall get_PropertyCount(void);
  HRESULT         __fastcall GetPropertyName(long index/*[in]*/, BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall GetPropertyName(long index/*[in]*/);
  HRESULT         __fastcall get_IsEmpty(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_IsEmpty(void);
  HRESULT         __fastcall get_IsModified(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_IsModified(void);
  HRESULT         __fastcall Remove(BSTR PropName/*[in]*/);
  HRESULT         __fastcall Clear();
  HRESULT         __fastcall PropertyExists(BSTR PropName/*[in]*/, 
                                            VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall PropertyExists(BSTR PropName/*[in]*/);
  HRESULT         __fastcall GetValue(BSTR PropName/*[in]*/, BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall GetValue(BSTR PropName/*[in]*/);
  HRESULT         __fastcall GetValue_2(BSTR PropName/*[in]*/, 
                                        VARIANT_BOOL IncludeInheritedValues/*[in]*/, 
                                        BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall GetValue_2(BSTR PropName/*[in]*/, 
                                        VARIANT_BOOL IncludeInheritedValues/*[in]*/);
  HRESULT         __fastcall SetValue(BSTR PropName/*[in]*/, BSTR value/*[in]*/);
  HRESULT         __fastcall GetBoolean(BSTR PropName/*[in]*/, VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall GetBoolean(BSTR PropName/*[in]*/);
  HRESULT         __fastcall GetBoolean_2(BSTR PropName/*[in]*/, 
                                          VARIANT_BOOL IncludeInheritedValues/*[in]*/, 
                                          VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall GetBoolean_2(BSTR PropName/*[in]*/, 
                                          VARIANT_BOOL IncludeInheritedValues/*[in]*/);
  HRESULT         __fastcall SetBoolean(BSTR PropName/*[in]*/, VARIANT_BOOL value/*[in]*/);
  HRESULT         __fastcall GetInteger(BSTR PropName/*[in]*/, long* pRetVal/*[out,retval]*/);
  long            __fastcall GetInteger(BSTR PropName/*[in]*/);
  HRESULT         __fastcall GetInteger_2(BSTR PropName/*[in]*/, 
                                          VARIANT_BOOL IncludeInheritedValues/*[in]*/, 
                                          long* pRetVal/*[out,retval]*/);
  long            __fastcall GetInteger_2(BSTR PropName/*[in]*/, 
                                          VARIANT_BOOL IncludeInheritedValues/*[in]*/);
  HRESULT         __fastcall SetInteger(BSTR PropName/*[in]*/, long value/*[in]*/);
  HRESULT         __fastcall InheritedValue(BSTR PropName/*[in]*/, BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall InheritedValue(BSTR PropName/*[in]*/);
  HRESULT         __fastcall GetMerged(BSTR PropName/*[in]*/, VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall GetMerged(BSTR PropName/*[in]*/);
  HRESULT         __fastcall SetMerged(BSTR PropName/*[in]*/, VARIANT_BOOL value/*[in]*/);

  __property   BSTR            Name = {read = get_Name, write = set_Name};
  __property   BSTR            Key = {read = get_Key};
  __property   Borland_studio_toolsapi_tlb::IOTABuildConfigurationPtr parent = {read = get_parent};
  __property   long            Count = {read = get_Count};
  __property   long            PropertyCount = {read = get_PropertyCount};
  __property   VARIANT_BOOL    IsEmpty = {read = get_IsEmpty};
  __property   VARIANT_BOOL    IsModified = {read = get_IsModified};
};
typedef IOTABuildConfigurationDispT<IOTABuildConfiguration> IOTABuildConfigurationDisp;

typedef TComInterface<IOTAProjectOptionsConfigurations>  TCOMIOTAProjectOptionsConfigurations;

// *********************************************************************//
// DispIntf:  IOTAProjectOptionsConfigurations
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5A6F8603-F29B-461C-9EBB-D40DDDB7EADE}
// *********************************************************************//
template<class T>
class IOTAProjectOptionsConfigurationsDispT : public TAutoDriver<IOTAProjectOptionsConfigurations>
{
public:
  IOTAProjectOptionsConfigurationsDispT(){}

  IOTAProjectOptionsConfigurationsDispT(IOTAProjectOptionsConfigurations *pintf)
  {
    TAutoDriver<IOTAProjectOptionsConfigurations>::Bind(pintf, false);
  }

  IOTAProjectOptionsConfigurationsDispT(IOTAProjectOptionsConfigurationsPtr pintf)
  {
    TAutoDriver<IOTAProjectOptionsConfigurations>::Bind(pintf, true);
  }

  IOTAProjectOptionsConfigurationsDispT& operator=(IOTAProjectOptionsConfigurations *pintf)
  {
    TAutoDriver<IOTAProjectOptionsConfigurations>::Bind(pintf, false);
    return *this;
  }

  IOTAProjectOptionsConfigurationsDispT& operator=(IOTAProjectOptionsConfigurationsPtr pintf)
  {
    TAutoDriver<IOTAProjectOptionsConfigurations>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall get_ConfigurationCount(long* pRetVal/*[out,retval]*/);
  long            __fastcall get_ConfigurationCount(void);
  HRESULT         __fastcall GetConfiguration(long index/*[in]*/, 
                                              Borland_studio_toolsapi_tlb::IOTABuildConfiguration** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTABuildConfiguration* __fastcall GetConfiguration(long index/*[in]*/);
  HRESULT         __fastcall get_ActiveConfiguration(Borland_studio_toolsapi_tlb::IOTABuildConfiguration** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTABuildConfigurationPtr __fastcall get_ActiveConfiguration(void);
  HRESULT         __fastcall _set_ActiveConfiguration(Borland_studio_toolsapi_tlb::IOTABuildConfiguration* pRetVal/*[in]*/);
  HRESULT         __fastcall get_BaseConfiguration(Borland_studio_toolsapi_tlb::IOTABuildConfiguration** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTABuildConfigurationPtr __fastcall get_BaseConfiguration(void);
  HRESULT         __fastcall AddConfiguration(BSTR Name/*[in]*/, 
                                              Borland_studio_toolsapi_tlb::IOTABuildConfiguration* parent/*[in]*/
                                              , 
                                              Borland_studio_toolsapi_tlb::IOTABuildConfiguration** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTABuildConfiguration* __fastcall AddConfiguration(BSTR Name/*[in]*/, 
                                                                                   Borland_studio_toolsapi_tlb::IOTABuildConfiguration* parent/*[in]*/);
  HRESULT         __fastcall RemoveConfiguration(BSTR Name/*[in]*/);
  HRESULT         __fastcall get_CurrentConfiguration(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_CurrentConfiguration(void);

  __property   long            ConfigurationCount = {read = get_ConfigurationCount};
  __property   Borland_studio_toolsapi_tlb::IOTABuildConfigurationPtr ActiveConfiguration = {read = get_ActiveConfiguration};
  __property   Borland_studio_toolsapi_tlb::IOTABuildConfigurationPtr BaseConfiguration = {read = get_BaseConfiguration};
  __property   BSTR            CurrentConfiguration = {read = get_CurrentConfiguration};
};
typedef IOTAProjectOptionsConfigurationsDispT<IOTAProjectOptionsConfigurations> IOTAProjectOptionsConfigurationsDisp;

typedef TComInterface<IOTAProjectGroup>  TCOMIOTAProjectGroup;

// *********************************************************************//
// DispIntf:  IOTAProjectGroup
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B2C9049A-F958-4410-83DB-FE50C1D53A85}
// *********************************************************************//
template<class T>
class IOTAProjectGroupDispT : public TAutoDriver<IOTAProjectGroup>
{
public:
  IOTAProjectGroupDispT(){}

  IOTAProjectGroupDispT(IOTAProjectGroup *pintf)
  {
    TAutoDriver<IOTAProjectGroup>::Bind(pintf, false);
  }

  IOTAProjectGroupDispT(IOTAProjectGroupPtr pintf)
  {
    TAutoDriver<IOTAProjectGroup>::Bind(pintf, true);
  }

  IOTAProjectGroupDispT& operator=(IOTAProjectGroup *pintf)
  {
    TAutoDriver<IOTAProjectGroup>::Bind(pintf, false);
    return *this;
  }

  IOTAProjectGroupDispT& operator=(IOTAProjectGroupPtr pintf)
  {
    TAutoDriver<IOTAProjectGroup>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall AddNewProject();
  HRESULT         __fastcall AddExistingProject();
  HRESULT         __fastcall RemoveProject(Borland_studio_toolsapi_tlb::IOTAProject* project/*[in]*/);
  HRESULT         __fastcall get_ActiveProject(Borland_studio_toolsapi_tlb::IOTAProject** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAProjectPtr __fastcall get_ActiveProject(void);
  HRESULT         __fastcall _set_ActiveProject(Borland_studio_toolsapi_tlb::IOTAProject* pRetVal/*[in]*/);
  HRESULT         __fastcall get_ProjectCount(long* pRetVal/*[out,retval]*/);
  long            __fastcall get_ProjectCount(void);
  HRESULT         __fastcall get_Item(long index/*[in]*/, 
                                      Borland_studio_toolsapi_tlb::IOTAProject** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAProject* __fastcall get_Item(long index/*[in]*/);

  __property   Borland_studio_toolsapi_tlb::IOTAProjectPtr ActiveProject = {read = get_ActiveProject};
  __property   long            ProjectCount = {read = get_ProjectCount};
};
typedef IOTAProjectGroupDispT<IOTAProjectGroup> IOTAProjectGroupDisp;

typedef TComInterface<IOTAProjectDependenciesList>  TCOMIOTAProjectDependenciesList;

// *********************************************************************//
// DispIntf:  IOTAProjectDependenciesList
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {86002707-98C7-4791-9FE5-547C57AA6821}
// *********************************************************************//
template<class T>
class IOTAProjectDependenciesListDispT : public TAutoDriver<IOTAProjectDependenciesList>
{
public:
  IOTAProjectDependenciesListDispT(){}

  IOTAProjectDependenciesListDispT(IOTAProjectDependenciesList *pintf)
  {
    TAutoDriver<IOTAProjectDependenciesList>::Bind(pintf, false);
  }

  IOTAProjectDependenciesListDispT(IOTAProjectDependenciesListPtr pintf)
  {
    TAutoDriver<IOTAProjectDependenciesList>::Bind(pintf, true);
  }

  IOTAProjectDependenciesListDispT& operator=(IOTAProjectDependenciesList *pintf)
  {
    TAutoDriver<IOTAProjectDependenciesList>::Bind(pintf, false);
    return *this;
  }

  IOTAProjectDependenciesListDispT& operator=(IOTAProjectDependenciesListPtr pintf)
  {
    TAutoDriver<IOTAProjectDependenciesList>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall AddProject(Borland_studio_toolsapi_tlb::IOTAProject* AProject/*[in]*/);
  HRESULT         __fastcall get_ProjectCount(long* pRetVal/*[out,retval]*/);
  long            __fastcall get_ProjectCount(void);
  HRESULT         __fastcall get_Item(long index/*[in]*/, 
                                      Borland_studio_toolsapi_tlb::IOTAProject** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAProject* __fastcall get_Item(long index/*[in]*/);
  HRESULT         __fastcall RemoveProject(Borland_studio_toolsapi_tlb::IOTAProject* AProject/*[in]*/);

  __property   long            ProjectCount = {read = get_ProjectCount};
};
typedef IOTAProjectDependenciesListDispT<IOTAProjectDependenciesList> IOTAProjectDependenciesListDisp;

typedef TComInterface<IOTAProjectGroupProjectDependencies>  TCOMIOTAProjectGroupProjectDependencies;

// *********************************************************************//
// DispIntf:  IOTAProjectGroupProjectDependencies
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {54370E82-8D3E-454A-A854-172C41E261DA}
// *********************************************************************//
template<class T>
class IOTAProjectGroupProjectDependenciesDispT : public TAutoDriver<IOTAProjectGroupProjectDependencies>
{
public:
  IOTAProjectGroupProjectDependenciesDispT(){}

  IOTAProjectGroupProjectDependenciesDispT(IOTAProjectGroupProjectDependencies *pintf)
  {
    TAutoDriver<IOTAProjectGroupProjectDependencies>::Bind(pintf, false);
  }

  IOTAProjectGroupProjectDependenciesDispT(IOTAProjectGroupProjectDependenciesPtr pintf)
  {
    TAutoDriver<IOTAProjectGroupProjectDependencies>::Bind(pintf, true);
  }

  IOTAProjectGroupProjectDependenciesDispT& operator=(IOTAProjectGroupProjectDependencies *pintf)
  {
    TAutoDriver<IOTAProjectGroupProjectDependencies>::Bind(pintf, false);
    return *this;
  }

  IOTAProjectGroupProjectDependenciesDispT& operator=(IOTAProjectGroupProjectDependenciesPtr pintf)
  {
    TAutoDriver<IOTAProjectGroupProjectDependencies>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall GetEmptyProjectDependenciesList(Borland_studio_toolsapi_tlb::IOTAProjectDependenciesList** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAProjectDependenciesList* __fastcall GetEmptyProjectDependenciesList(void);
  HRESULT         __fastcall GetProjectDependencies(Borland_studio_toolsapi_tlb::IOTAProject* AProject/*[in]*/
                                                    , 
                                                    Borland_studio_toolsapi_tlb::IOTAProjectDependenciesList** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAProjectDependenciesList* __fastcall GetProjectDependencies(Borland_studio_toolsapi_tlb::IOTAProject* AProject/*[in]*/);
  HRESULT         __fastcall GetValidProjectDependencies(Borland_studio_toolsapi_tlb::IOTAProject* AProject/*[in]*/
                                                         , 
                                                         Borland_studio_toolsapi_tlb::IOTAProjectDependenciesList** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAProjectDependenciesList* __fastcall GetValidProjectDependencies(Borland_studio_toolsapi_tlb::IOTAProject* AProject/*[in]*/);
  HRESULT         __fastcall SetProjectDependencies(Borland_studio_toolsapi_tlb::IOTAProject* AProject/*[in]*/
                                                    , 
                                                    Borland_studio_toolsapi_tlb::IOTAProjectDependenciesList* ADependencies/*[in]*/);

};
typedef IOTAProjectGroupProjectDependenciesDispT<IOTAProjectGroupProjectDependencies> IOTAProjectGroupProjectDependenciesDisp;

typedef TComInterface<IOTASearchPaths>  TCOMIOTASearchPaths;

// *********************************************************************//
// DispIntf:  IOTASearchPaths
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {756DF4C9-B22A-4095-866D-89E437B88750}
// *********************************************************************//
template<class T>
class IOTASearchPathsDispT : public TAutoDriver<IOTASearchPaths>
{
public:
  IOTASearchPathsDispT(){}

  IOTASearchPathsDispT(IOTASearchPaths *pintf)
  {
    TAutoDriver<IOTASearchPaths>::Bind(pintf, false);
  }

  IOTASearchPathsDispT(IOTASearchPathsPtr pintf)
  {
    TAutoDriver<IOTASearchPaths>::Bind(pintf, true);
  }

  IOTASearchPathsDispT& operator=(IOTASearchPaths *pintf)
  {
    TAutoDriver<IOTASearchPaths>::Bind(pintf, false);
    return *this;
  }

  IOTASearchPathsDispT& operator=(IOTASearchPathsPtr pintf)
  {
    TAutoDriver<IOTASearchPaths>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall Add(BSTR Path/*[in]*/);
  HRESULT         __fastcall Remove(BSTR Path/*[in]*/);
  HRESULT         __fastcall Clear();
  HRESULT         __fastcall get_Count(long* pRetVal/*[out,retval]*/);
  long            __fastcall get_Count(void);
  HRESULT         __fastcall get_items(long index/*[in]*/, BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_items(long index/*[in]*/);
  HRESULT         __fastcall ExpandedSearchPath(long index/*[in]*/, BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall ExpandedSearchPath(long index/*[in]*/);

  __property   long            Count = {read = get_Count};
};
typedef IOTASearchPathsDispT<IOTASearchPaths> IOTASearchPathsDisp;

typedef TComInterface<IOTAAssemblySearchPathService>  TCOMIOTAAssemblySearchPathService;

// *********************************************************************//
// DispIntf:  IOTAAssemblySearchPathService
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9BA69737-335D-3A6D-A134-A3F61121A67C}
// *********************************************************************//
template<class T>
class IOTAAssemblySearchPathServiceDispT : public TAutoDriver<IOTAAssemblySearchPathService>
{
public:
  IOTAAssemblySearchPathServiceDispT(){}

  IOTAAssemblySearchPathServiceDispT(IOTAAssemblySearchPathService *pintf)
  {
    TAutoDriver<IOTAAssemblySearchPathService>::Bind(pintf, false);
  }

  IOTAAssemblySearchPathServiceDispT(IOTAAssemblySearchPathServicePtr pintf)
  {
    TAutoDriver<IOTAAssemblySearchPathService>::Bind(pintf, true);
  }

  IOTAAssemblySearchPathServiceDispT& operator=(IOTAAssemblySearchPathService *pintf)
  {
    TAutoDriver<IOTAAssemblySearchPathService>::Bind(pintf, false);
    return *this;
  }

  IOTAAssemblySearchPathServiceDispT& operator=(IOTAAssemblySearchPathServicePtr pintf)
  {
    TAutoDriver<IOTAAssemblySearchPathService>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall Load();
  HRESULT         __fastcall Save();
  HRESULT         __fastcall IsIgnoredDirectory(BSTR directory/*[in]*/, 
                                                VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall IsIgnoredDirectory(BSTR directory/*[in]*/);
  HRESULT         __fastcall AddIgnoredDirectory(BSTR directory/*[in]*/);

};
typedef IOTAAssemblySearchPathServiceDispT<IOTAAssemblySearchPathService> IOTAAssemblySearchPathServiceDisp;

typedef TComInterface<IOTAPersistenceManager>  TCOMIOTAPersistenceManager;

// *********************************************************************//
// DispIntf:  IOTAPersistenceManager
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {99243387-CCBE-4810-9D3C-D494DE468170}
// *********************************************************************//
template<class T>
class IOTAPersistenceManagerDispT : public TAutoDriver<IOTAPersistenceManager>
{
public:
  IOTAPersistenceManagerDispT(){}

  IOTAPersistenceManagerDispT(IOTAPersistenceManager *pintf)
  {
    TAutoDriver<IOTAPersistenceManager>::Bind(pintf, false);
  }

  IOTAPersistenceManagerDispT(IOTAPersistenceManagerPtr pintf)
  {
    TAutoDriver<IOTAPersistenceManager>::Bind(pintf, true);
  }

  IOTAPersistenceManagerDispT& operator=(IOTAPersistenceManager *pintf)
  {
    TAutoDriver<IOTAPersistenceManager>::Bind(pintf, false);
    return *this;
  }

  IOTAPersistenceManagerDispT& operator=(IOTAPersistenceManagerPtr pintf)
  {
    TAutoDriver<IOTAPersistenceManager>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall SaveDocument(LPUNKNOWN document/*[in]*/);
  HRESULT         __fastcall GetDocument(LPUNKNOWN* pRetVal/*[out,retval]*/);
  LPUNKNOWN       __fastcall GetDocument(void);
  HRESULT         __fastcall GetOriginalDocument(LPUNKNOWN* pRetVal/*[out,retval]*/);
  LPUNKNOWN       __fastcall GetOriginalDocument(void);

};
typedef IOTAPersistenceManagerDispT<IOTAPersistenceManager> IOTAPersistenceManagerDisp;

// *********************************************************************//
// SmartIntf: TCOM_ToolboxItemEventArgs
// Interface: _ToolboxItemEventArgs
// *********************************************************************//
template <class T /* _ToolboxItemEventArgs */ >
class TCOM_ToolboxItemEventArgsT : public TComInterface<_ToolboxItemEventArgs>, public TComInterfaceBase<IUnknown>
{
public:
  TCOM_ToolboxItemEventArgsT() {}
  TCOM_ToolboxItemEventArgsT(_ToolboxItemEventArgs *intf, bool addRef = false) : TComInterface<_ToolboxItemEventArgs>(intf, addRef) {}
  TCOM_ToolboxItemEventArgsT(const TCOM_ToolboxItemEventArgsT& src) : TComInterface<_ToolboxItemEventArgs>(src) {}
  TCOM_ToolboxItemEventArgsT& operator=(const TCOM_ToolboxItemEventArgsT& src) { Bind(src, true); return *this;}


};
typedef TCOM_ToolboxItemEventArgsT<_ToolboxItemEventArgs> TCOM_ToolboxItemEventArgs;

// *********************************************************************//
// DispIntf:  _ToolboxItemEventArgs
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {6AA62B56-293C-334C-A809-5A6ED810D7A6}
// *********************************************************************//
template<class T>
class _ToolboxItemEventArgsDispT : public TAutoDriver<_ToolboxItemEventArgs>
{
public:
  _ToolboxItemEventArgsDispT(){}

  _ToolboxItemEventArgsDispT(_ToolboxItemEventArgs *pintf)
  {
    TAutoDriver<_ToolboxItemEventArgs>::Bind(pintf, false);
  }

  _ToolboxItemEventArgsDispT(_ToolboxItemEventArgsPtr pintf)
  {
    TAutoDriver<_ToolboxItemEventArgs>::Bind(pintf, true);
  }

  _ToolboxItemEventArgsDispT& operator=(_ToolboxItemEventArgs *pintf)
  {
    TAutoDriver<_ToolboxItemEventArgs>::Bind(pintf, false);
    return *this;
  }

  _ToolboxItemEventArgsDispT& operator=(_ToolboxItemEventArgsPtr pintf)
  {
    TAutoDriver<_ToolboxItemEventArgs>::Bind(pintf, true);
    return *this;
  }

  HRESULT BindDefault()
  {
    return OLECHECK(Bind(CLSID_ToolboxItemEventArgs));
  }

  HRESULT BindRunning()
  {
    return BindToActive(CLSID_ToolboxItemEventArgs);
  }


};
typedef _ToolboxItemEventArgsDispT<_ToolboxItemEventArgs> _ToolboxItemEventArgsDisp;

// *********************************************************************//
// SmartIntf: TCOM_ToolboxItemAddedEventArgs
// Interface: _ToolboxItemAddedEventArgs
// *********************************************************************//
template <class T /* _ToolboxItemAddedEventArgs */ >
class TCOM_ToolboxItemAddedEventArgsT : public TComInterface<_ToolboxItemAddedEventArgs>, public TComInterfaceBase<IUnknown>
{
public:
  TCOM_ToolboxItemAddedEventArgsT() {}
  TCOM_ToolboxItemAddedEventArgsT(_ToolboxItemAddedEventArgs *intf, bool addRef = false) : TComInterface<_ToolboxItemAddedEventArgs>(intf, addRef) {}
  TCOM_ToolboxItemAddedEventArgsT(const TCOM_ToolboxItemAddedEventArgsT& src) : TComInterface<_ToolboxItemAddedEventArgs>(src) {}
  TCOM_ToolboxItemAddedEventArgsT& operator=(const TCOM_ToolboxItemAddedEventArgsT& src) { Bind(src, true); return *this;}


};
typedef TCOM_ToolboxItemAddedEventArgsT<_ToolboxItemAddedEventArgs> TCOM_ToolboxItemAddedEventArgs;

// *********************************************************************//
// DispIntf:  _ToolboxItemAddedEventArgs
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {BC0AC352-8549-3535-A516-9BD1DC25535E}
// *********************************************************************//
template<class T>
class _ToolboxItemAddedEventArgsDispT : public TAutoDriver<_ToolboxItemAddedEventArgs>
{
public:
  _ToolboxItemAddedEventArgsDispT(){}

  _ToolboxItemAddedEventArgsDispT(_ToolboxItemAddedEventArgs *pintf)
  {
    TAutoDriver<_ToolboxItemAddedEventArgs>::Bind(pintf, false);
  }

  _ToolboxItemAddedEventArgsDispT(_ToolboxItemAddedEventArgsPtr pintf)
  {
    TAutoDriver<_ToolboxItemAddedEventArgs>::Bind(pintf, true);
  }

  _ToolboxItemAddedEventArgsDispT& operator=(_ToolboxItemAddedEventArgs *pintf)
  {
    TAutoDriver<_ToolboxItemAddedEventArgs>::Bind(pintf, false);
    return *this;
  }

  _ToolboxItemAddedEventArgsDispT& operator=(_ToolboxItemAddedEventArgsPtr pintf)
  {
    TAutoDriver<_ToolboxItemAddedEventArgs>::Bind(pintf, true);
    return *this;
  }

  HRESULT BindDefault()
  {
    return OLECHECK(Bind(CLSID_ToolboxItemAddedEventArgs));
  }

  HRESULT BindRunning()
  {
    return BindToActive(CLSID_ToolboxItemAddedEventArgs);
  }


};
typedef _ToolboxItemAddedEventArgsDispT<_ToolboxItemAddedEventArgs> _ToolboxItemAddedEventArgsDisp;

// *********************************************************************//
// SmartIntf: TCOM_TOTAHandle
// Interface: _TOTAHandle
// *********************************************************************//
template <class T /* _TOTAHandle */ >
class TCOM_TOTAHandleT : public TComInterface<_TOTAHandle>, public TComInterfaceBase<IUnknown>
{
public:
  TCOM_TOTAHandleT() {}
  TCOM_TOTAHandleT(_TOTAHandle *intf, bool addRef = false) : TComInterface<_TOTAHandle>(intf, addRef) {}
  TCOM_TOTAHandleT(const TCOM_TOTAHandleT& src) : TComInterface<_TOTAHandle>(src) {}
  TCOM_TOTAHandleT& operator=(const TCOM_TOTAHandleT& src) { Bind(src, true); return *this;}


};
typedef TCOM_TOTAHandleT<_TOTAHandle> TCOM_TOTAHandle;

// *********************************************************************//
// DispIntf:  _TOTAHandle
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {081F9B72-A1A0-3ED5-8965-AF2906DA90F6}
// *********************************************************************//
template<class T>
class _TOTAHandleDispT : public TAutoDriver<_TOTAHandle>
{
public:
  _TOTAHandleDispT(){}

  _TOTAHandleDispT(_TOTAHandle *pintf)
  {
    TAutoDriver<_TOTAHandle>::Bind(pintf, false);
  }

  _TOTAHandleDispT(_TOTAHandlePtr pintf)
  {
    TAutoDriver<_TOTAHandle>::Bind(pintf, true);
  }

  _TOTAHandleDispT& operator=(_TOTAHandle *pintf)
  {
    TAutoDriver<_TOTAHandle>::Bind(pintf, false);
    return *this;
  }

  _TOTAHandleDispT& operator=(_TOTAHandlePtr pintf)
  {
    TAutoDriver<_TOTAHandle>::Bind(pintf, true);
    return *this;
  }

  HRESULT BindDefault()
  {
    return OLECHECK(Bind(CLSID_TOTAHandle));
  }

  HRESULT BindRunning()
  {
    return BindToActive(CLSID_TOTAHandle);
  }


};
typedef _TOTAHandleDispT<_TOTAHandle> _TOTAHandleDisp;

// *********************************************************************//
// SmartIntf: TCOM_gccEventArgs
// Interface: _gccEventArgs
// *********************************************************************//
template <class T /* _gccEventArgs */ >
class TCOM_gccEventArgsT : public TComInterface<_gccEventArgs>, public TComInterfaceBase<IUnknown>
{
public:
  TCOM_gccEventArgsT() {}
  TCOM_gccEventArgsT(_gccEventArgs *intf, bool addRef = false) : TComInterface<_gccEventArgs>(intf, addRef) {}
  TCOM_gccEventArgsT(const TCOM_gccEventArgsT& src) : TComInterface<_gccEventArgs>(src) {}
  TCOM_gccEventArgsT& operator=(const TCOM_gccEventArgsT& src) { Bind(src, true); return *this;}


};
typedef TCOM_gccEventArgsT<_gccEventArgs> TCOM_gccEventArgs;

// *********************************************************************//
// DispIntf:  _gccEventArgs
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {6402D97D-5DB3-37BA-934B-24796B16039B}
// *********************************************************************//
template<class T>
class _gccEventArgsDispT : public TAutoDriver<_gccEventArgs>
{
public:
  _gccEventArgsDispT(){}

  _gccEventArgsDispT(_gccEventArgs *pintf)
  {
    TAutoDriver<_gccEventArgs>::Bind(pintf, false);
  }

  _gccEventArgsDispT(_gccEventArgsPtr pintf)
  {
    TAutoDriver<_gccEventArgs>::Bind(pintf, true);
  }

  _gccEventArgsDispT& operator=(_gccEventArgs *pintf)
  {
    TAutoDriver<_gccEventArgs>::Bind(pintf, false);
    return *this;
  }

  _gccEventArgsDispT& operator=(_gccEventArgsPtr pintf)
  {
    TAutoDriver<_gccEventArgs>::Bind(pintf, true);
    return *this;
  }

  HRESULT BindDefault()
  {
    return OLECHECK(Bind(CLSID_gccEventArgs));
  }

  HRESULT BindRunning()
  {
    return BindToActive(CLSID_gccEventArgs);
  }


};
typedef _gccEventArgsDispT<_gccEventArgs> _gccEventArgsDisp;

// *********************************************************************//
// SmartIntf: TCOM_ToolboxItemEventHandler
// Interface: _ToolboxItemEventHandler
// *********************************************************************//
template <class T /* _ToolboxItemEventHandler */ >
class TCOM_ToolboxItemEventHandlerT : public TComInterface<_ToolboxItemEventHandler>, public TComInterfaceBase<IUnknown>
{
public:
  TCOM_ToolboxItemEventHandlerT() {}
  TCOM_ToolboxItemEventHandlerT(_ToolboxItemEventHandler *intf, bool addRef = false) : TComInterface<_ToolboxItemEventHandler>(intf, addRef) {}
  TCOM_ToolboxItemEventHandlerT(const TCOM_ToolboxItemEventHandlerT& src) : TComInterface<_ToolboxItemEventHandler>(src) {}
  TCOM_ToolboxItemEventHandlerT& operator=(const TCOM_ToolboxItemEventHandlerT& src) { Bind(src, true); return *this;}


};
typedef TCOM_ToolboxItemEventHandlerT<_ToolboxItemEventHandler> TCOM_ToolboxItemEventHandler;

// *********************************************************************//
// DispIntf:  _ToolboxItemEventHandler
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {9347589F-F528-3A07-AF93-83CA95BBF553}
// *********************************************************************//
template<class T>
class _ToolboxItemEventHandlerDispT : public TAutoDriver<_ToolboxItemEventHandler>
{
public:
  _ToolboxItemEventHandlerDispT(){}

  _ToolboxItemEventHandlerDispT(_ToolboxItemEventHandler *pintf)
  {
    TAutoDriver<_ToolboxItemEventHandler>::Bind(pintf, false);
  }

  _ToolboxItemEventHandlerDispT(_ToolboxItemEventHandlerPtr pintf)
  {
    TAutoDriver<_ToolboxItemEventHandler>::Bind(pintf, true);
  }

  _ToolboxItemEventHandlerDispT& operator=(_ToolboxItemEventHandler *pintf)
  {
    TAutoDriver<_ToolboxItemEventHandler>::Bind(pintf, false);
    return *this;
  }

  _ToolboxItemEventHandlerDispT& operator=(_ToolboxItemEventHandlerPtr pintf)
  {
    TAutoDriver<_ToolboxItemEventHandler>::Bind(pintf, true);
    return *this;
  }

  HRESULT BindDefault()
  {
    return OLECHECK(Bind(CLSID_ToolboxItemEventHandler));
  }

  HRESULT BindRunning()
  {
    return BindToActive(CLSID_ToolboxItemEventHandler);
  }


};
typedef _ToolboxItemEventHandlerDispT<_ToolboxItemEventHandler> _ToolboxItemEventHandlerDisp;

// *********************************************************************//
// SmartIntf: TCOM_ToolboxItemAddedEventHandler
// Interface: _ToolboxItemAddedEventHandler
// *********************************************************************//
template <class T /* _ToolboxItemAddedEventHandler */ >
class TCOM_ToolboxItemAddedEventHandlerT : public TComInterface<_ToolboxItemAddedEventHandler>, public TComInterfaceBase<IUnknown>
{
public:
  TCOM_ToolboxItemAddedEventHandlerT() {}
  TCOM_ToolboxItemAddedEventHandlerT(_ToolboxItemAddedEventHandler *intf, bool addRef = false) : TComInterface<_ToolboxItemAddedEventHandler>(intf, addRef) {}
  TCOM_ToolboxItemAddedEventHandlerT(const TCOM_ToolboxItemAddedEventHandlerT& src) : TComInterface<_ToolboxItemAddedEventHandler>(src) {}
  TCOM_ToolboxItemAddedEventHandlerT& operator=(const TCOM_ToolboxItemAddedEventHandlerT& src) { Bind(src, true); return *this;}


};
typedef TCOM_ToolboxItemAddedEventHandlerT<_ToolboxItemAddedEventHandler> TCOM_ToolboxItemAddedEventHandler;

// *********************************************************************//
// DispIntf:  _ToolboxItemAddedEventHandler
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {74A6E330-3B11-35CB-A7AD-DDDCAD045DB8}
// *********************************************************************//
template<class T>
class _ToolboxItemAddedEventHandlerDispT : public TAutoDriver<_ToolboxItemAddedEventHandler>
{
public:
  _ToolboxItemAddedEventHandlerDispT(){}

  _ToolboxItemAddedEventHandlerDispT(_ToolboxItemAddedEventHandler *pintf)
  {
    TAutoDriver<_ToolboxItemAddedEventHandler>::Bind(pintf, false);
  }

  _ToolboxItemAddedEventHandlerDispT(_ToolboxItemAddedEventHandlerPtr pintf)
  {
    TAutoDriver<_ToolboxItemAddedEventHandler>::Bind(pintf, true);
  }

  _ToolboxItemAddedEventHandlerDispT& operator=(_ToolboxItemAddedEventHandler *pintf)
  {
    TAutoDriver<_ToolboxItemAddedEventHandler>::Bind(pintf, false);
    return *this;
  }

  _ToolboxItemAddedEventHandlerDispT& operator=(_ToolboxItemAddedEventHandlerPtr pintf)
  {
    TAutoDriver<_ToolboxItemAddedEventHandler>::Bind(pintf, true);
    return *this;
  }

  HRESULT BindDefault()
  {
    return OLECHECK(Bind(CLSID_ToolboxItemAddedEventHandler));
  }

  HRESULT BindRunning()
  {
    return BindToActive(CLSID_ToolboxItemAddedEventHandler);
  }


};
typedef _ToolboxItemAddedEventHandlerDispT<_ToolboxItemAddedEventHandler> _ToolboxItemAddedEventHandlerDisp;

typedef TComInterface<IOTAToolboxServiceEvents>  TCOMIOTAToolboxServiceEvents;

// *********************************************************************//
// DispIntf:  IOTAToolboxServiceEvents
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DBFBBC7E-4AC1-4FB1-88B6-34DF77F48B14}
// *********************************************************************//
template<class T>
class IOTAToolboxServiceEventsDispT : public TAutoDriver<IOTAToolboxServiceEvents>
{
public:
  IOTAToolboxServiceEventsDispT(){}

  IOTAToolboxServiceEventsDispT(IOTAToolboxServiceEvents *pintf)
  {
    TAutoDriver<IOTAToolboxServiceEvents>::Bind(pintf, false);
  }

  IOTAToolboxServiceEventsDispT(IOTAToolboxServiceEventsPtr pintf)
  {
    TAutoDriver<IOTAToolboxServiceEvents>::Bind(pintf, true);
  }

  IOTAToolboxServiceEventsDispT& operator=(IOTAToolboxServiceEvents *pintf)
  {
    TAutoDriver<IOTAToolboxServiceEvents>::Bind(pintf, false);
    return *this;
  }

  IOTAToolboxServiceEventsDispT& operator=(IOTAToolboxServiceEventsPtr pintf)
  {
    TAutoDriver<IOTAToolboxServiceEvents>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall add_ToolboxItemAdded(Borland_studio_toolsapi_tlb::_ToolboxItemAddedEventHandler* value/*[in]*/);
  HRESULT         __fastcall remove_ToolboxItemAdded(Borland_studio_toolsapi_tlb::_ToolboxItemAddedEventHandler* value/*[in]*/);
  HRESULT         __fastcall add_ToolboxItemRemoved(Borland_studio_toolsapi_tlb::_ToolboxItemEventHandler* value/*[in]*/);
  HRESULT         __fastcall remove_ToolboxItemRemoved(Borland_studio_toolsapi_tlb::_ToolboxItemEventHandler* value/*[in]*/);
  HRESULT         __fastcall add_SelectedItemUsed(Borland_studio_toolsapi_tlb::_ToolboxItemEventHandler* value/*[in]*/);
  HRESULT         __fastcall remove_SelectedItemUsed(Borland_studio_toolsapi_tlb::_ToolboxItemEventHandler* value/*[in]*/);
  HRESULT         __fastcall add_ToolboxServiceRefresh(Mscorlib_tlb::_EventHandler* value/*[in]*/);
  HRESULT         __fastcall remove_ToolboxServiceRefresh(Mscorlib_tlb::_EventHandler* value/*[in]*/);

};
typedef IOTAToolboxServiceEventsDispT<IOTAToolboxServiceEvents> IOTAToolboxServiceEventsDisp;

typedef TComInterface<IOTAEventMethodsService>  TCOMIOTAEventMethodsService;

// *********************************************************************//
// DispIntf:  IOTAEventMethodsService
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5E2773EC-DC4A-4B79-9B2C-763B8A2321C0}
// *********************************************************************//
template<class T>
class IOTAEventMethodsServiceDispT : public TAutoDriver<IOTAEventMethodsService>
{
public:
  IOTAEventMethodsServiceDispT(){}

  IOTAEventMethodsServiceDispT(IOTAEventMethodsService *pintf)
  {
    TAutoDriver<IOTAEventMethodsService>::Bind(pintf, false);
  }

  IOTAEventMethodsServiceDispT(IOTAEventMethodsServicePtr pintf)
  {
    TAutoDriver<IOTAEventMethodsService>::Bind(pintf, true);
  }

  IOTAEventMethodsServiceDispT& operator=(IOTAEventMethodsService *pintf)
  {
    TAutoDriver<IOTAEventMethodsService>::Bind(pintf, false);
    return *this;
  }

  IOTAEventMethodsServiceDispT& operator=(IOTAEventMethodsServicePtr pintf)
  {
    TAutoDriver<IOTAEventMethodsService>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall AddComponentEventMethod(VARIANT component/*[in]*/, 
                                                     BSTR methodName/*[in]*/, 
                                                     System_tlb::_EventDescriptor* eventDescriptor/*[in]*/
                                                     , BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall AddComponentEventMethod(VARIANT component/*[in]*/, 
                                                     BSTR methodName/*[in]*/, 
                                                     System_tlb::_EventDescriptor* eventDescriptor/*[in]*/);
  HRESULT         __fastcall RemoveComponentEventMethod(VARIANT component/*[in]*/, 
                                                        BSTR methodName/*[in]*/, 
                                                        System_tlb::_EventDescriptor* eventDescriptor/*[in]*/);
  HRESULT         __fastcall RemoveComponentEventMethods(VARIANT component/*[in]*/);
  HRESULT         __fastcall ResetState();
  HRESULT         __fastcall RemoveEmptyEvents();

};
typedef IOTAEventMethodsServiceDispT<IOTAEventMethodsService> IOTAEventMethodsServiceDisp;

typedef TComInterface<IBorlandIDEServices>  TCOMIBorlandIDEServices;

// *********************************************************************//
// DispIntf:  IBorlandIDEServices
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6C120D3D-BD59-4E3F-97AE-1EA4C0E204ED}
// *********************************************************************//
template<class T>
class IBorlandIDEServicesDispT : public TAutoDriver<IBorlandIDEServices>
{
public:
  IBorlandIDEServicesDispT(){}

  IBorlandIDEServicesDispT(IBorlandIDEServices *pintf)
  {
    TAutoDriver<IBorlandIDEServices>::Bind(pintf, false);
  }

  IBorlandIDEServicesDispT(IBorlandIDEServicesPtr pintf)
  {
    TAutoDriver<IBorlandIDEServices>::Bind(pintf, true);
  }

  IBorlandIDEServicesDispT& operator=(IBorlandIDEServices *pintf)
  {
    TAutoDriver<IBorlandIDEServices>::Bind(pintf, false);
    return *this;
  }

  IBorlandIDEServicesDispT& operator=(IBorlandIDEServicesPtr pintf)
  {
    TAutoDriver<IBorlandIDEServices>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall AddOTAExtension(VARIANT extension/*[in]*/, 
                                             long* pRetVal/*[out,retval]*/);
  long            __fastcall AddOTAExtension(VARIANT extension/*[in]*/);
  HRESULT         __fastcall RemoveOTAExtension(long index/*[in]*/);
  HRESULT         __fastcall GetService(Mscorlib_tlb::_Type* serviceType/*[in]*/, 
                                        VARIANT* pRetVal/*[out,retval]*/);
  VARIANT         __fastcall GetService(Mscorlib_tlb::_Type* serviceType/*[in]*/);

};
typedef IBorlandIDEServicesDispT<IBorlandIDEServices> IBorlandIDEServicesDisp;

typedef TComInterface<IOTAVirtualFileService>  TCOMIOTAVirtualFileService;

// *********************************************************************//
// DispIntf:  IOTAVirtualFileService
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {728068F4-29B9-361F-A6ED-D719C6A4863C}
// *********************************************************************//
template<class T>
class IOTAVirtualFileServiceDispT : public TAutoDriver<IOTAVirtualFileService>
{
public:
  IOTAVirtualFileServiceDispT(){}

  IOTAVirtualFileServiceDispT(IOTAVirtualFileService *pintf)
  {
    TAutoDriver<IOTAVirtualFileService>::Bind(pintf, false);
  }

  IOTAVirtualFileServiceDispT(IOTAVirtualFileServicePtr pintf)
  {
    TAutoDriver<IOTAVirtualFileService>::Bind(pintf, true);
  }

  IOTAVirtualFileServiceDispT& operator=(IOTAVirtualFileService *pintf)
  {
    TAutoDriver<IOTAVirtualFileService>::Bind(pintf, false);
    return *this;
  }

  IOTAVirtualFileServiceDispT& operator=(IOTAVirtualFileServicePtr pintf)
  {
    TAutoDriver<IOTAVirtualFileService>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall OpenFile(BSTR fileName/*[in]*/, 
                                      Borland_studio_toolsapi_tlb::IOTAVirtualFile** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAVirtualFile* __fastcall OpenFile(BSTR fileName/*[in]*/);
  HRESULT         __fastcall GetReader(BSTR fileName/*[in]*/, long offset/*[in]*/, 
                                       Borland_studio_toolsapi_tlb::IOTAFileReader** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAFileReader* __fastcall GetReader(BSTR fileName/*[in]*/, 
                                                                    long offset/*[in]*/);
  HRESULT         __fastcall GetWriter(BSTR fileName/*[in]*/, 
                                       Borland_studio_toolsapi_tlb::IOTAFileWriter** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAFileWriter* __fastcall GetWriter(BSTR fileName/*[in]*/);

};
typedef IOTAVirtualFileServiceDispT<IOTAVirtualFileService> IOTAVirtualFileServiceDisp;

typedef TComInterface<IOTAVirtualFile>  TCOMIOTAVirtualFile;

// *********************************************************************//
// DispIntf:  IOTAVirtualFile
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {779E0FCF-A177-48A5-A242-3AE5CDCA5C5A}
// *********************************************************************//
template<class T>
class IOTAVirtualFileDispT : public TAutoDriver<IOTAVirtualFile>
{
public:
  IOTAVirtualFileDispT(){}

  IOTAVirtualFileDispT(IOTAVirtualFile *pintf)
  {
    TAutoDriver<IOTAVirtualFile>::Bind(pintf, false);
  }

  IOTAVirtualFileDispT(IOTAVirtualFilePtr pintf)
  {
    TAutoDriver<IOTAVirtualFile>::Bind(pintf, true);
  }

  IOTAVirtualFileDispT& operator=(IOTAVirtualFile *pintf)
  {
    TAutoDriver<IOTAVirtualFile>::Bind(pintf, false);
    return *this;
  }

  IOTAVirtualFileDispT& operator=(IOTAVirtualFilePtr pintf)
  {
    TAutoDriver<IOTAVirtualFile>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall GetReader(long offset/*[in]*/, 
                                       Borland_studio_toolsapi_tlb::IOTAFileReader** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAFileReader* __fastcall GetReader(long offset/*[in]*/);
  HRESULT         __fastcall GetWriter(Borland_studio_toolsapi_tlb::IOTAFileWriter** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAFileWriter* __fastcall GetWriter(void);
  HRESULT         __fastcall Close();

};
typedef IOTAVirtualFileDispT<IOTAVirtualFile> IOTAVirtualFileDisp;

typedef TComInterface<IOTAFileReader>  TCOMIOTAFileReader;

// *********************************************************************//
// DispIntf:  IOTAFileReader
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {60623BF1-C097-4DD7-BA7F-ADC40FE032E9}
// *********************************************************************//
template<class T>
class IOTAFileReaderDispT : public TAutoDriver<IOTAFileReader>
{
public:
  IOTAFileReaderDispT(){}

  IOTAFileReaderDispT(IOTAFileReader *pintf)
  {
    TAutoDriver<IOTAFileReader>::Bind(pintf, false);
  }

  IOTAFileReaderDispT(IOTAFileReaderPtr pintf)
  {
    TAutoDriver<IOTAFileReader>::Bind(pintf, true);
  }

  IOTAFileReaderDispT& operator=(IOTAFileReader *pintf)
  {
    TAutoDriver<IOTAFileReader>::Bind(pintf, false);
    return *this;
  }

  IOTAFileReaderDispT& operator=(IOTAFileReaderPtr pintf)
  {
    TAutoDriver<IOTAFileReader>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall Read(long length/*[in]*/, long padding/*[in]*/, 
                                  LPSAFEARRAY* pRetVal/*[out,retval]*/);
  LPSAFEARRAY     __fastcall Read(long length/*[in]*/, long padding/*[in]*/);
  HRESULT         __fastcall Close();

};
typedef IOTAFileReaderDispT<IOTAFileReader> IOTAFileReaderDisp;

typedef TComInterface<IOTAFileWriter>  TCOMIOTAFileWriter;

// *********************************************************************//
// DispIntf:  IOTAFileWriter
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DCEDFCFF-7111-49B5-8A53-57F084B8C0C9}
// *********************************************************************//
template<class T>
class IOTAFileWriterDispT : public TAutoDriver<IOTAFileWriter>
{
public:
  IOTAFileWriterDispT(){}

  IOTAFileWriterDispT(IOTAFileWriter *pintf)
  {
    TAutoDriver<IOTAFileWriter>::Bind(pintf, false);
  }

  IOTAFileWriterDispT(IOTAFileWriterPtr pintf)
  {
    TAutoDriver<IOTAFileWriter>::Bind(pintf, true);
  }

  IOTAFileWriterDispT& operator=(IOTAFileWriter *pintf)
  {
    TAutoDriver<IOTAFileWriter>::Bind(pintf, false);
    return *this;
  }

  IOTAFileWriterDispT& operator=(IOTAFileWriterPtr pintf)
  {
    TAutoDriver<IOTAFileWriter>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall CopyTo(__int64 offset/*[in]*/);
  HRESULT         __fastcall DeleteTo(__int64 offset/*[in]*/);
  HRESULT         __fastcall Insert(BSTR Text/*[in]*/);
  HRESULT         __fastcall Insert_2(LPSAFEARRAY bytes/*[in]*/, long offset/*[in]*/, 
                                      long Count/*[in]*/);
  HRESULT         __fastcall Close();

};
typedef IOTAFileWriterDispT<IOTAFileWriter> IOTAFileWriterDisp;

typedef TComInterface<IOTACodeDomGeneratorOptions>  TCOMIOTACodeDomGeneratorOptions;

// *********************************************************************//
// DispIntf:  IOTACodeDomGeneratorOptions
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {93B43D3C-D524-440D-9569-4C4D79D26C9E}
// *********************************************************************//
template<class T>
class IOTACodeDomGeneratorOptionsDispT : public TAutoDriver<IOTACodeDomGeneratorOptions>
{
public:
  IOTACodeDomGeneratorOptionsDispT(){}

  IOTACodeDomGeneratorOptionsDispT(IOTACodeDomGeneratorOptions *pintf)
  {
    TAutoDriver<IOTACodeDomGeneratorOptions>::Bind(pintf, false);
  }

  IOTACodeDomGeneratorOptionsDispT(IOTACodeDomGeneratorOptionsPtr pintf)
  {
    TAutoDriver<IOTACodeDomGeneratorOptions>::Bind(pintf, true);
  }

  IOTACodeDomGeneratorOptionsDispT& operator=(IOTACodeDomGeneratorOptions *pintf)
  {
    TAutoDriver<IOTACodeDomGeneratorOptions>::Bind(pintf, false);
    return *this;
  }

  IOTACodeDomGeneratorOptionsDispT& operator=(IOTACodeDomGeneratorOptionsPtr pintf)
  {
    TAutoDriver<IOTACodeDomGeneratorOptions>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall get_BlankLinesBetweenMembers(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_BlankLinesBetweenMembers(void);
  HRESULT         __fastcall get_BracingStyle(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_BracingStyle(void);
  HRESULT         __fastcall get_ElseOnClosing(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_ElseOnClosing(void);
  HRESULT         __fastcall get_IndentString(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_IndentString(void);
  HRESULT         __fastcall get_CaseSensitive(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_CaseSensitive(void);

  __property   VARIANT_BOOL    BlankLinesBetweenMembers = {read = get_BlankLinesBetweenMembers};
  __property   BSTR            BracingStyle = {read = get_BracingStyle};
  __property   VARIANT_BOOL    ElseOnClosing = {read = get_ElseOnClosing};
  __property   BSTR            IndentString = {read = get_IndentString};
  __property   VARIANT_BOOL    CaseSensitive = {read = get_CaseSensitive};
};
typedef IOTACodeDomGeneratorOptionsDispT<IOTACodeDomGeneratorOptions> IOTACodeDomGeneratorOptionsDisp;

typedef TComInterface<IOTACodeDomFile>  TCOMIOTACodeDomFile;

// *********************************************************************//
// DispIntf:  IOTACodeDomFile
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {487E1E2B-8CF5-4BD4-929A-4D82E862FAB0}
// *********************************************************************//
template<class T>
class IOTACodeDomFileDispT : public TAutoDriver<IOTACodeDomFile>
{
public:
  IOTACodeDomFileDispT(){}

  IOTACodeDomFileDispT(IOTACodeDomFile *pintf)
  {
    TAutoDriver<IOTACodeDomFile>::Bind(pintf, false);
  }

  IOTACodeDomFileDispT(IOTACodeDomFilePtr pintf)
  {
    TAutoDriver<IOTACodeDomFile>::Bind(pintf, true);
  }

  IOTACodeDomFileDispT& operator=(IOTACodeDomFile *pintf)
  {
    TAutoDriver<IOTACodeDomFile>::Bind(pintf, false);
    return *this;
  }

  IOTACodeDomFileDispT& operator=(IOTACodeDomFilePtr pintf)
  {
    TAutoDriver<IOTACodeDomFile>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall GetDom(System_tlb::_CodeObject** pRetVal/*[out,retval]*/);
  System_tlb::_CodeObject* __fastcall GetDom(void);
  HRESULT         __fastcall WriteDom(System_tlb::_CodeCompileUnit* codeDom/*[in]*/, 
                                      Borland_studio_toolsapi_tlb::IOTACodeDomGeneratorOptions* generatorOptions/*[in]*/);

};
typedef IOTACodeDomFileDispT<IOTACodeDomFile> IOTACodeDomFileDisp;

typedef TComInterface<IOTAInstalledToolboxItem>  TCOMIOTAInstalledToolboxItem;

// *********************************************************************//
// DispIntf:  IOTAInstalledToolboxItem
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {72655E0D-ED21-4B1A-93D6-F30E96782A1F}
// *********************************************************************//
template<class T>
class IOTAInstalledToolboxItemDispT : public TAutoDriver<IOTAInstalledToolboxItem>
{
public:
  IOTAInstalledToolboxItemDispT(){}

  IOTAInstalledToolboxItemDispT(IOTAInstalledToolboxItem *pintf)
  {
    TAutoDriver<IOTAInstalledToolboxItem>::Bind(pintf, false);
  }

  IOTAInstalledToolboxItemDispT(IOTAInstalledToolboxItemPtr pintf)
  {
    TAutoDriver<IOTAInstalledToolboxItem>::Bind(pintf, true);
  }

  IOTAInstalledToolboxItemDispT& operator=(IOTAInstalledToolboxItem *pintf)
  {
    TAutoDriver<IOTAInstalledToolboxItem>::Bind(pintf, false);
    return *this;
  }

  IOTAInstalledToolboxItemDispT& operator=(IOTAInstalledToolboxItemPtr pintf)
  {
    TAutoDriver<IOTAInstalledToolboxItem>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall get_ToolboxItem(LPUNKNOWN* pRetVal/*[out,retval]*/);
  LPUNKNOWN       __fastcall get_ToolboxItem(void);
  HRESULT         __fastcall get_CategoryName(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_CategoryName(void);
  HRESULT         __fastcall set_CategoryName(BSTR pRetVal/*[in]*/);

  __property   LPUNKNOWN       ToolboxItem = {read = get_ToolboxItem};
  __property   BSTR            CategoryName = {read = get_CategoryName, write = set_CategoryName};
};
typedef IOTAInstalledToolboxItemDispT<IOTAInstalledToolboxItem> IOTAInstalledToolboxItemDisp;

typedef TComInterface<IOTAComponentInstallService>  TCOMIOTAComponentInstallService;

// *********************************************************************//
// DispIntf:  IOTAComponentInstallService
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B36018B6-AA77-4BB7-82AC-7B2D2C3B04E4}
// *********************************************************************//
template<class T>
class IOTAComponentInstallServiceDispT : public TAutoDriver<IOTAComponentInstallService>
{
public:
  IOTAComponentInstallServiceDispT(){}

  IOTAComponentInstallServiceDispT(IOTAComponentInstallService *pintf)
  {
    TAutoDriver<IOTAComponentInstallService>::Bind(pintf, false);
  }

  IOTAComponentInstallServiceDispT(IOTAComponentInstallServicePtr pintf)
  {
    TAutoDriver<IOTAComponentInstallService>::Bind(pintf, true);
  }

  IOTAComponentInstallServiceDispT& operator=(IOTAComponentInstallService *pintf)
  {
    TAutoDriver<IOTAComponentInstallService>::Bind(pintf, false);
    return *this;
  }

  IOTAComponentInstallServiceDispT& operator=(IOTAComponentInstallServicePtr pintf)
  {
    TAutoDriver<IOTAComponentInstallService>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall Add(LPUNKNOWN Item/*[in]*/, BSTR category/*[in]*/);
  HRESULT         __fastcall Remove(LPSAFEARRAY items/*[in]*/);
  HRESULT         __fastcall Remove_2(LPUNKNOWN Item/*[in]*/);
  HRESULT         __fastcall ItemFromToolboxItem(LPUNKNOWN Item/*[in]*/, 
                                                 Borland_studio_toolsapi_tlb::IOTAInstalledToolboxItem** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAInstalledToolboxItem* __fastcall ItemFromToolboxItem(LPUNKNOWN Item/*[in]*/);
  HRESULT         __fastcall Clear();
  HRESULT         __fastcall get_InstalledItems(LPSAFEARRAY* pRetVal/*[out,retval]*/);
  LPSAFEARRAY     __fastcall get_InstalledItems(void);
  HRESULT         __fastcall get_InstalledComponents(LPSAFEARRAY* pRetVal/*[out,retval]*/);
  LPSAFEARRAY     __fastcall get_InstalledComponents(void);
  HRESULT         __fastcall ShowInstallComponentsForm(System_windows_forms_tlb::DialogResult* pRetVal/*[out,retval]*/);
  System_windows_forms_tlb::DialogResult __fastcall ShowInstallComponentsForm(void);
  HRESULT         __fastcall SaveState();
  HRESULT         __fastcall LoadState();
  HRESULT         __fastcall ResetTypesToDefault();
  HRESULT         __fastcall add_BeginUpdate(Mscorlib_tlb::_EventHandler* value/*[in]*/);
  HRESULT         __fastcall remove_BeginUpdate(Mscorlib_tlb::_EventHandler* value/*[in]*/);
  HRESULT         __fastcall add_EndUpdate(Mscorlib_tlb::_EventHandler* value/*[in]*/);
  HRESULT         __fastcall remove_EndUpdate(Mscorlib_tlb::_EventHandler* value/*[in]*/);
  HRESULT         __fastcall OnBeginUpdate();
  HRESULT         __fastcall OnEndUpdate();

};
typedef IOTAComponentInstallServiceDispT<IOTAComponentInstallService> IOTAComponentInstallServiceDisp;

typedef TComInterface<IOTAModuleHandlerGauntletMember>  TCOMIOTAModuleHandlerGauntletMember;

// *********************************************************************//
// DispIntf:  IOTAModuleHandlerGauntletMember
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {47C01B8C-7ACA-487D-A249-78F9DB894CB7}
// *********************************************************************//
template<class T>
class IOTAModuleHandlerGauntletMemberDispT : public TAutoDriver<IOTAModuleHandlerGauntletMember>
{
public:
  IOTAModuleHandlerGauntletMemberDispT(){}

  IOTAModuleHandlerGauntletMemberDispT(IOTAModuleHandlerGauntletMember *pintf)
  {
    TAutoDriver<IOTAModuleHandlerGauntletMember>::Bind(pintf, false);
  }

  IOTAModuleHandlerGauntletMemberDispT(IOTAModuleHandlerGauntletMemberPtr pintf)
  {
    TAutoDriver<IOTAModuleHandlerGauntletMember>::Bind(pintf, true);
  }

  IOTAModuleHandlerGauntletMemberDispT& operator=(IOTAModuleHandlerGauntletMember *pintf)
  {
    TAutoDriver<IOTAModuleHandlerGauntletMember>::Bind(pintf, false);
    return *this;
  }

  IOTAModuleHandlerGauntletMemberDispT& operator=(IOTAModuleHandlerGauntletMemberPtr pintf)
  {
    TAutoDriver<IOTAModuleHandlerGauntletMember>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall AttachHandler(Borland_studio_toolsapi_tlb::IOTAModule* module/*[in]*/);

};
typedef IOTAModuleHandlerGauntletMemberDispT<IOTAModuleHandlerGauntletMember> IOTAModuleHandlerGauntletMemberDisp;

typedef TComInterface<IOTAModuleHandlerGauntletService>  TCOMIOTAModuleHandlerGauntletService;

// *********************************************************************//
// DispIntf:  IOTAModuleHandlerGauntletService
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {46E708B5-1B3D-4A94-869F-DF1752A6CE35}
// *********************************************************************//
template<class T>
class IOTAModuleHandlerGauntletServiceDispT : public TAutoDriver<IOTAModuleHandlerGauntletService>
{
public:
  IOTAModuleHandlerGauntletServiceDispT(){}

  IOTAModuleHandlerGauntletServiceDispT(IOTAModuleHandlerGauntletService *pintf)
  {
    TAutoDriver<IOTAModuleHandlerGauntletService>::Bind(pintf, false);
  }

  IOTAModuleHandlerGauntletServiceDispT(IOTAModuleHandlerGauntletServicePtr pintf)
  {
    TAutoDriver<IOTAModuleHandlerGauntletService>::Bind(pintf, true);
  }

  IOTAModuleHandlerGauntletServiceDispT& operator=(IOTAModuleHandlerGauntletService *pintf)
  {
    TAutoDriver<IOTAModuleHandlerGauntletService>::Bind(pintf, false);
    return *this;
  }

  IOTAModuleHandlerGauntletServiceDispT& operator=(IOTAModuleHandlerGauntletServicePtr pintf)
  {
    TAutoDriver<IOTAModuleHandlerGauntletService>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall AddMember(Borland_studio_toolsapi_tlb::IOTAModuleHandlerGauntletMember* handler/*[in]*/
                                       , long priority/*[in]*/, long* pRetVal/*[out,retval]*/);
  long            __fastcall AddMember(Borland_studio_toolsapi_tlb::IOTAModuleHandlerGauntletMember* handler/*[in]*/, 
                                       long priority/*[in]*/);
  HRESULT         __fastcall RemoveMember(long index/*[in]*/);

};
typedef IOTAModuleHandlerGauntletServiceDispT<IOTAModuleHandlerGauntletService> IOTAModuleHandlerGauntletServiceDisp;

typedef TComInterface<IOTAAddReferenceDialog>  TCOMIOTAAddReferenceDialog;

// *********************************************************************//
// DispIntf:  IOTAAddReferenceDialog
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0BBA329E-B28D-3343-953A-9D97655F9CD2}
// *********************************************************************//
template<class T>
class IOTAAddReferenceDialogDispT : public TAutoDriver<IOTAAddReferenceDialog>
{
public:
  IOTAAddReferenceDialogDispT(){}

  IOTAAddReferenceDialogDispT(IOTAAddReferenceDialog *pintf)
  {
    TAutoDriver<IOTAAddReferenceDialog>::Bind(pintf, false);
  }

  IOTAAddReferenceDialogDispT(IOTAAddReferenceDialogPtr pintf)
  {
    TAutoDriver<IOTAAddReferenceDialog>::Bind(pintf, true);
  }

  IOTAAddReferenceDialogDispT& operator=(IOTAAddReferenceDialog *pintf)
  {
    TAutoDriver<IOTAAddReferenceDialog>::Bind(pintf, false);
    return *this;
  }

  IOTAAddReferenceDialogDispT& operator=(IOTAAddReferenceDialogPtr pintf)
  {
    TAutoDriver<IOTAAddReferenceDialog>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall ShowDialog(Borland_studio_toolsapi_tlb::IOTAProject* project/*[in]*/);

};
typedef IOTAAddReferenceDialogDispT<IOTAAddReferenceDialog> IOTAAddReferenceDialogDisp;

typedef TComInterface<IOTAAddInService>  TCOMIOTAAddInService;

// *********************************************************************//
// DispIntf:  IOTAAddInService
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B7D01D1D-5414-48E8-A691-090A0B191D6D}
// *********************************************************************//
template<class T>
class IOTAAddInServiceDispT : public TAutoDriver<IOTAAddInService>
{
public:
  IOTAAddInServiceDispT(){}

  IOTAAddInServiceDispT(IOTAAddInService *pintf)
  {
    TAutoDriver<IOTAAddInService>::Bind(pintf, false);
  }

  IOTAAddInServiceDispT(IOTAAddInServicePtr pintf)
  {
    TAutoDriver<IOTAAddInService>::Bind(pintf, true);
  }

  IOTAAddInServiceDispT& operator=(IOTAAddInService *pintf)
  {
    TAutoDriver<IOTAAddInService>::Bind(pintf, false);
    return *this;
  }

  IOTAAddInServiceDispT& operator=(IOTAAddInServicePtr pintf)
  {
    TAutoDriver<IOTAAddInService>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall LoadAddIn(BSTR fileName/*[in]*/, VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall LoadAddIn(BSTR fileName/*[in]*/);

};
typedef IOTAAddInServiceDispT<IOTAAddInService> IOTAAddInServiceDisp;

typedef TComInterface<IOTABitmapService>  TCOMIOTABitmapService;

// *********************************************************************//
// DispIntf:  IOTABitmapService
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9B9487F0-3F83-4817-AACD-3C84D2FEF954}
// *********************************************************************//
template<class T>
class IOTABitmapServiceDispT : public TAutoDriver<IOTABitmapService>
{
public:
  IOTABitmapServiceDispT(){}

  IOTABitmapServiceDispT(IOTABitmapService *pintf)
  {
    TAutoDriver<IOTABitmapService>::Bind(pintf, false);
  }

  IOTABitmapServiceDispT(IOTABitmapServicePtr pintf)
  {
    TAutoDriver<IOTABitmapService>::Bind(pintf, true);
  }

  IOTABitmapServiceDispT& operator=(IOTABitmapService *pintf)
  {
    TAutoDriver<IOTABitmapService>::Bind(pintf, false);
    return *this;
  }

  IOTABitmapServiceDispT& operator=(IOTABitmapServicePtr pintf)
  {
    TAutoDriver<IOTABitmapService>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall LoadFromResourceID(BSTR fileName/*[in]*/, long resID/*[in]*/, 
                                                long* pRetVal/*[out,retval]*/);
  long            __fastcall LoadFromResourceID(BSTR fileName/*[in]*/, long resID/*[in]*/);

};
typedef IOTABitmapServiceDispT<IOTABitmapService> IOTABitmapServiceDisp;

// *********************************************************************//
// SmartIntf: TCOM_AssemblyUnloadedEventArgs
// Interface: _AssemblyUnloadedEventArgs
// *********************************************************************//
template <class T /* _AssemblyUnloadedEventArgs */ >
class TCOM_AssemblyUnloadedEventArgsT : public TComInterface<_AssemblyUnloadedEventArgs>, public TComInterfaceBase<IUnknown>
{
public:
  TCOM_AssemblyUnloadedEventArgsT() {}
  TCOM_AssemblyUnloadedEventArgsT(_AssemblyUnloadedEventArgs *intf, bool addRef = false) : TComInterface<_AssemblyUnloadedEventArgs>(intf, addRef) {}
  TCOM_AssemblyUnloadedEventArgsT(const TCOM_AssemblyUnloadedEventArgsT& src) : TComInterface<_AssemblyUnloadedEventArgs>(src) {}
  TCOM_AssemblyUnloadedEventArgsT& operator=(const TCOM_AssemblyUnloadedEventArgsT& src) { Bind(src, true); return *this;}


};
typedef TCOM_AssemblyUnloadedEventArgsT<_AssemblyUnloadedEventArgs> TCOM_AssemblyUnloadedEventArgs;

// *********************************************************************//
// DispIntf:  _AssemblyUnloadedEventArgs
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {BB77DC4F-7E1C-33FD-9E94-C7C631F3FC43}
// *********************************************************************//
template<class T>
class _AssemblyUnloadedEventArgsDispT : public TAutoDriver<_AssemblyUnloadedEventArgs>
{
public:
  _AssemblyUnloadedEventArgsDispT(){}

  _AssemblyUnloadedEventArgsDispT(_AssemblyUnloadedEventArgs *pintf)
  {
    TAutoDriver<_AssemblyUnloadedEventArgs>::Bind(pintf, false);
  }

  _AssemblyUnloadedEventArgsDispT(_AssemblyUnloadedEventArgsPtr pintf)
  {
    TAutoDriver<_AssemblyUnloadedEventArgs>::Bind(pintf, true);
  }

  _AssemblyUnloadedEventArgsDispT& operator=(_AssemblyUnloadedEventArgs *pintf)
  {
    TAutoDriver<_AssemblyUnloadedEventArgs>::Bind(pintf, false);
    return *this;
  }

  _AssemblyUnloadedEventArgsDispT& operator=(_AssemblyUnloadedEventArgsPtr pintf)
  {
    TAutoDriver<_AssemblyUnloadedEventArgs>::Bind(pintf, true);
    return *this;
  }

  HRESULT BindDefault()
  {
    return OLECHECK(Bind(CLSID_AssemblyUnloadedEventArgs));
  }

  HRESULT BindRunning()
  {
    return BindToActive(CLSID_AssemblyUnloadedEventArgs);
  }


};
typedef _AssemblyUnloadedEventArgsDispT<_AssemblyUnloadedEventArgs> _AssemblyUnloadedEventArgsDisp;

// *********************************************************************//
// SmartIntf: TCOM_AssemblyUnloadedEventHandler
// Interface: _AssemblyUnloadedEventHandler
// *********************************************************************//
template <class T /* _AssemblyUnloadedEventHandler */ >
class TCOM_AssemblyUnloadedEventHandlerT : public TComInterface<_AssemblyUnloadedEventHandler>, public TComInterfaceBase<IUnknown>
{
public:
  TCOM_AssemblyUnloadedEventHandlerT() {}
  TCOM_AssemblyUnloadedEventHandlerT(_AssemblyUnloadedEventHandler *intf, bool addRef = false) : TComInterface<_AssemblyUnloadedEventHandler>(intf, addRef) {}
  TCOM_AssemblyUnloadedEventHandlerT(const TCOM_AssemblyUnloadedEventHandlerT& src) : TComInterface<_AssemblyUnloadedEventHandler>(src) {}
  TCOM_AssemblyUnloadedEventHandlerT& operator=(const TCOM_AssemblyUnloadedEventHandlerT& src) { Bind(src, true); return *this;}


};
typedef TCOM_AssemblyUnloadedEventHandlerT<_AssemblyUnloadedEventHandler> TCOM_AssemblyUnloadedEventHandler;

// *********************************************************************//
// DispIntf:  _AssemblyUnloadedEventHandler
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {BC05AA32-5149-33E6-9865-83DF06FE9233}
// *********************************************************************//
template<class T>
class _AssemblyUnloadedEventHandlerDispT : public TAutoDriver<_AssemblyUnloadedEventHandler>
{
public:
  _AssemblyUnloadedEventHandlerDispT(){}

  _AssemblyUnloadedEventHandlerDispT(_AssemblyUnloadedEventHandler *pintf)
  {
    TAutoDriver<_AssemblyUnloadedEventHandler>::Bind(pintf, false);
  }

  _AssemblyUnloadedEventHandlerDispT(_AssemblyUnloadedEventHandlerPtr pintf)
  {
    TAutoDriver<_AssemblyUnloadedEventHandler>::Bind(pintf, true);
  }

  _AssemblyUnloadedEventHandlerDispT& operator=(_AssemblyUnloadedEventHandler *pintf)
  {
    TAutoDriver<_AssemblyUnloadedEventHandler>::Bind(pintf, false);
    return *this;
  }

  _AssemblyUnloadedEventHandlerDispT& operator=(_AssemblyUnloadedEventHandlerPtr pintf)
  {
    TAutoDriver<_AssemblyUnloadedEventHandler>::Bind(pintf, true);
    return *this;
  }

  HRESULT BindDefault()
  {
    return OLECHECK(Bind(CLSID_AssemblyUnloadedEventHandler));
  }

  HRESULT BindRunning()
  {
    return BindToActive(CLSID_AssemblyUnloadedEventHandler);
  }


};
typedef _AssemblyUnloadedEventHandlerDispT<_AssemblyUnloadedEventHandler> _AssemblyUnloadedEventHandlerDisp;

typedef TComInterface<IOTAAssemblyUnloadedService>  TCOMIOTAAssemblyUnloadedService;

// *********************************************************************//
// DispIntf:  IOTAAssemblyUnloadedService
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B8BF8F11-9F74-3754-8968-F65738FD7120}
// *********************************************************************//
template<class T>
class IOTAAssemblyUnloadedServiceDispT : public TAutoDriver<IOTAAssemblyUnloadedService>
{
public:
  IOTAAssemblyUnloadedServiceDispT(){}

  IOTAAssemblyUnloadedServiceDispT(IOTAAssemblyUnloadedService *pintf)
  {
    TAutoDriver<IOTAAssemblyUnloadedService>::Bind(pintf, false);
  }

  IOTAAssemblyUnloadedServiceDispT(IOTAAssemblyUnloadedServicePtr pintf)
  {
    TAutoDriver<IOTAAssemblyUnloadedService>::Bind(pintf, true);
  }

  IOTAAssemblyUnloadedServiceDispT& operator=(IOTAAssemblyUnloadedService *pintf)
  {
    TAutoDriver<IOTAAssemblyUnloadedService>::Bind(pintf, false);
    return *this;
  }

  IOTAAssemblyUnloadedServiceDispT& operator=(IOTAAssemblyUnloadedServicePtr pintf)
  {
    TAutoDriver<IOTAAssemblyUnloadedService>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall add_AssemblyUnloaded(Borland_studio_toolsapi_tlb::_AssemblyUnloadedEventHandler* value/*[in]*/);
  HRESULT         __fastcall remove_AssemblyUnloaded(Borland_studio_toolsapi_tlb::_AssemblyUnloadedEventHandler* value/*[in]*/);
  HRESULT         __fastcall OnAssemblyUnloaded(VARIANT sender/*[in]*/, 
                                                Borland_studio_toolsapi_tlb::_AssemblyUnloadedEventArgs* args/*[in]*/);

};
typedef IOTAAssemblyUnloadedServiceDispT<IOTAAssemblyUnloadedService> IOTAAssemblyUnloadedServiceDisp;

typedef TComInterface<IOTAMessageGroup>  TCOMIOTAMessageGroup;

// *********************************************************************//
// DispIntf:  IOTAMessageGroup
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {56352901-9004-426F-8C34-CD3652E8B01A}
// *********************************************************************//
template<class T>
class IOTAMessageGroupDispT : public TAutoDriver<IOTAMessageGroup>
{
public:
  IOTAMessageGroupDispT(){}

  IOTAMessageGroupDispT(IOTAMessageGroup *pintf)
  {
    TAutoDriver<IOTAMessageGroup>::Bind(pintf, false);
  }

  IOTAMessageGroupDispT(IOTAMessageGroupPtr pintf)
  {
    TAutoDriver<IOTAMessageGroup>::Bind(pintf, true);
  }

  IOTAMessageGroupDispT& operator=(IOTAMessageGroup *pintf)
  {
    TAutoDriver<IOTAMessageGroup>::Bind(pintf, false);
    return *this;
  }

  IOTAMessageGroupDispT& operator=(IOTAMessageGroupPtr pintf)
  {
    TAutoDriver<IOTAMessageGroup>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall get_Name(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_Name(void);
  HRESULT         __fastcall get_AutoScroll(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_AutoScroll(void);
  HRESULT         __fastcall set_AutoScroll(VARIANT_BOOL pRetVal/*[in]*/);

  __property   BSTR            Name = {read = get_Name};
  __property   VARIANT_BOOL    AutoScroll = {read = get_AutoScroll, write = set_AutoScroll};
};
typedef IOTAMessageGroupDispT<IOTAMessageGroup> IOTAMessageGroupDisp;

// *********************************************************************//
// SmartIntf: TCOM_MessageGroupEventArgs
// Interface: _MessageGroupEventArgs
// *********************************************************************//
template <class T /* _MessageGroupEventArgs */ >
class TCOM_MessageGroupEventArgsT : public TComInterface<_MessageGroupEventArgs>, public TComInterfaceBase<IUnknown>
{
public:
  TCOM_MessageGroupEventArgsT() {}
  TCOM_MessageGroupEventArgsT(_MessageGroupEventArgs *intf, bool addRef = false) : TComInterface<_MessageGroupEventArgs>(intf, addRef) {}
  TCOM_MessageGroupEventArgsT(const TCOM_MessageGroupEventArgsT& src) : TComInterface<_MessageGroupEventArgs>(src) {}
  TCOM_MessageGroupEventArgsT& operator=(const TCOM_MessageGroupEventArgsT& src) { Bind(src, true); return *this;}


};
typedef TCOM_MessageGroupEventArgsT<_MessageGroupEventArgs> TCOM_MessageGroupEventArgs;

// *********************************************************************//
// DispIntf:  _MessageGroupEventArgs
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {6AB2B46B-745D-34CB-B1F6-80E1A2C8ECF4}
// *********************************************************************//
template<class T>
class _MessageGroupEventArgsDispT : public TAutoDriver<_MessageGroupEventArgs>
{
public:
  _MessageGroupEventArgsDispT(){}

  _MessageGroupEventArgsDispT(_MessageGroupEventArgs *pintf)
  {
    TAutoDriver<_MessageGroupEventArgs>::Bind(pintf, false);
  }

  _MessageGroupEventArgsDispT(_MessageGroupEventArgsPtr pintf)
  {
    TAutoDriver<_MessageGroupEventArgs>::Bind(pintf, true);
  }

  _MessageGroupEventArgsDispT& operator=(_MessageGroupEventArgs *pintf)
  {
    TAutoDriver<_MessageGroupEventArgs>::Bind(pintf, false);
    return *this;
  }

  _MessageGroupEventArgsDispT& operator=(_MessageGroupEventArgsPtr pintf)
  {
    TAutoDriver<_MessageGroupEventArgs>::Bind(pintf, true);
    return *this;
  }

  HRESULT BindDefault()
  {
    return OLECHECK(Bind(CLSID_MessageGroupEventArgs));
  }

  HRESULT BindRunning()
  {
    return BindToActive(CLSID_MessageGroupEventArgs);
  }


};
typedef _MessageGroupEventArgsDispT<_MessageGroupEventArgs> _MessageGroupEventArgsDisp;

typedef TComInterface<IOTACustomMessage>  TCOMIOTACustomMessage;

// *********************************************************************//
// DispIntf:  IOTACustomMessage
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E5133BA9-9859-49CE-A295-D337E7BC3C48}
// *********************************************************************//
template<class T>
class IOTACustomMessageDispT : public TAutoDriver<IOTACustomMessage>
{
public:
  IOTACustomMessageDispT(){}

  IOTACustomMessageDispT(IOTACustomMessage *pintf)
  {
    TAutoDriver<IOTACustomMessage>::Bind(pintf, false);
  }

  IOTACustomMessageDispT(IOTACustomMessagePtr pintf)
  {
    TAutoDriver<IOTACustomMessage>::Bind(pintf, true);
  }

  IOTACustomMessageDispT& operator=(IOTACustomMessage *pintf)
  {
    TAutoDriver<IOTACustomMessage>::Bind(pintf, false);
    return *this;
  }

  IOTACustomMessageDispT& operator=(IOTACustomMessagePtr pintf)
  {
    TAutoDriver<IOTACustomMessage>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall ShowHelp();
  HRESULT         __fastcall get_fileName(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_fileName(void);
  HRESULT         __fastcall get_LineNumber(long* pRetVal/*[out,retval]*/);
  long            __fastcall get_LineNumber(void);
  HRESULT         __fastcall get_ColumnNumber(long* pRetVal/*[out,retval]*/);
  long            __fastcall get_ColumnNumber(void);
  HRESULT         __fastcall get_LineText(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_LineText(void);
  HRESULT         __fastcall get_ChildCount(long* pRetVal/*[out,retval]*/);
  long            __fastcall get_ChildCount(void);
  HRESULT         __fastcall GetChild(long index/*[in]*/, 
                                      Borland_studio_toolsapi_tlb::IOTACustomMessage** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTACustomMessage* __fastcall GetChild(long index/*[in]*/);

  __property   BSTR            fileName = {read = get_fileName};
  __property   long            LineNumber = {read = get_LineNumber};
  __property   long            ColumnNumber = {read = get_ColumnNumber};
  __property   BSTR            LineText = {read = get_LineText};
  __property   long            ChildCount = {read = get_ChildCount};
};
typedef IOTACustomMessageDispT<IOTACustomMessage> IOTACustomMessageDisp;

// *********************************************************************//
// SmartIntf: TCOM_MessageGroupHandler
// Interface: _MessageGroupHandler
// *********************************************************************//
template <class T /* _MessageGroupHandler */ >
class TCOM_MessageGroupHandlerT : public TComInterface<_MessageGroupHandler>, public TComInterfaceBase<IUnknown>
{
public:
  TCOM_MessageGroupHandlerT() {}
  TCOM_MessageGroupHandlerT(_MessageGroupHandler *intf, bool addRef = false) : TComInterface<_MessageGroupHandler>(intf, addRef) {}
  TCOM_MessageGroupHandlerT(const TCOM_MessageGroupHandlerT& src) : TComInterface<_MessageGroupHandler>(src) {}
  TCOM_MessageGroupHandlerT& operator=(const TCOM_MessageGroupHandlerT& src) { Bind(src, true); return *this;}


};
typedef TCOM_MessageGroupHandlerT<_MessageGroupHandler> TCOM_MessageGroupHandler;

// *********************************************************************//
// DispIntf:  _MessageGroupHandler
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {64B4C7E7-41A9-341E-BB19-C3279B9DD1AE}
// *********************************************************************//
template<class T>
class _MessageGroupHandlerDispT : public TAutoDriver<_MessageGroupHandler>
{
public:
  _MessageGroupHandlerDispT(){}

  _MessageGroupHandlerDispT(_MessageGroupHandler *pintf)
  {
    TAutoDriver<_MessageGroupHandler>::Bind(pintf, false);
  }

  _MessageGroupHandlerDispT(_MessageGroupHandlerPtr pintf)
  {
    TAutoDriver<_MessageGroupHandler>::Bind(pintf, true);
  }

  _MessageGroupHandlerDispT& operator=(_MessageGroupHandler *pintf)
  {
    TAutoDriver<_MessageGroupHandler>::Bind(pintf, false);
    return *this;
  }

  _MessageGroupHandlerDispT& operator=(_MessageGroupHandlerPtr pintf)
  {
    TAutoDriver<_MessageGroupHandler>::Bind(pintf, true);
    return *this;
  }

  HRESULT BindDefault()
  {
    return OLECHECK(Bind(CLSID_MessageGroupHandler));
  }

  HRESULT BindRunning()
  {
    return BindToActive(CLSID_MessageGroupHandler);
  }


};
typedef _MessageGroupHandlerDispT<_MessageGroupHandler> _MessageGroupHandlerDisp;

typedef TComInterface<IOTAMessageService>  TCOMIOTAMessageService;

// *********************************************************************//
// DispIntf:  IOTAMessageService
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {37542A61-0649-49CB-BC6F-2FFA0D2E3E1E}
// *********************************************************************//
template<class T>
class IOTAMessageServiceDispT : public TAutoDriver<IOTAMessageService>
{
public:
  IOTAMessageServiceDispT(){}

  IOTAMessageServiceDispT(IOTAMessageService *pintf)
  {
    TAutoDriver<IOTAMessageService>::Bind(pintf, false);
  }

  IOTAMessageServiceDispT(IOTAMessageServicePtr pintf)
  {
    TAutoDriver<IOTAMessageService>::Bind(pintf, true);
  }

  IOTAMessageServiceDispT& operator=(IOTAMessageService *pintf)
  {
    TAutoDriver<IOTAMessageService>::Bind(pintf, false);
    return *this;
  }

  IOTAMessageServiceDispT& operator=(IOTAMessageServicePtr pintf)
  {
    TAutoDriver<IOTAMessageService>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall AddCustomMessage(Borland_studio_toolsapi_tlb::IOTACustomMessage* customMsg/*[in]*/
                                              , long* pRetVal/*[out,retval]*/);
  long            __fastcall AddCustomMessage(Borland_studio_toolsapi_tlb::IOTACustomMessage* customMsg/*[in]*/);
  HRESULT         __fastcall AddCustomMessage_2(Borland_studio_toolsapi_tlb::IOTACustomMessage* customMsg/*[in]*/
                                                , long parent/*[in]*/, long* pRetVal/*[out,retval]*/);
  long            __fastcall AddCustomMessage_2(Borland_studio_toolsapi_tlb::IOTACustomMessage* customMsg/*[in]*/, 
                                                long parent/*[in]*/);
  HRESULT         __fastcall AddCustomMessage_3(Borland_studio_toolsapi_tlb::IOTACustomMessage* customMsg/*[in]*/
                                                , 
                                                Borland_studio_toolsapi_tlb::IOTAMessageGroup* messageGroup/*[in]*/
                                                , long* pRetVal/*[out,retval]*/);
  long            __fastcall AddCustomMessage_3(Borland_studio_toolsapi_tlb::IOTACustomMessage* customMsg/*[in]*/, 
                                                Borland_studio_toolsapi_tlb::IOTAMessageGroup* messageGroup/*[in]*/);
  HRESULT         __fastcall AddTitleMessage(BSTR messageStr/*[in]*/);
  HRESULT         __fastcall AddToolMessage(BSTR fileName/*[in]*/, BSTR messageStr/*[in]*/, 
                                            BSTR prefixStr/*[in]*/, long LineNumber/*[in]*/, 
                                            long ColumnNumber/*[in]*/);
  HRESULT         __fastcall ClearAllMessages();
  HRESULT         __fastcall ClearCompilerMessages();
  HRESULT         __fastcall ClearSearchMessages();
  HRESULT         __fastcall ClearToolMessages();
  HRESULT         __fastcall AddToolMessage_2(BSTR fileName/*[in]*/, BSTR messageStr/*[in]*/, 
                                              BSTR prefixStr/*[in]*/, long LineNumber/*[in]*/, 
                                              long ColumnNumber/*[in]*/, long parent/*[in]*/, 
                                              long* lineRef/*[out]*/);
  HRESULT         __fastcall AddMessageGroup(BSTR groupName/*[in]*/, 
                                             Borland_studio_toolsapi_tlb::IOTAMessageGroup** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAMessageGroup* __fastcall AddMessageGroup(BSTR groupName/*[in]*/);
  HRESULT         __fastcall AddTitleMessage_2(BSTR messageStr/*[in]*/, 
                                               Borland_studio_toolsapi_tlb::IOTAMessageGroup* messageGroup/*[in]*/);
  HRESULT         __fastcall AddToolMessage_3(BSTR fileName/*[in]*/, BSTR messageStr/*[in]*/, 
                                              BSTR prefixStr/*[in]*/, long LineNumber/*[in]*/, 
                                              long ColumnNumber/*[in]*/, long parent/*[in]*/, 
                                              long* lineRef/*[out]*/, 
                                              Borland_studio_toolsapi_tlb::IOTAMessageGroup* messageGroup/*[in]*/);
  HRESULT         __fastcall ClearMessageGroup(Borland_studio_toolsapi_tlb::IOTAMessageGroup* messageGroup/*[in]*/);
  HRESULT         __fastcall ClearToolMessages_2(Borland_studio_toolsapi_tlb::IOTAMessageGroup* messageGroup/*[in]*/);
  HRESULT         __fastcall get_MessageGroupCount(long* pRetVal/*[out,retval]*/);
  long            __fastcall get_MessageGroupCount(void);
  HRESULT         __fastcall GetMessageGroup(long index/*[in]*/, 
                                             Borland_studio_toolsapi_tlb::IOTAMessageGroup** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAMessageGroup* __fastcall GetMessageGroup(long index/*[in]*/);
  HRESULT         __fastcall GetGroup(BSTR groupName/*[in]*/, 
                                      Borland_studio_toolsapi_tlb::IOTAMessageGroup** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAMessageGroup* __fastcall GetGroup(BSTR groupName/*[in]*/);
  HRESULT         __fastcall ShowMessageView(Borland_studio_toolsapi_tlb::IOTAMessageGroup* messageGroup/*[in]*/);
  HRESULT         __fastcall RemoveMessageGroup(Borland_studio_toolsapi_tlb::IOTAMessageGroup* messageGroup/*[in]*/);
  HRESULT         __fastcall AddCompilerMessage(BSTR fileName/*[in]*/, BSTR messageStr/*[in]*/, 
                                                BSTR toolName/*[in]*/, unsigned_char Kind/*[in]*/, 
                                                long LineNumber/*[in]*/, long ColumnNumber/*[in]*/, 
                                                long parent/*[in]*/, long* lineRef/*[out]*/);
  HRESULT         __fastcall AddCompilerMessage_2(BSTR fileName/*[in]*/, BSTR messageStr/*[in]*/, 
                                                  BSTR toolName/*[in]*/, unsigned_char Kind/*[in]*/
                                                  , long LineNumber/*[in]*/, 
                                                  long ColumnNumber/*[in]*/, 
                                                  BSTR helpKeyword/*[in]*/, long parent/*[in]*/, 
                                                  long* lineRef/*[out]*/);
  HRESULT         __fastcall AddCompilerMessage_3(BSTR fileName/*[in]*/, BSTR messageStr/*[in]*/, 
                                                  BSTR toolName/*[in]*/, unsigned_char Kind/*[in]*/
                                                  , long LineNumber/*[in]*/, 
                                                  long ColumnNumber/*[in]*/, 
                                                  long helpContext/*[in]*/, long parent/*[in]*/, 
                                                  long* lineRef/*[out]*/);
  HRESULT         __fastcall add_MessageGroupAdded(Borland_studio_toolsapi_tlb::_MessageGroupHandler* value/*[in]*/);
  HRESULT         __fastcall remove_MessageGroupAdded(Borland_studio_toolsapi_tlb::_MessageGroupHandler* value/*[in]*/);
  HRESULT         __fastcall add_MessageGroupDeleted(Borland_studio_toolsapi_tlb::_MessageGroupHandler* value/*[in]*/);
  HRESULT         __fastcall remove_MessageGroupDeleted(Borland_studio_toolsapi_tlb::_MessageGroupHandler* value/*[in]*/);
  HRESULT         __fastcall NextMessage(VARIANT_BOOL goForward/*[in]*/);
  HRESULT         __fastcall NextErrorMessage(VARIANT_BOOL goForward/*[in]*/, 
                                              VARIANT_BOOL errorsOnly/*[in]*/);

  __property   long            MessageGroupCount = {read = get_MessageGroupCount};
};
typedef IOTAMessageServiceDispT<IOTAMessageService> IOTAMessageServiceDisp;

typedef TComInterface<IOTAEnvironmentOptions>  TCOMIOTAEnvironmentOptions;

// *********************************************************************//
// DispIntf:  IOTAEnvironmentOptions
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0036BC84-FB29-4769-98CA-A374E71F7544}
// *********************************************************************//
template<class T>
class IOTAEnvironmentOptionsDispT : public TAutoDriver<IOTAEnvironmentOptions>
{
public:
  IOTAEnvironmentOptionsDispT(){}

  IOTAEnvironmentOptionsDispT(IOTAEnvironmentOptions *pintf)
  {
    TAutoDriver<IOTAEnvironmentOptions>::Bind(pintf, false);
  }

  IOTAEnvironmentOptionsDispT(IOTAEnvironmentOptionsPtr pintf)
  {
    TAutoDriver<IOTAEnvironmentOptions>::Bind(pintf, true);
  }

  IOTAEnvironmentOptionsDispT& operator=(IOTAEnvironmentOptions *pintf)
  {
    TAutoDriver<IOTAEnvironmentOptions>::Bind(pintf, false);
    return *this;
  }

  IOTAEnvironmentOptionsDispT& operator=(IOTAEnvironmentOptionsPtr pintf)
  {
    TAutoDriver<IOTAEnvironmentOptions>::Bind(pintf, true);
    return *this;
  }


};
typedef IOTAEnvironmentOptionsDispT<IOTAEnvironmentOptions> IOTAEnvironmentOptionsDisp;

typedef TComInterface<IFileNotificationEventArgs>  TCOMIFileNotificationEventArgs;

// *********************************************************************//
// DispIntf:  IFileNotificationEventArgs
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E3F325D2-1720-4C71-9239-E3CFBE0EB3E8}
// *********************************************************************//
template<class T>
class IFileNotificationEventArgsDispT : public TAutoDriver<IFileNotificationEventArgs>
{
public:
  IFileNotificationEventArgsDispT(){}

  IFileNotificationEventArgsDispT(IFileNotificationEventArgs *pintf)
  {
    TAutoDriver<IFileNotificationEventArgs>::Bind(pintf, false);
  }

  IFileNotificationEventArgsDispT(IFileNotificationEventArgsPtr pintf)
  {
    TAutoDriver<IFileNotificationEventArgs>::Bind(pintf, true);
  }

  IFileNotificationEventArgsDispT& operator=(IFileNotificationEventArgs *pintf)
  {
    TAutoDriver<IFileNotificationEventArgs>::Bind(pintf, false);
    return *this;
  }

  IFileNotificationEventArgsDispT& operator=(IFileNotificationEventArgsPtr pintf)
  {
    TAutoDriver<IFileNotificationEventArgs>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall get_NotifyCode(Borland_studio_toolsapi_tlb::OTAFileNotification* pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::OTAFileNotification __fastcall get_NotifyCode(void);
  HRESULT         __fastcall get_fileName(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_fileName(void);
  HRESULT         __fastcall get_Cancel(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_Cancel(void);
  HRESULT         __fastcall set_Cancel(VARIANT_BOOL pRetVal/*[in]*/);

  __property   Borland_studio_toolsapi_tlb::OTAFileNotification NotifyCode = {read = get_NotifyCode};
  __property   BSTR            fileName = {read = get_fileName};
  __property   VARIANT_BOOL    Cancel = {read = get_Cancel, write = set_Cancel};
};
typedef IFileNotificationEventArgsDispT<IFileNotificationEventArgs> IFileNotificationEventArgsDisp;

// *********************************************************************//
// SmartIntf: TCOM_FileNotificationEventArgs
// Interface: _FileNotificationEventArgs
// *********************************************************************//
template <class T /* _FileNotificationEventArgs */ >
class TCOM_FileNotificationEventArgsT : public TComInterface<_FileNotificationEventArgs>, public TComInterfaceBase<IUnknown>
{
public:
  TCOM_FileNotificationEventArgsT() {}
  TCOM_FileNotificationEventArgsT(_FileNotificationEventArgs *intf, bool addRef = false) : TComInterface<_FileNotificationEventArgs>(intf, addRef) {}
  TCOM_FileNotificationEventArgsT(const TCOM_FileNotificationEventArgsT& src) : TComInterface<_FileNotificationEventArgs>(src) {}
  TCOM_FileNotificationEventArgsT& operator=(const TCOM_FileNotificationEventArgsT& src) { Bind(src, true); return *this;}


};
typedef TCOM_FileNotificationEventArgsT<_FileNotificationEventArgs> TCOM_FileNotificationEventArgs;

// *********************************************************************//
// DispIntf:  _FileNotificationEventArgs
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {F5AB5C1B-FDC3-3D42-AB2B-9820E1A737C8}
// *********************************************************************//
template<class T>
class _FileNotificationEventArgsDispT : public TAutoDriver<_FileNotificationEventArgs>
{
public:
  _FileNotificationEventArgsDispT(){}

  _FileNotificationEventArgsDispT(_FileNotificationEventArgs *pintf)
  {
    TAutoDriver<_FileNotificationEventArgs>::Bind(pintf, false);
  }

  _FileNotificationEventArgsDispT(_FileNotificationEventArgsPtr pintf)
  {
    TAutoDriver<_FileNotificationEventArgs>::Bind(pintf, true);
  }

  _FileNotificationEventArgsDispT& operator=(_FileNotificationEventArgs *pintf)
  {
    TAutoDriver<_FileNotificationEventArgs>::Bind(pintf, false);
    return *this;
  }

  _FileNotificationEventArgsDispT& operator=(_FileNotificationEventArgsPtr pintf)
  {
    TAutoDriver<_FileNotificationEventArgs>::Bind(pintf, true);
    return *this;
  }

  HRESULT BindDefault()
  {
    return OLECHECK(Bind(CLSID_FileNotificationEventArgs));
  }

  HRESULT BindRunning()
  {
    return BindToActive(CLSID_FileNotificationEventArgs);
  }


};
typedef _FileNotificationEventArgsDispT<_FileNotificationEventArgs> _FileNotificationEventArgsDisp;

typedef TComInterface<IBeforeCompileEventArgs>  TCOMIBeforeCompileEventArgs;

// *********************************************************************//
// DispIntf:  IBeforeCompileEventArgs
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E4DD4461-03AB-4E1C-B2F7-84495C360920}
// *********************************************************************//
template<class T>
class IBeforeCompileEventArgsDispT : public TAutoDriver<IBeforeCompileEventArgs>
{
public:
  IBeforeCompileEventArgsDispT(){}

  IBeforeCompileEventArgsDispT(IBeforeCompileEventArgs *pintf)
  {
    TAutoDriver<IBeforeCompileEventArgs>::Bind(pintf, false);
  }

  IBeforeCompileEventArgsDispT(IBeforeCompileEventArgsPtr pintf)
  {
    TAutoDriver<IBeforeCompileEventArgs>::Bind(pintf, true);
  }

  IBeforeCompileEventArgsDispT& operator=(IBeforeCompileEventArgs *pintf)
  {
    TAutoDriver<IBeforeCompileEventArgs>::Bind(pintf, false);
    return *this;
  }

  IBeforeCompileEventArgsDispT& operator=(IBeforeCompileEventArgsPtr pintf)
  {
    TAutoDriver<IBeforeCompileEventArgs>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall get_project(Borland_studio_toolsapi_tlb::IOTAProject** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAProjectPtr __fastcall get_project(void);
  HRESULT         __fastcall get_IsCodeInsight(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_IsCodeInsight(void);
  HRESULT         __fastcall get_Cancel(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_Cancel(void);
  HRESULT         __fastcall set_Cancel(VARIANT_BOOL pRetVal/*[in]*/);

  __property   Borland_studio_toolsapi_tlb::IOTAProjectPtr project = {read = get_project};
  __property   VARIANT_BOOL    IsCodeInsight = {read = get_IsCodeInsight};
  __property   VARIANT_BOOL    Cancel = {read = get_Cancel, write = set_Cancel};
};
typedef IBeforeCompileEventArgsDispT<IBeforeCompileEventArgs> IBeforeCompileEventArgsDisp;

// *********************************************************************//
// SmartIntf: TCOM_BeforeCompileArgs
// Interface: _BeforeCompileArgs
// *********************************************************************//
template <class T /* _BeforeCompileArgs */ >
class TCOM_BeforeCompileArgsT : public TComInterface<_BeforeCompileArgs>, public TComInterfaceBase<IUnknown>
{
public:
  TCOM_BeforeCompileArgsT() {}
  TCOM_BeforeCompileArgsT(_BeforeCompileArgs *intf, bool addRef = false) : TComInterface<_BeforeCompileArgs>(intf, addRef) {}
  TCOM_BeforeCompileArgsT(const TCOM_BeforeCompileArgsT& src) : TComInterface<_BeforeCompileArgs>(src) {}
  TCOM_BeforeCompileArgsT& operator=(const TCOM_BeforeCompileArgsT& src) { Bind(src, true); return *this;}


};
typedef TCOM_BeforeCompileArgsT<_BeforeCompileArgs> TCOM_BeforeCompileArgs;

// *********************************************************************//
// DispIntf:  _BeforeCompileArgs
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {F88936B3-5313-3308-A5B6-35ECF6F4AC73}
// *********************************************************************//
template<class T>
class _BeforeCompileArgsDispT : public TAutoDriver<_BeforeCompileArgs>
{
public:
  _BeforeCompileArgsDispT(){}

  _BeforeCompileArgsDispT(_BeforeCompileArgs *pintf)
  {
    TAutoDriver<_BeforeCompileArgs>::Bind(pintf, false);
  }

  _BeforeCompileArgsDispT(_BeforeCompileArgsPtr pintf)
  {
    TAutoDriver<_BeforeCompileArgs>::Bind(pintf, true);
  }

  _BeforeCompileArgsDispT& operator=(_BeforeCompileArgs *pintf)
  {
    TAutoDriver<_BeforeCompileArgs>::Bind(pintf, false);
    return *this;
  }

  _BeforeCompileArgsDispT& operator=(_BeforeCompileArgsPtr pintf)
  {
    TAutoDriver<_BeforeCompileArgs>::Bind(pintf, true);
    return *this;
  }

  HRESULT BindDefault()
  {
    return OLECHECK(Bind(CLSID_BeforeCompileArgs));
  }

  HRESULT BindRunning()
  {
    return BindToActive(CLSID_BeforeCompileArgs);
  }


};
typedef _BeforeCompileArgsDispT<_BeforeCompileArgs> _BeforeCompileArgsDisp;

typedef TComInterface<IAfterCompileEventArgs>  TCOMIAfterCompileEventArgs;

// *********************************************************************//
// DispIntf:  IAfterCompileEventArgs
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {015F0FB1-6E8A-41EE-B419-5078C6F5F0D0}
// *********************************************************************//
template<class T>
class IAfterCompileEventArgsDispT : public TAutoDriver<IAfterCompileEventArgs>
{
public:
  IAfterCompileEventArgsDispT(){}

  IAfterCompileEventArgsDispT(IAfterCompileEventArgs *pintf)
  {
    TAutoDriver<IAfterCompileEventArgs>::Bind(pintf, false);
  }

  IAfterCompileEventArgsDispT(IAfterCompileEventArgsPtr pintf)
  {
    TAutoDriver<IAfterCompileEventArgs>::Bind(pintf, true);
  }

  IAfterCompileEventArgsDispT& operator=(IAfterCompileEventArgs *pintf)
  {
    TAutoDriver<IAfterCompileEventArgs>::Bind(pintf, false);
    return *this;
  }

  IAfterCompileEventArgsDispT& operator=(IAfterCompileEventArgsPtr pintf)
  {
    TAutoDriver<IAfterCompileEventArgs>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall get_IsCodeInsight(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_IsCodeInsight(void);
  HRESULT         __fastcall get_Succeeded(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_Succeeded(void);

  __property   VARIANT_BOOL    IsCodeInsight = {read = get_IsCodeInsight};
  __property   VARIANT_BOOL    Succeeded = {read = get_Succeeded};
};
typedef IAfterCompileEventArgsDispT<IAfterCompileEventArgs> IAfterCompileEventArgsDisp;

// *********************************************************************//
// SmartIntf: TCOM_AfterCompileArgs
// Interface: _AfterCompileArgs
// *********************************************************************//
template <class T /* _AfterCompileArgs */ >
class TCOM_AfterCompileArgsT : public TComInterface<_AfterCompileArgs>, public TComInterfaceBase<IUnknown>
{
public:
  TCOM_AfterCompileArgsT() {}
  TCOM_AfterCompileArgsT(_AfterCompileArgs *intf, bool addRef = false) : TComInterface<_AfterCompileArgs>(intf, addRef) {}
  TCOM_AfterCompileArgsT(const TCOM_AfterCompileArgsT& src) : TComInterface<_AfterCompileArgs>(src) {}
  TCOM_AfterCompileArgsT& operator=(const TCOM_AfterCompileArgsT& src) { Bind(src, true); return *this;}


};
typedef TCOM_AfterCompileArgsT<_AfterCompileArgs> TCOM_AfterCompileArgs;

// *********************************************************************//
// DispIntf:  _AfterCompileArgs
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {609A4F69-2731-3F4F-98C1-A008B2077FD4}
// *********************************************************************//
template<class T>
class _AfterCompileArgsDispT : public TAutoDriver<_AfterCompileArgs>
{
public:
  _AfterCompileArgsDispT(){}

  _AfterCompileArgsDispT(_AfterCompileArgs *pintf)
  {
    TAutoDriver<_AfterCompileArgs>::Bind(pintf, false);
  }

  _AfterCompileArgsDispT(_AfterCompileArgsPtr pintf)
  {
    TAutoDriver<_AfterCompileArgs>::Bind(pintf, true);
  }

  _AfterCompileArgsDispT& operator=(_AfterCompileArgs *pintf)
  {
    TAutoDriver<_AfterCompileArgs>::Bind(pintf, false);
    return *this;
  }

  _AfterCompileArgsDispT& operator=(_AfterCompileArgsPtr pintf)
  {
    TAutoDriver<_AfterCompileArgs>::Bind(pintf, true);
    return *this;
  }

  HRESULT BindDefault()
  {
    return OLECHECK(Bind(CLSID_AfterCompileArgs));
  }

  HRESULT BindRunning()
  {
    return BindToActive(CLSID_AfterCompileArgs);
  }


};
typedef _AfterCompileArgsDispT<_AfterCompileArgs> _AfterCompileArgsDisp;

// *********************************************************************//
// SmartIntf: TCOM_FileNotificationHandler
// Interface: _FileNotificationHandler
// *********************************************************************//
template <class T /* _FileNotificationHandler */ >
class TCOM_FileNotificationHandlerT : public TComInterface<_FileNotificationHandler>, public TComInterfaceBase<IUnknown>
{
public:
  TCOM_FileNotificationHandlerT() {}
  TCOM_FileNotificationHandlerT(_FileNotificationHandler *intf, bool addRef = false) : TComInterface<_FileNotificationHandler>(intf, addRef) {}
  TCOM_FileNotificationHandlerT(const TCOM_FileNotificationHandlerT& src) : TComInterface<_FileNotificationHandler>(src) {}
  TCOM_FileNotificationHandlerT& operator=(const TCOM_FileNotificationHandlerT& src) { Bind(src, true); return *this;}


};
typedef TCOM_FileNotificationHandlerT<_FileNotificationHandler> TCOM_FileNotificationHandler;

// *********************************************************************//
// DispIntf:  _FileNotificationHandler
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {65B58C48-9B9B-348B-8A6F-2FF96DE79AF1}
// *********************************************************************//
template<class T>
class _FileNotificationHandlerDispT : public TAutoDriver<_FileNotificationHandler>
{
public:
  _FileNotificationHandlerDispT(){}

  _FileNotificationHandlerDispT(_FileNotificationHandler *pintf)
  {
    TAutoDriver<_FileNotificationHandler>::Bind(pintf, false);
  }

  _FileNotificationHandlerDispT(_FileNotificationHandlerPtr pintf)
  {
    TAutoDriver<_FileNotificationHandler>::Bind(pintf, true);
  }

  _FileNotificationHandlerDispT& operator=(_FileNotificationHandler *pintf)
  {
    TAutoDriver<_FileNotificationHandler>::Bind(pintf, false);
    return *this;
  }

  _FileNotificationHandlerDispT& operator=(_FileNotificationHandlerPtr pintf)
  {
    TAutoDriver<_FileNotificationHandler>::Bind(pintf, true);
    return *this;
  }

  HRESULT BindDefault()
  {
    return OLECHECK(Bind(CLSID_FileNotificationHandler));
  }

  HRESULT BindRunning()
  {
    return BindToActive(CLSID_FileNotificationHandler);
  }


};
typedef _FileNotificationHandlerDispT<_FileNotificationHandler> _FileNotificationHandlerDisp;

// *********************************************************************//
// SmartIntf: TCOM_BeforeCompileHandler
// Interface: _BeforeCompileHandler
// *********************************************************************//
template <class T /* _BeforeCompileHandler */ >
class TCOM_BeforeCompileHandlerT : public TComInterface<_BeforeCompileHandler>, public TComInterfaceBase<IUnknown>
{
public:
  TCOM_BeforeCompileHandlerT() {}
  TCOM_BeforeCompileHandlerT(_BeforeCompileHandler *intf, bool addRef = false) : TComInterface<_BeforeCompileHandler>(intf, addRef) {}
  TCOM_BeforeCompileHandlerT(const TCOM_BeforeCompileHandlerT& src) : TComInterface<_BeforeCompileHandler>(src) {}
  TCOM_BeforeCompileHandlerT& operator=(const TCOM_BeforeCompileHandlerT& src) { Bind(src, true); return *this;}


};
typedef TCOM_BeforeCompileHandlerT<_BeforeCompileHandler> TCOM_BeforeCompileHandler;

// *********************************************************************//
// DispIntf:  _BeforeCompileHandler
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {6A531A35-013E-3BA9-8E59-55EF858ABF74}
// *********************************************************************//
template<class T>
class _BeforeCompileHandlerDispT : public TAutoDriver<_BeforeCompileHandler>
{
public:
  _BeforeCompileHandlerDispT(){}

  _BeforeCompileHandlerDispT(_BeforeCompileHandler *pintf)
  {
    TAutoDriver<_BeforeCompileHandler>::Bind(pintf, false);
  }

  _BeforeCompileHandlerDispT(_BeforeCompileHandlerPtr pintf)
  {
    TAutoDriver<_BeforeCompileHandler>::Bind(pintf, true);
  }

  _BeforeCompileHandlerDispT& operator=(_BeforeCompileHandler *pintf)
  {
    TAutoDriver<_BeforeCompileHandler>::Bind(pintf, false);
    return *this;
  }

  _BeforeCompileHandlerDispT& operator=(_BeforeCompileHandlerPtr pintf)
  {
    TAutoDriver<_BeforeCompileHandler>::Bind(pintf, true);
    return *this;
  }

  HRESULT BindDefault()
  {
    return OLECHECK(Bind(CLSID_BeforeCompileHandler));
  }

  HRESULT BindRunning()
  {
    return BindToActive(CLSID_BeforeCompileHandler);
  }


};
typedef _BeforeCompileHandlerDispT<_BeforeCompileHandler> _BeforeCompileHandlerDisp;

// *********************************************************************//
// SmartIntf: TCOM_AfterCompileHandler
// Interface: _AfterCompileHandler
// *********************************************************************//
template <class T /* _AfterCompileHandler */ >
class TCOM_AfterCompileHandlerT : public TComInterface<_AfterCompileHandler>, public TComInterfaceBase<IUnknown>
{
public:
  TCOM_AfterCompileHandlerT() {}
  TCOM_AfterCompileHandlerT(_AfterCompileHandler *intf, bool addRef = false) : TComInterface<_AfterCompileHandler>(intf, addRef) {}
  TCOM_AfterCompileHandlerT(const TCOM_AfterCompileHandlerT& src) : TComInterface<_AfterCompileHandler>(src) {}
  TCOM_AfterCompileHandlerT& operator=(const TCOM_AfterCompileHandlerT& src) { Bind(src, true); return *this;}


};
typedef TCOM_AfterCompileHandlerT<_AfterCompileHandler> TCOM_AfterCompileHandler;

// *********************************************************************//
// DispIntf:  _AfterCompileHandler
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {8100CA55-F867-37DC-B256-FADD8C308F5D}
// *********************************************************************//
template<class T>
class _AfterCompileHandlerDispT : public TAutoDriver<_AfterCompileHandler>
{
public:
  _AfterCompileHandlerDispT(){}

  _AfterCompileHandlerDispT(_AfterCompileHandler *pintf)
  {
    TAutoDriver<_AfterCompileHandler>::Bind(pintf, false);
  }

  _AfterCompileHandlerDispT(_AfterCompileHandlerPtr pintf)
  {
    TAutoDriver<_AfterCompileHandler>::Bind(pintf, true);
  }

  _AfterCompileHandlerDispT& operator=(_AfterCompileHandler *pintf)
  {
    TAutoDriver<_AfterCompileHandler>::Bind(pintf, false);
    return *this;
  }

  _AfterCompileHandlerDispT& operator=(_AfterCompileHandlerPtr pintf)
  {
    TAutoDriver<_AfterCompileHandler>::Bind(pintf, true);
    return *this;
  }

  HRESULT BindDefault()
  {
    return OLECHECK(Bind(CLSID_AfterCompileHandler));
  }

  HRESULT BindRunning()
  {
    return BindToActive(CLSID_AfterCompileHandler);
  }


};
typedef _AfterCompileHandlerDispT<_AfterCompileHandler> _AfterCompileHandlerDisp;

typedef TComInterface<IOTAService>  TCOMIOTAService;

// *********************************************************************//
// DispIntf:  IOTAService
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {724986CC-FE2A-4691-9495-A1C20328A5BE}
// *********************************************************************//
template<class T>
class IOTAServiceDispT : public TAutoDriver<IOTAService>
{
public:
  IOTAServiceDispT(){}

  IOTAServiceDispT(IOTAService *pintf)
  {
    TAutoDriver<IOTAService>::Bind(pintf, false);
  }

  IOTAServiceDispT(IOTAServicePtr pintf)
  {
    TAutoDriver<IOTAService>::Bind(pintf, true);
  }

  IOTAServiceDispT& operator=(IOTAService *pintf)
  {
    TAutoDriver<IOTAService>::Bind(pintf, false);
    return *this;
  }

  IOTAServiceDispT& operator=(IOTAServicePtr pintf)
  {
    TAutoDriver<IOTAService>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall add_BeforeCompile(Borland_studio_toolsapi_tlb::_BeforeCompileHandler* value/*[in]*/);
  HRESULT         __fastcall remove_BeforeCompile(Borland_studio_toolsapi_tlb::_BeforeCompileHandler* value/*[in]*/);
  HRESULT         __fastcall add_AfterCompile(Borland_studio_toolsapi_tlb::_AfterCompileHandler* value/*[in]*/);
  HRESULT         __fastcall remove_AfterCompile(Borland_studio_toolsapi_tlb::_AfterCompileHandler* value/*[in]*/);
  HRESULT         __fastcall add_FileNotification(Borland_studio_toolsapi_tlb::_FileNotificationHandler* value/*[in]*/);
  HRESULT         __fastcall remove_FileNotification(Borland_studio_toolsapi_tlb::_FileNotificationHandler* value/*[in]*/);
  HRESULT         __fastcall get_BaseRegistryKey(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_BaseRegistryKey(void);
  HRESULT         __fastcall get_ProductIdentifier(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_ProductIdentifier(void);
  HRESULT         __fastcall get_ActiveDesignerType(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_ActiveDesignerType(void);
  HRESULT         __fastcall get_RootDirectory(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_RootDirectory(void);
  HRESULT         __fastcall get_BinDirectory(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_BinDirectory(void);
  HRESULT         __fastcall get_TemplateDirectory(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_TemplateDirectory(void);
  HRESULT         __fastcall get_ApplicationDataDirectory(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_ApplicationDataDirectory(void);
  HRESULT         __fastcall get_LocalApplicationDataDirectory(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_LocalApplicationDataDirectory(void);
  HRESULT         __fastcall get_ParentHandle(long* pRetVal/*[out,retval]*/);
  long            __fastcall get_ParentHandle(void);
  HRESULT         __fastcall get_EnvironmentOptions(Borland_studio_toolsapi_tlb::IOTAEnvironmentOptions** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAEnvironmentOptionsPtr __fastcall get_EnvironmentOptions(void);
  HRESULT         __fastcall get_IDEPreferredUILanguages(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_IDEPreferredUILanguages(void);
  HRESULT         __fastcall add_CacheCleared(Mscorlib_tlb::_EventHandler* value/*[in]*/);
  HRESULT         __fastcall remove_CacheCleared(Mscorlib_tlb::_EventHandler* value/*[in]*/);

  __property   BSTR            BaseRegistryKey = {read = get_BaseRegistryKey};
  __property   BSTR            ProductIdentifier = {read = get_ProductIdentifier};
  __property   BSTR            ActiveDesignerType = {read = get_ActiveDesignerType};
  __property   BSTR            RootDirectory = {read = get_RootDirectory};
  __property   BSTR            BinDirectory = {read = get_BinDirectory};
  __property   BSTR            TemplateDirectory = {read = get_TemplateDirectory};
  __property   BSTR            ApplicationDataDirectory = {read = get_ApplicationDataDirectory};
  __property   BSTR            LocalApplicationDataDirectory = {read = get_LocalApplicationDataDirectory};
  __property   long            ParentHandle = {read = get_ParentHandle};
  __property   Borland_studio_toolsapi_tlb::IOTAEnvironmentOptionsPtr EnvironmentOptions = {read = get_EnvironmentOptions};
  __property   BSTR            IDEPreferredUILanguages = {read = get_IDEPreferredUILanguages};
};
typedef IOTAServiceDispT<IOTAService> IOTAServiceDisp;

typedef TComInterface<IOTADotNetObjectInspectorService>  TCOMIOTADotNetObjectInspectorService;

// *********************************************************************//
// DispIntf:  IOTADotNetObjectInspectorService
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5EB65058-01B0-46E2-858F-065C5C5F4A29}
// *********************************************************************//
template<class T>
class IOTADotNetObjectInspectorServiceDispT : public TAutoDriver<IOTADotNetObjectInspectorService>
{
public:
  IOTADotNetObjectInspectorServiceDispT(){}

  IOTADotNetObjectInspectorServiceDispT(IOTADotNetObjectInspectorService *pintf)
  {
    TAutoDriver<IOTADotNetObjectInspectorService>::Bind(pintf, false);
  }

  IOTADotNetObjectInspectorServiceDispT(IOTADotNetObjectInspectorServicePtr pintf)
  {
    TAutoDriver<IOTADotNetObjectInspectorService>::Bind(pintf, true);
  }

  IOTADotNetObjectInspectorServiceDispT& operator=(IOTADotNetObjectInspectorService *pintf)
  {
    TAutoDriver<IOTADotNetObjectInspectorService>::Bind(pintf, false);
    return *this;
  }

  IOTADotNetObjectInspectorServiceDispT& operator=(IOTADotNetObjectInspectorServicePtr pintf)
  {
    TAutoDriver<IOTADotNetObjectInspectorService>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall SelectObjects(LPSAFEARRAY objects/*[in]*/);
  HRESULT         __fastcall get_SelectedObjects(LPSAFEARRAY* pRetVal/*[out,retval]*/);
  LPSAFEARRAY     __fastcall get_SelectedObjects(void);

};
typedef IOTADotNetObjectInspectorServiceDispT<IOTADotNetObjectInspectorService> IOTADotNetObjectInspectorServiceDisp;

typedef TComInterface<IOTACultureInfo>  TCOMIOTACultureInfo;

// *********************************************************************//
// DispIntf:  IOTACultureInfo
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1DA51503-24DB-4DB5-A151-B57E2569D8AA}
// *********************************************************************//
template<class T>
class IOTACultureInfoDispT : public TAutoDriver<IOTACultureInfo>
{
public:
  IOTACultureInfoDispT(){}

  IOTACultureInfoDispT(IOTACultureInfo *pintf)
  {
    TAutoDriver<IOTACultureInfo>::Bind(pintf, false);
  }

  IOTACultureInfoDispT(IOTACultureInfoPtr pintf)
  {
    TAutoDriver<IOTACultureInfo>::Bind(pintf, true);
  }

  IOTACultureInfoDispT& operator=(IOTACultureInfo *pintf)
  {
    TAutoDriver<IOTACultureInfo>::Bind(pintf, false);
    return *this;
  }

  IOTACultureInfoDispT& operator=(IOTACultureInfoPtr pintf)
  {
    TAutoDriver<IOTACultureInfo>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall GetCultureCodes(LPSAFEARRAY* pRetVal/*[out,retval]*/);
  LPSAFEARRAY     __fastcall GetCultureCodes(void);

};
typedef IOTACultureInfoDispT<IOTACultureInfo> IOTACultureInfoDisp;

typedef TComInterface<IOTAMenuItem>  TCOMIOTAMenuItem;

// *********************************************************************//
// DispIntf:  IOTAMenuItem
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7A123EBF-A0C5-45B8-BDF7-CFBA02528867}
// *********************************************************************//
template<class T>
class IOTAMenuItemDispT : public TAutoDriver<IOTAMenuItem>
{
public:
  IOTAMenuItemDispT(){}

  IOTAMenuItemDispT(IOTAMenuItem *pintf)
  {
    TAutoDriver<IOTAMenuItem>::Bind(pintf, false);
  }

  IOTAMenuItemDispT(IOTAMenuItemPtr pintf)
  {
    TAutoDriver<IOTAMenuItem>::Bind(pintf, true);
  }

  IOTAMenuItemDispT& operator=(IOTAMenuItem *pintf)
  {
    TAutoDriver<IOTAMenuItem>::Bind(pintf, false);
    return *this;
  }

  IOTAMenuItemDispT& operator=(IOTAMenuItemPtr pintf)
  {
    TAutoDriver<IOTAMenuItem>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall get_Name(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_Name(void);
  HRESULT         __fastcall set_Name(BSTR pRetVal/*[in]*/);
  HRESULT         __fastcall get_Text(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_Text(void);
  HRESULT         __fastcall set_Text(BSTR pRetVal/*[in]*/);
  HRESULT         __fastcall get_Enabled(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_Enabled(void);
  HRESULT         __fastcall set_Enabled(VARIANT_BOOL pRetVal/*[in]*/);
  HRESULT         __fastcall get_Checked(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_Checked(void);
  HRESULT         __fastcall set_Checked(VARIANT_BOOL pRetVal/*[in]*/);
  HRESULT         __fastcall get_Visible(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_Visible(void);
  HRESULT         __fastcall set_Visible(VARIANT_BOOL pRetVal/*[in]*/);
  HRESULT         __fastcall get_Shortcut(long* pRetVal/*[out,retval]*/);
  long            __fastcall get_Shortcut(void);
  HRESULT         __fastcall set_Shortcut(long pRetVal/*[in]*/);
  HRESULT         __fastcall get_category(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_category(void);
  HRESULT         __fastcall set_category(BSTR pRetVal/*[in]*/);
  HRESULT         __fastcall get_helpContext(long* pRetVal/*[out,retval]*/);
  long            __fastcall get_helpContext(void);
  HRESULT         __fastcall set_helpContext(long pRetVal/*[in]*/);
  HRESULT         __fastcall get_PreviousMenuItem(Borland_studio_toolsapi_tlb::IOTAMenuItem** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAMenuItemPtr __fastcall get_PreviousMenuItem(void);
  HRESULT         __fastcall get_NextMenuItem(Borland_studio_toolsapi_tlb::IOTAMenuItem** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAMenuItemPtr __fastcall get_NextMenuItem(void);
  HRESULT         __fastcall get_ParentMenuItem(Borland_studio_toolsapi_tlb::IOTAMenuItem** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAMenuItemPtr __fastcall get_ParentMenuItem(void);
  HRESULT         __fastcall get_ChildCount(long* pRetVal/*[out,retval]*/);
  long            __fastcall get_ChildCount(void);
  HRESULT         __fastcall ChildMenuItem(long index/*[in]*/, 
                                           Borland_studio_toolsapi_tlb::IOTAMenuItem** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAMenuItem* __fastcall ChildMenuItem(long index/*[in]*/);
  HRESULT         __fastcall Execute();
  HRESULT         __fastcall add_Executed(Mscorlib_tlb::_EventHandler* value/*[in]*/);
  HRESULT         __fastcall remove_Executed(Mscorlib_tlb::_EventHandler* value/*[in]*/);
  HRESULT         __fastcall add_Updated(Mscorlib_tlb::_EventHandler* value/*[in]*/);
  HRESULT         __fastcall remove_Updated(Mscorlib_tlb::_EventHandler* value/*[in]*/);

  __property   BSTR            Name = {read = get_Name, write = set_Name};
  __property   BSTR            Text = {read = get_Text, write = set_Text};
  __property   VARIANT_BOOL    Enabled = {read = get_Enabled, write = set_Enabled};
  __property   VARIANT_BOOL    Checked = {read = get_Checked, write = set_Checked};
  __property   VARIANT_BOOL    Visible = {read = get_Visible, write = set_Visible};
  __property   long            Shortcut = {read = get_Shortcut, write = set_Shortcut};
  __property   BSTR            category = {read = get_category, write = set_category};
  __property   long            helpContext = {read = get_helpContext, write = set_helpContext};
  __property   Borland_studio_toolsapi_tlb::IOTAMenuItemPtr PreviousMenuItem = {read = get_PreviousMenuItem};
  __property   Borland_studio_toolsapi_tlb::IOTAMenuItemPtr NextMenuItem = {read = get_NextMenuItem};
  __property   Borland_studio_toolsapi_tlb::IOTAMenuItemPtr ParentMenuItem = {read = get_ParentMenuItem};
  __property   long            ChildCount = {read = get_ChildCount};
};
typedef IOTAMenuItemDispT<IOTAMenuItem> IOTAMenuItemDisp;

// *********************************************************************//
// SmartIntf: TCOM_OTAContainerTypes
// Interface: _OTAContainerTypes
// *********************************************************************//
template <class T /* _OTAContainerTypes */ >
class TCOM_OTAContainerTypesT : public TComInterface<_OTAContainerTypes>, public TComInterfaceBase<IUnknown>
{
public:
  TCOM_OTAContainerTypesT() {}
  TCOM_OTAContainerTypesT(_OTAContainerTypes *intf, bool addRef = false) : TComInterface<_OTAContainerTypes>(intf, addRef) {}
  TCOM_OTAContainerTypesT(const TCOM_OTAContainerTypesT& src) : TComInterface<_OTAContainerTypes>(src) {}
  TCOM_OTAContainerTypesT& operator=(const TCOM_OTAContainerTypesT& src) { Bind(src, true); return *this;}


};
typedef TCOM_OTAContainerTypesT<_OTAContainerTypes> TCOM_OTAContainerTypes;

// *********************************************************************//
// DispIntf:  _OTAContainerTypes
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {5AC81224-7DD8-3F4B-9ABB-7C74FA81FDC3}
// *********************************************************************//
template<class T>
class _OTAContainerTypesDispT : public TAutoDriver<_OTAContainerTypes>
{
public:
  _OTAContainerTypesDispT(){}

  _OTAContainerTypesDispT(_OTAContainerTypes *pintf)
  {
    TAutoDriver<_OTAContainerTypes>::Bind(pintf, false);
  }

  _OTAContainerTypesDispT(_OTAContainerTypesPtr pintf)
  {
    TAutoDriver<_OTAContainerTypes>::Bind(pintf, true);
  }

  _OTAContainerTypesDispT& operator=(_OTAContainerTypes *pintf)
  {
    TAutoDriver<_OTAContainerTypes>::Bind(pintf, false);
    return *this;
  }

  _OTAContainerTypesDispT& operator=(_OTAContainerTypesPtr pintf)
  {
    TAutoDriver<_OTAContainerTypes>::Bind(pintf, true);
    return *this;
  }

  HRESULT BindDefault()
  {
    return OLECHECK(Bind(CLSID_OTAContainerTypes));
  }

  HRESULT BindRunning()
  {
    return BindToActive(CLSID_OTAContainerTypes);
  }


};
typedef _OTAContainerTypesDispT<_OTAContainerTypes> _OTAContainerTypesDisp;

typedef TComInterface<IOTAProjectMenuCreatorNotifier>  TCOMIOTAProjectMenuCreatorNotifier;

// *********************************************************************//
// DispIntf:  IOTAProjectMenuCreatorNotifier
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9A2035D3-B602-4763-9832-7881CDD2E47F}
// *********************************************************************//
template<class T>
class IOTAProjectMenuCreatorNotifierDispT : public TAutoDriver<IOTAProjectMenuCreatorNotifier>
{
public:
  IOTAProjectMenuCreatorNotifierDispT(){}

  IOTAProjectMenuCreatorNotifierDispT(IOTAProjectMenuCreatorNotifier *pintf)
  {
    TAutoDriver<IOTAProjectMenuCreatorNotifier>::Bind(pintf, false);
  }

  IOTAProjectMenuCreatorNotifierDispT(IOTAProjectMenuCreatorNotifierPtr pintf)
  {
    TAutoDriver<IOTAProjectMenuCreatorNotifier>::Bind(pintf, true);
  }

  IOTAProjectMenuCreatorNotifierDispT& operator=(IOTAProjectMenuCreatorNotifier *pintf)
  {
    TAutoDriver<IOTAProjectMenuCreatorNotifier>::Bind(pintf, false);
    return *this;
  }

  IOTAProjectMenuCreatorNotifierDispT& operator=(IOTAProjectMenuCreatorNotifierPtr pintf)
  {
    TAutoDriver<IOTAProjectMenuCreatorNotifier>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall AddMenu(BSTR Ident/*[in]*/, 
                                     Borland_studio_toolsapi_tlb::IOTAMenuItem** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAMenuItem* __fastcall AddMenu(BSTR Ident/*[in]*/);
  HRESULT         __fastcall CanHandle(BSTR Ident/*[in]*/, VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall CanHandle(BSTR Ident/*[in]*/);
  HRESULT         __fastcall Destroyed();

};
typedef IOTAProjectMenuCreatorNotifierDispT<IOTAProjectMenuCreatorNotifier> IOTAProjectMenuCreatorNotifierDisp;

typedef TComInterface<IOTAProjectManagerMenuServices>  TCOMIOTAProjectManagerMenuServices;

// *********************************************************************//
// DispIntf:  IOTAProjectManagerMenuServices
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {158FFEA2-79EB-4000-AAE7-EBD67D9AF4C3}
// *********************************************************************//
template<class T>
class IOTAProjectManagerMenuServicesDispT : public TAutoDriver<IOTAProjectManagerMenuServices>
{
public:
  IOTAProjectManagerMenuServicesDispT(){}

  IOTAProjectManagerMenuServicesDispT(IOTAProjectManagerMenuServices *pintf)
  {
    TAutoDriver<IOTAProjectManagerMenuServices>::Bind(pintf, false);
  }

  IOTAProjectManagerMenuServicesDispT(IOTAProjectManagerMenuServicesPtr pintf)
  {
    TAutoDriver<IOTAProjectManagerMenuServices>::Bind(pintf, true);
  }

  IOTAProjectManagerMenuServicesDispT& operator=(IOTAProjectManagerMenuServices *pintf)
  {
    TAutoDriver<IOTAProjectManagerMenuServices>::Bind(pintf, false);
    return *this;
  }

  IOTAProjectManagerMenuServicesDispT& operator=(IOTAProjectManagerMenuServicesPtr pintf)
  {
    TAutoDriver<IOTAProjectManagerMenuServices>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall CreateMenuItem(BSTR Name/*[in]*/, BSTR Text/*[in]*/, 
                                            Borland_studio_toolsapi_tlb::IOTAMenuItem** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAMenuItem* __fastcall CreateMenuItem(BSTR Name/*[in]*/, 
                                                                       BSTR Text/*[in]*/);
  HRESULT         __fastcall AddMenuItem(Borland_studio_toolsapi_tlb::IOTAMenuItem* ParentMenu/*[in]*/
                                         , BSTR Name/*[in]*/, BSTR Text/*[in]*/, 
                                         Borland_studio_toolsapi_tlb::IOTAMenuItem** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAMenuItem* __fastcall AddMenuItem(Borland_studio_toolsapi_tlb::IOTAMenuItem* ParentMenu/*[in]*/, 
                                                                    BSTR Name/*[in]*/, 
                                                                    BSTR Text/*[in]*/);
  HRESULT         __fastcall AddMenuCreatorNotifier(Borland_studio_toolsapi_tlb::IOTAProjectMenuCreatorNotifier* Notifier/*[in]*/
                                                    , long* pRetVal/*[out,retval]*/);
  long            __fastcall AddMenuCreatorNotifier(Borland_studio_toolsapi_tlb::IOTAProjectMenuCreatorNotifier* Notifier/*[in]*/);
  HRESULT         __fastcall RemoveMenuCreatorNotifier(long index/*[in]*/);

};
typedef IOTAProjectManagerMenuServicesDispT<IOTAProjectManagerMenuServices> IOTAProjectManagerMenuServicesDisp;

typedef TComInterface<IOTAProjectManager>  TCOMIOTAProjectManager;

// *********************************************************************//
// DispIntf:  IOTAProjectManager
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D53EC96F-F329-43C2-B9A2-E30A1607A87B}
// *********************************************************************//
template<class T>
class IOTAProjectManagerDispT : public TAutoDriver<IOTAProjectManager>
{
public:
  IOTAProjectManagerDispT(){}

  IOTAProjectManagerDispT(IOTAProjectManager *pintf)
  {
    TAutoDriver<IOTAProjectManager>::Bind(pintf, false);
  }

  IOTAProjectManagerDispT(IOTAProjectManagerPtr pintf)
  {
    TAutoDriver<IOTAProjectManager>::Bind(pintf, true);
  }

  IOTAProjectManagerDispT& operator=(IOTAProjectManager *pintf)
  {
    TAutoDriver<IOTAProjectManager>::Bind(pintf, false);
    return *this;
  }

  IOTAProjectManagerDispT& operator=(IOTAProjectManagerPtr pintf)
  {
    TAutoDriver<IOTAProjectManager>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall get_CurrentSelectionIdent(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_CurrentSelectionIdent(void);
  HRESULT         __fastcall get_CurrentSelectionProject(Borland_studio_toolsapi_tlb::IOTAProject** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAProjectPtr __fastcall get_CurrentSelectionProject(void);

  __property   BSTR            CurrentSelectionIdent = {read = get_CurrentSelectionIdent};
  __property   Borland_studio_toolsapi_tlb::IOTAProjectPtr CurrentSelectionProject = {read = get_CurrentSelectionProject};
};
typedef IOTAProjectManagerDispT<IOTAProjectManager> IOTAProjectManagerDisp;

typedef TComInterface<IOTAMainMenuService>  TCOMIOTAMainMenuService;

// *********************************************************************//
// DispIntf:  IOTAMainMenuService
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9CCFD283-F6F9-4E2B-A4B6-5EBE67A21313}
// *********************************************************************//
template<class T>
class IOTAMainMenuServiceDispT : public TAutoDriver<IOTAMainMenuService>
{
public:
  IOTAMainMenuServiceDispT(){}

  IOTAMainMenuServiceDispT(IOTAMainMenuService *pintf)
  {
    TAutoDriver<IOTAMainMenuService>::Bind(pintf, false);
  }

  IOTAMainMenuServiceDispT(IOTAMainMenuServicePtr pintf)
  {
    TAutoDriver<IOTAMainMenuService>::Bind(pintf, true);
  }

  IOTAMainMenuServiceDispT& operator=(IOTAMainMenuService *pintf)
  {
    TAutoDriver<IOTAMainMenuService>::Bind(pintf, false);
    return *this;
  }

  IOTAMainMenuServiceDispT& operator=(IOTAMainMenuServicePtr pintf)
  {
    TAutoDriver<IOTAMainMenuService>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall GetFirstMenuItem(Borland_studio_toolsapi_tlb::IOTAMenuItem** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAMenuItem* __fastcall GetFirstMenuItem(void);
  HRESULT         __fastcall GetMenuItem(BSTR Name/*[in]*/, 
                                         Borland_studio_toolsapi_tlb::IOTAMenuItem** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAMenuItem* __fastcall GetMenuItem(BSTR Name/*[in]*/);
  HRESULT         __fastcall RemoveMenuItem(BSTR Name/*[in]*/, VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall RemoveMenuItem(BSTR Name/*[in]*/);
  HRESULT         __fastcall AddMenuItem(BSTR referenceItemName/*[in]*/, 
                                         Borland_studio_toolsapi_tlb::OTAMenuItemLocation newLocation/*[in]*/
                                         , BSTR NewName/*[in]*/, BSTR newText/*[in]*/, 
                                         Borland_studio_toolsapi_tlb::IOTAMenuItem** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAMenuItem* __fastcall AddMenuItem(BSTR referenceItemName/*[in]*/, 
                                                                    Borland_studio_toolsapi_tlb::OTAMenuItemLocation newLocation/*[in]*/, 
                                                                    BSTR NewName/*[in]*/, 
                                                                    BSTR newText/*[in]*/);
  HRESULT         __fastcall AddMenuItem_2(BSTR referenceItemName/*[in]*/, 
                                           Borland_studio_toolsapi_tlb::OTAMenuItemLocation newLocation/*[in]*/
                                           , BSTR NewName/*[in]*/, BSTR newText/*[in]*/, 
                                           long bitmapHandle/*[in]*/, 
                                           Borland_studio_toolsapi_tlb::IOTAMenuItem** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAMenuItem* __fastcall AddMenuItem_2(BSTR referenceItemName/*[in]*/, 
                                                                      Borland_studio_toolsapi_tlb::OTAMenuItemLocation newLocation/*[in]*/, 
                                                                      BSTR NewName/*[in]*/, 
                                                                      BSTR newText/*[in]*/, 
                                                                      long bitmapHandle/*[in]*/);
  HRESULT         __fastcall AddMenuItem_3(BSTR referenceItemName/*[in]*/, 
                                           Borland_studio_toolsapi_tlb::OTAMenuItemLocation newLocation/*[in]*/
                                           , BSTR NewName/*[in]*/, BSTR newText/*[in]*/, 
                                           long bitmapHandle/*[in]*/, BSTR hintText/*[in]*/, 
                                           Borland_studio_toolsapi_tlb::IOTAMenuItem** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAMenuItem* __fastcall AddMenuItem_3(BSTR referenceItemName/*[in]*/, 
                                                                      Borland_studio_toolsapi_tlb::OTAMenuItemLocation newLocation/*[in]*/, 
                                                                      BSTR NewName/*[in]*/, 
                                                                      BSTR newText/*[in]*/, 
                                                                      long bitmapHandle/*[in]*/, 
                                                                      BSTR hintText/*[in]*/);

};
typedef IOTAMainMenuServiceDispT<IOTAMainMenuService> IOTAMainMenuServiceDisp;

// *********************************************************************//
// SmartIntf: TCOM_OTADesignerTypes
// Interface: _OTADesignerTypes
// *********************************************************************//
template <class T /* _OTADesignerTypes */ >
class TCOM_OTADesignerTypesT : public TComInterface<_OTADesignerTypes>, public TComInterfaceBase<IUnknown>
{
public:
  TCOM_OTADesignerTypesT() {}
  TCOM_OTADesignerTypesT(_OTADesignerTypes *intf, bool addRef = false) : TComInterface<_OTADesignerTypes>(intf, addRef) {}
  TCOM_OTADesignerTypesT(const TCOM_OTADesignerTypesT& src) : TComInterface<_OTADesignerTypes>(src) {}
  TCOM_OTADesignerTypesT& operator=(const TCOM_OTADesignerTypesT& src) { Bind(src, true); return *this;}


};
typedef TCOM_OTADesignerTypesT<_OTADesignerTypes> TCOM_OTADesignerTypes;

// *********************************************************************//
// DispIntf:  _OTADesignerTypes
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {3A4EECF9-E15D-3719-975A-040EED1B25E2}
// *********************************************************************//
template<class T>
class _OTADesignerTypesDispT : public TAutoDriver<_OTADesignerTypes>
{
public:
  _OTADesignerTypesDispT(){}

  _OTADesignerTypesDispT(_OTADesignerTypes *pintf)
  {
    TAutoDriver<_OTADesignerTypes>::Bind(pintf, false);
  }

  _OTADesignerTypesDispT(_OTADesignerTypesPtr pintf)
  {
    TAutoDriver<_OTADesignerTypes>::Bind(pintf, true);
  }

  _OTADesignerTypesDispT& operator=(_OTADesignerTypes *pintf)
  {
    TAutoDriver<_OTADesignerTypes>::Bind(pintf, false);
    return *this;
  }

  _OTADesignerTypesDispT& operator=(_OTADesignerTypesPtr pintf)
  {
    TAutoDriver<_OTADesignerTypes>::Bind(pintf, true);
    return *this;
  }

  HRESULT BindDefault()
  {
    return OLECHECK(Bind(CLSID_OTADesignerTypes));
  }

  HRESULT BindRunning()
  {
    return BindToActive(CLSID_OTADesignerTypes);
  }


};
typedef _OTADesignerTypesDispT<_OTADesignerTypes> _OTADesignerTypesDisp;

// *********************************************************************//
// SmartIntf: TCOM_OTACreatorTypes
// Interface: _OTACreatorTypes
// *********************************************************************//
template <class T /* _OTACreatorTypes */ >
class TCOM_OTACreatorTypesT : public TComInterface<_OTACreatorTypes>, public TComInterfaceBase<IUnknown>
{
public:
  TCOM_OTACreatorTypesT() {}
  TCOM_OTACreatorTypesT(_OTACreatorTypes *intf, bool addRef = false) : TComInterface<_OTACreatorTypes>(intf, addRef) {}
  TCOM_OTACreatorTypesT(const TCOM_OTACreatorTypesT& src) : TComInterface<_OTACreatorTypes>(src) {}
  TCOM_OTACreatorTypesT& operator=(const TCOM_OTACreatorTypesT& src) { Bind(src, true); return *this;}


};
typedef TCOM_OTACreatorTypesT<_OTACreatorTypes> TCOM_OTACreatorTypes;

// *********************************************************************//
// DispIntf:  _OTACreatorTypes
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {07E7E651-01B7-36C6-BD3C-7E64B8B8FCA9}
// *********************************************************************//
template<class T>
class _OTACreatorTypesDispT : public TAutoDriver<_OTACreatorTypes>
{
public:
  _OTACreatorTypesDispT(){}

  _OTACreatorTypesDispT(_OTACreatorTypes *pintf)
  {
    TAutoDriver<_OTACreatorTypes>::Bind(pintf, false);
  }

  _OTACreatorTypesDispT(_OTACreatorTypesPtr pintf)
  {
    TAutoDriver<_OTACreatorTypes>::Bind(pintf, true);
  }

  _OTACreatorTypesDispT& operator=(_OTACreatorTypes *pintf)
  {
    TAutoDriver<_OTACreatorTypes>::Bind(pintf, false);
    return *this;
  }

  _OTACreatorTypesDispT& operator=(_OTACreatorTypesPtr pintf)
  {
    TAutoDriver<_OTACreatorTypes>::Bind(pintf, true);
    return *this;
  }

  HRESULT BindDefault()
  {
    return OLECHECK(Bind(CLSID_OTACreatorTypes));
  }

  HRESULT BindRunning()
  {
    return BindToActive(CLSID_OTACreatorTypes);
  }


};
typedef _OTACreatorTypesDispT<_OTACreatorTypes> _OTACreatorTypesDisp;

// *********************************************************************//
// SmartIntf: TCOM_OTAIDEPersonalities
// Interface: _OTAIDEPersonalities
// *********************************************************************//
template <class T /* _OTAIDEPersonalities */ >
class TCOM_OTAIDEPersonalitiesT : public TComInterface<_OTAIDEPersonalities>, public TComInterfaceBase<IUnknown>
{
public:
  TCOM_OTAIDEPersonalitiesT() {}
  TCOM_OTAIDEPersonalitiesT(_OTAIDEPersonalities *intf, bool addRef = false) : TComInterface<_OTAIDEPersonalities>(intf, addRef) {}
  TCOM_OTAIDEPersonalitiesT(const TCOM_OTAIDEPersonalitiesT& src) : TComInterface<_OTAIDEPersonalities>(src) {}
  TCOM_OTAIDEPersonalitiesT& operator=(const TCOM_OTAIDEPersonalitiesT& src) { Bind(src, true); return *this;}


};
typedef TCOM_OTAIDEPersonalitiesT<_OTAIDEPersonalities> TCOM_OTAIDEPersonalities;

// *********************************************************************//
// DispIntf:  _OTAIDEPersonalities
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {AB294892-51BD-379A-9905-C49EBEA670CA}
// *********************************************************************//
template<class T>
class _OTAIDEPersonalitiesDispT : public TAutoDriver<_OTAIDEPersonalities>
{
public:
  _OTAIDEPersonalitiesDispT(){}

  _OTAIDEPersonalitiesDispT(_OTAIDEPersonalities *pintf)
  {
    TAutoDriver<_OTAIDEPersonalities>::Bind(pintf, false);
  }

  _OTAIDEPersonalitiesDispT(_OTAIDEPersonalitiesPtr pintf)
  {
    TAutoDriver<_OTAIDEPersonalities>::Bind(pintf, true);
  }

  _OTAIDEPersonalitiesDispT& operator=(_OTAIDEPersonalities *pintf)
  {
    TAutoDriver<_OTAIDEPersonalities>::Bind(pintf, false);
    return *this;
  }

  _OTAIDEPersonalitiesDispT& operator=(_OTAIDEPersonalitiesPtr pintf)
  {
    TAutoDriver<_OTAIDEPersonalities>::Bind(pintf, true);
    return *this;
  }

  HRESULT BindDefault()
  {
    return OLECHECK(Bind(CLSID_OTAIDEPersonalities));
  }

  HRESULT BindRunning()
  {
    return BindToActive(CLSID_OTAIDEPersonalities);
  }


};
typedef _OTAIDEPersonalitiesDispT<_OTAIDEPersonalities> _OTAIDEPersonalitiesDisp;

// *********************************************************************//
// SmartIntf: TCOM_OTAGalleryCategories
// Interface: _OTAGalleryCategories
// *********************************************************************//
template <class T /* _OTAGalleryCategories */ >
class TCOM_OTAGalleryCategoriesT : public TComInterface<_OTAGalleryCategories>, public TComInterfaceBase<IUnknown>
{
public:
  TCOM_OTAGalleryCategoriesT() {}
  TCOM_OTAGalleryCategoriesT(_OTAGalleryCategories *intf, bool addRef = false) : TComInterface<_OTAGalleryCategories>(intf, addRef) {}
  TCOM_OTAGalleryCategoriesT(const TCOM_OTAGalleryCategoriesT& src) : TComInterface<_OTAGalleryCategories>(src) {}
  TCOM_OTAGalleryCategoriesT& operator=(const TCOM_OTAGalleryCategoriesT& src) { Bind(src, true); return *this;}


};
typedef TCOM_OTAGalleryCategoriesT<_OTAGalleryCategories> TCOM_OTAGalleryCategories;

// *********************************************************************//
// DispIntf:  _OTAGalleryCategories
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {6AEB0D4C-ED19-3D60-A08C-A9EAA6A9314D}
// *********************************************************************//
template<class T>
class _OTAGalleryCategoriesDispT : public TAutoDriver<_OTAGalleryCategories>
{
public:
  _OTAGalleryCategoriesDispT(){}

  _OTAGalleryCategoriesDispT(_OTAGalleryCategories *pintf)
  {
    TAutoDriver<_OTAGalleryCategories>::Bind(pintf, false);
  }

  _OTAGalleryCategoriesDispT(_OTAGalleryCategoriesPtr pintf)
  {
    TAutoDriver<_OTAGalleryCategories>::Bind(pintf, true);
  }

  _OTAGalleryCategoriesDispT& operator=(_OTAGalleryCategories *pintf)
  {
    TAutoDriver<_OTAGalleryCategories>::Bind(pintf, false);
    return *this;
  }

  _OTAGalleryCategoriesDispT& operator=(_OTAGalleryCategoriesPtr pintf)
  {
    TAutoDriver<_OTAGalleryCategories>::Bind(pintf, true);
    return *this;
  }

  HRESULT BindDefault()
  {
    return OLECHECK(Bind(CLSID_OTAGalleryCategories));
  }

  HRESULT BindRunning()
  {
    return BindToActive(CLSID_OTAGalleryCategories);
  }


};
typedef _OTAGalleryCategoriesDispT<_OTAGalleryCategories> _OTAGalleryCategoriesDisp;

typedef TComInterface<IOTAFile>  TCOMIOTAFile;

// *********************************************************************//
// DispIntf:  IOTAFile
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {83F192E7-9C6D-4FDD-96F3-694FE6C98B4D}
// *********************************************************************//
template<class T>
class IOTAFileDispT : public TAutoDriver<IOTAFile>
{
public:
  IOTAFileDispT(){}

  IOTAFileDispT(IOTAFile *pintf)
  {
    TAutoDriver<IOTAFile>::Bind(pintf, false);
  }

  IOTAFileDispT(IOTAFilePtr pintf)
  {
    TAutoDriver<IOTAFile>::Bind(pintf, true);
  }

  IOTAFileDispT& operator=(IOTAFile *pintf)
  {
    TAutoDriver<IOTAFile>::Bind(pintf, false);
    return *this;
  }

  IOTAFileDispT& operator=(IOTAFilePtr pintf)
  {
    TAutoDriver<IOTAFile>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall get_Source(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_Source(void);
  HRESULT         __fastcall get_Age(DATE* pRetVal/*[out,retval]*/);
  DATE            __fastcall get_Age(void);

  __property   BSTR            Source = {read = get_Source};
  __property   DATE            Age = {read = get_Age};
};
typedef IOTAFileDispT<IOTAFile> IOTAFileDisp;

typedef TComInterface<IOTACreator>  TCOMIOTACreator;

// *********************************************************************//
// DispIntf:  IOTACreator
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C9812ADF-42F5-434B-9999-86C366C6536E}
// *********************************************************************//
template<class T>
class IOTACreatorDispT : public TAutoDriver<IOTACreator>
{
public:
  IOTACreatorDispT(){}

  IOTACreatorDispT(IOTACreator *pintf)
  {
    TAutoDriver<IOTACreator>::Bind(pintf, false);
  }

  IOTACreatorDispT(IOTACreatorPtr pintf)
  {
    TAutoDriver<IOTACreator>::Bind(pintf, true);
  }

  IOTACreatorDispT& operator=(IOTACreator *pintf)
  {
    TAutoDriver<IOTACreator>::Bind(pintf, false);
    return *this;
  }

  IOTACreatorDispT& operator=(IOTACreatorPtr pintf)
  {
    TAutoDriver<IOTACreator>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall get_CreatorType(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_CreatorType(void);
  HRESULT         __fastcall get_Existing(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_Existing(void);
  HRESULT         __fastcall get_fileSystem(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_fileSystem(void);
  HRESULT         __fastcall get_Owner(Borland_studio_toolsapi_tlb::IOTAModule** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAModulePtr __fastcall get_Owner(void);
  HRESULT         __fastcall get_Unnamed(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_Unnamed(void);

  __property   BSTR            CreatorType = {read = get_CreatorType};
  __property   VARIANT_BOOL    Existing = {read = get_Existing};
  __property   BSTR            fileSystem = {read = get_fileSystem};
  __property   Borland_studio_toolsapi_tlb::IOTAModulePtr Owner = {read = get_Owner};
  __property   VARIANT_BOOL    Unnamed = {read = get_Unnamed};
};
typedef IOTACreatorDispT<IOTACreator> IOTACreatorDisp;

typedef TComInterface<IOTAModuleCreator>  TCOMIOTAModuleCreator;

// *********************************************************************//
// DispIntf:  IOTAModuleCreator
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6A828396-2A30-436C-9E03-2F7EF48CD4A5}
// *********************************************************************//
template<class T>
class IOTAModuleCreatorDispT : public TAutoDriver<IOTAModuleCreator>
{
public:
  IOTAModuleCreatorDispT(){}

  IOTAModuleCreatorDispT(IOTAModuleCreator *pintf)
  {
    TAutoDriver<IOTAModuleCreator>::Bind(pintf, false);
  }

  IOTAModuleCreatorDispT(IOTAModuleCreatorPtr pintf)
  {
    TAutoDriver<IOTAModuleCreator>::Bind(pintf, true);
  }

  IOTAModuleCreatorDispT& operator=(IOTAModuleCreator *pintf)
  {
    TAutoDriver<IOTAModuleCreator>::Bind(pintf, false);
    return *this;
  }

  IOTAModuleCreatorDispT& operator=(IOTAModuleCreatorPtr pintf)
  {
    TAutoDriver<IOTAModuleCreator>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall get_AncestorName(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_AncestorName(void);
  HRESULT         __fastcall get_ImplFileName(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_ImplFileName(void);
  HRESULT         __fastcall get_IntfFileName(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_IntfFileName(void);
  HRESULT         __fastcall get_FormName(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_FormName(void);
  HRESULT         __fastcall get_MainForm(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_MainForm(void);
  HRESULT         __fastcall get_ShowForm(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_ShowForm(void);
  HRESULT         __fastcall get_ShowSource(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_ShowSource(void);
  HRESULT         __fastcall NewFormFile(BSTR formIdent/*[in]*/, BSTR ancestorIdent/*[in]*/, 
                                         Borland_studio_toolsapi_tlb::IOTAFile** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAFile* __fastcall NewFormFile(BSTR formIdent/*[in]*/, 
                                                                BSTR ancestorIdent/*[in]*/);
  HRESULT         __fastcall NewImplSource(BSTR moduleIdent/*[in]*/, BSTR formIdent/*[in]*/, 
                                           BSTR ancestorIdent/*[in]*/, 
                                           Borland_studio_toolsapi_tlb::IOTAFile** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAFile* __fastcall NewImplSource(BSTR moduleIdent/*[in]*/, 
                                                                  BSTR formIdent/*[in]*/, 
                                                                  BSTR ancestorIdent/*[in]*/);
  HRESULT         __fastcall NewIntfSource(BSTR moduleIdent/*[in]*/, BSTR formIdent/*[in]*/, 
                                           BSTR ancestorIdent/*[in]*/, 
                                           Borland_studio_toolsapi_tlb::IOTAFile** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAFile* __fastcall NewIntfSource(BSTR moduleIdent/*[in]*/, 
                                                                  BSTR formIdent/*[in]*/, 
                                                                  BSTR ancestorIdent/*[in]*/);

  __property   BSTR            AncestorName = {read = get_AncestorName};
  __property   BSTR            ImplFileName = {read = get_ImplFileName};
  __property   BSTR            IntfFileName = {read = get_IntfFileName};
  __property   BSTR            FormName = {read = get_FormName};
  __property   VARIANT_BOOL    MainForm = {read = get_MainForm};
  __property   VARIANT_BOOL    ShowForm = {read = get_ShowForm};
  __property   VARIANT_BOOL    ShowSource = {read = get_ShowSource};
};
typedef IOTAModuleCreatorDispT<IOTAModuleCreator> IOTAModuleCreatorDisp;

typedef TComInterface<IOTAProjectCreator>  TCOMIOTAProjectCreator;

// *********************************************************************//
// DispIntf:  IOTAProjectCreator
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {38429A28-66D0-4940-B2FD-A297C3432B58}
// *********************************************************************//
template<class T>
class IOTAProjectCreatorDispT : public TAutoDriver<IOTAProjectCreator>
{
public:
  IOTAProjectCreatorDispT(){}

  IOTAProjectCreatorDispT(IOTAProjectCreator *pintf)
  {
    TAutoDriver<IOTAProjectCreator>::Bind(pintf, false);
  }

  IOTAProjectCreatorDispT(IOTAProjectCreatorPtr pintf)
  {
    TAutoDriver<IOTAProjectCreator>::Bind(pintf, true);
  }

  IOTAProjectCreatorDispT& operator=(IOTAProjectCreator *pintf)
  {
    TAutoDriver<IOTAProjectCreator>::Bind(pintf, false);
    return *this;
  }

  IOTAProjectCreatorDispT& operator=(IOTAProjectCreatorPtr pintf)
  {
    TAutoDriver<IOTAProjectCreator>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall get_fileName(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_fileName(void);
  HRESULT         __fastcall get_ShowSource(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_ShowSource(void);
  HRESULT         __fastcall NewProjectResource(Borland_studio_toolsapi_tlb::IOTAProject* project/*[in]*/);
  HRESULT         __fastcall NewProjectSource(BSTR projectName/*[in]*/, 
                                              Borland_studio_toolsapi_tlb::IOTAFile** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAFile* __fastcall NewProjectSource(BSTR projectName/*[in]*/);
  HRESULT         __fastcall NewDefaultProjectModule(Borland_studio_toolsapi_tlb::IOTAProject* project/*[in]*/);
  HRESULT         __fastcall get_ProjectPersonality(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_ProjectPersonality(void);

  __property   BSTR            fileName = {read = get_fileName};
  __property   VARIANT_BOOL    ShowSource = {read = get_ShowSource};
  __property   BSTR            ProjectPersonality = {read = get_ProjectPersonality};
};
typedef IOTAProjectCreatorDispT<IOTAProjectCreator> IOTAProjectCreatorDisp;

typedef TComInterface<IOTAProjectGroupCreator>  TCOMIOTAProjectGroupCreator;

// *********************************************************************//
// DispIntf:  IOTAProjectGroupCreator
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E69578C5-1C1B-43C5-914C-9AAA7F953EDC}
// *********************************************************************//
template<class T>
class IOTAProjectGroupCreatorDispT : public TAutoDriver<IOTAProjectGroupCreator>
{
public:
  IOTAProjectGroupCreatorDispT(){}

  IOTAProjectGroupCreatorDispT(IOTAProjectGroupCreator *pintf)
  {
    TAutoDriver<IOTAProjectGroupCreator>::Bind(pintf, false);
  }

  IOTAProjectGroupCreatorDispT(IOTAProjectGroupCreatorPtr pintf)
  {
    TAutoDriver<IOTAProjectGroupCreator>::Bind(pintf, true);
  }

  IOTAProjectGroupCreatorDispT& operator=(IOTAProjectGroupCreator *pintf)
  {
    TAutoDriver<IOTAProjectGroupCreator>::Bind(pintf, false);
    return *this;
  }

  IOTAProjectGroupCreatorDispT& operator=(IOTAProjectGroupCreatorPtr pintf)
  {
    TAutoDriver<IOTAProjectGroupCreator>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall get_fileName(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_fileName(void);
  HRESULT         __fastcall get_ShowSource(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_ShowSource(void);

  __property   BSTR            fileName = {read = get_fileName};
  __property   VARIANT_BOOL    ShowSource = {read = get_ShowSource};
};
typedef IOTAProjectGroupCreatorDispT<IOTAProjectGroupCreator> IOTAProjectGroupCreatorDisp;

typedef TComInterface<IOTAActionService>  TCOMIOTAActionService;

// *********************************************************************//
// DispIntf:  IOTAActionService
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {97ECFDFB-0435-43D2-8270-A48D3C09290E}
// *********************************************************************//
template<class T>
class IOTAActionServiceDispT : public TAutoDriver<IOTAActionService>
{
public:
  IOTAActionServiceDispT(){}

  IOTAActionServiceDispT(IOTAActionService *pintf)
  {
    TAutoDriver<IOTAActionService>::Bind(pintf, false);
  }

  IOTAActionServiceDispT(IOTAActionServicePtr pintf)
  {
    TAutoDriver<IOTAActionService>::Bind(pintf, true);
  }

  IOTAActionServiceDispT& operator=(IOTAActionService *pintf)
  {
    TAutoDriver<IOTAActionService>::Bind(pintf, false);
    return *this;
  }

  IOTAActionServiceDispT& operator=(IOTAActionServicePtr pintf)
  {
    TAutoDriver<IOTAActionService>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall CloseFile(BSTR fileName/*[in]*/, VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall CloseFile(BSTR fileName/*[in]*/);
  HRESULT         __fastcall OpenFile(BSTR fileName/*[in]*/, VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall OpenFile(BSTR fileName/*[in]*/);
  HRESULT         __fastcall OpenProject(BSTR projName/*[in]*/, VARIANT_BOOL newProjGroup/*[in]*/, 
                                         VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall OpenProject(BSTR projName/*[in]*/, VARIANT_BOOL newProjGroup/*[in]*/);
  HRESULT         __fastcall ReloadFile(BSTR fileName/*[in]*/, VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall ReloadFile(BSTR fileName/*[in]*/);
  HRESULT         __fastcall SaveFile(BSTR fileName/*[in]*/, VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall SaveFile(BSTR fileName/*[in]*/);

};
typedef IOTAActionServiceDispT<IOTAActionService> IOTAActionServiceDisp;

typedef TComInterface<IOTAEditActions>  TCOMIOTAEditActions;

// *********************************************************************//
// DispIntf:  IOTAEditActions
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {27484E12-3BEB-4690-8258-E90EA1DC7436}
// *********************************************************************//
template<class T>
class IOTAEditActionsDispT : public TAutoDriver<IOTAEditActions>
{
public:
  IOTAEditActionsDispT(){}

  IOTAEditActionsDispT(IOTAEditActions *pintf)
  {
    TAutoDriver<IOTAEditActions>::Bind(pintf, false);
  }

  IOTAEditActionsDispT(IOTAEditActionsPtr pintf)
  {
    TAutoDriver<IOTAEditActions>::Bind(pintf, true);
  }

  IOTAEditActionsDispT& operator=(IOTAEditActions *pintf)
  {
    TAutoDriver<IOTAEditActions>::Bind(pintf, false);
    return *this;
  }

  IOTAEditActionsDispT& operator=(IOTAEditActionsPtr pintf)
  {
    TAutoDriver<IOTAEditActions>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall AddWatch();
  HRESULT         __fastcall AddWatchAtCursor();
  HRESULT         __fastcall BrowseSymbolAtCursor();
  HRESULT         __fastcall ClassComplete();
  HRESULT         __fastcall ClassNavigate(unsigned_char reserved/*[in]*/);
  HRESULT         __fastcall ClosePage();
  HRESULT         __fastcall CodeTemplate();
  HRESULT         __fastcall CodeCompletion(Borland_studio_toolsapi_tlb::OTACodeCompleteStyle Style/*[in]*/);
  HRESULT         __fastcall EvaluateModify();
  HRESULT         __fastcall helpKeyword();
  HRESULT         __fastcall IncrementalSearch();
  HRESULT         __fastcall InsertCompilerOptions();
  HRESULT         __fastcall InsertNewGUID();
  HRESULT         __fastcall InspectAtCursor();
  HRESULT         __fastcall CompileProject();
  HRESULT         __fastcall NextError();
  HRESULT         __fastcall NextPage();
  HRESULT         __fastcall OpenFile();
  HRESULT         __fastcall OpenFileAtCursor();
  HRESULT         __fastcall PriorError();
  HRESULT         __fastcall PriorPage();
  HRESULT         __fastcall ProgramReset();
  HRESULT         __fastcall RunProgram();
  HRESULT         __fastcall RunToCursor();
  HRESULT         __fastcall SaveAll();
  HRESULT         __fastcall Save();
  HRESULT         __fastcall SaveAs();
  HRESULT         __fastcall StepOver();
  HRESULT         __fastcall SwapSourceFormView();
  HRESULT         __fastcall SwapCPPHeader();
  HRESULT         __fastcall ToggleFormUnit();
  HRESULT         __fastcall TraceInto();
  HRESULT         __fastcall TraceToSource();
  HRESULT         __fastcall ViewExplorer();
  HRESULT         __fastcall ViewForms();
  HRESULT         __fastcall ViewObjectInspector();
  HRESULT         __fastcall ViewUnits();
  HRESULT         __fastcall WindowList();
  HRESULT         __fastcall ZoomWindow();
  HRESULT         __fastcall NextBufferView();
  HRESULT         __fastcall PreviousBufferView();

};
typedef IOTAEditActionsDispT<IOTAEditActions> IOTAEditActionsDisp;

typedef TComInterface<IOTAWizard>  TCOMIOTAWizard;

// *********************************************************************//
// DispIntf:  IOTAWizard
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {70E01074-3BD8-45AF-818C-9CB4CAD319CA}
// *********************************************************************//
template<class T>
class IOTAWizardDispT : public TAutoDriver<IOTAWizard>
{
public:
  IOTAWizardDispT(){}

  IOTAWizardDispT(IOTAWizard *pintf)
  {
    TAutoDriver<IOTAWizard>::Bind(pintf, false);
  }

  IOTAWizardDispT(IOTAWizardPtr pintf)
  {
    TAutoDriver<IOTAWizard>::Bind(pintf, true);
  }

  IOTAWizardDispT& operator=(IOTAWizard *pintf)
  {
    TAutoDriver<IOTAWizard>::Bind(pintf, false);
    return *this;
  }

  IOTAWizardDispT& operator=(IOTAWizardPtr pintf)
  {
    TAutoDriver<IOTAWizard>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall get_IDString(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_IDString(void);
  HRESULT         __fastcall get_Name(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_Name(void);
  HRESULT         __fastcall Execute();
  HRESULT         __fastcall Destroyed();

  __property   BSTR            IDString = {read = get_IDString};
  __property   BSTR            Name = {read = get_Name};
};
typedef IOTAWizardDispT<IOTAWizard> IOTAWizardDisp;

typedef TComInterface<IOTARepositoryWizard>  TCOMIOTARepositoryWizard;

// *********************************************************************//
// DispIntf:  IOTARepositoryWizard
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {884D3988-3B45-43EA-A819-25FE09D00E19}
// *********************************************************************//
template<class T>
class IOTARepositoryWizardDispT : public TAutoDriver<IOTARepositoryWizard>
{
public:
  IOTARepositoryWizardDispT(){}

  IOTARepositoryWizardDispT(IOTARepositoryWizard *pintf)
  {
    TAutoDriver<IOTARepositoryWizard>::Bind(pintf, false);
  }

  IOTARepositoryWizardDispT(IOTARepositoryWizardPtr pintf)
  {
    TAutoDriver<IOTARepositoryWizard>::Bind(pintf, true);
  }

  IOTARepositoryWizardDispT& operator=(IOTARepositoryWizard *pintf)
  {
    TAutoDriver<IOTARepositoryWizard>::Bind(pintf, false);
    return *this;
  }

  IOTARepositoryWizardDispT& operator=(IOTARepositoryWizardPtr pintf)
  {
    TAutoDriver<IOTARepositoryWizard>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall get_Author(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_Author(void);
  HRESULT         __fastcall get_Comment(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_Comment(void);
  HRESULT         __fastcall get_Glyph(long* pRetVal/*[out,retval]*/);
  long            __fastcall get_Glyph(void);
  HRESULT         __fastcall get_Designer(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_Designer(void);
  HRESULT         __fastcall get_GalleryCategory(Borland_studio_toolsapi_tlb::IOTAGalleryCategory** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAGalleryCategoryPtr __fastcall get_GalleryCategory(void);
  HRESULT         __fastcall get_personality(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_personality(void);

  __property   BSTR            Author = {read = get_Author};
  __property   BSTR            Comment = {read = get_Comment};
  __property   long            Glyph = {read = get_Glyph};
  __property   BSTR            Designer = {read = get_Designer};
  __property   Borland_studio_toolsapi_tlb::IOTAGalleryCategoryPtr GalleryCategory = {read = get_GalleryCategory};
  __property   BSTR            personality = {read = get_personality};
};
typedef IOTARepositoryWizardDispT<IOTARepositoryWizard> IOTARepositoryWizardDisp;

typedef TComInterface<IOTAGalleryCategory>  TCOMIOTAGalleryCategory;

// *********************************************************************//
// DispIntf:  IOTAGalleryCategory
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E89472D1-C318-41BE-9146-AF57EC667DB8}
// *********************************************************************//
template<class T>
class IOTAGalleryCategoryDispT : public TAutoDriver<IOTAGalleryCategory>
{
public:
  IOTAGalleryCategoryDispT(){}

  IOTAGalleryCategoryDispT(IOTAGalleryCategory *pintf)
  {
    TAutoDriver<IOTAGalleryCategory>::Bind(pintf, false);
  }

  IOTAGalleryCategoryDispT(IOTAGalleryCategoryPtr pintf)
  {
    TAutoDriver<IOTAGalleryCategory>::Bind(pintf, true);
  }

  IOTAGalleryCategoryDispT& operator=(IOTAGalleryCategory *pintf)
  {
    TAutoDriver<IOTAGalleryCategory>::Bind(pintf, false);
    return *this;
  }

  IOTAGalleryCategoryDispT& operator=(IOTAGalleryCategoryPtr pintf)
  {
    TAutoDriver<IOTAGalleryCategory>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall get_DisplayName(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_DisplayName(void);
  HRESULT         __fastcall get_IDString(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_IDString(void);
  HRESULT         __fastcall get_parent(Borland_studio_toolsapi_tlb::IOTAGalleryCategory** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAGalleryCategoryPtr __fastcall get_parent(void);

  __property   BSTR            DisplayName = {read = get_DisplayName};
  __property   BSTR            IDString = {read = get_IDString};
  __property   Borland_studio_toolsapi_tlb::IOTAGalleryCategoryPtr parent = {read = get_parent};
};
typedef IOTAGalleryCategoryDispT<IOTAGalleryCategory> IOTAGalleryCategoryDisp;

typedef TComInterface<IOTAGalleryCategoryManager>  TCOMIOTAGalleryCategoryManager;

// *********************************************************************//
// DispIntf:  IOTAGalleryCategoryManager
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EF79C413-F1DF-4EED-9A0D-2F1CA265EE25}
// *********************************************************************//
template<class T>
class IOTAGalleryCategoryManagerDispT : public TAutoDriver<IOTAGalleryCategoryManager>
{
public:
  IOTAGalleryCategoryManagerDispT(){}

  IOTAGalleryCategoryManagerDispT(IOTAGalleryCategoryManager *pintf)
  {
    TAutoDriver<IOTAGalleryCategoryManager>::Bind(pintf, false);
  }

  IOTAGalleryCategoryManagerDispT(IOTAGalleryCategoryManagerPtr pintf)
  {
    TAutoDriver<IOTAGalleryCategoryManager>::Bind(pintf, true);
  }

  IOTAGalleryCategoryManagerDispT& operator=(IOTAGalleryCategoryManager *pintf)
  {
    TAutoDriver<IOTAGalleryCategoryManager>::Bind(pintf, false);
    return *this;
  }

  IOTAGalleryCategoryManagerDispT& operator=(IOTAGalleryCategoryManagerPtr pintf)
  {
    TAutoDriver<IOTAGalleryCategoryManager>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall FindCategory(BSTR IDString/*[in]*/, 
                                          Borland_studio_toolsapi_tlb::IOTAGalleryCategory** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAGalleryCategory* __fastcall FindCategory(BSTR IDString/*[in]*/);
  HRESULT         __fastcall AddCategory(BSTR IDString/*[in]*/, BSTR DisplayName/*[in]*/, 
                                         long iconHandle/*[in]*/, 
                                         Borland_studio_toolsapi_tlb::IOTAGalleryCategory** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAGalleryCategory* __fastcall AddCategory(BSTR IDString/*[in]*/, 
                                                                           BSTR DisplayName/*[in]*/, 
                                                                           long iconHandle/*[in]*/);
  HRESULT         __fastcall AddCategory_2(Borland_studio_toolsapi_tlb::IOTAGalleryCategory* parentCategory/*[in]*/
                                           , BSTR IDString/*[in]*/, BSTR DisplayName/*[in]*/, 
                                           long iconHandle/*[in]*/, 
                                           Borland_studio_toolsapi_tlb::IOTAGalleryCategory** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAGalleryCategory* __fastcall AddCategory_2(Borland_studio_toolsapi_tlb::IOTAGalleryCategory* parentCategory/*[in]*/, 
                                                                             BSTR IDString/*[in]*/, 
                                                                             BSTR DisplayName/*[in]*/, 
                                                                             long iconHandle/*[in]*/);
  HRESULT         __fastcall DeleteCategory(Borland_studio_toolsapi_tlb::IOTAGalleryCategory* category/*[in]*/);

};
typedef IOTAGalleryCategoryManagerDispT<IOTAGalleryCategoryManager> IOTAGalleryCategoryManagerDisp;

typedef TComInterface<IOTAFormWizard>  TCOMIOTAFormWizard;

// *********************************************************************//
// DispIntf:  IOTAFormWizard
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {02FE97B0-94F7-470F-8B67-1B89EFA26FC4}
// *********************************************************************//
template<class T>
class IOTAFormWizardDispT : public TAutoDriver<IOTAFormWizard>
{
public:
  IOTAFormWizardDispT(){}

  IOTAFormWizardDispT(IOTAFormWizard *pintf)
  {
    TAutoDriver<IOTAFormWizard>::Bind(pintf, false);
  }

  IOTAFormWizardDispT(IOTAFormWizardPtr pintf)
  {
    TAutoDriver<IOTAFormWizard>::Bind(pintf, true);
  }

  IOTAFormWizardDispT& operator=(IOTAFormWizard *pintf)
  {
    TAutoDriver<IOTAFormWizard>::Bind(pintf, false);
    return *this;
  }

  IOTAFormWizardDispT& operator=(IOTAFormWizardPtr pintf)
  {
    TAutoDriver<IOTAFormWizard>::Bind(pintf, true);
    return *this;
  }


};
typedef IOTAFormWizardDispT<IOTAFormWizard> IOTAFormWizardDisp;

typedef TComInterface<IOTAProjectWizard>  TCOMIOTAProjectWizard;

// *********************************************************************//
// DispIntf:  IOTAProjectWizard
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3C107A3B-2E7D-4700-9CE4-9767B1D2FE00}
// *********************************************************************//
template<class T>
class IOTAProjectWizardDispT : public TAutoDriver<IOTAProjectWizard>
{
public:
  IOTAProjectWizardDispT(){}

  IOTAProjectWizardDispT(IOTAProjectWizard *pintf)
  {
    TAutoDriver<IOTAProjectWizard>::Bind(pintf, false);
  }

  IOTAProjectWizardDispT(IOTAProjectWizardPtr pintf)
  {
    TAutoDriver<IOTAProjectWizard>::Bind(pintf, true);
  }

  IOTAProjectWizardDispT& operator=(IOTAProjectWizard *pintf)
  {
    TAutoDriver<IOTAProjectWizard>::Bind(pintf, false);
    return *this;
  }

  IOTAProjectWizardDispT& operator=(IOTAProjectWizardPtr pintf)
  {
    TAutoDriver<IOTAProjectWizard>::Bind(pintf, true);
    return *this;
  }


};
typedef IOTAProjectWizardDispT<IOTAProjectWizard> IOTAProjectWizardDisp;

typedef TComInterface<IOTAMenuWizard>  TCOMIOTAMenuWizard;

// *********************************************************************//
// DispIntf:  IOTAMenuWizard
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EE481221-0047-44FB-929A-38664AF42749}
// *********************************************************************//
template<class T>
class IOTAMenuWizardDispT : public TAutoDriver<IOTAMenuWizard>
{
public:
  IOTAMenuWizardDispT(){}

  IOTAMenuWizardDispT(IOTAMenuWizard *pintf)
  {
    TAutoDriver<IOTAMenuWizard>::Bind(pintf, false);
  }

  IOTAMenuWizardDispT(IOTAMenuWizardPtr pintf)
  {
    TAutoDriver<IOTAMenuWizard>::Bind(pintf, true);
  }

  IOTAMenuWizardDispT& operator=(IOTAMenuWizard *pintf)
  {
    TAutoDriver<IOTAMenuWizard>::Bind(pintf, false);
    return *this;
  }

  IOTAMenuWizardDispT& operator=(IOTAMenuWizardPtr pintf)
  {
    TAutoDriver<IOTAMenuWizard>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall get_MenuText(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_MenuText(void);
  HRESULT         __fastcall get_Enabled(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_Enabled(void);
  HRESULT         __fastcall get_Checked(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_Checked(void);

  __property   BSTR            MenuText = {read = get_MenuText};
  __property   VARIANT_BOOL    Enabled = {read = get_Enabled};
  __property   VARIANT_BOOL    Checked = {read = get_Checked};
};
typedef IOTAMenuWizardDispT<IOTAMenuWizard> IOTAMenuWizardDisp;

typedef TComInterface<IOTAWizardService>  TCOMIOTAWizardService;

// *********************************************************************//
// DispIntf:  IOTAWizardService
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {935F3EA1-EFD6-4901-8138-2415F6AD1C3D}
// *********************************************************************//
template<class T>
class IOTAWizardServiceDispT : public TAutoDriver<IOTAWizardService>
{
public:
  IOTAWizardServiceDispT(){}

  IOTAWizardServiceDispT(IOTAWizardService *pintf)
  {
    TAutoDriver<IOTAWizardService>::Bind(pintf, false);
  }

  IOTAWizardServiceDispT(IOTAWizardServicePtr pintf)
  {
    TAutoDriver<IOTAWizardService>::Bind(pintf, true);
  }

  IOTAWizardServiceDispT& operator=(IOTAWizardService *pintf)
  {
    TAutoDriver<IOTAWizardService>::Bind(pintf, false);
    return *this;
  }

  IOTAWizardServiceDispT& operator=(IOTAWizardServicePtr pintf)
  {
    TAutoDriver<IOTAWizardService>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall AddWizard(Borland_studio_toolsapi_tlb::IOTAWizard* wizard/*[in]*/, 
                                       long* pRetVal/*[out,retval]*/);
  long            __fastcall AddWizard(Borland_studio_toolsapi_tlb::IOTAWizard* wizard/*[in]*/);
  HRESULT         __fastcall RemoveWizard(long index/*[in]*/);

};
typedef IOTAWizardServiceDispT<IOTAWizardService> IOTAWizardServiceDisp;

typedef TComInterface<IOTAAboutBoxService>  TCOMIOTAAboutBoxService;

// *********************************************************************//
// DispIntf:  IOTAAboutBoxService
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5C01B0EE-E660-4474-8B18-3676F20006AC}
// *********************************************************************//
template<class T>
class IOTAAboutBoxServiceDispT : public TAutoDriver<IOTAAboutBoxService>
{
public:
  IOTAAboutBoxServiceDispT(){}

  IOTAAboutBoxServiceDispT(IOTAAboutBoxService *pintf)
  {
    TAutoDriver<IOTAAboutBoxService>::Bind(pintf, false);
  }

  IOTAAboutBoxServiceDispT(IOTAAboutBoxServicePtr pintf)
  {
    TAutoDriver<IOTAAboutBoxService>::Bind(pintf, true);
  }

  IOTAAboutBoxServiceDispT& operator=(IOTAAboutBoxService *pintf)
  {
    TAutoDriver<IOTAAboutBoxService>::Bind(pintf, false);
    return *this;
  }

  IOTAAboutBoxServiceDispT& operator=(IOTAAboutBoxServicePtr pintf)
  {
    TAutoDriver<IOTAAboutBoxService>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall AddPluginInfo(BSTR title/*[in]*/, BSTR description/*[in]*/, 
                                           long aboutImageHandle/*[in]*/, 
                                           VARIANT_BOOL isUnRegistered/*[in]*/, 
                                           BSTR licenseStatus/*[in]*/, BSTR skuName/*[in]*/, 
                                           long* pRetVal/*[out,retval]*/);
  long            __fastcall AddPluginInfo(BSTR title/*[in]*/, BSTR description/*[in]*/, 
                                           long aboutImageHandle/*[in]*/, 
                                           VARIANT_BOOL isUnRegistered/*[in]*/, 
                                           BSTR licenseStatus/*[in]*/, BSTR skuName/*[in]*/);
  HRESULT         __fastcall AddProductInfo(BSTR dialogTitle/*[in]*/, BSTR copyright/*[in]*/, 
                                            BSTR title/*[in]*/, BSTR description/*[in]*/, 
                                            long aboutImageHandle/*[in]*/, 
                                            long productImageHandle/*[in]*/, 
                                            VARIANT_BOOL isUnRegistered/*[in]*/, 
                                            BSTR licenseStatus/*[in]*/, BSTR skuName/*[in]*/, 
                                            long* pRetVal/*[out,retval]*/);
  long            __fastcall AddProductInfo(BSTR dialogTitle/*[in]*/, BSTR copyright/*[in]*/, 
                                            BSTR title/*[in]*/, BSTR description/*[in]*/, 
                                            long aboutImageHandle/*[in]*/, 
                                            long productImageHandle/*[in]*/, 
                                            VARIANT_BOOL isUnRegistered/*[in]*/, 
                                            BSTR licenseStatus/*[in]*/, BSTR skuName/*[in]*/);
  HRESULT         __fastcall RemovePluginInfo(long index/*[in]*/);
  HRESULT         __fastcall RemoveProductInfo(long index/*[in]*/);

};
typedef IOTAAboutBoxServiceDispT<IOTAAboutBoxService> IOTAAboutBoxServiceDisp;

typedef TComInterface<IOTASplashScreenService>  TCOMIOTASplashScreenService;

// *********************************************************************//
// DispIntf:  IOTASplashScreenService
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2550066E-CF92-475E-8C27-EBDC6CEFB3D8}
// *********************************************************************//
template<class T>
class IOTASplashScreenServiceDispT : public TAutoDriver<IOTASplashScreenService>
{
public:
  IOTASplashScreenServiceDispT(){}

  IOTASplashScreenServiceDispT(IOTASplashScreenService *pintf)
  {
    TAutoDriver<IOTASplashScreenService>::Bind(pintf, false);
  }

  IOTASplashScreenServiceDispT(IOTASplashScreenServicePtr pintf)
  {
    TAutoDriver<IOTASplashScreenService>::Bind(pintf, true);
  }

  IOTASplashScreenServiceDispT& operator=(IOTASplashScreenService *pintf)
  {
    TAutoDriver<IOTASplashScreenService>::Bind(pintf, false);
    return *this;
  }

  IOTASplashScreenServiceDispT& operator=(IOTASplashScreenServicePtr pintf)
  {
    TAutoDriver<IOTASplashScreenService>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall AddPluginBitmap(BSTR Caption/*[in]*/, long bitmapHandle/*[in]*/, 
                                             VARIANT_BOOL isUnRegistered/*[in]*/, 
                                             BSTR licenseStatus/*[in]*/, BSTR skuName/*[in]*/);
  HRESULT         __fastcall AddProductBitmap(BSTR Caption/*[in]*/, long bitmapHandle/*[in]*/, 
                                              VARIANT_BOOL isUnRegistered/*[in]*/, 
                                              BSTR licenseStatus/*[in]*/, BSTR skuName/*[in]*/);
  HRESULT         __fastcall ShowProductSplash(long bitmapHandle/*[in]*/);
  HRESULT         __fastcall StatusMessage(BSTR StatusMessage/*[in]*/);
  HRESULT         __fastcall SetProductIcon(long iconHandle/*[in]*/);

};
typedef IOTASplashScreenServiceDispT<IOTASplashScreenService> IOTASplashScreenServiceDisp;

typedef TComInterface<IOTAPersonalityService>  TCOMIOTAPersonalityService;

// *********************************************************************//
// DispIntf:  IOTAPersonalityService
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {62198A9F-790C-4A0C-818B-CFC561E2E73B}
// *********************************************************************//
template<class T>
class IOTAPersonalityServiceDispT : public TAutoDriver<IOTAPersonalityService>
{
public:
  IOTAPersonalityServiceDispT(){}

  IOTAPersonalityServiceDispT(IOTAPersonalityService *pintf)
  {
    TAutoDriver<IOTAPersonalityService>::Bind(pintf, false);
  }

  IOTAPersonalityServiceDispT(IOTAPersonalityServicePtr pintf)
  {
    TAutoDriver<IOTAPersonalityService>::Bind(pintf, true);
  }

  IOTAPersonalityServiceDispT& operator=(IOTAPersonalityService *pintf)
  {
    TAutoDriver<IOTAPersonalityService>::Bind(pintf, false);
    return *this;
  }

  IOTAPersonalityServiceDispT& operator=(IOTAPersonalityServicePtr pintf)
  {
    TAutoDriver<IOTAPersonalityService>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall get_CurrentPersonality(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_CurrentPersonality(void);
  HRESULT         __fastcall set_CurrentPersonality(BSTR pRetVal/*[in]*/);
  HRESULT         __fastcall get_PersonalityCount(long* pRetVal/*[out,retval]*/);
  long            __fastcall get_PersonalityCount(void);
  HRESULT         __fastcall GetPersonality(long index/*[in]*/, BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall GetPersonality(long index/*[in]*/);
  HRESULT         __fastcall GetFilePersonality(BSTR fileName/*[in]*/, BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall GetFilePersonality(BSTR fileName/*[in]*/);
  HRESULT         __fastcall PersonalityExists(BSTR personality/*[in]*/, 
                                               VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall PersonalityExists(BSTR personality/*[in]*/);

  __property   BSTR            CurrentPersonality = {read = get_CurrentPersonality, write = set_CurrentPersonality};
  __property   long            PersonalityCount = {read = get_PersonalityCount};
};
typedef IOTAPersonalityServiceDispT<IOTAPersonalityService> IOTAPersonalityServiceDisp;

// *********************************************************************//
// SmartIntf: TCOM_OTAFile
// Interface: _OTAFile
// *********************************************************************//
template <class T /* _OTAFile */ >
class TCOM_OTAFileT : public TComInterface<_OTAFile>, public TComInterfaceBase<IUnknown>
{
public:
  TCOM_OTAFileT() {}
  TCOM_OTAFileT(_OTAFile *intf, bool addRef = false) : TComInterface<_OTAFile>(intf, addRef) {}
  TCOM_OTAFileT(const TCOM_OTAFileT& src) : TComInterface<_OTAFile>(src) {}
  TCOM_OTAFileT& operator=(const TCOM_OTAFileT& src) { Bind(src, true); return *this;}


};
typedef TCOM_OTAFileT<_OTAFile> TCOM_OTAFile;

// *********************************************************************//
// DispIntf:  _OTAFile
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {DA5701D3-B903-34AC-8112-9D457013E8DF}
// *********************************************************************//
template<class T>
class _OTAFileDispT : public TAutoDriver<_OTAFile>
{
public:
  _OTAFileDispT(){}

  _OTAFileDispT(_OTAFile *pintf)
  {
    TAutoDriver<_OTAFile>::Bind(pintf, false);
  }

  _OTAFileDispT(_OTAFilePtr pintf)
  {
    TAutoDriver<_OTAFile>::Bind(pintf, true);
  }

  _OTAFileDispT& operator=(_OTAFile *pintf)
  {
    TAutoDriver<_OTAFile>::Bind(pintf, false);
    return *this;
  }

  _OTAFileDispT& operator=(_OTAFilePtr pintf)
  {
    TAutoDriver<_OTAFile>::Bind(pintf, true);
    return *this;
  }

  HRESULT BindDefault()
  {
    return OLECHECK(Bind(CLSID_OTAFile));
  }

  HRESULT BindRunning()
  {
    return BindToActive(CLSID_OTAFile);
  }


};
typedef _OTAFileDispT<_OTAFile> _OTAFileDisp;

typedef TComInterface<IOTAAlignable>  TCOMIOTAAlignable;

// *********************************************************************//
// DispIntf:  IOTAAlignable
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1664F3A1-00B8-4349-A96E-99C678F9BE96}
// *********************************************************************//
template<class T>
class IOTAAlignableDispT : public TAutoDriver<IOTAAlignable>
{
public:
  IOTAAlignableDispT(){}

  IOTAAlignableDispT(IOTAAlignable *pintf)
  {
    TAutoDriver<IOTAAlignable>::Bind(pintf, false);
  }

  IOTAAlignableDispT(IOTAAlignablePtr pintf)
  {
    TAutoDriver<IOTAAlignable>::Bind(pintf, true);
  }

  IOTAAlignableDispT& operator=(IOTAAlignable *pintf)
  {
    TAutoDriver<IOTAAlignable>::Bind(pintf, false);
    return *this;
  }

  IOTAAlignableDispT& operator=(IOTAAlignablePtr pintf)
  {
    TAutoDriver<IOTAAlignable>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall Align(Borland_studio_toolsapi_tlb::OTAAffect Affect/*[in]*/);
  HRESULT         __fastcall Size(Borland_studio_toolsapi_tlb::OTASizeAffect Affect/*[in]*/, 
                                  long value/*[in]*/);

};
typedef IOTAAlignableDispT<IOTAAlignable> IOTAAlignableDisp;

typedef TComInterface<IOTAAlignableState>  TCOMIOTAAlignableState;

// *********************************************************************//
// DispIntf:  IOTAAlignableState
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BF5AE0B5-0715-4EC7-BFA5-3922E10EDF3C}
// *********************************************************************//
template<class T>
class IOTAAlignableStateDispT : public TAutoDriver<IOTAAlignableState>
{
public:
  IOTAAlignableStateDispT(){}

  IOTAAlignableStateDispT(IOTAAlignableState *pintf)
  {
    TAutoDriver<IOTAAlignableState>::Bind(pintf, false);
  }

  IOTAAlignableStateDispT(IOTAAlignableStatePtr pintf)
  {
    TAutoDriver<IOTAAlignableState>::Bind(pintf, true);
  }

  IOTAAlignableStateDispT& operator=(IOTAAlignableState *pintf)
  {
    TAutoDriver<IOTAAlignableState>::Bind(pintf, false);
    return *this;
  }

  IOTAAlignableStateDispT& operator=(IOTAAlignableStatePtr pintf)
  {
    TAutoDriver<IOTAAlignableState>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall GetAlignAffectState(Borland_studio_toolsapi_tlb::OTAAffect Affect/*[in]*/
                                                 , 
                                                 Borland_studio_toolsapi_tlb::OTAAlignableState* pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::OTAAlignableState __fastcall GetAlignAffectState(Borland_studio_toolsapi_tlb::OTAAffect Affect/*[in]*/);
  HRESULT         __fastcall GetSizeAffectState(Borland_studio_toolsapi_tlb::OTASizeAffect Affect/*[in]*/
                                                , 
                                                Borland_studio_toolsapi_tlb::OTAAlignableState* pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::OTAAlignableState __fastcall GetSizeAffectState(Borland_studio_toolsapi_tlb::OTASizeAffect Affect/*[in]*/);

};
typedef IOTAAlignableStateDispT<IOTAAlignableState> IOTAAlignableStateDisp;

typedef TComInterface<IOTAScaleable>  TCOMIOTAScaleable;

// *********************************************************************//
// DispIntf:  IOTAScaleable
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CBC39180-2D51-4E37-A019-E57866309C93}
// *********************************************************************//
template<class T>
class IOTAScaleableDispT : public TAutoDriver<IOTAScaleable>
{
public:
  IOTAScaleableDispT(){}

  IOTAScaleableDispT(IOTAScaleable *pintf)
  {
    TAutoDriver<IOTAScaleable>::Bind(pintf, false);
  }

  IOTAScaleableDispT(IOTAScaleablePtr pintf)
  {
    TAutoDriver<IOTAScaleable>::Bind(pintf, true);
  }

  IOTAScaleableDispT& operator=(IOTAScaleable *pintf)
  {
    TAutoDriver<IOTAScaleable>::Bind(pintf, false);
    return *this;
  }

  IOTAScaleableDispT& operator=(IOTAScaleablePtr pintf)
  {
    TAutoDriver<IOTAScaleable>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall Scale(long Factor/*[in]*/);

};
typedef IOTAScaleableDispT<IOTAScaleable> IOTAScaleableDisp;

typedef TComInterface<IOTATabOrderable>  TCOMIOTATabOrderable;

// *********************************************************************//
// DispIntf:  IOTATabOrderable
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1C7AD430-314E-3588-A9F5-996EFFD05989}
// *********************************************************************//
template<class T>
class IOTATabOrderableDispT : public TAutoDriver<IOTATabOrderable>
{
public:
  IOTATabOrderableDispT(){}

  IOTATabOrderableDispT(IOTATabOrderable *pintf)
  {
    TAutoDriver<IOTATabOrderable>::Bind(pintf, false);
  }

  IOTATabOrderableDispT(IOTATabOrderablePtr pintf)
  {
    TAutoDriver<IOTATabOrderable>::Bind(pintf, true);
  }

  IOTATabOrderableDispT& operator=(IOTATabOrderable *pintf)
  {
    TAutoDriver<IOTATabOrderable>::Bind(pintf, false);
    return *this;
  }

  IOTATabOrderableDispT& operator=(IOTATabOrderablePtr pintf)
  {
    TAutoDriver<IOTATabOrderable>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall GetTabCompCount(long* pRetVal/*[out,retval]*/);
  long            __fastcall GetTabCompCount(void);
  HRESULT         __fastcall GetTabCompInfo(long Order/*[in]*/, BSTR* Name/*[out]*/, 
                                            BSTR* className/*[out]*/, VARIANT* Comp/*[out]*/, 
                                            VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall GetTabCompInfo(long Order/*[in]*/, BSTR* Name/*[out]*/, 
                                            BSTR* className/*[out]*/, VARIANT* Comp/*[out]*/);
  HRESULT         __fastcall SetTabCompOrder(VARIANT Comp/*[in]*/, long Order/*[in]*/);

};
typedef IOTATabOrderableDispT<IOTATabOrderable> IOTATabOrderableDisp;

typedef TComInterface<IOTACreateOrderable>  TCOMIOTACreateOrderable;

// *********************************************************************//
// DispIntf:  IOTACreateOrderable
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C92C0E94-A709-4708-8673-D26C35D0C749}
// *********************************************************************//
template<class T>
class IOTACreateOrderableDispT : public TAutoDriver<IOTACreateOrderable>
{
public:
  IOTACreateOrderableDispT(){}

  IOTACreateOrderableDispT(IOTACreateOrderable *pintf)
  {
    TAutoDriver<IOTACreateOrderable>::Bind(pintf, false);
  }

  IOTACreateOrderableDispT(IOTACreateOrderablePtr pintf)
  {
    TAutoDriver<IOTACreateOrderable>::Bind(pintf, true);
  }

  IOTACreateOrderableDispT& operator=(IOTACreateOrderable *pintf)
  {
    TAutoDriver<IOTACreateOrderable>::Bind(pintf, false);
    return *this;
  }

  IOTACreateOrderableDispT& operator=(IOTACreateOrderablePtr pintf)
  {
    TAutoDriver<IOTACreateOrderable>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall GetCompCount(long* pRetVal/*[out,retval]*/);
  long            __fastcall GetCompCount(void);
  HRESULT         __fastcall GetCompName(long index/*[in]*/, BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall GetCompName(long index/*[in]*/);
  HRESULT         __fastcall GetCompType(long index/*[in]*/, BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall GetCompType(long index/*[in]*/);
  HRESULT         __fastcall GetNVComp(long index/*[in]*/, VARIANT* pRetVal/*[out,retval]*/);
  VARIANT         __fastcall GetNVComp(long index/*[in]*/);
  HRESULT         __fastcall SetNVComp(VARIANT Comp/*[in]*/, long Order/*[in]*/);

};
typedef IOTACreateOrderableDispT<IOTACreateOrderable> IOTACreateOrderableDisp;

typedef TComInterface<INTAComponent>  TCOMINTAComponent;

// *********************************************************************//
// DispIntf:  INTAComponent
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3E9354E0-66E8-46A3-B24F-9CBBBE7FA7EA}
// *********************************************************************//
template<class T>
class INTAComponentDispT : public TAutoDriver<INTAComponent>
{
public:
  INTAComponentDispT(){}

  INTAComponentDispT(INTAComponent *pintf)
  {
    TAutoDriver<INTAComponent>::Bind(pintf, false);
  }

  INTAComponentDispT(INTAComponentPtr pintf)
  {
    TAutoDriver<INTAComponent>::Bind(pintf, true);
  }

  INTAComponentDispT& operator=(INTAComponent *pintf)
  {
    TAutoDriver<INTAComponent>::Bind(pintf, false);
    return *this;
  }

  INTAComponentDispT& operator=(INTAComponentPtr pintf)
  {
    TAutoDriver<INTAComponent>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall GetPersistent(Mscorlib_tlb::_MarshalByRefObject** pRetVal/*[out,retval]*/);
  Mscorlib_tlb::_MarshalByRefObject* __fastcall GetPersistent(void);
  HRESULT         __fastcall GetComponent(System_tlb::_Component** pRetVal/*[out,retval]*/);
  System_tlb::_Component* __fastcall GetComponent(void);

};
typedef INTAComponentDispT<INTAComponent> INTAComponentDisp;

typedef TComInterface<IOTAGetChildCallback>  TCOMIOTAGetChildCallback;

// *********************************************************************//
// DispIntf:  IOTAGetChildCallback
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {28A28BA8-B900-4049-9C49-76086941DEE3}
// *********************************************************************//
template<class T>
class IOTAGetChildCallbackDispT : public TAutoDriver<IOTAGetChildCallback>
{
public:
  IOTAGetChildCallbackDispT(){}

  IOTAGetChildCallbackDispT(IOTAGetChildCallback *pintf)
  {
    TAutoDriver<IOTAGetChildCallback>::Bind(pintf, false);
  }

  IOTAGetChildCallbackDispT(IOTAGetChildCallbackPtr pintf)
  {
    TAutoDriver<IOTAGetChildCallback>::Bind(pintf, true);
  }

  IOTAGetChildCallbackDispT& operator=(IOTAGetChildCallback *pintf)
  {
    TAutoDriver<IOTAGetChildCallback>::Bind(pintf, false);
    return *this;
  }

  IOTAGetChildCallbackDispT& operator=(IOTAGetChildCallbackPtr pintf)
  {
    TAutoDriver<IOTAGetChildCallback>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall ChildCallback(VARIANT Param/*[in]*/, 
                                           Borland_studio_toolsapi_tlb::IOTAComponent* component/*[in]*/
                                           , VARIANT_BOOL* result/*[in,out]*/);

};
typedef IOTAGetChildCallbackDispT<IOTAGetChildCallback> IOTAGetChildCallbackDisp;

// *********************************************************************//
// SmartIntf: TCOM_TOTAGetChildCallback
// Interface: _TOTAGetChildCallback
// *********************************************************************//
template <class T /* _TOTAGetChildCallback */ >
class TCOM_TOTAGetChildCallbackT : public TComInterface<_TOTAGetChildCallback>, public TComInterfaceBase<IUnknown>
{
public:
  TCOM_TOTAGetChildCallbackT() {}
  TCOM_TOTAGetChildCallbackT(_TOTAGetChildCallback *intf, bool addRef = false) : TComInterface<_TOTAGetChildCallback>(intf, addRef) {}
  TCOM_TOTAGetChildCallbackT(const TCOM_TOTAGetChildCallbackT& src) : TComInterface<_TOTAGetChildCallback>(src) {}
  TCOM_TOTAGetChildCallbackT& operator=(const TCOM_TOTAGetChildCallbackT& src) { Bind(src, true); return *this;}


};
typedef TCOM_TOTAGetChildCallbackT<_TOTAGetChildCallback> TCOM_TOTAGetChildCallback;

// *********************************************************************//
// DispIntf:  _TOTAGetChildCallback
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {D430F0B5-180B-305A-B1C1-C17006C1884E}
// *********************************************************************//
template<class T>
class _TOTAGetChildCallbackDispT : public TAutoDriver<_TOTAGetChildCallback>
{
public:
  _TOTAGetChildCallbackDispT(){}

  _TOTAGetChildCallbackDispT(_TOTAGetChildCallback *pintf)
  {
    TAutoDriver<_TOTAGetChildCallback>::Bind(pintf, false);
  }

  _TOTAGetChildCallbackDispT(_TOTAGetChildCallbackPtr pintf)
  {
    TAutoDriver<_TOTAGetChildCallback>::Bind(pintf, true);
  }

  _TOTAGetChildCallbackDispT& operator=(_TOTAGetChildCallback *pintf)
  {
    TAutoDriver<_TOTAGetChildCallback>::Bind(pintf, false);
    return *this;
  }

  _TOTAGetChildCallbackDispT& operator=(_TOTAGetChildCallbackPtr pintf)
  {
    TAutoDriver<_TOTAGetChildCallback>::Bind(pintf, true);
    return *this;
  }

  HRESULT BindDefault()
  {
    return OLECHECK(Bind(CLSID_TOTAGetChildCallback));
  }

  HRESULT BindRunning()
  {
    return BindToActive(CLSID_TOTAGetChildCallback);
  }


};
typedef _TOTAGetChildCallbackDispT<_TOTAGetChildCallback> _TOTAGetChildCallbackDisp;

typedef TComInterface<IOTAComponent>  TCOMIOTAComponent;

// *********************************************************************//
// DispIntf:  IOTAComponent
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7F55A081-3BFF-413B-88BF-7E4165F9D136}
// *********************************************************************//
template<class T>
class IOTAComponentDispT : public TAutoDriver<IOTAComponent>
{
public:
  IOTAComponentDispT(){}

  IOTAComponentDispT(IOTAComponent *pintf)
  {
    TAutoDriver<IOTAComponent>::Bind(pintf, false);
  }

  IOTAComponentDispT(IOTAComponentPtr pintf)
  {
    TAutoDriver<IOTAComponent>::Bind(pintf, true);
  }

  IOTAComponentDispT& operator=(IOTAComponent *pintf)
  {
    TAutoDriver<IOTAComponent>::Bind(pintf, false);
    return *this;
  }

  IOTAComponentDispT& operator=(IOTAComponentPtr pintf)
  {
    TAutoDriver<IOTAComponent>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall GetComponentType(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall GetComponentType(void);
  HRESULT         __fastcall GetComponentHandle(Borland_studio_toolsapi_tlb::_TOTAHandle** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::_TOTAHandle* __fastcall GetComponentHandle(void);
  HRESULT         __fastcall GetParent(Borland_studio_toolsapi_tlb::IOTAComponent** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAComponent* __fastcall GetParent(void);
  HRESULT         __fastcall IsTControl(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall IsTControl(void);
  HRESULT         __fastcall GetPropCount(long* pRetVal/*[out,retval]*/);
  long            __fastcall GetPropCount(void);
  HRESULT         __fastcall GetPropName(long index/*[in]*/, BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall GetPropName(long index/*[in]*/);
  HRESULT         __fastcall GetPropType(long index/*[in]*/, 
                                         Borland_studio_toolsapi_tlb::OTATypeKind* pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::OTATypeKind __fastcall GetPropType(long index/*[in]*/);
  HRESULT         __fastcall GetPropTypeByName(BSTR Name/*[in]*/, 
                                               Borland_studio_toolsapi_tlb::OTATypeKind* pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::OTATypeKind __fastcall GetPropTypeByName(BSTR Name/*[in]*/);
  HRESULT         __fastcall GetPropValue(long index/*[in]*/, VARIANT* value/*[out]*/, 
                                          VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall GetPropValue(long index/*[in]*/, VARIANT* value/*[out]*/);
  HRESULT         __fastcall GetPropValueByName(BSTR Name/*[in]*/, VARIANT* value/*[out]*/, 
                                                VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall GetPropValueByName(BSTR Name/*[in]*/, VARIANT* value/*[out]*/);
  HRESULT         __fastcall SetProp(long index/*[in]*/, VARIANT value/*[in]*/, 
                                     VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall SetProp(long index/*[in]*/, VARIANT value/*[in]*/);
  HRESULT         __fastcall SetPropByName(BSTR Name/*[in]*/, VARIANT value/*[in]*/, 
                                           VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall SetPropByName(BSTR Name/*[in]*/, VARIANT value/*[in]*/);
  HRESULT         __fastcall GetChildren(VARIANT Param/*[in]*/, 
                                         Borland_studio_toolsapi_tlb::_TOTAGetChildCallback* CallBack/*[in]*/
                                         , VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall GetChildren(VARIANT Param/*[in]*/, 
                                         Borland_studio_toolsapi_tlb::_TOTAGetChildCallback* CallBack/*[in]*/);
  HRESULT         __fastcall GetChildren_2(VARIANT Param/*[in]*/, 
                                           Borland_studio_toolsapi_tlb::IOTAGetChildCallback* CallBack/*[in]*/
                                           , VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall GetChildren_2(VARIANT Param/*[in]*/, 
                                           Borland_studio_toolsapi_tlb::IOTAGetChildCallback* CallBack/*[in]*/);
  HRESULT         __fastcall GetControlCount(long* pRetVal/*[out,retval]*/);
  long            __fastcall GetControlCount(void);
  HRESULT         __fastcall GetControl(long index/*[in]*/, 
                                        Borland_studio_toolsapi_tlb::IOTAComponent** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAComponent* __fastcall GetControl(long index/*[in]*/);
  HRESULT         __fastcall GetComponentCount(long* pRetVal/*[out,retval]*/);
  long            __fastcall GetComponentCount(void);
  HRESULT         __fastcall GetComponent(long index/*[in]*/, 
                                          Borland_studio_toolsapi_tlb::IOTAComponent** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAComponent* __fastcall GetComponent(long index/*[in]*/);
  HRESULT         __fastcall Select(VARIANT_BOOL AddToSelection/*[in]*/, 
                                    VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall Select(VARIANT_BOOL AddToSelection/*[in]*/);
  HRESULT         __fastcall Focus(VARIANT_BOOL AddToSelection/*[in]*/, 
                                   VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall Focus(VARIANT_BOOL AddToSelection/*[in]*/);
  HRESULT         __fastcall Delete(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall Delete(void);

};
typedef IOTAComponentDispT<IOTAComponent> IOTAComponentDisp;

// *********************************************************************//
// SmartIntf: TCOM_ComponentRenamedEventArgs
// Interface: _ComponentRenamedEventArgs
// *********************************************************************//
template <class T /* _ComponentRenamedEventArgs */ >
class TCOM_ComponentRenamedEventArgsT : public TComInterface<_ComponentRenamedEventArgs>, public TComInterfaceBase<IUnknown>
{
public:
  TCOM_ComponentRenamedEventArgsT() {}
  TCOM_ComponentRenamedEventArgsT(_ComponentRenamedEventArgs *intf, bool addRef = false) : TComInterface<_ComponentRenamedEventArgs>(intf, addRef) {}
  TCOM_ComponentRenamedEventArgsT(const TCOM_ComponentRenamedEventArgsT& src) : TComInterface<_ComponentRenamedEventArgs>(src) {}
  TCOM_ComponentRenamedEventArgsT& operator=(const TCOM_ComponentRenamedEventArgsT& src) { Bind(src, true); return *this;}


};
typedef TCOM_ComponentRenamedEventArgsT<_ComponentRenamedEventArgs> TCOM_ComponentRenamedEventArgs;

// *********************************************************************//
// DispIntf:  _ComponentRenamedEventArgs
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {71BFFDFE-3B56-31B1-9091-D829DFC1CE9A}
// *********************************************************************//
template<class T>
class _ComponentRenamedEventArgsDispT : public TAutoDriver<_ComponentRenamedEventArgs>
{
public:
  _ComponentRenamedEventArgsDispT(){}

  _ComponentRenamedEventArgsDispT(_ComponentRenamedEventArgs *pintf)
  {
    TAutoDriver<_ComponentRenamedEventArgs>::Bind(pintf, false);
  }

  _ComponentRenamedEventArgsDispT(_ComponentRenamedEventArgsPtr pintf)
  {
    TAutoDriver<_ComponentRenamedEventArgs>::Bind(pintf, true);
  }

  _ComponentRenamedEventArgsDispT& operator=(_ComponentRenamedEventArgs *pintf)
  {
    TAutoDriver<_ComponentRenamedEventArgs>::Bind(pintf, false);
    return *this;
  }

  _ComponentRenamedEventArgsDispT& operator=(_ComponentRenamedEventArgsPtr pintf)
  {
    TAutoDriver<_ComponentRenamedEventArgs>::Bind(pintf, true);
    return *this;
  }

  HRESULT BindDefault()
  {
    return OLECHECK(Bind(CLSID_ComponentRenamedEventArgs));
  }

  HRESULT BindRunning()
  {
    return BindToActive(CLSID_ComponentRenamedEventArgs);
  }


};
typedef _ComponentRenamedEventArgsDispT<_ComponentRenamedEventArgs> _ComponentRenamedEventArgsDisp;

// *********************************************************************//
// SmartIntf: TCOM_ComponentRenamedEventHandler
// Interface: _ComponentRenamedEventHandler
// *********************************************************************//
template <class T /* _ComponentRenamedEventHandler */ >
class TCOM_ComponentRenamedEventHandlerT : public TComInterface<_ComponentRenamedEventHandler>, public TComInterfaceBase<IUnknown>
{
public:
  TCOM_ComponentRenamedEventHandlerT() {}
  TCOM_ComponentRenamedEventHandlerT(_ComponentRenamedEventHandler *intf, bool addRef = false) : TComInterface<_ComponentRenamedEventHandler>(intf, addRef) {}
  TCOM_ComponentRenamedEventHandlerT(const TCOM_ComponentRenamedEventHandlerT& src) : TComInterface<_ComponentRenamedEventHandler>(src) {}
  TCOM_ComponentRenamedEventHandlerT& operator=(const TCOM_ComponentRenamedEventHandlerT& src) { Bind(src, true); return *this;}


};
typedef TCOM_ComponentRenamedEventHandlerT<_ComponentRenamedEventHandler> TCOM_ComponentRenamedEventHandler;

// *********************************************************************//
// DispIntf:  _ComponentRenamedEventHandler
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {A4866255-ADA6-3784-BE76-B0ED000FDA61}
// *********************************************************************//
template<class T>
class _ComponentRenamedEventHandlerDispT : public TAutoDriver<_ComponentRenamedEventHandler>
{
public:
  _ComponentRenamedEventHandlerDispT(){}

  _ComponentRenamedEventHandlerDispT(_ComponentRenamedEventHandler *pintf)
  {
    TAutoDriver<_ComponentRenamedEventHandler>::Bind(pintf, false);
  }

  _ComponentRenamedEventHandlerDispT(_ComponentRenamedEventHandlerPtr pintf)
  {
    TAutoDriver<_ComponentRenamedEventHandler>::Bind(pintf, true);
  }

  _ComponentRenamedEventHandlerDispT& operator=(_ComponentRenamedEventHandler *pintf)
  {
    TAutoDriver<_ComponentRenamedEventHandler>::Bind(pintf, false);
    return *this;
  }

  _ComponentRenamedEventHandlerDispT& operator=(_ComponentRenamedEventHandlerPtr pintf)
  {
    TAutoDriver<_ComponentRenamedEventHandler>::Bind(pintf, true);
    return *this;
  }

  HRESULT BindDefault()
  {
    return OLECHECK(Bind(CLSID_ComponentRenamedEventHandler));
  }

  HRESULT BindRunning()
  {
    return BindToActive(CLSID_ComponentRenamedEventHandler);
  }


};
typedef _ComponentRenamedEventHandlerDispT<_ComponentRenamedEventHandler> _ComponentRenamedEventHandlerDisp;

typedef TComInterface<IOTAFormEditor>  TCOMIOTAFormEditor;

// *********************************************************************//
// DispIntf:  IOTAFormEditor
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C9A9D6FC-89B7-40E2-BC64-8797E748EF6E}
// *********************************************************************//
template<class T>
class IOTAFormEditorDispT : public TAutoDriver<IOTAFormEditor>
{
public:
  IOTAFormEditorDispT(){}

  IOTAFormEditorDispT(IOTAFormEditor *pintf)
  {
    TAutoDriver<IOTAFormEditor>::Bind(pintf, false);
  }

  IOTAFormEditorDispT(IOTAFormEditorPtr pintf)
  {
    TAutoDriver<IOTAFormEditor>::Bind(pintf, true);
  }

  IOTAFormEditorDispT& operator=(IOTAFormEditor *pintf)
  {
    TAutoDriver<IOTAFormEditor>::Bind(pintf, false);
    return *this;
  }

  IOTAFormEditorDispT& operator=(IOTAFormEditorPtr pintf)
  {
    TAutoDriver<IOTAFormEditor>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall add_FormActivated(Mscorlib_tlb::_EventHandler* value/*[in]*/);
  HRESULT         __fastcall remove_FormActivated(Mscorlib_tlb::_EventHandler* value/*[in]*/);
  HRESULT         __fastcall add_FormSaving(Mscorlib_tlb::_EventHandler* value/*[in]*/);
  HRESULT         __fastcall remove_FormSaving(Mscorlib_tlb::_EventHandler* value/*[in]*/);
  HRESULT         __fastcall add_ComponentRenamed(Borland_studio_toolsapi_tlb::_ComponentRenamedEventHandler* value/*[in]*/);
  HRESULT         __fastcall remove_ComponentRenamed(Borland_studio_toolsapi_tlb::_ComponentRenamedEventHandler* value/*[in]*/);
  HRESULT         __fastcall GetRootComponent(Borland_studio_toolsapi_tlb::IOTAComponent** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAComponent* __fastcall GetRootComponent(void);
  HRESULT         __fastcall FindComponent(BSTR Name/*[in]*/, 
                                           Borland_studio_toolsapi_tlb::IOTAComponent** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAComponent* __fastcall FindComponent(BSTR Name/*[in]*/);
  HRESULT         __fastcall GetComponentFromHandle(Borland_studio_toolsapi_tlb::_TOTAHandle* ComponentHandle/*[in]*/
                                                    , 
                                                    Borland_studio_toolsapi_tlb::IOTAComponent** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAComponent* __fastcall GetComponentFromHandle(Borland_studio_toolsapi_tlb::_TOTAHandle* ComponentHandle/*[in]*/);
  HRESULT         __fastcall GetSelCount(long* pRetVal/*[out,retval]*/);
  long            __fastcall GetSelCount(void);
  HRESULT         __fastcall GetSelComponent(long index/*[in]*/, 
                                             Borland_studio_toolsapi_tlb::IOTAComponent** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAComponent* __fastcall GetSelComponent(long index/*[in]*/);
  HRESULT         __fastcall GetCreateParent(Borland_studio_toolsapi_tlb::IOTAComponent** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAComponent* __fastcall GetCreateParent(void);
  HRESULT         __fastcall CreateComponent(Borland_studio_toolsapi_tlb::IOTAComponent* Container/*[in]*/
                                             , BSTR TypeName/*[in]*/, long X/*[in]*/, long Y/*[in]*/
                                             , long W/*[in]*/, long H/*[in]*/, 
                                             Borland_studio_toolsapi_tlb::IOTAComponent** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAComponent* __fastcall CreateComponent(Borland_studio_toolsapi_tlb::IOTAComponent* Container/*[in]*/, 
                                                                         BSTR TypeName/*[in]*/, 
                                                                         long X/*[in]*/, 
                                                                         long Y/*[in]*/, 
                                                                         long W/*[in]*/, 
                                                                         long H/*[in]*/);
  HRESULT         __fastcall GetFormResource(Mscorlib_tlb::_Stream* Stream/*[in]*/);

};
typedef IOTAFormEditorDispT<IOTAFormEditor> IOTAFormEditorDisp;

typedef TComInterface<INTAFormEditor>  TCOMINTAFormEditor;

// *********************************************************************//
// DispIntf:  INTAFormEditor
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7ED77880-2D26-353E-A990-FF62FD0D7020}
// *********************************************************************//
template<class T>
class INTAFormEditorDispT : public TAutoDriver<INTAFormEditor>
{
public:
  INTAFormEditorDispT(){}

  INTAFormEditorDispT(INTAFormEditor *pintf)
  {
    TAutoDriver<INTAFormEditor>::Bind(pintf, false);
  }

  INTAFormEditorDispT(INTAFormEditorPtr pintf)
  {
    TAutoDriver<INTAFormEditor>::Bind(pintf, true);
  }

  INTAFormEditorDispT& operator=(INTAFormEditor *pintf)
  {
    TAutoDriver<INTAFormEditor>::Bind(pintf, false);
    return *this;
  }

  INTAFormEditorDispT& operator=(INTAFormEditorPtr pintf)
  {
    TAutoDriver<INTAFormEditor>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall GetFormResource(VARIANT Stream/*[in]*/);
  HRESULT         __fastcall get_FormDesigner(VARIANT* pRetVal/*[out,retval]*/);
  VARIANT         __fastcall get_FormDesigner(void);

};
typedef INTAFormEditorDispT<INTAFormEditor> INTAFormEditorDisp;

typedef TComInterface<IOTAStreamModifyTime>  TCOMIOTAStreamModifyTime;

typedef TComInterface<IOTAFileFilter>  TCOMIOTAFileFilter;

// *********************************************************************//
// DispIntf:  IOTAFileFilter
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8346A98D-E405-4BD6-A0A6-91B701DD6BB5}
// *********************************************************************//
template<class T>
class IOTAFileFilterDispT : public TAutoDriver<IOTAFileFilter>
{
public:
  IOTAFileFilterDispT(){}

  IOTAFileFilterDispT(IOTAFileFilter *pintf)
  {
    TAutoDriver<IOTAFileFilter>::Bind(pintf, false);
  }

  IOTAFileFilterDispT(IOTAFileFilterPtr pintf)
  {
    TAutoDriver<IOTAFileFilter>::Bind(pintf, true);
  }

  IOTAFileFilterDispT& operator=(IOTAFileFilter *pintf)
  {
    TAutoDriver<IOTAFileFilter>::Bind(pintf, false);
    return *this;
  }

  IOTAFileFilterDispT& operator=(IOTAFileFilterPtr pintf)
  {
    TAutoDriver<IOTAFileFilter>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall GetStream(BSTR AFileName/*[in]*/, 
                                       Mscorlib_tlb::_Stream* AStream/*[in]*/, 
                                       Mscorlib_tlb::_Stream** pRetVal/*[out,retval]*/);
  Mscorlib_tlb::_Stream* __fastcall GetStream(BSTR AFileName/*[in]*/, 
                                              Mscorlib_tlb::_Stream* AStream/*[in]*/);
  HRESULT         __fastcall HandleStream(BSTR AFileName/*[in]*/, 
                                          Mscorlib_tlb::_Stream* AStream/*[in]*/, 
                                          VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall HandleStream(BSTR AFileName/*[in]*/, 
                                          Mscorlib_tlb::_Stream* AStream/*[in]*/);
  HRESULT         __fastcall get_DisplayName(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_DisplayName(void);
  HRESULT         __fastcall get_IDString(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_IDString(void);

  __property   BSTR            DisplayName = {read = get_DisplayName};
  __property   BSTR            IDString = {read = get_IDString};
};
typedef IOTAFileFilterDispT<IOTAFileFilter> IOTAFileFilterDisp;

typedef TComInterface<IOTAFileSystem>  TCOMIOTAFileSystem;

// *********************************************************************//
// DispIntf:  IOTAFileSystem
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3FA129A8-AD94-4606-91FD-95E2DBCB5BD7}
// *********************************************************************//
template<class T>
class IOTAFileSystemDispT : public TAutoDriver<IOTAFileSystem>
{
public:
  IOTAFileSystemDispT(){}

  IOTAFileSystemDispT(IOTAFileSystem *pintf)
  {
    TAutoDriver<IOTAFileSystem>::Bind(pintf, false);
  }

  IOTAFileSystemDispT(IOTAFileSystemPtr pintf)
  {
    TAutoDriver<IOTAFileSystem>::Bind(pintf, true);
  }

  IOTAFileSystemDispT& operator=(IOTAFileSystem *pintf)
  {
    TAutoDriver<IOTAFileSystem>::Bind(pintf, false);
    return *this;
  }

  IOTAFileSystemDispT& operator=(IOTAFileSystemPtr pintf)
  {
    TAutoDriver<IOTAFileSystem>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall GetFileStream(BSTR fileName/*[in]*/, long Mode/*[in]*/, 
                                           Mscorlib_tlb::_Stream** pRetVal/*[out,retval]*/);
  Mscorlib_tlb::_Stream* __fastcall GetFileStream(BSTR fileName/*[in]*/, long Mode/*[in]*/);
  HRESULT         __fastcall FileAge(BSTR fileName/*[in]*/, long* pRetVal/*[out,retval]*/);
  long            __fastcall FileAge(BSTR fileName/*[in]*/);
  HRESULT         __fastcall RenameFile(BSTR OldName/*[in]*/, BSTR NewName/*[in]*/, 
                                        VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall RenameFile(BSTR OldName/*[in]*/, BSTR NewName/*[in]*/);
  HRESULT         __fastcall IsReadOnly(BSTR fileName/*[in]*/, VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall IsReadOnly(BSTR fileName/*[in]*/);
  HRESULT         __fastcall IsFileBased(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall IsFileBased(void);
  HRESULT         __fastcall DeleteFile(BSTR fileName/*[in]*/, VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall DeleteFile(BSTR fileName/*[in]*/);
  HRESULT         __fastcall FileExists(BSTR fileName/*[in]*/, VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall FileExists(BSTR fileName/*[in]*/);
  HRESULT         __fastcall GetTempFileName(BSTR fileName/*[in]*/, BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall GetTempFileName(BSTR fileName/*[in]*/);
  HRESULT         __fastcall GetBackupFileName(BSTR fileName/*[in]*/, BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall GetBackupFileName(BSTR fileName/*[in]*/);
  HRESULT         __fastcall GetIDString(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall GetIDString(void);
  HRESULT         __fastcall GetFilter(Borland_studio_toolsapi_tlb::IOTAFileFilter** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAFileFilter* __fastcall GetFilter(void);

};
typedef IOTAFileSystemDispT<IOTAFileSystem> IOTAFileSystemDisp;

typedef TComInterface<INTAPalettePaintIcon>  TCOMINTAPalettePaintIcon;

// *********************************************************************//
// DispIntf:  INTAPalettePaintIcon
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {18544EF7-B617-4225-9FD7-31FEFB77861E}
// *********************************************************************//
template<class T>
class INTAPalettePaintIconDispT : public TAutoDriver<INTAPalettePaintIcon>
{
public:
  INTAPalettePaintIconDispT(){}

  INTAPalettePaintIconDispT(INTAPalettePaintIcon *pintf)
  {
    TAutoDriver<INTAPalettePaintIcon>::Bind(pintf, false);
  }

  INTAPalettePaintIconDispT(INTAPalettePaintIconPtr pintf)
  {
    TAutoDriver<INTAPalettePaintIcon>::Bind(pintf, true);
  }

  INTAPalettePaintIconDispT& operator=(INTAPalettePaintIcon *pintf)
  {
    TAutoDriver<INTAPalettePaintIcon>::Bind(pintf, false);
    return *this;
  }

  INTAPalettePaintIconDispT& operator=(INTAPalettePaintIconPtr pintf)
  {
    TAutoDriver<INTAPalettePaintIcon>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall Paint(LPUNKNOWN graphics/*[in]*/, long X/*[in]*/, long Y/*[in]*/, 
                                   Borland_studio_toolsapi_tlb::NTAPaintIconSize iconSize/*[in]*/);

};
typedef INTAPalettePaintIconDispT<INTAPalettePaintIcon> INTAPalettePaintIconDisp;

typedef TComInterface<IOTAPaletteDragAcceptor>  TCOMIOTAPaletteDragAcceptor;

// *********************************************************************//
// DispIntf:  IOTAPaletteDragAcceptor
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {971ABE7B-ED20-476B-9E96-CBA792B87BF2}
// *********************************************************************//
template<class T>
class IOTAPaletteDragAcceptorDispT : public TAutoDriver<IOTAPaletteDragAcceptor>
{
public:
  IOTAPaletteDragAcceptorDispT(){}

  IOTAPaletteDragAcceptorDispT(IOTAPaletteDragAcceptor *pintf)
  {
    TAutoDriver<IOTAPaletteDragAcceptor>::Bind(pintf, false);
  }

  IOTAPaletteDragAcceptorDispT(IOTAPaletteDragAcceptorPtr pintf)
  {
    TAutoDriver<IOTAPaletteDragAcceptor>::Bind(pintf, true);
  }

  IOTAPaletteDragAcceptorDispT& operator=(IOTAPaletteDragAcceptor *pintf)
  {
    TAutoDriver<IOTAPaletteDragAcceptor>::Bind(pintf, false);
    return *this;
  }

  IOTAPaletteDragAcceptorDispT& operator=(IOTAPaletteDragAcceptorPtr pintf)
  {
    TAutoDriver<IOTAPaletteDragAcceptor>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall get_Handle(long* pRetVal/*[out,retval]*/);
  long            __fastcall get_Handle(void);

  __property   long            Handle = {read = get_Handle};
};
typedef IOTAPaletteDragAcceptorDispT<IOTAPaletteDragAcceptor> IOTAPaletteDragAcceptorDisp;

typedef TComInterface<IOTADesignerDragAcceptor>  TCOMIOTADesignerDragAcceptor;

// *********************************************************************//
// DispIntf:  IOTADesignerDragAcceptor
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E79FE430-EFE0-4C54-AB09-103124344394}
// *********************************************************************//
template<class T>
class IOTADesignerDragAcceptorDispT : public TAutoDriver<IOTADesignerDragAcceptor>
{
public:
  IOTADesignerDragAcceptorDispT(){}

  IOTADesignerDragAcceptorDispT(IOTADesignerDragAcceptor *pintf)
  {
    TAutoDriver<IOTADesignerDragAcceptor>::Bind(pintf, false);
  }

  IOTADesignerDragAcceptorDispT(IOTADesignerDragAcceptorPtr pintf)
  {
    TAutoDriver<IOTADesignerDragAcceptor>::Bind(pintf, true);
  }

  IOTADesignerDragAcceptorDispT& operator=(IOTADesignerDragAcceptor *pintf)
  {
    TAutoDriver<IOTADesignerDragAcceptor>::Bind(pintf, false);
    return *this;
  }

  IOTADesignerDragAcceptorDispT& operator=(IOTADesignerDragAcceptorPtr pintf)
  {
    TAutoDriver<IOTADesignerDragAcceptor>::Bind(pintf, true);
    return *this;
  }


};
typedef IOTADesignerDragAcceptorDispT<IOTADesignerDragAcceptor> IOTADesignerDragAcceptorDisp;

typedef TComInterface<IOTACodeEditorDragAcceptor>  TCOMIOTACodeEditorDragAcceptor;

// *********************************************************************//
// DispIntf:  IOTACodeEditorDragAcceptor
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3BF605F3-4634-4CA7-9C72-8AC9AF350B05}
// *********************************************************************//
template<class T>
class IOTACodeEditorDragAcceptorDispT : public TAutoDriver<IOTACodeEditorDragAcceptor>
{
public:
  IOTACodeEditorDragAcceptorDispT(){}

  IOTACodeEditorDragAcceptorDispT(IOTACodeEditorDragAcceptor *pintf)
  {
    TAutoDriver<IOTACodeEditorDragAcceptor>::Bind(pintf, false);
  }

  IOTACodeEditorDragAcceptorDispT(IOTACodeEditorDragAcceptorPtr pintf)
  {
    TAutoDriver<IOTACodeEditorDragAcceptor>::Bind(pintf, true);
  }

  IOTACodeEditorDragAcceptorDispT& operator=(IOTACodeEditorDragAcceptor *pintf)
  {
    TAutoDriver<IOTACodeEditorDragAcceptor>::Bind(pintf, false);
    return *this;
  }

  IOTACodeEditorDragAcceptorDispT& operator=(IOTACodeEditorDragAcceptorPtr pintf)
  {
    TAutoDriver<IOTACodeEditorDragAcceptor>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall get_EditorControl(long* pRetVal/*[out,retval]*/);
  long            __fastcall get_EditorControl(void);

  __property   long            EditorControl = {read = get_EditorControl};
};
typedef IOTACodeEditorDragAcceptorDispT<IOTACodeEditorDragAcceptor> IOTACodeEditorDragAcceptorDisp;

typedef TComInterface<IOTAPaletteDragDropOp>  TCOMIOTAPaletteDragDropOp;

// *********************************************************************//
// DispIntf:  IOTAPaletteDragDropOp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FE6AE3E9-F514-4CD7-BFD9-21CAD6FB42AA}
// *********************************************************************//
template<class T>
class IOTAPaletteDragDropOpDispT : public TAutoDriver<IOTAPaletteDragDropOp>
{
public:
  IOTAPaletteDragDropOpDispT(){}

  IOTAPaletteDragDropOpDispT(IOTAPaletteDragDropOp *pintf)
  {
    TAutoDriver<IOTAPaletteDragDropOp>::Bind(pintf, false);
  }

  IOTAPaletteDragDropOpDispT(IOTAPaletteDragDropOpPtr pintf)
  {
    TAutoDriver<IOTAPaletteDragDropOp>::Bind(pintf, true);
  }

  IOTAPaletteDragDropOpDispT& operator=(IOTAPaletteDragDropOp *pintf)
  {
    TAutoDriver<IOTAPaletteDragDropOp>::Bind(pintf, false);
    return *this;
  }

  IOTAPaletteDragDropOpDispT& operator=(IOTAPaletteDragDropOpPtr pintf)
  {
    TAutoDriver<IOTAPaletteDragDropOp>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall DragOver(Borland_studio_toolsapi_tlb::IOTAPaletteDragAcceptor* target/*[in]*/
                                      , long X/*[in]*/, long Y/*[in]*/, 
                                      Borland_studio_toolsapi_tlb::PalDragState state/*[in]*/, 
                                      VARIANT_BOOL* accept/*[in,out]*/);
  HRESULT         __fastcall DragDrop(Borland_studio_toolsapi_tlb::IOTAPaletteDragAcceptor* target/*[in]*/
                                      , long X/*[in]*/, long Y/*[in]*/);

};
typedef IOTAPaletteDragDropOpDispT<IOTAPaletteDragDropOp> IOTAPaletteDragDropOpDisp;

typedef TComInterface<IOTABasePaletteItem>  TCOMIOTABasePaletteItem;

// *********************************************************************//
// DispIntf:  IOTABasePaletteItem
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {91097078-4B81-47DC-A4DB-569EA5AC7194}
// *********************************************************************//
template<class T>
class IOTABasePaletteItemDispT : public TAutoDriver<IOTABasePaletteItem>
{
public:
  IOTABasePaletteItemDispT(){}

  IOTABasePaletteItemDispT(IOTABasePaletteItem *pintf)
  {
    TAutoDriver<IOTABasePaletteItem>::Bind(pintf, false);
  }

  IOTABasePaletteItemDispT(IOTABasePaletteItemPtr pintf)
  {
    TAutoDriver<IOTABasePaletteItem>::Bind(pintf, true);
  }

  IOTABasePaletteItemDispT& operator=(IOTABasePaletteItem *pintf)
  {
    TAutoDriver<IOTABasePaletteItem>::Bind(pintf, false);
    return *this;
  }

  IOTABasePaletteItemDispT& operator=(IOTABasePaletteItemPtr pintf)
  {
    TAutoDriver<IOTABasePaletteItem>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall get_CanDelete(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_CanDelete(void);
  HRESULT         __fastcall get_HelpName(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_HelpName(void);
  HRESULT         __fastcall set_HelpName(BSTR pRetVal/*[in]*/);
  HRESULT         __fastcall get_hintText(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_hintText(void);
  HRESULT         __fastcall set_hintText(BSTR pRetVal/*[in]*/);
  HRESULT         __fastcall get_IDString(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_IDString(void);
  HRESULT         __fastcall get_Name(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_Name(void);
  HRESULT         __fastcall set_Name(BSTR pRetVal/*[in]*/);
  HRESULT         __fastcall get_Visible(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_Visible(void);
  HRESULT         __fastcall set_Visible(VARIANT_BOOL pRetVal/*[in]*/);
  HRESULT         __fastcall Execute();
  HRESULT         __fastcall Delete();

  __property   VARIANT_BOOL    CanDelete = {read = get_CanDelete};
  __property   BSTR            HelpName = {read = get_HelpName, write = set_HelpName};
  __property   BSTR            hintText = {read = get_hintText, write = set_hintText};
  __property   BSTR            IDString = {read = get_IDString};
  __property   BSTR            Name = {read = get_Name, write = set_Name};
  __property   VARIANT_BOOL    Visible = {read = get_Visible, write = set_Visible};
};
typedef IOTABasePaletteItemDispT<IOTABasePaletteItem> IOTABasePaletteItemDisp;

typedef TComInterface<IOTAComponentPaletteItem>  TCOMIOTAComponentPaletteItem;

// *********************************************************************//
// DispIntf:  IOTAComponentPaletteItem
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7B7807E5-9C1A-4140-86DB-BF47B3B52FE3}
// *********************************************************************//
template<class T>
class IOTAComponentPaletteItemDispT : public TAutoDriver<IOTAComponentPaletteItem>
{
public:
  IOTAComponentPaletteItemDispT(){}

  IOTAComponentPaletteItemDispT(IOTAComponentPaletteItem *pintf)
  {
    TAutoDriver<IOTAComponentPaletteItem>::Bind(pintf, false);
  }

  IOTAComponentPaletteItemDispT(IOTAComponentPaletteItemPtr pintf)
  {
    TAutoDriver<IOTAComponentPaletteItem>::Bind(pintf, true);
  }

  IOTAComponentPaletteItemDispT& operator=(IOTAComponentPaletteItem *pintf)
  {
    TAutoDriver<IOTAComponentPaletteItem>::Bind(pintf, false);
    return *this;
  }

  IOTAComponentPaletteItemDispT& operator=(IOTAComponentPaletteItemPtr pintf)
  {
    TAutoDriver<IOTAComponentPaletteItem>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall get_PackageName(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_PackageName(void);
  HRESULT         __fastcall set_PackageName(BSTR pRetVal/*[in]*/);
  HRESULT         __fastcall get_className(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_className(void);
  HRESULT         __fastcall set_className(BSTR pRetVal/*[in]*/);
  HRESULT         __fastcall get_UnitName(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_UnitName(void);
  HRESULT         __fastcall set_UnitName(BSTR pRetVal/*[in]*/);

  __property   BSTR            PackageName = {read = get_PackageName, write = set_PackageName};
  __property   BSTR            className = {read = get_className, write = set_className};
  __property   BSTR            UnitName = {read = get_UnitName, write = set_UnitName};
};
typedef IOTAComponentPaletteItemDispT<IOTAComponentPaletteItem> IOTAComponentPaletteItemDisp;

typedef TComInterface<IOTAPaletteGroup>  TCOMIOTAPaletteGroup;

// *********************************************************************//
// DispIntf:  IOTAPaletteGroup
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2900C9C3-3F4C-441C-BD46-995239F812C5}
// *********************************************************************//
template<class T>
class IOTAPaletteGroupDispT : public TAutoDriver<IOTAPaletteGroup>
{
public:
  IOTAPaletteGroupDispT(){}

  IOTAPaletteGroupDispT(IOTAPaletteGroup *pintf)
  {
    TAutoDriver<IOTAPaletteGroup>::Bind(pintf, false);
  }

  IOTAPaletteGroupDispT(IOTAPaletteGroupPtr pintf)
  {
    TAutoDriver<IOTAPaletteGroup>::Bind(pintf, true);
  }

  IOTAPaletteGroupDispT& operator=(IOTAPaletteGroup *pintf)
  {
    TAutoDriver<IOTAPaletteGroup>::Bind(pintf, false);
    return *this;
  }

  IOTAPaletteGroupDispT& operator=(IOTAPaletteGroupPtr pintf)
  {
    TAutoDriver<IOTAPaletteGroup>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall get_Count(long* pRetVal/*[out,retval]*/);
  long            __fastcall get_Count(void);
  HRESULT         __fastcall GetItem(long index/*[in]*/, 
                                     Borland_studio_toolsapi_tlb::IOTABasePaletteItem** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTABasePaletteItem* __fastcall GetItem(long index/*[in]*/);
  HRESULT         __fastcall AddGroup(BSTR Name/*[in]*/, BSTR IDString/*[in]*/, 
                                      Borland_studio_toolsapi_tlb::IOTAPaletteGroup** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAPaletteGroup* __fastcall AddGroup(BSTR Name/*[in]*/, 
                                                                     BSTR IDString/*[in]*/);
  HRESULT         __fastcall AddItem(Borland_studio_toolsapi_tlb::IOTABasePaletteItem* Item/*[in]*/
                                     , long* pRetVal/*[out,retval]*/);
  long            __fastcall AddItem(Borland_studio_toolsapi_tlb::IOTABasePaletteItem* Item/*[in]*/);
  HRESULT         __fastcall Clear();
  HRESULT         __fastcall FindItem(BSTR IDString/*[in]*/, VARIANT_BOOL recurse/*[in]*/, 
                                      Borland_studio_toolsapi_tlb::IOTABasePaletteItem** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTABasePaletteItem* __fastcall FindItem(BSTR IDString/*[in]*/, 
                                                                        VARIANT_BOOL recurse/*[in]*/);
  HRESULT         __fastcall FindItemByName(BSTR Name/*[in]*/, VARIANT_BOOL recurse/*[in]*/, 
                                            Borland_studio_toolsapi_tlb::IOTABasePaletteItem** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTABasePaletteItem* __fastcall FindItemByName(BSTR Name/*[in]*/, 
                                                                              VARIANT_BOOL recurse/*[in]*/);
  HRESULT         __fastcall FindItemGroup(BSTR IDString/*[in]*/, 
                                           Borland_studio_toolsapi_tlb::IOTAPaletteGroup** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAPaletteGroup* __fastcall FindItemGroup(BSTR IDString/*[in]*/);
  HRESULT         __fastcall FindItemGroupByName(BSTR Name/*[in]*/, 
                                                 Borland_studio_toolsapi_tlb::IOTAPaletteGroup** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAPaletteGroup* __fastcall FindItemGroupByName(BSTR Name/*[in]*/);
  HRESULT         __fastcall InsertItem(long index/*[in]*/, 
                                        Borland_studio_toolsapi_tlb::IOTABasePaletteItem* Item/*[in]*/);
  HRESULT         __fastcall IndexOf(Borland_studio_toolsapi_tlb::IOTABasePaletteItem* Item/*[in]*/
                                     , long* pRetVal/*[out,retval]*/);
  long            __fastcall IndexOf(Borland_studio_toolsapi_tlb::IOTABasePaletteItem* Item/*[in]*/);
  HRESULT         __fastcall Move(long CurIndex/*[in]*/, long NewIndex/*[in]*/);
  HRESULT         __fastcall RemoveItem(BSTR IDString/*[in]*/, VARIANT_BOOL recurse/*[in]*/, 
                                        VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall RemoveItem(BSTR IDString/*[in]*/, VARIANT_BOOL recurse/*[in]*/);

  __property   long            Count = {read = get_Count};
};
typedef IOTAPaletteGroupDispT<IOTAPaletteGroup> IOTAPaletteGroupDisp;

typedef TComInterface<IOTAPaletteColorScheme>  TCOMIOTAPaletteColorScheme;

// *********************************************************************//
// DispIntf:  IOTAPaletteColorScheme
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D449A0A3-BCCC-4D7D-9BCD-7F86183AE09C}
// *********************************************************************//
template<class T>
class IOTAPaletteColorSchemeDispT : public TAutoDriver<IOTAPaletteColorScheme>
{
public:
  IOTAPaletteColorSchemeDispT(){}

  IOTAPaletteColorSchemeDispT(IOTAPaletteColorScheme *pintf)
  {
    TAutoDriver<IOTAPaletteColorScheme>::Bind(pintf, false);
  }

  IOTAPaletteColorSchemeDispT(IOTAPaletteColorSchemePtr pintf)
  {
    TAutoDriver<IOTAPaletteColorScheme>::Bind(pintf, true);
  }

  IOTAPaletteColorSchemeDispT& operator=(IOTAPaletteColorScheme *pintf)
  {
    TAutoDriver<IOTAPaletteColorScheme>::Bind(pintf, false);
    return *this;
  }

  IOTAPaletteColorSchemeDispT& operator=(IOTAPaletteColorSchemePtr pintf)
  {
    TAutoDriver<IOTAPaletteColorScheme>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall get_ButtonColors(/*AUTO_PARAM_ERROR(Borland_studio_toolsapi_tlb::OTAPaletteButtonColors* pRetVal)*/ VARIANT*  pRetVal);
  HRESULT         __fastcall GetColor(long index/*[in]*/, 
                                      /*AUTO_PARAM_ERROR(Borland_studio_toolsapi_tlb::OTAPaletteColorItem* pRetVal)*/ VARIANT*  pRetVal);
  HRESULT         __fastcall get_Count(long* pRetVal/*[out,retval]*/);
  long            __fastcall get_Count(void);
  HRESULT         __fastcall get_IDString(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_IDString(void);
  HRESULT         __fastcall get_Name(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_Name(void);

  __property   long            Count = {read = get_Count};
  __property   BSTR            IDString = {read = get_IDString};
  __property   BSTR            Name = {read = get_Name};
};
typedef IOTAPaletteColorSchemeDispT<IOTAPaletteColorScheme> IOTAPaletteColorSchemeDisp;

// *********************************************************************//
// SmartIntf: TCOM_ItemEventArgs
// Interface: _ItemEventArgs
// *********************************************************************//
template <class T /* _ItemEventArgs */ >
class TCOM_ItemEventArgsT : public TComInterface<_ItemEventArgs>, public TComInterfaceBase<IUnknown>
{
public:
  TCOM_ItemEventArgsT() {}
  TCOM_ItemEventArgsT(_ItemEventArgs *intf, bool addRef = false) : TComInterface<_ItemEventArgs>(intf, addRef) {}
  TCOM_ItemEventArgsT(const TCOM_ItemEventArgsT& src) : TComInterface<_ItemEventArgs>(src) {}
  TCOM_ItemEventArgsT& operator=(const TCOM_ItemEventArgsT& src) { Bind(src, true); return *this;}


};
typedef TCOM_ItemEventArgsT<_ItemEventArgs> TCOM_ItemEventArgs;

// *********************************************************************//
// DispIntf:  _ItemEventArgs
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {695DA742-994C-3BA7-8C80-6FB078C1F9DD}
// *********************************************************************//
template<class T>
class _ItemEventArgsDispT : public TAutoDriver<_ItemEventArgs>
{
public:
  _ItemEventArgsDispT(){}

  _ItemEventArgsDispT(_ItemEventArgs *pintf)
  {
    TAutoDriver<_ItemEventArgs>::Bind(pintf, false);
  }

  _ItemEventArgsDispT(_ItemEventArgsPtr pintf)
  {
    TAutoDriver<_ItemEventArgs>::Bind(pintf, true);
  }

  _ItemEventArgsDispT& operator=(_ItemEventArgs *pintf)
  {
    TAutoDriver<_ItemEventArgs>::Bind(pintf, false);
    return *this;
  }

  _ItemEventArgsDispT& operator=(_ItemEventArgsPtr pintf)
  {
    TAutoDriver<_ItemEventArgs>::Bind(pintf, true);
    return *this;
  }

  HRESULT BindDefault()
  {
    return OLECHECK(Bind(CLSID_ItemEventArgs));
  }

  HRESULT BindRunning()
  {
    return BindToActive(CLSID_ItemEventArgs);
  }


};
typedef _ItemEventArgsDispT<_ItemEventArgs> _ItemEventArgsDisp;

// *********************************************************************//
// SmartIntf: TCOM_SelectedEventArgs
// Interface: _SelectedEventArgs
// *********************************************************************//
template <class T /* _SelectedEventArgs */ >
class TCOM_SelectedEventArgsT : public TComInterface<_SelectedEventArgs>, public TComInterfaceBase<IUnknown>
{
public:
  TCOM_SelectedEventArgsT() {}
  TCOM_SelectedEventArgsT(_SelectedEventArgs *intf, bool addRef = false) : TComInterface<_SelectedEventArgs>(intf, addRef) {}
  TCOM_SelectedEventArgsT(const TCOM_SelectedEventArgsT& src) : TComInterface<_SelectedEventArgs>(src) {}
  TCOM_SelectedEventArgsT& operator=(const TCOM_SelectedEventArgsT& src) { Bind(src, true); return *this;}


};
typedef TCOM_SelectedEventArgsT<_SelectedEventArgs> TCOM_SelectedEventArgs;

// *********************************************************************//
// DispIntf:  _SelectedEventArgs
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {071E7A2C-C20C-39F9-ADB4-F774D3E3D92B}
// *********************************************************************//
template<class T>
class _SelectedEventArgsDispT : public TAutoDriver<_SelectedEventArgs>
{
public:
  _SelectedEventArgsDispT(){}

  _SelectedEventArgsDispT(_SelectedEventArgs *pintf)
  {
    TAutoDriver<_SelectedEventArgs>::Bind(pintf, false);
  }

  _SelectedEventArgsDispT(_SelectedEventArgsPtr pintf)
  {
    TAutoDriver<_SelectedEventArgs>::Bind(pintf, true);
  }

  _SelectedEventArgsDispT& operator=(_SelectedEventArgs *pintf)
  {
    TAutoDriver<_SelectedEventArgs>::Bind(pintf, false);
    return *this;
  }

  _SelectedEventArgsDispT& operator=(_SelectedEventArgsPtr pintf)
  {
    TAutoDriver<_SelectedEventArgs>::Bind(pintf, true);
    return *this;
  }

  HRESULT BindDefault()
  {
    return OLECHECK(Bind(CLSID_SelectedEventArgs));
  }

  HRESULT BindRunning()
  {
    return BindToActive(CLSID_SelectedEventArgs);
  }


};
typedef _SelectedEventArgsDispT<_SelectedEventArgs> _SelectedEventArgsDisp;

// *********************************************************************//
// SmartIntf: TCOM_ItemEventHandler
// Interface: _ItemEventHandler
// *********************************************************************//
template <class T /* _ItemEventHandler */ >
class TCOM_ItemEventHandlerT : public TComInterface<_ItemEventHandler>, public TComInterfaceBase<IUnknown>
{
public:
  TCOM_ItemEventHandlerT() {}
  TCOM_ItemEventHandlerT(_ItemEventHandler *intf, bool addRef = false) : TComInterface<_ItemEventHandler>(intf, addRef) {}
  TCOM_ItemEventHandlerT(const TCOM_ItemEventHandlerT& src) : TComInterface<_ItemEventHandler>(src) {}
  TCOM_ItemEventHandlerT& operator=(const TCOM_ItemEventHandlerT& src) { Bind(src, true); return *this;}


};
typedef TCOM_ItemEventHandlerT<_ItemEventHandler> TCOM_ItemEventHandler;

// *********************************************************************//
// DispIntf:  _ItemEventHandler
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {4EBF472F-B506-308F-8CFD-C7F554ED1233}
// *********************************************************************//
template<class T>
class _ItemEventHandlerDispT : public TAutoDriver<_ItemEventHandler>
{
public:
  _ItemEventHandlerDispT(){}

  _ItemEventHandlerDispT(_ItemEventHandler *pintf)
  {
    TAutoDriver<_ItemEventHandler>::Bind(pintf, false);
  }

  _ItemEventHandlerDispT(_ItemEventHandlerPtr pintf)
  {
    TAutoDriver<_ItemEventHandler>::Bind(pintf, true);
  }

  _ItemEventHandlerDispT& operator=(_ItemEventHandler *pintf)
  {
    TAutoDriver<_ItemEventHandler>::Bind(pintf, false);
    return *this;
  }

  _ItemEventHandlerDispT& operator=(_ItemEventHandlerPtr pintf)
  {
    TAutoDriver<_ItemEventHandler>::Bind(pintf, true);
    return *this;
  }

  HRESULT BindDefault()
  {
    return OLECHECK(Bind(CLSID_ItemEventHandler));
  }

  HRESULT BindRunning()
  {
    return BindToActive(CLSID_ItemEventHandler);
  }


};
typedef _ItemEventHandlerDispT<_ItemEventHandler> _ItemEventHandlerDisp;

// *********************************************************************//
// SmartIntf: TCOM_SelectedEventHandler
// Interface: _SelectedEventHandler
// *********************************************************************//
template <class T /* _SelectedEventHandler */ >
class TCOM_SelectedEventHandlerT : public TComInterface<_SelectedEventHandler>, public TComInterfaceBase<IUnknown>
{
public:
  TCOM_SelectedEventHandlerT() {}
  TCOM_SelectedEventHandlerT(_SelectedEventHandler *intf, bool addRef = false) : TComInterface<_SelectedEventHandler>(intf, addRef) {}
  TCOM_SelectedEventHandlerT(const TCOM_SelectedEventHandlerT& src) : TComInterface<_SelectedEventHandler>(src) {}
  TCOM_SelectedEventHandlerT& operator=(const TCOM_SelectedEventHandlerT& src) { Bind(src, true); return *this;}


};
typedef TCOM_SelectedEventHandlerT<_SelectedEventHandler> TCOM_SelectedEventHandler;

// *********************************************************************//
// DispIntf:  _SelectedEventHandler
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {550527A4-F53E-32DA-9AD9-F4497B17A7EB}
// *********************************************************************//
template<class T>
class _SelectedEventHandlerDispT : public TAutoDriver<_SelectedEventHandler>
{
public:
  _SelectedEventHandlerDispT(){}

  _SelectedEventHandlerDispT(_SelectedEventHandler *pintf)
  {
    TAutoDriver<_SelectedEventHandler>::Bind(pintf, false);
  }

  _SelectedEventHandlerDispT(_SelectedEventHandlerPtr pintf)
  {
    TAutoDriver<_SelectedEventHandler>::Bind(pintf, true);
  }

  _SelectedEventHandlerDispT& operator=(_SelectedEventHandler *pintf)
  {
    TAutoDriver<_SelectedEventHandler>::Bind(pintf, false);
    return *this;
  }

  _SelectedEventHandlerDispT& operator=(_SelectedEventHandlerPtr pintf)
  {
    TAutoDriver<_SelectedEventHandler>::Bind(pintf, true);
    return *this;
  }

  HRESULT BindDefault()
  {
    return OLECHECK(Bind(CLSID_SelectedEventHandler));
  }

  HRESULT BindRunning()
  {
    return BindToActive(CLSID_SelectedEventHandler);
  }


};
typedef _SelectedEventHandlerDispT<_SelectedEventHandler> _SelectedEventHandlerDisp;

typedef TComInterface<IOTAPaletteServices>  TCOMIOTAPaletteServices;

// *********************************************************************//
// DispIntf:  IOTAPaletteServices
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D1F0E26A-7EF1-4390-B86E-8A24CB61FF1B}
// *********************************************************************//
template<class T>
class IOTAPaletteServicesDispT : public TAutoDriver<IOTAPaletteServices>
{
public:
  IOTAPaletteServicesDispT(){}

  IOTAPaletteServicesDispT(IOTAPaletteServices *pintf)
  {
    TAutoDriver<IOTAPaletteServices>::Bind(pintf, false);
  }

  IOTAPaletteServicesDispT(IOTAPaletteServicesPtr pintf)
  {
    TAutoDriver<IOTAPaletteServices>::Bind(pintf, true);
  }

  IOTAPaletteServicesDispT& operator=(IOTAPaletteServices *pintf)
  {
    TAutoDriver<IOTAPaletteServices>::Bind(pintf, false);
    return *this;
  }

  IOTAPaletteServicesDispT& operator=(IOTAPaletteServicesPtr pintf)
  {
    TAutoDriver<IOTAPaletteServices>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall get_SelectedTool(Borland_studio_toolsapi_tlb::IOTABasePaletteItem** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTABasePaletteItemPtr __fastcall get_SelectedTool(void);
  HRESULT         __fastcall _set_SelectedTool(Borland_studio_toolsapi_tlb::IOTABasePaletteItem* pRetVal/*[in]*/);
  HRESULT         __fastcall get_BaseGroup(Borland_studio_toolsapi_tlb::IOTAPaletteGroup** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAPaletteGroupPtr __fastcall get_BaseGroup(void);
  HRESULT         __fastcall OnBeginUpdate();
  HRESULT         __fastcall OnEndUpdate();
  HRESULT         __fastcall OnItemAdded(Borland_studio_toolsapi_tlb::IOTAPaletteGroup* group/*[in]*/
                                         , 
                                         Borland_studio_toolsapi_tlb::IOTABasePaletteItem* Item/*[in]*/);
  HRESULT         __fastcall OnItemRemoved(Borland_studio_toolsapi_tlb::IOTAPaletteGroup* gorup/*[in]*/
                                           , 
                                           Borland_studio_toolsapi_tlb::IOTABasePaletteItem* Item/*[in]*/);
  HRESULT         __fastcall OnSelectedToolChanged(Borland_studio_toolsapi_tlb::IOTABasePaletteItem* Item/*[in]*/);
  HRESULT         __fastcall OnModified();
  HRESULT         __fastcall RegisterColorScheme(Borland_studio_toolsapi_tlb::IOTAPaletteColorScheme* ColorScheme/*[in]*/
                                                 , long* pRetVal/*[out,retval]*/);
  long            __fastcall RegisterColorScheme(Borland_studio_toolsapi_tlb::IOTAPaletteColorScheme* ColorScheme/*[in]*/);
  HRESULT         __fastcall UnregisterColorScheme(long index/*[in]*/);
  HRESULT         __fastcall GetColorScheme(long index/*[in]*/, 
                                            Borland_studio_toolsapi_tlb::IOTAPaletteColorScheme** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAPaletteColorScheme* __fastcall GetColorScheme(long index/*[in]*/);
  HRESULT         __fastcall RegisterDragAcceptor(Borland_studio_toolsapi_tlb::IOTAPaletteDragAcceptor* acceptor/*[in]*/
                                                  , long* pRetVal/*[out,retval]*/);
  long            __fastcall RegisterDragAcceptor(Borland_studio_toolsapi_tlb::IOTAPaletteDragAcceptor* acceptor/*[in]*/);
  HRESULT         __fastcall UnregisterDragAcceptor(long index/*[in]*/);
  HRESULT         __fastcall GetDragAcceptor(long index/*[in]*/, 
                                             Borland_studio_toolsapi_tlb::IOTAPaletteDragAcceptor** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAPaletteDragAcceptor* __fastcall GetDragAcceptor(long index/*[in]*/);
  HRESULT         __fastcall AddPaletteState(BSTR state/*[in]*/);
  HRESULT         __fastcall RemovePaletteState(BSTR state/*[in]*/);
  HRESULT         __fastcall ContainsPaletteState(BSTR state/*[in]*/, 
                                                  VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall ContainsPaletteState(BSTR state/*[in]*/);
  HRESULT         __fastcall get_PaletteState(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_PaletteState(void);
  HRESULT         __fastcall add_Modified(Mscorlib_tlb::_EventHandler* value/*[in]*/);
  HRESULT         __fastcall remove_Modified(Mscorlib_tlb::_EventHandler* value/*[in]*/);
  HRESULT         __fastcall add_Closed(Mscorlib_tlb::_EventHandler* value/*[in]*/);
  HRESULT         __fastcall remove_Closed(Mscorlib_tlb::_EventHandler* value/*[in]*/);
  HRESULT         __fastcall add_ItemAdded(Borland_studio_toolsapi_tlb::_ItemEventHandler* value/*[in]*/);
  HRESULT         __fastcall remove_ItemAdded(Borland_studio_toolsapi_tlb::_ItemEventHandler* value/*[in]*/);
  HRESULT         __fastcall add_ItemRemoved(Borland_studio_toolsapi_tlb::_ItemEventHandler* value/*[in]*/);
  HRESULT         __fastcall remove_ItemRemoved(Borland_studio_toolsapi_tlb::_ItemEventHandler* value/*[in]*/);
  HRESULT         __fastcall add_SelectedToolChanged(Borland_studio_toolsapi_tlb::_SelectedEventHandler* value/*[in]*/);
  HRESULT         __fastcall remove_SelectedToolChanged(Borland_studio_toolsapi_tlb::_SelectedEventHandler* value/*[in]*/);
  HRESULT         __fastcall add_BeginUpdate(Mscorlib_tlb::_EventHandler* value/*[in]*/);
  HRESULT         __fastcall remove_BeginUpdate(Mscorlib_tlb::_EventHandler* value/*[in]*/);
  HRESULT         __fastcall add_EndUpdate(Mscorlib_tlb::_EventHandler* value/*[in]*/);
  HRESULT         __fastcall remove_EndUpdate(Mscorlib_tlb::_EventHandler* value/*[in]*/);

  __property   Borland_studio_toolsapi_tlb::IOTABasePaletteItemPtr SelectedTool = {read = get_SelectedTool};
  __property   Borland_studio_toolsapi_tlb::IOTAPaletteGroupPtr BaseGroup = {read = get_BaseGroup};
  __property   BSTR            PaletteState = {read = get_PaletteState};
};
typedef IOTAPaletteServicesDispT<IOTAPaletteServices> IOTAPaletteServicesDisp;

typedef TComInterface<IOTAPackageInstallService>  TCOMIOTAPackageInstallService;

// *********************************************************************//
// DispIntf:  IOTAPackageInstallService
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B3345543-6C48-4C54-B24E-57F81FAB4BA9}
// *********************************************************************//
template<class T>
class IOTAPackageInstallServiceDispT : public TAutoDriver<IOTAPackageInstallService>
{
public:
  IOTAPackageInstallServiceDispT(){}

  IOTAPackageInstallServiceDispT(IOTAPackageInstallService *pintf)
  {
    TAutoDriver<IOTAPackageInstallService>::Bind(pintf, false);
  }

  IOTAPackageInstallServiceDispT(IOTAPackageInstallServicePtr pintf)
  {
    TAutoDriver<IOTAPackageInstallService>::Bind(pintf, true);
  }

  IOTAPackageInstallServiceDispT& operator=(IOTAPackageInstallService *pintf)
  {
    TAutoDriver<IOTAPackageInstallService>::Bind(pintf, false);
    return *this;
  }

  IOTAPackageInstallServiceDispT& operator=(IOTAPackageInstallServicePtr pintf)
  {
    TAutoDriver<IOTAPackageInstallService>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall get_InstalledPackages(LPSAFEARRAY* pRetVal/*[out,retval]*/);
  LPSAFEARRAY     __fastcall get_InstalledPackages(void);
  HRESULT         __fastcall GetPackageInformation(BSTR fileName/*[in]*/, 
                                                   Borland_studio_toolsapi_tlb::IOTAPackageInformation** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAPackageInformation* __fastcall GetPackageInformation(BSTR fileName/*[in]*/);
  HRESULT         __fastcall RemovePackageInformation(Borland_studio_toolsapi_tlb::IOTAPackageInformation* info/*[in]*/);
  HRESULT         __fastcall Load();
  HRESULT         __fastcall Save();
  HRESULT         __fastcall GetPackageFromUnit(BSTR UnitName/*[in]*/, BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall GetPackageFromUnit(BSTR UnitName/*[in]*/);

};
typedef IOTAPackageInstallServiceDispT<IOTAPackageInstallService> IOTAPackageInstallServiceDisp;

typedef TComInterface<IOTAPackageInformation>  TCOMIOTAPackageInformation;

// *********************************************************************//
// DispIntf:  IOTAPackageInformation
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5B75654E-A005-474A-9456-5A675EDFA100}
// *********************************************************************//
template<class T>
class IOTAPackageInformationDispT : public TAutoDriver<IOTAPackageInformation>
{
public:
  IOTAPackageInformationDispT(){}

  IOTAPackageInformationDispT(IOTAPackageInformation *pintf)
  {
    TAutoDriver<IOTAPackageInformation>::Bind(pintf, false);
  }

  IOTAPackageInformationDispT(IOTAPackageInformationPtr pintf)
  {
    TAutoDriver<IOTAPackageInformation>::Bind(pintf, true);
  }

  IOTAPackageInformationDispT& operator=(IOTAPackageInformation *pintf)
  {
    TAutoDriver<IOTAPackageInformation>::Bind(pintf, false);
    return *this;
  }

  IOTAPackageInformationDispT& operator=(IOTAPackageInformationPtr pintf)
  {
    TAutoDriver<IOTAPackageInformation>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall get_PackageLocation(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_PackageLocation(void);
  HRESULT         __fastcall get_DisplayName(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_DisplayName(void);
  HRESULT         __fastcall get_Enabled(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_Enabled(void);
  HRESULT         __fastcall set_Enabled(VARIANT_BOOL pRetVal/*[in]*/);
  HRESULT         __fastcall get_Components(LPSAFEARRAY* pRetVal/*[out,retval]*/);
  LPSAFEARRAY     __fastcall get_Components(void);

  __property   BSTR            PackageLocation = {read = get_PackageLocation};
  __property   BSTR            DisplayName = {read = get_DisplayName};
  __property   VARIANT_BOOL    Enabled = {read = get_Enabled, write = set_Enabled};
};
typedef IOTAPackageInformationDispT<IOTAPackageInformation> IOTAPackageInformationDisp;

typedef TComInterface<IOTAPackageComponent>  TCOMIOTAPackageComponent;

// *********************************************************************//
// DispIntf:  IOTAPackageComponent
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {16C35C1D-DD6E-493D-9CF7-0F405045EA54}
// *********************************************************************//
template<class T>
class IOTAPackageComponentDispT : public TAutoDriver<IOTAPackageComponent>
{
public:
  IOTAPackageComponentDispT(){}

  IOTAPackageComponentDispT(IOTAPackageComponent *pintf)
  {
    TAutoDriver<IOTAPackageComponent>::Bind(pintf, false);
  }

  IOTAPackageComponentDispT(IOTAPackageComponentPtr pintf)
  {
    TAutoDriver<IOTAPackageComponent>::Bind(pintf, true);
  }

  IOTAPackageComponentDispT& operator=(IOTAPackageComponent *pintf)
  {
    TAutoDriver<IOTAPackageComponent>::Bind(pintf, false);
    return *this;
  }

  IOTAPackageComponentDispT& operator=(IOTAPackageComponentPtr pintf)
  {
    TAutoDriver<IOTAPackageComponent>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall get_Name(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_Name(void);
  HRESULT         __fastcall get_Unit(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_Unit(void);
  HRESULT         __fastcall get_Page(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_Page(void);
  HRESULT         __fastcall get_Qualified(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_Qualified(void);
  HRESULT         __fastcall get_Image(System_drawing_tlb::_Bitmap** pRetVal/*[out,retval]*/);
  System_drawing_tlb::_BitmapPtr __fastcall get_Image(void);
  HRESULT         __fastcall AddReferencesToProject(Borland_studio_toolsapi_tlb::IOTAProject* project/*[in]*/);
  HRESULT         __fastcall ComponentImage(Borland_studio_toolsapi_tlb::OTAComponentImageSize Size/*[in]*/
                                            , System_drawing_tlb::_Bitmap** pRetVal/*[out,retval]*/);
  System_drawing_tlb::_Bitmap* __fastcall ComponentImage(Borland_studio_toolsapi_tlb::OTAComponentImageSize Size/*[in]*/);

  __property   BSTR            Name = {read = get_Name};
  __property   BSTR            Unit = {read = get_Unit};
  __property   BSTR            Page = {read = get_Page};
  __property   BSTR            Qualified = {read = get_Qualified};
  __property   System_drawing_tlb::_BitmapPtr Image = {read = get_Image};
};
typedef IOTAPackageComponentDispT<IOTAPackageComponent> IOTAPackageComponentDisp;

typedef TComInterface<IOTAComponentList>  TCOMIOTAComponentList;

// *********************************************************************//
// DispIntf:  IOTAComponentList
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1F82ECAB-F49E-48D4-BD9E-97A01B14206B}
// *********************************************************************//
template<class T>
class IOTAComponentListDispT : public TAutoDriver<IOTAComponentList>
{
public:
  IOTAComponentListDispT(){}

  IOTAComponentListDispT(IOTAComponentList *pintf)
  {
    TAutoDriver<IOTAComponentList>::Bind(pintf, false);
  }

  IOTAComponentListDispT(IOTAComponentListPtr pintf)
  {
    TAutoDriver<IOTAComponentList>::Bind(pintf, true);
  }

  IOTAComponentListDispT& operator=(IOTAComponentList *pintf)
  {
    TAutoDriver<IOTAComponentList>::Bind(pintf, false);
    return *this;
  }

  IOTAComponentListDispT& operator=(IOTAComponentListPtr pintf)
  {
    TAutoDriver<IOTAComponentList>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall get_ComponentList(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_ComponentList(void);
  HRESULT         __fastcall GetPackageFromComponent(BSTR ComponentName/*[in]*/, 
                                                     BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall GetPackageFromComponent(BSTR ComponentName/*[in]*/);
  HRESULT         __fastcall GetUnitFromComponent(BSTR ComponentName/*[in]*/, 
                                                  BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall GetUnitFromComponent(BSTR ComponentName/*[in]*/);
  HRESULT         __fastcall GetPackageFromUnitName(BSTR UnitName/*[in]*/, 
                                                    VARIANT_BOOL UseNameSpace/*[in]*/, 
                                                    BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall GetPackageFromUnitName(BSTR UnitName/*[in]*/, 
                                                    VARIANT_BOOL UseNameSpace/*[in]*/);
  HRESULT         __fastcall AddReferencesToProject(Borland_studio_toolsapi_tlb::IOTAProject* project/*[in]*/
                                                    , BSTR ComponentName/*[in]*/);

  __property   BSTR            ComponentList = {read = get_ComponentList};
};
typedef IOTAComponentListDispT<IOTAComponentList> IOTAComponentListDisp;

typedef TComInterface<IOTAPackageRequires>  TCOMIOTAPackageRequires;

// *********************************************************************//
// DispIntf:  IOTAPackageRequires
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F8310D0E-48CC-4235-A002-0556700B1B10}
// *********************************************************************//
template<class T>
class IOTAPackageRequiresDispT : public TAutoDriver<IOTAPackageRequires>
{
public:
  IOTAPackageRequiresDispT(){}

  IOTAPackageRequiresDispT(IOTAPackageRequires *pintf)
  {
    TAutoDriver<IOTAPackageRequires>::Bind(pintf, false);
  }

  IOTAPackageRequiresDispT(IOTAPackageRequiresPtr pintf)
  {
    TAutoDriver<IOTAPackageRequires>::Bind(pintf, true);
  }

  IOTAPackageRequiresDispT& operator=(IOTAPackageRequires *pintf)
  {
    TAutoDriver<IOTAPackageRequires>::Bind(pintf, false);
    return *this;
  }

  IOTAPackageRequiresDispT& operator=(IOTAPackageRequiresPtr pintf)
  {
    TAutoDriver<IOTAPackageRequires>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall UpdateRequires(Borland_studio_toolsapi_tlb::IOTAProject* project/*[in]*/
                                            , BSTR Name/*[in]*/);

};
typedef IOTAPackageRequiresDispT<IOTAPackageRequires> IOTAPackageRequiresDisp;

typedef TComInterface<IOTASymbolHelp>  TCOMIOTASymbolHelp;

// *********************************************************************//
// DispIntf:  IOTASymbolHelp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D4FD47E3-3DA5-4FA3-A1F4-24EF81B72F4C}
// *********************************************************************//
template<class T>
class IOTASymbolHelpDispT : public TAutoDriver<IOTASymbolHelp>
{
public:
  IOTASymbolHelpDispT(){}

  IOTASymbolHelpDispT(IOTASymbolHelp *pintf)
  {
    TAutoDriver<IOTASymbolHelp>::Bind(pintf, false);
  }

  IOTASymbolHelpDispT(IOTASymbolHelpPtr pintf)
  {
    TAutoDriver<IOTASymbolHelp>::Bind(pintf, true);
  }

  IOTASymbolHelpDispT& operator=(IOTASymbolHelp *pintf)
  {
    TAutoDriver<IOTASymbolHelp>::Bind(pintf, false);
    return *this;
  }

  IOTASymbolHelpDispT& operator=(IOTASymbolHelpPtr pintf)
  {
    TAutoDriver<IOTASymbolHelp>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall GetHelpSymbolType(long pos/*[in]*/, BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall GetHelpSymbolType(long pos/*[in]*/);

};
typedef IOTASymbolHelpDispT<IOTASymbolHelp> IOTASymbolHelpDisp;

typedef TComInterface<IOTAStructureContext>  TCOMIOTAStructureContext;

// *********************************************************************//
// DispIntf:  IOTAStructureContext
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {67FD6512-C50F-4C83-8C2F-4E60340668D1}
// *********************************************************************//
template<class T>
class IOTAStructureContextDispT : public TAutoDriver<IOTAStructureContext>
{
public:
  IOTAStructureContextDispT(){}

  IOTAStructureContextDispT(IOTAStructureContext *pintf)
  {
    TAutoDriver<IOTAStructureContext>::Bind(pintf, false);
  }

  IOTAStructureContextDispT(IOTAStructureContextPtr pintf)
  {
    TAutoDriver<IOTAStructureContext>::Bind(pintf, true);
  }

  IOTAStructureContextDispT& operator=(IOTAStructureContext *pintf)
  {
    TAutoDriver<IOTAStructureContext>::Bind(pintf, false);
    return *this;
  }

  IOTAStructureContextDispT& operator=(IOTAStructureContextPtr pintf)
  {
    TAutoDriver<IOTAStructureContext>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall get_ContextIdent(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_ContextIdent(void);
  HRESULT         __fastcall get_StructureType(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_StructureType(void);
  HRESULT         __fastcall get_ViewOptions(long* pRetVal/*[out,retval]*/);
  long            __fastcall get_ViewOptions(void);
  HRESULT         __fastcall get_RootNodeCount(long* pRetVal/*[out,retval]*/);
  long            __fastcall get_RootNodeCount(void);
  HRESULT         __fastcall GetRootStructureNode(long index/*[in]*/, 
                                                  Borland_studio_toolsapi_tlb::IOTAStructureNode** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAStructureNode* __fastcall GetRootStructureNode(long index/*[in]*/);
  HRESULT         __fastcall NodeEdited(Borland_studio_toolsapi_tlb::IOTAStructureNode* node/*[in]*/);
  HRESULT         __fastcall NodeFocused(Borland_studio_toolsapi_tlb::IOTAStructureNode* node/*[in]*/);
  HRESULT         __fastcall NodeSelected(Borland_studio_toolsapi_tlb::IOTAStructureNode* node/*[in]*/);
  HRESULT         __fastcall DefaultNodeAction(Borland_studio_toolsapi_tlb::IOTAStructureNode* node/*[in]*/);
  HRESULT         __fastcall SameContext(Borland_studio_toolsapi_tlb::IOTAStructureContext* aContext/*[in]*/
                                         , VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall SameContext(Borland_studio_toolsapi_tlb::IOTAStructureContext* aContext/*[in]*/);
  HRESULT         __fastcall InitPopupMenu(Borland_studio_toolsapi_tlb::IOTAStructureNode* node/*[in]*/
                                           , 
                                           Borland_studio_toolsapi_tlb::IOTAStructureNodeMenuItem* popupMenu/*[in]*/);
  HRESULT         __fastcall AddRootNode(Borland_studio_toolsapi_tlb::IOTAStructureNode* ANode/*[in]*/
                                         , long index/*[in]*/);
  HRESULT         __fastcall RemoveRootNode(Borland_studio_toolsapi_tlb::IOTAStructureNode* ANode/*[in]*/);

  __property   BSTR            ContextIdent = {read = get_ContextIdent};
  __property   BSTR            StructureType = {read = get_StructureType};
  __property   long            ViewOptions = {read = get_ViewOptions};
  __property   long            RootNodeCount = {read = get_RootNodeCount};
};
typedef IOTAStructureContextDispT<IOTAStructureContext> IOTAStructureContextDisp;

typedef TComInterface<IOTAStructureNodeStatePreserver>  TCOMIOTAStructureNodeStatePreserver;

// *********************************************************************//
// DispIntf:  IOTAStructureNodeStatePreserver
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F6189580-87EE-4985-8866-7712D8DB4872}
// *********************************************************************//
template<class T>
class IOTAStructureNodeStatePreserverDispT : public TAutoDriver<IOTAStructureNodeStatePreserver>
{
public:
  IOTAStructureNodeStatePreserverDispT(){}

  IOTAStructureNodeStatePreserverDispT(IOTAStructureNodeStatePreserver *pintf)
  {
    TAutoDriver<IOTAStructureNodeStatePreserver>::Bind(pintf, false);
  }

  IOTAStructureNodeStatePreserverDispT(IOTAStructureNodeStatePreserverPtr pintf)
  {
    TAutoDriver<IOTAStructureNodeStatePreserver>::Bind(pintf, true);
  }

  IOTAStructureNodeStatePreserverDispT& operator=(IOTAStructureNodeStatePreserver *pintf)
  {
    TAutoDriver<IOTAStructureNodeStatePreserver>::Bind(pintf, false);
    return *this;
  }

  IOTAStructureNodeStatePreserverDispT& operator=(IOTAStructureNodeStatePreserverPtr pintf)
  {
    TAutoDriver<IOTAStructureNodeStatePreserver>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall get_NodePreservationMode(Borland_studio_toolsapi_tlb::OTANodePreservationMode* pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::OTANodePreservationMode __fastcall get_NodePreservationMode(void);
  HRESULT         __fastcall PreserveNodeStates();
  HRESULT         __fastcall RestoreNodeState(Borland_studio_toolsapi_tlb::IOTAStructureNode* node/*[in]*/);

  __property   Borland_studio_toolsapi_tlb::OTANodePreservationMode NodePreservationMode = {read = get_NodePreservationMode};
};
typedef IOTAStructureNodeStatePreserverDispT<IOTAStructureNodeStatePreserver> IOTAStructureNodeStatePreserverDisp;

typedef TComInterface<IOTAStructureContextToolbar>  TCOMIOTAStructureContextToolbar;

// *********************************************************************//
// DispIntf:  IOTAStructureContextToolbar
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {55C848EB-2197-4B17-A9D0-696D3331B3CC}
// *********************************************************************//
template<class T>
class IOTAStructureContextToolbarDispT : public TAutoDriver<IOTAStructureContextToolbar>
{
public:
  IOTAStructureContextToolbarDispT(){}

  IOTAStructureContextToolbarDispT(IOTAStructureContextToolbar *pintf)
  {
    TAutoDriver<IOTAStructureContextToolbar>::Bind(pintf, false);
  }

  IOTAStructureContextToolbarDispT(IOTAStructureContextToolbarPtr pintf)
  {
    TAutoDriver<IOTAStructureContextToolbar>::Bind(pintf, true);
  }

  IOTAStructureContextToolbarDispT& operator=(IOTAStructureContextToolbar *pintf)
  {
    TAutoDriver<IOTAStructureContextToolbar>::Bind(pintf, false);
    return *this;
  }

  IOTAStructureContextToolbarDispT& operator=(IOTAStructureContextToolbarPtr pintf)
  {
    TAutoDriver<IOTAStructureContextToolbar>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall get_ButtonCount(long* pRetVal/*[out,retval]*/);
  long            __fastcall get_ButtonCount(void);
  HRESULT         __fastcall GetButtonCaption(long index/*[in]*/, BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall GetButtonCaption(long index/*[in]*/);
  HRESULT         __fastcall GetButtonEnabled(long index/*[in]*/, 
                                              VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall GetButtonEnabled(long index/*[in]*/);
  HRESULT         __fastcall GetButtonEnableDropDown(long index/*[in]*/, 
                                                     VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall GetButtonEnableDropDown(long index/*[in]*/);
  HRESULT         __fastcall GetButtonHasDropDown(long index/*[in]*/, 
                                                  VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall GetButtonHasDropDown(long index/*[in]*/);
  HRESULT         __fastcall GetButtonHint(long index/*[in]*/, BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall GetButtonHint(long index/*[in]*/);
  HRESULT         __fastcall GetButtonImageIndex(long index/*[in]*/, long* pRetVal/*[out,retval]*/);
  long            __fastcall GetButtonImageIndex(long index/*[in]*/);
  HRESULT         __fastcall GetButtonMenu(long index/*[in]*/, 
                                           Borland_studio_toolsapi_tlb::IOTAStructureNodeMenuItem** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAStructureNodeMenuItem* __fastcall GetButtonMenu(long index/*[in]*/);
  HRESULT         __fastcall GetButtonSeparator(long index/*[in]*/, 
                                                VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall GetButtonSeparator(long index/*[in]*/);
  HRESULT         __fastcall GetButtonVisible(long index/*[in]*/, 
                                              VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall GetButtonVisible(long index/*[in]*/);
  HRESULT         __fastcall Invoke_2(long index/*[in]*/);

  __property   long            ButtonCount = {read = get_ButtonCount};
};
typedef IOTAStructureContextToolbarDispT<IOTAStructureContextToolbar> IOTAStructureContextToolbarDisp;

typedef TComInterface<IOTAStructureContextEditActions>  TCOMIOTAStructureContextEditActions;

// *********************************************************************//
// DispIntf:  IOTAStructureContextEditActions
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EF0F0981-8E1B-468F-B063-4A5956EB4BDA}
// *********************************************************************//
template<class T>
class IOTAStructureContextEditActionsDispT : public TAutoDriver<IOTAStructureContextEditActions>
{
public:
  IOTAStructureContextEditActionsDispT(){}

  IOTAStructureContextEditActionsDispT(IOTAStructureContextEditActions *pintf)
  {
    TAutoDriver<IOTAStructureContextEditActions>::Bind(pintf, false);
  }

  IOTAStructureContextEditActionsDispT(IOTAStructureContextEditActionsPtr pintf)
  {
    TAutoDriver<IOTAStructureContextEditActions>::Bind(pintf, true);
  }

  IOTAStructureContextEditActionsDispT& operator=(IOTAStructureContextEditActions *pintf)
  {
    TAutoDriver<IOTAStructureContextEditActions>::Bind(pintf, false);
    return *this;
  }

  IOTAStructureContextEditActionsDispT& operator=(IOTAStructureContextEditActionsPtr pintf)
  {
    TAutoDriver<IOTAStructureContextEditActions>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall EditAction(long action/*[in]*/, VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall EditAction(long action/*[in]*/);
  HRESULT         __fastcall GetEditState(long* pRetVal/*[out,retval]*/);
  long            __fastcall GetEditState(void);

};
typedef IOTAStructureContextEditActionsDispT<IOTAStructureContextEditActions> IOTAStructureContextEditActionsDisp;

typedef TComInterface<IOTAStructureContextKeyHandler>  TCOMIOTAStructureContextKeyHandler;

// *********************************************************************//
// DispIntf:  IOTAStructureContextKeyHandler
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {17A71EDB-A2FE-4358-ABD2-362011A8D547}
// *********************************************************************//
template<class T>
class IOTAStructureContextKeyHandlerDispT : public TAutoDriver<IOTAStructureContextKeyHandler>
{
public:
  IOTAStructureContextKeyHandlerDispT(){}

  IOTAStructureContextKeyHandlerDispT(IOTAStructureContextKeyHandler *pintf)
  {
    TAutoDriver<IOTAStructureContextKeyHandler>::Bind(pintf, false);
  }

  IOTAStructureContextKeyHandlerDispT(IOTAStructureContextKeyHandlerPtr pintf)
  {
    TAutoDriver<IOTAStructureContextKeyHandler>::Bind(pintf, true);
  }

  IOTAStructureContextKeyHandlerDispT& operator=(IOTAStructureContextKeyHandler *pintf)
  {
    TAutoDriver<IOTAStructureContextKeyHandler>::Bind(pintf, false);
    return *this;
  }

  IOTAStructureContextKeyHandlerDispT& operator=(IOTAStructureContextKeyHandlerPtr pintf)
  {
    TAutoDriver<IOTAStructureContextKeyHandler>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall KeyDown(Borland_studio_toolsapi_tlb::IOTAStructureNode* node/*[in]*/, 
                                     long keyState/*[in]*/, short* keyCode/*[in,out]*/);
  HRESULT         __fastcall KeyPressed(Borland_studio_toolsapi_tlb::IOTAStructureNode* node/*[in]*/
                                        , long keyState/*[in]*/, unsigned_short* keyChar/*[in,out]*/);

};
typedef IOTAStructureContextKeyHandlerDispT<IOTAStructureContextKeyHandler> IOTAStructureContextKeyHandlerDisp;

typedef TComInterface<IOTADragStructureContext>  TCOMIOTADragStructureContext;

// *********************************************************************//
// DispIntf:  IOTADragStructureContext
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {03DC0E9A-DED1-4E2A-BECE-328CB27D19B9}
// *********************************************************************//
template<class T>
class IOTADragStructureContextDispT : public TAutoDriver<IOTADragStructureContext>
{
public:
  IOTADragStructureContextDispT(){}

  IOTADragStructureContextDispT(IOTADragStructureContext *pintf)
  {
    TAutoDriver<IOTADragStructureContext>::Bind(pintf, false);
  }

  IOTADragStructureContextDispT(IOTADragStructureContextPtr pintf)
  {
    TAutoDriver<IOTADragStructureContext>::Bind(pintf, true);
  }

  IOTADragStructureContextDispT& operator=(IOTADragStructureContext *pintf)
  {
    TAutoDriver<IOTADragStructureContext>::Bind(pintf, false);
    return *this;
  }

  IOTADragStructureContextDispT& operator=(IOTADragStructureContextPtr pintf)
  {
    TAutoDriver<IOTADragStructureContext>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall DragAllowed(Borland_studio_toolsapi_tlb::IOTAStructureNode* node/*[in]*/
                                         , VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall DragAllowed(Borland_studio_toolsapi_tlb::IOTAStructureNode* node/*[in]*/);
  HRESULT         __fastcall DragDrop(Borland_studio_toolsapi_tlb::IOTAStructureNode* node/*[in]*/, 
                                      VARIANT dataObject/*[in]*/, BSTR formatArray/*[in]*/, 
                                      long X/*[in]*/, long Y/*[in]*/, long keyState/*[in]*/, 
                                      Borland_studio_toolsapi_tlb::OTADropMode Mode/*[in]*/, 
                                      long* effect/*[in,out]*/);
  HRESULT         __fastcall DragOver(Borland_studio_toolsapi_tlb::IOTAStructureNode* node/*[in]*/, 
                                      VARIANT dataObject/*[in]*/, 
                                      Borland_studio_toolsapi_tlb::OTADragState state/*[in]*/, 
                                      long X/*[in]*/, long Y/*[in]*/, long keyState/*[in]*/, 
                                      Borland_studio_toolsapi_tlb::OTADropMode Mode/*[in]*/, 
                                      long* effect/*[in,out]*/, 
                                      VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall DragOver(Borland_studio_toolsapi_tlb::IOTAStructureNode* node/*[in]*/, 
                                      VARIANT dataObject/*[in]*/, 
                                      Borland_studio_toolsapi_tlb::OTADragState state/*[in]*/, 
                                      long X/*[in]*/, long Y/*[in]*/, long keyState/*[in]*/, 
                                      Borland_studio_toolsapi_tlb::OTADropMode Mode/*[in]*/, 
                                      long* effect/*[in,out]*/);
  HRESULT         __fastcall GetDataObject(VARIANT* pRetVal/*[out,retval]*/);
  VARIANT         __fastcall GetDataObject(void);

};
typedef IOTADragStructureContextDispT<IOTADragStructureContext> IOTADragStructureContextDisp;

typedef TComInterface<IOTAStructureNode>  TCOMIOTAStructureNode;

// *********************************************************************//
// DispIntf:  IOTAStructureNode
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8A0802F5-C26C-4902-9D1F-8323F2F48F8C}
// *********************************************************************//
template<class T>
class IOTAStructureNodeDispT : public TAutoDriver<IOTAStructureNode>
{
public:
  IOTAStructureNodeDispT(){}

  IOTAStructureNodeDispT(IOTAStructureNode *pintf)
  {
    TAutoDriver<IOTAStructureNode>::Bind(pintf, false);
  }

  IOTAStructureNodeDispT(IOTAStructureNodePtr pintf)
  {
    TAutoDriver<IOTAStructureNode>::Bind(pintf, true);
  }

  IOTAStructureNodeDispT& operator=(IOTAStructureNode *pintf)
  {
    TAutoDriver<IOTAStructureNode>::Bind(pintf, false);
    return *this;
  }

  IOTAStructureNodeDispT& operator=(IOTAStructureNodePtr pintf)
  {
    TAutoDriver<IOTAStructureNode>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall AddChildNode(Borland_studio_toolsapi_tlb::IOTAStructureNode* node/*[in]*/
                                          , long index/*[in]*/, long* pRetVal/*[out,retval]*/);
  long            __fastcall AddChildNode(Borland_studio_toolsapi_tlb::IOTAStructureNode* node/*[in]*/, 
                                          long index/*[in]*/);
  HRESULT         __fastcall get_Caption(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_Caption(void);
  HRESULT         __fastcall get_ChildCount(long* pRetVal/*[out,retval]*/);
  long            __fastcall get_ChildCount(void);
  HRESULT         __fastcall Get_Child(long index/*[in]*/, 
                                       Borland_studio_toolsapi_tlb::IOTAStructureNode** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAStructureNode* __fastcall Get_Child(long index/*[in]*/);
  HRESULT         __fastcall get_Expanded(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_Expanded(void);
  HRESULT         __fastcall set_Expanded(VARIANT_BOOL pRetVal/*[in]*/);
  HRESULT         __fastcall get_Focused(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_Focused(void);
  HRESULT         __fastcall set_Focused(VARIANT_BOOL pRetVal/*[in]*/);
  HRESULT         __fastcall get_Hint(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_Hint(void);
  HRESULT         __fastcall get_ImageIndex(long* pRetVal/*[out,retval]*/);
  long            __fastcall get_ImageIndex(void);
  HRESULT         __fastcall get_Name(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_Name(void);
  HRESULT         __fastcall get_parent(Borland_studio_toolsapi_tlb::IOTAStructureNode** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAStructureNodePtr __fastcall get_parent(void);
  HRESULT         __fastcall get_Selected(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_Selected(void);
  HRESULT         __fastcall set_Selected(VARIANT_BOOL pRetVal/*[in]*/);
  HRESULT         __fastcall get_StateIndex(long* pRetVal/*[out,retval]*/);
  long            __fastcall get_StateIndex(void);
  HRESULT         __fastcall get_Data(long* pRetVal/*[out,retval]*/);
  long            __fastcall get_Data(void);
  HRESULT         __fastcall set_Data(long pRetVal/*[in]*/);
  HRESULT         __fastcall RemoveChildNode(long index/*[in]*/);

  __property   BSTR            Caption = {read = get_Caption};
  __property   long            ChildCount = {read = get_ChildCount};
  __property   VARIANT_BOOL    Expanded = {read = get_Expanded, write = set_Expanded};
  __property   VARIANT_BOOL    Focused = {read = get_Focused, write = set_Focused};
  __property   BSTR            Hint = {read = get_Hint};
  __property   long            ImageIndex = {read = get_ImageIndex};
  __property   BSTR            Name = {read = get_Name};
  __property   Borland_studio_toolsapi_tlb::IOTAStructureNodePtr parent = {read = get_parent};
  __property   VARIANT_BOOL    Selected = {read = get_Selected, write = set_Selected};
  __property   long            StateIndex = {read = get_StateIndex};
  __property   long            Data = {read = get_Data, write = set_Data};
};
typedef IOTAStructureNodeDispT<IOTAStructureNode> IOTAStructureNodeDisp;

typedef TComInterface<IOTASortableStructureNode>  TCOMIOTASortableStructureNode;

// *********************************************************************//
// DispIntf:  IOTASortableStructureNode
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {24451294-D128-47E6-A8A5-00C3547C2F9C}
// *********************************************************************//
template<class T>
class IOTASortableStructureNodeDispT : public TAutoDriver<IOTASortableStructureNode>
{
public:
  IOTASortableStructureNodeDispT(){}

  IOTASortableStructureNodeDispT(IOTASortableStructureNode *pintf)
  {
    TAutoDriver<IOTASortableStructureNode>::Bind(pintf, false);
  }

  IOTASortableStructureNodeDispT(IOTASortableStructureNodePtr pintf)
  {
    TAutoDriver<IOTASortableStructureNode>::Bind(pintf, true);
  }

  IOTASortableStructureNodeDispT& operator=(IOTASortableStructureNode *pintf)
  {
    TAutoDriver<IOTASortableStructureNode>::Bind(pintf, false);
    return *this;
  }

  IOTASortableStructureNodeDispT& operator=(IOTASortableStructureNodePtr pintf)
  {
    TAutoDriver<IOTASortableStructureNode>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall get_SortByIndex(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_SortByIndex(void);
  HRESULT         __fastcall get_ItemIndex(long* pRetVal/*[out,retval]*/);
  long            __fastcall get_ItemIndex(void);

  __property   VARIANT_BOOL    SortByIndex = {read = get_SortByIndex};
  __property   long            ItemIndex = {read = get_ItemIndex};
};
typedef IOTASortableStructureNodeDispT<IOTASortableStructureNode> IOTASortableStructureNodeDisp;

typedef TComInterface<IOTAEditableStructureNode>  TCOMIOTAEditableStructureNode;

// *********************************************************************//
// DispIntf:  IOTAEditableStructureNode
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B2CF6C45-4151-4B1A-B56B-B23534BB053E}
// *********************************************************************//
template<class T>
class IOTAEditableStructureNodeDispT : public TAutoDriver<IOTAEditableStructureNode>
{
public:
  IOTAEditableStructureNodeDispT(){}

  IOTAEditableStructureNodeDispT(IOTAEditableStructureNode *pintf)
  {
    TAutoDriver<IOTAEditableStructureNode>::Bind(pintf, false);
  }

  IOTAEditableStructureNodeDispT(IOTAEditableStructureNodePtr pintf)
  {
    TAutoDriver<IOTAEditableStructureNode>::Bind(pintf, true);
  }

  IOTAEditableStructureNodeDispT& operator=(IOTAEditableStructureNode *pintf)
  {
    TAutoDriver<IOTAEditableStructureNode>::Bind(pintf, false);
    return *this;
  }

  IOTAEditableStructureNodeDispT& operator=(IOTAEditableStructureNodePtr pintf)
  {
    TAutoDriver<IOTAEditableStructureNode>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall get_CanEdit(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_CanEdit(void);
  HRESULT         __fastcall get_EditCaption(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_EditCaption(void);
  HRESULT         __fastcall SetValue(BSTR value/*[in]*/);

  __property   VARIANT_BOOL    CanEdit = {read = get_CanEdit};
  __property   BSTR            EditCaption = {read = get_EditCaption};
};
typedef IOTAEditableStructureNodeDispT<IOTAEditableStructureNode> IOTAEditableStructureNodeDisp;

typedef TComInterface<IOTANavigableStructureNode>  TCOMIOTANavigableStructureNode;

// *********************************************************************//
// DispIntf:  IOTANavigableStructureNode
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {81B1557A-E3F2-4E9C-AA69-CEBBA99D923F}
// *********************************************************************//
template<class T>
class IOTANavigableStructureNodeDispT : public TAutoDriver<IOTANavigableStructureNode>
{
public:
  IOTANavigableStructureNodeDispT(){}

  IOTANavigableStructureNodeDispT(IOTANavigableStructureNode *pintf)
  {
    TAutoDriver<IOTANavigableStructureNode>::Bind(pintf, false);
  }

  IOTANavigableStructureNodeDispT(IOTANavigableStructureNodePtr pintf)
  {
    TAutoDriver<IOTANavigableStructureNode>::Bind(pintf, true);
  }

  IOTANavigableStructureNodeDispT& operator=(IOTANavigableStructureNode *pintf)
  {
    TAutoDriver<IOTANavigableStructureNode>::Bind(pintf, false);
    return *this;
  }

  IOTANavigableStructureNodeDispT& operator=(IOTANavigableStructureNodePtr pintf)
  {
    TAutoDriver<IOTANavigableStructureNode>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall Navigate(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall Navigate(void);

};
typedef IOTANavigableStructureNodeDispT<IOTANavigableStructureNode> IOTANavigableStructureNodeDisp;

typedef TComInterface<IOTADragStructureNode>  TCOMIOTADragStructureNode;

// *********************************************************************//
// DispIntf:  IOTADragStructureNode
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {679BCA19-150F-4CC5-9023-CE24F5580F5B}
// *********************************************************************//
template<class T>
class IOTADragStructureNodeDispT : public TAutoDriver<IOTADragStructureNode>
{
public:
  IOTADragStructureNodeDispT(){}

  IOTADragStructureNodeDispT(IOTADragStructureNode *pintf)
  {
    TAutoDriver<IOTADragStructureNode>::Bind(pintf, false);
  }

  IOTADragStructureNodeDispT(IOTADragStructureNodePtr pintf)
  {
    TAutoDriver<IOTADragStructureNode>::Bind(pintf, true);
  }

  IOTADragStructureNodeDispT& operator=(IOTADragStructureNode *pintf)
  {
    TAutoDriver<IOTADragStructureNode>::Bind(pintf, false);
    return *this;
  }

  IOTADragStructureNodeDispT& operator=(IOTADragStructureNodePtr pintf)
  {
    TAutoDriver<IOTADragStructureNode>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall DragAllowed(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall DragAllowed(void);
  HRESULT         __fastcall DragDrop(VARIANT dataObject/*[in]*/, BSTR formatArray/*[in]*/, 
                                      long X/*[in]*/, long Y/*[in]*/, long keyState/*[in]*/, 
                                      Borland_studio_toolsapi_tlb::OTADropMode Mode/*[in]*/, 
                                      long* effect/*[in,out]*/);
  HRESULT         __fastcall DragOver(VARIANT dataObject/*[in]*/, 
                                      Borland_studio_toolsapi_tlb::OTADragState state/*[in]*/, 
                                      long X/*[in]*/, long Y/*[in]*/, long keyState/*[in]*/, 
                                      Borland_studio_toolsapi_tlb::OTADropMode Mode/*[in]*/, 
                                      long* effect/*[in,out]*/, 
                                      VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall DragOver(VARIANT dataObject/*[in]*/, 
                                      Borland_studio_toolsapi_tlb::OTADragState state/*[in]*/, 
                                      long X/*[in]*/, long Y/*[in]*/, long keyState/*[in]*/, 
                                      Borland_studio_toolsapi_tlb::OTADropMode Mode/*[in]*/, 
                                      long* effect/*[in,out]*/);

};
typedef IOTADragStructureNodeDispT<IOTADragStructureNode> IOTADragStructureNodeDisp;

typedef TComInterface<IOTAStructureNodePopup>  TCOMIOTAStructureNodePopup;

// *********************************************************************//
// DispIntf:  IOTAStructureNodePopup
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FAA6133B-F03F-4A93-9E86-C50EAD7348E6}
// *********************************************************************//
template<class T>
class IOTAStructureNodePopupDispT : public TAutoDriver<IOTAStructureNodePopup>
{
public:
  IOTAStructureNodePopupDispT(){}

  IOTAStructureNodePopupDispT(IOTAStructureNodePopup *pintf)
  {
    TAutoDriver<IOTAStructureNodePopup>::Bind(pintf, false);
  }

  IOTAStructureNodePopupDispT(IOTAStructureNodePopupPtr pintf)
  {
    TAutoDriver<IOTAStructureNodePopup>::Bind(pintf, true);
  }

  IOTAStructureNodePopupDispT& operator=(IOTAStructureNodePopup *pintf)
  {
    TAutoDriver<IOTAStructureNodePopup>::Bind(pintf, false);
    return *this;
  }

  IOTAStructureNodePopupDispT& operator=(IOTAStructureNodePopupPtr pintf)
  {
    TAutoDriver<IOTAStructureNodePopup>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall InitPopupMenu(Borland_studio_toolsapi_tlb::IOTAStructureNodeMenuItem* popupMenu/*[in]*/);

};
typedef IOTAStructureNodePopupDispT<IOTAStructureNodePopup> IOTAStructureNodePopupDisp;

typedef TComInterface<IOTAStructureNodeMenuItem>  TCOMIOTAStructureNodeMenuItem;

// *********************************************************************//
// DispIntf:  IOTAStructureNodeMenuItem
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7BF39892-F3D3-48F7-B5F3-664FDD438581}
// *********************************************************************//
template<class T>
class IOTAStructureNodeMenuItemDispT : public TAutoDriver<IOTAStructureNodeMenuItem>
{
public:
  IOTAStructureNodeMenuItemDispT(){}

  IOTAStructureNodeMenuItemDispT(IOTAStructureNodeMenuItem *pintf)
  {
    TAutoDriver<IOTAStructureNodeMenuItem>::Bind(pintf, false);
  }

  IOTAStructureNodeMenuItemDispT(IOTAStructureNodeMenuItemPtr pintf)
  {
    TAutoDriver<IOTAStructureNodeMenuItem>::Bind(pintf, true);
  }

  IOTAStructureNodeMenuItemDispT& operator=(IOTAStructureNodeMenuItem *pintf)
  {
    TAutoDriver<IOTAStructureNodeMenuItem>::Bind(pintf, false);
    return *this;
  }

  IOTAStructureNodeMenuItemDispT& operator=(IOTAStructureNodeMenuItemPtr pintf)
  {
    TAutoDriver<IOTAStructureNodeMenuItem>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall DeleteItem(long index/*[in]*/);
  HRESULT         __fastcall get_Caption(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_Caption(void);
  HRESULT         __fastcall get_Checked(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_Checked(void);
  HRESULT         __fastcall get_Count(long* pRetVal/*[out,retval]*/);
  long            __fastcall get_Count(void);
  HRESULT         __fastcall get_Enabled(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_Enabled(void);
  HRESULT         __fastcall get_GroupIndex(long* pRetVal/*[out,retval]*/);
  long            __fastcall get_GroupIndex(void);
  HRESULT         __fastcall get_ImageIndex(long* pRetVal/*[out,retval]*/);
  long            __fastcall get_ImageIndex(void);
  HRESULT         __fastcall Get_Item(long index/*[in]*/, 
                                      Borland_studio_toolsapi_tlb::IOTAStructureNodeMenuItem** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAStructureNodeMenuItem* __fastcall Get_Item(long index/*[in]*/);
  HRESULT         __fastcall get_Name(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_Name(void);
  HRESULT         __fastcall get_RadioItem(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_RadioItem(void);
  HRESULT         __fastcall get_Shortcut(long* pRetVal/*[out,retval]*/);
  long            __fastcall get_Shortcut(void);
  HRESULT         __fastcall get_Visible(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall get_Visible(void);
  HRESULT         __fastcall InsertItem(long index/*[in]*/, 
                                        Borland_studio_toolsapi_tlb::IOTAStructureNodeMenuItem* Item/*[in]*/);
  HRESULT         __fastcall Invoke_2();

  __property   BSTR            Caption = {read = get_Caption};
  __property   VARIANT_BOOL    Checked = {read = get_Checked};
  __property   long            Count = {read = get_Count};
  __property   VARIANT_BOOL    Enabled = {read = get_Enabled};
  __property   long            GroupIndex = {read = get_GroupIndex};
  __property   long            ImageIndex = {read = get_ImageIndex};
  __property   BSTR            Name = {read = get_Name};
  __property   VARIANT_BOOL    RadioItem = {read = get_RadioItem};
  __property   long            Shortcut = {read = get_Shortcut};
  __property   VARIANT_BOOL    Visible = {read = get_Visible};
};
typedef IOTAStructureNodeMenuItemDispT<IOTAStructureNodeMenuItem> IOTAStructureNodeMenuItemDisp;

// *********************************************************************//
// SmartIntf: TCOM_ContextEventArgs
// Interface: _ContextEventArgs
// *********************************************************************//
template <class T /* _ContextEventArgs */ >
class TCOM_ContextEventArgsT : public TComInterface<_ContextEventArgs>, public TComInterfaceBase<IUnknown>
{
public:
  TCOM_ContextEventArgsT() {}
  TCOM_ContextEventArgsT(_ContextEventArgs *intf, bool addRef = false) : TComInterface<_ContextEventArgs>(intf, addRef) {}
  TCOM_ContextEventArgsT(const TCOM_ContextEventArgsT& src) : TComInterface<_ContextEventArgs>(src) {}
  TCOM_ContextEventArgsT& operator=(const TCOM_ContextEventArgsT& src) { Bind(src, true); return *this;}


};
typedef TCOM_ContextEventArgsT<_ContextEventArgs> TCOM_ContextEventArgs;

// *********************************************************************//
// DispIntf:  _ContextEventArgs
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {0B3EF80C-C85B-3ED5-9059-8F0132E53A22}
// *********************************************************************//
template<class T>
class _ContextEventArgsDispT : public TAutoDriver<_ContextEventArgs>
{
public:
  _ContextEventArgsDispT(){}

  _ContextEventArgsDispT(_ContextEventArgs *pintf)
  {
    TAutoDriver<_ContextEventArgs>::Bind(pintf, false);
  }

  _ContextEventArgsDispT(_ContextEventArgsPtr pintf)
  {
    TAutoDriver<_ContextEventArgs>::Bind(pintf, true);
  }

  _ContextEventArgsDispT& operator=(_ContextEventArgs *pintf)
  {
    TAutoDriver<_ContextEventArgs>::Bind(pintf, false);
    return *this;
  }

  _ContextEventArgsDispT& operator=(_ContextEventArgsPtr pintf)
  {
    TAutoDriver<_ContextEventArgs>::Bind(pintf, true);
    return *this;
  }

  HRESULT BindDefault()
  {
    return OLECHECK(Bind(CLSID_ContextEventArgs));
  }

  HRESULT BindRunning()
  {
    return BindToActive(CLSID_ContextEventArgs);
  }


};
typedef _ContextEventArgsDispT<_ContextEventArgs> _ContextEventArgsDisp;

// *********************************************************************//
// SmartIntf: TCOM_NodeEventArgs
// Interface: _NodeEventArgs
// *********************************************************************//
template <class T /* _NodeEventArgs */ >
class TCOM_NodeEventArgsT : public TComInterface<_NodeEventArgs>, public TComInterfaceBase<IUnknown>
{
public:
  TCOM_NodeEventArgsT() {}
  TCOM_NodeEventArgsT(_NodeEventArgs *intf, bool addRef = false) : TComInterface<_NodeEventArgs>(intf, addRef) {}
  TCOM_NodeEventArgsT(const TCOM_NodeEventArgsT& src) : TComInterface<_NodeEventArgs>(src) {}
  TCOM_NodeEventArgsT& operator=(const TCOM_NodeEventArgsT& src) { Bind(src, true); return *this;}


};
typedef TCOM_NodeEventArgsT<_NodeEventArgs> TCOM_NodeEventArgs;

// *********************************************************************//
// DispIntf:  _NodeEventArgs
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {909E7F14-FBA0-348B-85C4-3968D2B7CBAA}
// *********************************************************************//
template<class T>
class _NodeEventArgsDispT : public TAutoDriver<_NodeEventArgs>
{
public:
  _NodeEventArgsDispT(){}

  _NodeEventArgsDispT(_NodeEventArgs *pintf)
  {
    TAutoDriver<_NodeEventArgs>::Bind(pintf, false);
  }

  _NodeEventArgsDispT(_NodeEventArgsPtr pintf)
  {
    TAutoDriver<_NodeEventArgs>::Bind(pintf, true);
  }

  _NodeEventArgsDispT& operator=(_NodeEventArgs *pintf)
  {
    TAutoDriver<_NodeEventArgs>::Bind(pintf, false);
    return *this;
  }

  _NodeEventArgsDispT& operator=(_NodeEventArgsPtr pintf)
  {
    TAutoDriver<_NodeEventArgs>::Bind(pintf, true);
    return *this;
  }

  HRESULT BindDefault()
  {
    return OLECHECK(Bind(CLSID_NodeEventArgs));
  }

  HRESULT BindRunning()
  {
    return BindToActive(CLSID_NodeEventArgs);
  }


};
typedef _NodeEventArgsDispT<_NodeEventArgs> _NodeEventArgsDisp;

// *********************************************************************//
// SmartIntf: TCOM_VisibleEventArgs
// Interface: _VisibleEventArgs
// *********************************************************************//
template <class T /* _VisibleEventArgs */ >
class TCOM_VisibleEventArgsT : public TComInterface<_VisibleEventArgs>, public TComInterfaceBase<IUnknown>
{
public:
  TCOM_VisibleEventArgsT() {}
  TCOM_VisibleEventArgsT(_VisibleEventArgs *intf, bool addRef = false) : TComInterface<_VisibleEventArgs>(intf, addRef) {}
  TCOM_VisibleEventArgsT(const TCOM_VisibleEventArgsT& src) : TComInterface<_VisibleEventArgs>(src) {}
  TCOM_VisibleEventArgsT& operator=(const TCOM_VisibleEventArgsT& src) { Bind(src, true); return *this;}


};
typedef TCOM_VisibleEventArgsT<_VisibleEventArgs> TCOM_VisibleEventArgs;

// *********************************************************************//
// DispIntf:  _VisibleEventArgs
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {73A8FC94-5904-31B1-AA0F-0D5CE94CCF23}
// *********************************************************************//
template<class T>
class _VisibleEventArgsDispT : public TAutoDriver<_VisibleEventArgs>
{
public:
  _VisibleEventArgsDispT(){}

  _VisibleEventArgsDispT(_VisibleEventArgs *pintf)
  {
    TAutoDriver<_VisibleEventArgs>::Bind(pintf, false);
  }

  _VisibleEventArgsDispT(_VisibleEventArgsPtr pintf)
  {
    TAutoDriver<_VisibleEventArgs>::Bind(pintf, true);
  }

  _VisibleEventArgsDispT& operator=(_VisibleEventArgs *pintf)
  {
    TAutoDriver<_VisibleEventArgs>::Bind(pintf, false);
    return *this;
  }

  _VisibleEventArgsDispT& operator=(_VisibleEventArgsPtr pintf)
  {
    TAutoDriver<_VisibleEventArgs>::Bind(pintf, true);
    return *this;
  }

  HRESULT BindDefault()
  {
    return OLECHECK(Bind(CLSID_VisibleEventArgs));
  }

  HRESULT BindRunning()
  {
    return BindToActive(CLSID_VisibleEventArgs);
  }


};
typedef _VisibleEventArgsDispT<_VisibleEventArgs> _VisibleEventArgsDisp;

// *********************************************************************//
// SmartIntf: TCOM_OTAStructureType
// Interface: _OTAStructureType
// *********************************************************************//
template <class T /* _OTAStructureType */ >
class TCOM_OTAStructureTypeT : public TComInterface<_OTAStructureType>, public TComInterfaceBase<IUnknown>
{
public:
  TCOM_OTAStructureTypeT() {}
  TCOM_OTAStructureTypeT(_OTAStructureType *intf, bool addRef = false) : TComInterface<_OTAStructureType>(intf, addRef) {}
  TCOM_OTAStructureTypeT(const TCOM_OTAStructureTypeT& src) : TComInterface<_OTAStructureType>(src) {}
  TCOM_OTAStructureTypeT& operator=(const TCOM_OTAStructureTypeT& src) { Bind(src, true); return *this;}


};
typedef TCOM_OTAStructureTypeT<_OTAStructureType> TCOM_OTAStructureType;

// *********************************************************************//
// DispIntf:  _OTAStructureType
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {30E1E914-AF92-3300-8A70-3E1F73129492}
// *********************************************************************//
template<class T>
class _OTAStructureTypeDispT : public TAutoDriver<_OTAStructureType>
{
public:
  _OTAStructureTypeDispT(){}

  _OTAStructureTypeDispT(_OTAStructureType *pintf)
  {
    TAutoDriver<_OTAStructureType>::Bind(pintf, false);
  }

  _OTAStructureTypeDispT(_OTAStructureTypePtr pintf)
  {
    TAutoDriver<_OTAStructureType>::Bind(pintf, true);
  }

  _OTAStructureTypeDispT& operator=(_OTAStructureType *pintf)
  {
    TAutoDriver<_OTAStructureType>::Bind(pintf, false);
    return *this;
  }

  _OTAStructureTypeDispT& operator=(_OTAStructureTypePtr pintf)
  {
    TAutoDriver<_OTAStructureType>::Bind(pintf, true);
    return *this;
  }

  HRESULT BindDefault()
  {
    return OLECHECK(Bind(CLSID_OTAStructureType));
  }

  HRESULT BindRunning()
  {
    return BindToActive(CLSID_OTAStructureType);
  }


};
typedef _OTAStructureTypeDispT<_OTAStructureType> _OTAStructureTypeDisp;

// *********************************************************************//
// SmartIntf: TCOM_OTANodeType
// Interface: _OTANodeType
// *********************************************************************//
template <class T /* _OTANodeType */ >
class TCOM_OTANodeTypeT : public TComInterface<_OTANodeType>, public TComInterfaceBase<IUnknown>
{
public:
  TCOM_OTANodeTypeT() {}
  TCOM_OTANodeTypeT(_OTANodeType *intf, bool addRef = false) : TComInterface<_OTANodeType>(intf, addRef) {}
  TCOM_OTANodeTypeT(const TCOM_OTANodeTypeT& src) : TComInterface<_OTANodeType>(src) {}
  TCOM_OTANodeTypeT& operator=(const TCOM_OTANodeTypeT& src) { Bind(src, true); return *this;}


};
typedef TCOM_OTANodeTypeT<_OTANodeType> TCOM_OTANodeType;

// *********************************************************************//
// DispIntf:  _OTANodeType
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {B0BC296A-7B1B-3C3F-BAF0-DA5B57EC0DEB}
// *********************************************************************//
template<class T>
class _OTANodeTypeDispT : public TAutoDriver<_OTANodeType>
{
public:
  _OTANodeTypeDispT(){}

  _OTANodeTypeDispT(_OTANodeType *pintf)
  {
    TAutoDriver<_OTANodeType>::Bind(pintf, false);
  }

  _OTANodeTypeDispT(_OTANodeTypePtr pintf)
  {
    TAutoDriver<_OTANodeType>::Bind(pintf, true);
  }

  _OTANodeTypeDispT& operator=(_OTANodeType *pintf)
  {
    TAutoDriver<_OTANodeType>::Bind(pintf, false);
    return *this;
  }

  _OTANodeTypeDispT& operator=(_OTANodeTypePtr pintf)
  {
    TAutoDriver<_OTANodeType>::Bind(pintf, true);
    return *this;
  }

  HRESULT BindDefault()
  {
    return OLECHECK(Bind(CLSID_OTANodeType));
  }

  HRESULT BindRunning()
  {
    return BindToActive(CLSID_OTANodeType);
  }


};
typedef _OTANodeTypeDispT<_OTANodeType> _OTANodeTypeDisp;

// *********************************************************************//
// SmartIntf: TCOM_OTAStructureViewOptions
// Interface: _OTAStructureViewOptions
// *********************************************************************//
template <class T /* _OTAStructureViewOptions */ >
class TCOM_OTAStructureViewOptionsT : public TComInterface<_OTAStructureViewOptions>, public TComInterfaceBase<IUnknown>
{
public:
  TCOM_OTAStructureViewOptionsT() {}
  TCOM_OTAStructureViewOptionsT(_OTAStructureViewOptions *intf, bool addRef = false) : TComInterface<_OTAStructureViewOptions>(intf, addRef) {}
  TCOM_OTAStructureViewOptionsT(const TCOM_OTAStructureViewOptionsT& src) : TComInterface<_OTAStructureViewOptions>(src) {}
  TCOM_OTAStructureViewOptionsT& operator=(const TCOM_OTAStructureViewOptionsT& src) { Bind(src, true); return *this;}


};
typedef TCOM_OTAStructureViewOptionsT<_OTAStructureViewOptions> TCOM_OTAStructureViewOptions;

// *********************************************************************//
// DispIntf:  _OTAStructureViewOptions
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {70EC9140-E495-35BF-B600-B3F295E533B8}
// *********************************************************************//
template<class T>
class _OTAStructureViewOptionsDispT : public TAutoDriver<_OTAStructureViewOptions>
{
public:
  _OTAStructureViewOptionsDispT(){}

  _OTAStructureViewOptionsDispT(_OTAStructureViewOptions *pintf)
  {
    TAutoDriver<_OTAStructureViewOptions>::Bind(pintf, false);
  }

  _OTAStructureViewOptionsDispT(_OTAStructureViewOptionsPtr pintf)
  {
    TAutoDriver<_OTAStructureViewOptions>::Bind(pintf, true);
  }

  _OTAStructureViewOptionsDispT& operator=(_OTAStructureViewOptions *pintf)
  {
    TAutoDriver<_OTAStructureViewOptions>::Bind(pintf, false);
    return *this;
  }

  _OTAStructureViewOptionsDispT& operator=(_OTAStructureViewOptionsPtr pintf)
  {
    TAutoDriver<_OTAStructureViewOptions>::Bind(pintf, true);
    return *this;
  }

  HRESULT BindDefault()
  {
    return OLECHECK(Bind(CLSID_OTAStructureViewOptions));
  }

  HRESULT BindRunning()
  {
    return BindToActive(CLSID_OTAStructureViewOptions);
  }


};
typedef _OTAStructureViewOptionsDispT<_OTAStructureViewOptions> _OTAStructureViewOptionsDisp;

// *********************************************************************//
// SmartIntf: TCOM_ContextEventHandler
// Interface: _ContextEventHandler
// *********************************************************************//
template <class T /* _ContextEventHandler */ >
class TCOM_ContextEventHandlerT : public TComInterface<_ContextEventHandler>, public TComInterfaceBase<IUnknown>
{
public:
  TCOM_ContextEventHandlerT() {}
  TCOM_ContextEventHandlerT(_ContextEventHandler *intf, bool addRef = false) : TComInterface<_ContextEventHandler>(intf, addRef) {}
  TCOM_ContextEventHandlerT(const TCOM_ContextEventHandlerT& src) : TComInterface<_ContextEventHandler>(src) {}
  TCOM_ContextEventHandlerT& operator=(const TCOM_ContextEventHandlerT& src) { Bind(src, true); return *this;}


};
typedef TCOM_ContextEventHandlerT<_ContextEventHandler> TCOM_ContextEventHandler;

// *********************************************************************//
// DispIntf:  _ContextEventHandler
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {6659600D-A091-31D1-85D2-6C089622B256}
// *********************************************************************//
template<class T>
class _ContextEventHandlerDispT : public TAutoDriver<_ContextEventHandler>
{
public:
  _ContextEventHandlerDispT(){}

  _ContextEventHandlerDispT(_ContextEventHandler *pintf)
  {
    TAutoDriver<_ContextEventHandler>::Bind(pintf, false);
  }

  _ContextEventHandlerDispT(_ContextEventHandlerPtr pintf)
  {
    TAutoDriver<_ContextEventHandler>::Bind(pintf, true);
  }

  _ContextEventHandlerDispT& operator=(_ContextEventHandler *pintf)
  {
    TAutoDriver<_ContextEventHandler>::Bind(pintf, false);
    return *this;
  }

  _ContextEventHandlerDispT& operator=(_ContextEventHandlerPtr pintf)
  {
    TAutoDriver<_ContextEventHandler>::Bind(pintf, true);
    return *this;
  }

  HRESULT BindDefault()
  {
    return OLECHECK(Bind(CLSID_ContextEventHandler));
  }

  HRESULT BindRunning()
  {
    return BindToActive(CLSID_ContextEventHandler);
  }


};
typedef _ContextEventHandlerDispT<_ContextEventHandler> _ContextEventHandlerDisp;

// *********************************************************************//
// SmartIntf: TCOM_NodeEventHandler
// Interface: _NodeEventHandler
// *********************************************************************//
template <class T /* _NodeEventHandler */ >
class TCOM_NodeEventHandlerT : public TComInterface<_NodeEventHandler>, public TComInterfaceBase<IUnknown>
{
public:
  TCOM_NodeEventHandlerT() {}
  TCOM_NodeEventHandlerT(_NodeEventHandler *intf, bool addRef = false) : TComInterface<_NodeEventHandler>(intf, addRef) {}
  TCOM_NodeEventHandlerT(const TCOM_NodeEventHandlerT& src) : TComInterface<_NodeEventHandler>(src) {}
  TCOM_NodeEventHandlerT& operator=(const TCOM_NodeEventHandlerT& src) { Bind(src, true); return *this;}


};
typedef TCOM_NodeEventHandlerT<_NodeEventHandler> TCOM_NodeEventHandler;

// *********************************************************************//
// DispIntf:  _NodeEventHandler
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {BF7956DD-FBAE-3F1D-B976-1ABF761F894E}
// *********************************************************************//
template<class T>
class _NodeEventHandlerDispT : public TAutoDriver<_NodeEventHandler>
{
public:
  _NodeEventHandlerDispT(){}

  _NodeEventHandlerDispT(_NodeEventHandler *pintf)
  {
    TAutoDriver<_NodeEventHandler>::Bind(pintf, false);
  }

  _NodeEventHandlerDispT(_NodeEventHandlerPtr pintf)
  {
    TAutoDriver<_NodeEventHandler>::Bind(pintf, true);
  }

  _NodeEventHandlerDispT& operator=(_NodeEventHandler *pintf)
  {
    TAutoDriver<_NodeEventHandler>::Bind(pintf, false);
    return *this;
  }

  _NodeEventHandlerDispT& operator=(_NodeEventHandlerPtr pintf)
  {
    TAutoDriver<_NodeEventHandler>::Bind(pintf, true);
    return *this;
  }

  HRESULT BindDefault()
  {
    return OLECHECK(Bind(CLSID_NodeEventHandler));
  }

  HRESULT BindRunning()
  {
    return BindToActive(CLSID_NodeEventHandler);
  }


};
typedef _NodeEventHandlerDispT<_NodeEventHandler> _NodeEventHandlerDisp;

// *********************************************************************//
// SmartIntf: TCOM_VisibleEventHandler
// Interface: _VisibleEventHandler
// *********************************************************************//
template <class T /* _VisibleEventHandler */ >
class TCOM_VisibleEventHandlerT : public TComInterface<_VisibleEventHandler>, public TComInterfaceBase<IUnknown>
{
public:
  TCOM_VisibleEventHandlerT() {}
  TCOM_VisibleEventHandlerT(_VisibleEventHandler *intf, bool addRef = false) : TComInterface<_VisibleEventHandler>(intf, addRef) {}
  TCOM_VisibleEventHandlerT(const TCOM_VisibleEventHandlerT& src) : TComInterface<_VisibleEventHandler>(src) {}
  TCOM_VisibleEventHandlerT& operator=(const TCOM_VisibleEventHandlerT& src) { Bind(src, true); return *this;}


};
typedef TCOM_VisibleEventHandlerT<_VisibleEventHandler> TCOM_VisibleEventHandler;

// *********************************************************************//
// DispIntf:  _VisibleEventHandler
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {5D4EBD34-0C25-3794-91C9-93AFF0E1A37E}
// *********************************************************************//
template<class T>
class _VisibleEventHandlerDispT : public TAutoDriver<_VisibleEventHandler>
{
public:
  _VisibleEventHandlerDispT(){}

  _VisibleEventHandlerDispT(_VisibleEventHandler *pintf)
  {
    TAutoDriver<_VisibleEventHandler>::Bind(pintf, false);
  }

  _VisibleEventHandlerDispT(_VisibleEventHandlerPtr pintf)
  {
    TAutoDriver<_VisibleEventHandler>::Bind(pintf, true);
  }

  _VisibleEventHandlerDispT& operator=(_VisibleEventHandler *pintf)
  {
    TAutoDriver<_VisibleEventHandler>::Bind(pintf, false);
    return *this;
  }

  _VisibleEventHandlerDispT& operator=(_VisibleEventHandlerPtr pintf)
  {
    TAutoDriver<_VisibleEventHandler>::Bind(pintf, true);
    return *this;
  }

  HRESULT BindDefault()
  {
    return OLECHECK(Bind(CLSID_VisibleEventHandler));
  }

  HRESULT BindRunning()
  {
    return BindToActive(CLSID_VisibleEventHandler);
  }


};
typedef _VisibleEventHandlerDispT<_VisibleEventHandler> _VisibleEventHandlerDisp;

typedef TComInterface<IOTAStructureView>  TCOMIOTAStructureView;

// *********************************************************************//
// DispIntf:  IOTAStructureView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9A4B002F-C7D6-4114-BC6D-704E5F323C48}
// *********************************************************************//
template<class T>
class IOTAStructureViewDispT : public TAutoDriver<IOTAStructureView>
{
public:
  IOTAStructureViewDispT(){}

  IOTAStructureViewDispT(IOTAStructureView *pintf)
  {
    TAutoDriver<IOTAStructureView>::Bind(pintf, false);
  }

  IOTAStructureViewDispT(IOTAStructureViewPtr pintf)
  {
    TAutoDriver<IOTAStructureView>::Bind(pintf, true);
  }

  IOTAStructureViewDispT& operator=(IOTAStructureView *pintf)
  {
    TAutoDriver<IOTAStructureView>::Bind(pintf, false);
    return *this;
  }

  IOTAStructureViewDispT& operator=(IOTAStructureViewPtr pintf)
  {
    TAutoDriver<IOTAStructureView>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall BeginUpdate();
  HRESULT         __fastcall ChildNodeUpdated(Borland_studio_toolsapi_tlb::IOTAStructureNode* ParentNode/*[in]*/
                                              , 
                                              Borland_studio_toolsapi_tlb::IOTAStructureNode* ChildNode/*[in]*/
                                              , 
                                              Borland_studio_toolsapi_tlb::OTAChildUpdateKind AUpdateKind/*[in]*/);
  HRESULT         __fastcall ClearSelection();
  HRESULT         __fastcall EndUpdate();
  HRESULT         __fastcall FocusNode(Borland_studio_toolsapi_tlb::IOTAStructureNode* node/*[in]*/);
  HRESULT         __fastcall GetFirstSelected(Borland_studio_toolsapi_tlb::IOTAStructureNode** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAStructureNode* __fastcall GetFirstSelected(void);
  HRESULT         __fastcall GetNextSelected(Borland_studio_toolsapi_tlb::IOTAStructureNode* node/*[in]*/
                                             , 
                                             Borland_studio_toolsapi_tlb::IOTAStructureNode** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAStructureNode* __fastcall GetNextSelected(Borland_studio_toolsapi_tlb::IOTAStructureNode* node/*[in]*/);
  HRESULT         __fastcall GetSelectedCount(long* pRetVal/*[out,retval]*/);
  long            __fastcall GetSelectedCount(void);
  HRESULT         __fastcall GetStructureContext(Borland_studio_toolsapi_tlb::IOTAStructureContext** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAStructureContext* __fastcall GetStructureContext(void);
  HRESULT         __fastcall GetStructureType(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall GetStructureType(void);
  HRESULT         __fastcall RequestEdit(Borland_studio_toolsapi_tlb::IOTAStructureNode* node/*[in]*/
                                         , VARIANT_BOOL ForceEdit/*[in]*/, 
                                         VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall RequestEdit(Borland_studio_toolsapi_tlb::IOTAStructureNode* node/*[in]*/, 
                                         VARIANT_BOOL ForceEdit/*[in]*/);
  HRESULT         __fastcall SetStructureContext(Borland_studio_toolsapi_tlb::IOTAStructureContext* aContext/*[in]*/);
  HRESULT         __fastcall StructureChanged(VARIANT_BOOL Deferred/*[in]*/);
  HRESULT         __fastcall SelectNode(Borland_studio_toolsapi_tlb::IOTAStructureNode* node/*[in]*/);
  HRESULT         __fastcall AddBitmap(long BitMap/*[in]*/, long* pRetVal/*[out,retval]*/);
  long            __fastcall AddBitmap(long BitMap/*[in]*/);
  HRESULT         __fastcall AddBitmap_2(long BitMap/*[in]*/, VARIANT_BOOL StateImage/*[in]*/, 
                                         long* pRetVal/*[out,retval]*/);
  long            __fastcall AddBitmap_2(long BitMap/*[in]*/, VARIANT_BOOL StateImage/*[in]*/);
  HRESULT         __fastcall AddIcon(long Icon/*[in]*/, long* pRetVal/*[out,retval]*/);
  long            __fastcall AddIcon(long Icon/*[in]*/);
  HRESULT         __fastcall AddIcon_2(long Icon/*[in]*/, VARIANT_BOOL StateImage/*[in]*/, 
                                       long* pRetVal/*[out,retval]*/);
  long            __fastcall AddIcon_2(long Icon/*[in]*/, VARIANT_BOOL StateImage/*[in]*/);
  HRESULT         __fastcall AddImageList(long ImageList/*[in]*/, long* pRetVal/*[out,retval]*/);
  long            __fastcall AddImageList(long ImageList/*[in]*/);
  HRESULT         __fastcall AddImageList_2(long ImageList/*[in]*/, VARIANT_BOOL StateImage/*[in]*/
                                            , long* pRetVal/*[out,retval]*/);
  long            __fastcall AddImageList_2(long ImageList/*[in]*/, VARIANT_BOOL StateImage/*[in]*/);
  HRESULT         __fastcall ViewShowing(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall ViewShowing(void);
  HRESULT         __fastcall add_StructureChangedEvent(Borland_studio_toolsapi_tlb::_ContextEventHandler* value/*[in]*/);
  HRESULT         __fastcall remove_StructureChangedEvent(Borland_studio_toolsapi_tlb::_ContextEventHandler* value/*[in]*/);
  HRESULT         __fastcall add_NodeEdited(Borland_studio_toolsapi_tlb::_NodeEventHandler* value/*[in]*/);
  HRESULT         __fastcall remove_NodeEdited(Borland_studio_toolsapi_tlb::_NodeEventHandler* value/*[in]*/);
  HRESULT         __fastcall add_NodeFocused(Borland_studio_toolsapi_tlb::_NodeEventHandler* value/*[in]*/);
  HRESULT         __fastcall remove_NodeFocused(Borland_studio_toolsapi_tlb::_NodeEventHandler* value/*[in]*/);
  HRESULT         __fastcall add_NodeSelected(Borland_studio_toolsapi_tlb::_NodeEventHandler* value/*[in]*/);
  HRESULT         __fastcall remove_NodeSelected(Borland_studio_toolsapi_tlb::_NodeEventHandler* value/*[in]*/);
  HRESULT         __fastcall add_DefaultNodeAction(Borland_studio_toolsapi_tlb::_NodeEventHandler* value/*[in]*/);
  HRESULT         __fastcall remove_DefaultNodeAction(Borland_studio_toolsapi_tlb::_NodeEventHandler* value/*[in]*/);
  HRESULT         __fastcall add_VisibleChanged(Borland_studio_toolsapi_tlb::_VisibleEventHandler* value/*[in]*/);
  HRESULT         __fastcall remove_VisibleChanged(Borland_studio_toolsapi_tlb::_VisibleEventHandler* value/*[in]*/);

};
typedef IOTAStructureViewDispT<IOTAStructureView> IOTAStructureViewDisp;

typedef TComInterface<IOTAFileHistoryManager>  TCOMIOTAFileHistoryManager;

// *********************************************************************//
// DispIntf:  IOTAFileHistoryManager
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3A5A2687-91FE-4D7C-B56B-FD3FB8D4096E}
// *********************************************************************//
template<class T>
class IOTAFileHistoryManagerDispT : public TAutoDriver<IOTAFileHistoryManager>
{
public:
  IOTAFileHistoryManagerDispT(){}

  IOTAFileHistoryManagerDispT(IOTAFileHistoryManager *pintf)
  {
    TAutoDriver<IOTAFileHistoryManager>::Bind(pintf, false);
  }

  IOTAFileHistoryManagerDispT(IOTAFileHistoryManagerPtr pintf)
  {
    TAutoDriver<IOTAFileHistoryManager>::Bind(pintf, true);
  }

  IOTAFileHistoryManagerDispT& operator=(IOTAFileHistoryManager *pintf)
  {
    TAutoDriver<IOTAFileHistoryManager>::Bind(pintf, false);
    return *this;
  }

  IOTAFileHistoryManagerDispT& operator=(IOTAFileHistoryManagerPtr pintf)
  {
    TAutoDriver<IOTAFileHistoryManager>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall AddTemporaryLabel(BSTR ALabelName/*[in]*/, LPSAFEARRAY AFiles/*[in]*/);
  HRESULT         __fastcall get_Count(long* pRetVal/*[out,retval]*/);
  long            __fastcall get_Count(void);
  HRESULT         __fastcall GetFileHistoryProvider(long index/*[in]*/, 
                                                    Borland_studio_toolsapi_tlb::IOTAFileHistoryProvider** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAFileHistoryProvider* __fastcall GetFileHistoryProvider(long index/*[in]*/);
  HRESULT         __fastcall RegisterHistoryProvider(Borland_studio_toolsapi_tlb::IOTAFileHistoryProvider* historyProvider/*[in]*/
                                                     , long* pRetVal/*[out,retval]*/);
  long            __fastcall RegisterHistoryProvider(Borland_studio_toolsapi_tlb::IOTAFileHistoryProvider* historyProvider/*[in]*/);
  HRESULT         __fastcall RevertTemporaryLabel(BSTR ALabelName/*[in]*/);
  HRESULT         __fastcall UnregisterHistoryProvider(long index/*[in]*/);
  HRESULT         __fastcall UpdateProviders();
  HRESULT         __fastcall add_ProvidersUpdated(Mscorlib_tlb::_EventHandler* value/*[in]*/);
  HRESULT         __fastcall remove_ProvidersUpdated(Mscorlib_tlb::_EventHandler* value/*[in]*/);

  __property   long            Count = {read = get_Count};
};
typedef IOTAFileHistoryManagerDispT<IOTAFileHistoryManager> IOTAFileHistoryManagerDisp;

typedef TComInterface<IOTAFileHistoryProvider>  TCOMIOTAFileHistoryProvider;

// *********************************************************************//
// DispIntf:  IOTAFileHistoryProvider
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B8CDB02D-93D8-4088-AE03-A28052AD0FAD}
// *********************************************************************//
template<class T>
class IOTAFileHistoryProviderDispT : public TAutoDriver<IOTAFileHistoryProvider>
{
public:
  IOTAFileHistoryProviderDispT(){}

  IOTAFileHistoryProviderDispT(IOTAFileHistoryProvider *pintf)
  {
    TAutoDriver<IOTAFileHistoryProvider>::Bind(pintf, false);
  }

  IOTAFileHistoryProviderDispT(IOTAFileHistoryProviderPtr pintf)
  {
    TAutoDriver<IOTAFileHistoryProvider>::Bind(pintf, true);
  }

  IOTAFileHistoryProviderDispT& operator=(IOTAFileHistoryProvider *pintf)
  {
    TAutoDriver<IOTAFileHistoryProvider>::Bind(pintf, false);
    return *this;
  }

  IOTAFileHistoryProviderDispT& operator=(IOTAFileHistoryProviderPtr pintf)
  {
    TAutoDriver<IOTAFileHistoryProvider>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall get_Ident(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_Ident(void);
  HRESULT         __fastcall get_Name(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_Name(void);
  HRESULT         __fastcall GetFileHistory(BSTR AFileName/*[in]*/, 
                                            Borland_studio_toolsapi_tlb::IOTAFileHistory** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAFileHistory* __fastcall GetFileHistory(BSTR AFileName/*[in]*/);

  __property   BSTR            Ident = {read = get_Ident};
  __property   BSTR            Name = {read = get_Name};
};
typedef IOTAFileHistoryProviderDispT<IOTAFileHistoryProvider> IOTAFileHistoryProviderDisp;

typedef TComInterface<IOTAFileHistory>  TCOMIOTAFileHistory;

// *********************************************************************//
// DispIntf:  IOTAFileHistory
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {92E624D2-A7CD-4C89-9B4E-71170955E96C}
// *********************************************************************//
template<class T>
class IOTAFileHistoryDispT : public TAutoDriver<IOTAFileHistory>
{
public:
  IOTAFileHistoryDispT(){}

  IOTAFileHistoryDispT(IOTAFileHistory *pintf)
  {
    TAutoDriver<IOTAFileHistory>::Bind(pintf, false);
  }

  IOTAFileHistoryDispT(IOTAFileHistoryPtr pintf)
  {
    TAutoDriver<IOTAFileHistory>::Bind(pintf, true);
  }

  IOTAFileHistoryDispT& operator=(IOTAFileHistory *pintf)
  {
    TAutoDriver<IOTAFileHistory>::Bind(pintf, false);
    return *this;
  }

  IOTAFileHistoryDispT& operator=(IOTAFileHistoryPtr pintf)
  {
    TAutoDriver<IOTAFileHistory>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall get_Count(long* pRetVal/*[out,retval]*/);
  long            __fastcall get_Count(void);
  HRESULT         __fastcall GetAuthor(long index/*[in]*/, BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall GetAuthor(long index/*[in]*/);
  HRESULT         __fastcall GetComment(long index/*[in]*/, BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall GetComment(long index/*[in]*/);
  HRESULT         __fastcall GetContent(long index/*[in]*/, LPUNKNOWN* pRetVal/*[out,retval]*/);
  LPUNKNOWN       __fastcall GetContent(long index/*[in]*/);
  HRESULT         __fastcall GetDate(long index/*[in]*/, DATE* pRetVal/*[out,retval]*/);
  DATE            __fastcall GetDate(long index/*[in]*/);
  HRESULT         __fastcall GetIdent(long index/*[in]*/, BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall GetIdent(long index/*[in]*/);
  HRESULT         __fastcall GetHistoryStyle(long index/*[in]*/, 
                                             Borland_studio_toolsapi_tlb::TOTAHistoryStyle* pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::TOTAHistoryStyle __fastcall GetHistoryStyle(long index/*[in]*/);
  HRESULT         __fastcall GetLabelCount(long index/*[in]*/, long* pRetVal/*[out,retval]*/);
  long            __fastcall GetLabelCount(long index/*[in]*/);
  HRESULT         __fastcall GetLabels(long index/*[in]*/, long labelIndex/*[in]*/, 
                                       BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall GetLabels(long index/*[in]*/, long labelIndex/*[in]*/);

  __property   long            Count = {read = get_Count};
};
typedef IOTAFileHistoryDispT<IOTAFileHistory> IOTAFileHistoryDisp;

typedef TComInterface<IInteropCodeEditorControl>  TCOMIInteropCodeEditorControl;

// *********************************************************************//
// DispIntf:  IInteropCodeEditorControl
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {61CD4309-303E-4A23-B260-266C2AA391FA}
// *********************************************************************//
template<class T>
class IInteropCodeEditorControlDispT : public TAutoDriver<IInteropCodeEditorControl>
{
public:
  IInteropCodeEditorControlDispT(){}

  IInteropCodeEditorControlDispT(IInteropCodeEditorControl *pintf)
  {
    TAutoDriver<IInteropCodeEditorControl>::Bind(pintf, false);
  }

  IInteropCodeEditorControlDispT(IInteropCodeEditorControlPtr pintf)
  {
    TAutoDriver<IInteropCodeEditorControl>::Bind(pintf, true);
  }

  IInteropCodeEditorControlDispT& operator=(IInteropCodeEditorControl *pintf)
  {
    TAutoDriver<IInteropCodeEditorControl>::Bind(pintf, false);
    return *this;
  }

  IInteropCodeEditorControlDispT& operator=(IInteropCodeEditorControlPtr pintf)
  {
    TAutoDriver<IInteropCodeEditorControl>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall get_Text(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall get_Text(void);
  HRESULT         __fastcall set_Text(BSTR pRetVal/*[in]*/);
  HRESULT         __fastcall SetParent(long parent/*[in]*/);
  HRESULT         __fastcall SetBounds(long left/*[in]*/, long top/*[in]*/, long width/*[in]*/, 
                                       long height/*[in]*/);
  HRESULT         __fastcall SetFocus(VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall SetFocus(void);
  HRESULT         __fastcall SetLocation(long left/*[in]*/, long top/*[in]*/);
  HRESULT         __fastcall SetSize(long width/*[in]*/, long height/*[in]*/);

  __property   BSTR            Text = {read = get_Text, write = set_Text};
};
typedef IInteropCodeEditorControlDispT<IInteropCodeEditorControl> IInteropCodeEditorControlDisp;

typedef TComInterface<IInteropCodeEditorControlCreator>  TCOMIInteropCodeEditorControlCreator;

// *********************************************************************//
// DispIntf:  IInteropCodeEditorControlCreator
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {72A5E09B-A046-47D1-95AA-15A333C7131B}
// *********************************************************************//
template<class T>
class IInteropCodeEditorControlCreatorDispT : public TAutoDriver<IInteropCodeEditorControlCreator>
{
public:
  IInteropCodeEditorControlCreatorDispT(){}

  IInteropCodeEditorControlCreatorDispT(IInteropCodeEditorControlCreator *pintf)
  {
    TAutoDriver<IInteropCodeEditorControlCreator>::Bind(pintf, false);
  }

  IInteropCodeEditorControlCreatorDispT(IInteropCodeEditorControlCreatorPtr pintf)
  {
    TAutoDriver<IInteropCodeEditorControlCreator>::Bind(pintf, true);
  }

  IInteropCodeEditorControlCreatorDispT& operator=(IInteropCodeEditorControlCreator *pintf)
  {
    TAutoDriver<IInteropCodeEditorControlCreator>::Bind(pintf, false);
    return *this;
  }

  IInteropCodeEditorControlCreatorDispT& operator=(IInteropCodeEditorControlCreatorPtr pintf)
  {
    TAutoDriver<IInteropCodeEditorControlCreator>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall CreateControl(Borland_studio_toolsapi_tlb::IInteropCodeEditorControl** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IInteropCodeEditorControl* __fastcall CreateControl(void);

};
typedef IInteropCodeEditorControlCreatorDispT<IInteropCodeEditorControlCreator> IInteropCodeEditorControlCreatorDisp;

typedef TComInterface<IOTARegistrationService>  TCOMIOTARegistrationService;

// *********************************************************************//
// DispIntf:  IOTARegistrationService
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4F23CBA5-3B8D-48B1-83A5-4F6E04C9F50C}
// *********************************************************************//
template<class T>
class IOTARegistrationServiceDispT : public TAutoDriver<IOTARegistrationService>
{
public:
  IOTARegistrationServiceDispT(){}

  IOTARegistrationServiceDispT(IOTARegistrationService *pintf)
  {
    TAutoDriver<IOTARegistrationService>::Bind(pintf, false);
  }

  IOTARegistrationServiceDispT(IOTARegistrationServicePtr pintf)
  {
    TAutoDriver<IOTARegistrationService>::Bind(pintf, true);
  }

  IOTARegistrationServiceDispT& operator=(IOTARegistrationService *pintf)
  {
    TAutoDriver<IOTARegistrationService>::Bind(pintf, false);
    return *this;
  }

  IOTARegistrationServiceDispT& operator=(IOTARegistrationServicePtr pintf)
  {
    TAutoDriver<IOTARegistrationService>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall RegisterAssemblyWithRegistry(BSTR fileName/*[in]*/, 
                                                          VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall RegisterAssemblyWithRegistry(BSTR fileName/*[in]*/);
  HRESULT         __fastcall UnregisterAssemblyFromRegistry(BSTR fileName/*[in]*/, 
                                                            VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall UnregisterAssemblyFromRegistry(BSTR fileName/*[in]*/);
  HRESULT         __fastcall GenerateInteropAssembly(BSTR fileName/*[in]*/, BSTR* Files/*[out]*/, 
                                                     VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall GenerateInteropAssembly(BSTR fileName/*[in]*/, BSTR* Files/*[out]*/);
  HRESULT         __fastcall GenerateInteropAssembly_2(BSTR fileName/*[in]*/, BSTR* Files/*[out]*/, 
                                                       BSTR AssemblyFileName/*[in]*/, 
                                                       VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall GenerateInteropAssembly_2(BSTR fileName/*[in]*/, BSTR* Files/*[out]*/, 
                                                       BSTR AssemblyFileName/*[in]*/);

};
typedef IOTARegistrationServiceDispT<IOTARegistrationService> IOTARegistrationServiceDisp;

typedef TComInterface<IOTAProjectFileStorageNotifier>  TCOMIOTAProjectFileStorageNotifier;

// *********************************************************************//
// DispIntf:  IOTAProjectFileStorageNotifier
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E1F55159-C7F3-4DA1-8E72-C17FA23D0C8C}
// *********************************************************************//
template<class T>
class IOTAProjectFileStorageNotifierDispT : public TAutoDriver<IOTAProjectFileStorageNotifier>
{
public:
  IOTAProjectFileStorageNotifierDispT(){}

  IOTAProjectFileStorageNotifierDispT(IOTAProjectFileStorageNotifier *pintf)
  {
    TAutoDriver<IOTAProjectFileStorageNotifier>::Bind(pintf, false);
  }

  IOTAProjectFileStorageNotifierDispT(IOTAProjectFileStorageNotifierPtr pintf)
  {
    TAutoDriver<IOTAProjectFileStorageNotifier>::Bind(pintf, true);
  }

  IOTAProjectFileStorageNotifierDispT& operator=(IOTAProjectFileStorageNotifier *pintf)
  {
    TAutoDriver<IOTAProjectFileStorageNotifier>::Bind(pintf, false);
    return *this;
  }

  IOTAProjectFileStorageNotifierDispT& operator=(IOTAProjectFileStorageNotifierPtr pintf)
  {
    TAutoDriver<IOTAProjectFileStorageNotifier>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall GetName(BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall GetName(void);
  HRESULT         __fastcall ProjectLoaded(Borland_studio_toolsapi_tlb::IOTAModule* ProjectOrGroup/*[in]*/
                                           , BSTR Data/*[in]*/);
  HRESULT         __fastcall CreatingProject(Borland_studio_toolsapi_tlb::IOTAModule* ProjectOrGroup/*[in]*/);
  HRESULT         __fastcall ProjectSaving(Borland_studio_toolsapi_tlb::IOTAModule* ProjectOrGroup/*[in]*/
                                           , BSTR* Data/*[in,out]*/);
  HRESULT         __fastcall ProjectClosing(Borland_studio_toolsapi_tlb::IOTAModule* ProjectOrGroup/*[in]*/);

};
typedef IOTAProjectFileStorageNotifierDispT<IOTAProjectFileStorageNotifier> IOTAProjectFileStorageNotifierDisp;

typedef TComInterface<IOTAProjectFileStorage>  TCOMIOTAProjectFileStorage;

// *********************************************************************//
// DispIntf:  IOTAProjectFileStorage
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EB421DBB-D961-4041-B17D-8BFAEE4291A1}
// *********************************************************************//
template<class T>
class IOTAProjectFileStorageDispT : public TAutoDriver<IOTAProjectFileStorage>
{
public:
  IOTAProjectFileStorageDispT(){}

  IOTAProjectFileStorageDispT(IOTAProjectFileStorage *pintf)
  {
    TAutoDriver<IOTAProjectFileStorage>::Bind(pintf, false);
  }

  IOTAProjectFileStorageDispT(IOTAProjectFileStoragePtr pintf)
  {
    TAutoDriver<IOTAProjectFileStorage>::Bind(pintf, true);
  }

  IOTAProjectFileStorageDispT& operator=(IOTAProjectFileStorage *pintf)
  {
    TAutoDriver<IOTAProjectFileStorage>::Bind(pintf, false);
    return *this;
  }

  IOTAProjectFileStorageDispT& operator=(IOTAProjectFileStoragePtr pintf)
  {
    TAutoDriver<IOTAProjectFileStorage>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall AddNewSection(Borland_studio_toolsapi_tlb::IOTAModule* ProjectOrGroup/*[in]*/
                                           , BSTR SectionName/*[in]*/, 
                                           VARIANT_BOOL LocalProjectFile/*[in]*/, 
                                           BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall AddNewSection(Borland_studio_toolsapi_tlb::IOTAModule* ProjectOrGroup/*[in]*/, 
                                           BSTR SectionName/*[in]*/, 
                                           VARIANT_BOOL LocalProjectFile/*[in]*/);
  HRESULT         __fastcall AddNotifier(Borland_studio_toolsapi_tlb::IOTAProjectFileStorageNotifier* Notifier/*[in]*/
                                         , long* pRetVal/*[out,retval]*/);
  long            __fastcall AddNotifier(Borland_studio_toolsapi_tlb::IOTAProjectFileStorageNotifier* Notifier/*[in]*/);
  HRESULT         __fastcall GetNotifierCount(long* pRetVal/*[out,retval]*/);
  long            __fastcall GetNotifierCount(void);
  HRESULT         __fastcall GetNotifier(long index/*[in]*/, 
                                         Borland_studio_toolsapi_tlb::IOTAProjectFileStorageNotifier** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAProjectFileStorageNotifier* __fastcall GetNotifier(long index/*[in]*/);
  HRESULT         __fastcall RemoveNotifier(long index/*[in]*/);
  HRESULT         __fastcall GetProjectStorageData(Borland_studio_toolsapi_tlb::IOTAModule* ProjectOrGroup/*[in]*/
                                                   , BSTR SectionName/*[in]*/, 
                                                   VARIANT_BOOL LocalProjectFile/*[in]*/, 
                                                   BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall GetProjectStorageData(Borland_studio_toolsapi_tlb::IOTAModule* ProjectOrGroup/*[in]*/, 
                                                   BSTR SectionName/*[in]*/, 
                                                   VARIANT_BOOL LocalProjectFile/*[in]*/);
  HRESULT         __fastcall LoadNodeFromFile(BSTR fileName/*[in]*/, BSTR NodeName/*[in]*/, 
                                              VARIANT_BOOL LocalProjectFile/*[in]*/, 
                                              BSTR* pRetVal/*[out,retval]*/);
  BSTR            __fastcall LoadNodeFromFile(BSTR fileName/*[in]*/, BSTR NodeName/*[in]*/, 
                                              VARIANT_BOOL LocalProjectFile/*[in]*/);

};
typedef IOTAProjectFileStorageDispT<IOTAProjectFileStorage> IOTAProjectFileStorageDisp;

typedef TComInterface<IOTACodeBrowsePreview>  TCOMIOTACodeBrowsePreview;

// *********************************************************************//
// DispIntf:  IOTACodeBrowsePreview
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {929C8812-4DB1-4338-B3B8-C1BE7969E2BF}
// *********************************************************************//
template<class T>
class IOTACodeBrowsePreviewDispT : public TAutoDriver<IOTACodeBrowsePreview>
{
public:
  IOTACodeBrowsePreviewDispT(){}

  IOTACodeBrowsePreviewDispT(IOTACodeBrowsePreview *pintf)
  {
    TAutoDriver<IOTACodeBrowsePreview>::Bind(pintf, false);
  }

  IOTACodeBrowsePreviewDispT(IOTACodeBrowsePreviewPtr pintf)
  {
    TAutoDriver<IOTACodeBrowsePreview>::Bind(pintf, true);
  }

  IOTACodeBrowsePreviewDispT& operator=(IOTACodeBrowsePreview *pintf)
  {
    TAutoDriver<IOTACodeBrowsePreview>::Bind(pintf, false);
    return *this;
  }

  IOTACodeBrowsePreviewDispT& operator=(IOTACodeBrowsePreviewPtr pintf)
  {
    TAutoDriver<IOTACodeBrowsePreview>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall GetCodePreviewInfo(long sourceLine/*[in]*/, long sourceCol/*[in]*/, 
                                                BSTR* fileName/*[out]*/, long* offset/*[out]*/, 
                                                long* length/*[out]*/, 
                                                VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall GetCodePreviewInfo(long sourceLine/*[in]*/, long sourceCol/*[in]*/, 
                                                BSTR* fileName/*[out]*/, long* offset/*[out]*/, 
                                                long* length/*[out]*/);

};
typedef IOTACodeBrowsePreviewDispT<IOTACodeBrowsePreview> IOTACodeBrowsePreviewDisp;

typedef TComInterface<IOTATimerServices>  TCOMIOTATimerServices;

// *********************************************************************//
// DispIntf:  IOTATimerServices
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CA12BE5C-FC9B-403A-BFB5-786562026ABD}
// *********************************************************************//
template<class T>
class IOTATimerServicesDispT : public TAutoDriver<IOTATimerServices>
{
public:
  IOTATimerServicesDispT(){}

  IOTATimerServicesDispT(IOTATimerServices *pintf)
  {
    TAutoDriver<IOTATimerServices>::Bind(pintf, false);
  }

  IOTATimerServicesDispT(IOTATimerServicesPtr pintf)
  {
    TAutoDriver<IOTATimerServices>::Bind(pintf, true);
  }

  IOTATimerServicesDispT& operator=(IOTATimerServices *pintf)
  {
    TAutoDriver<IOTATimerServices>::Bind(pintf, false);
    return *this;
  }

  IOTATimerServicesDispT& operator=(IOTATimerServicesPtr pintf)
  {
    TAutoDriver<IOTATimerServices>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall MarkElapsedTime(BSTR description/*[in]*/);
  HRESULT         __fastcall StartTimer(BSTR description/*[in]*/, BSTR category/*[in]*/, 
                                        long* pRetVal/*[out,retval]*/);
  long            __fastcall StartTimer(BSTR description/*[in]*/, BSTR category/*[in]*/);
  HRESULT         __fastcall StopTimer(long timerID/*[in]*/);

};
typedef IOTATimerServicesDispT<IOTATimerServices> IOTATimerServicesDisp;

typedef TComInterface<IOTAHelpTrait>  TCOMIOTAHelpTrait;

// *********************************************************************//
// DispIntf:  IOTAHelpTrait
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DEE36173-1597-498A-A85A-C90BFCAE9B74}
// *********************************************************************//
template<class T>
class IOTAHelpTraitDispT : public TAutoDriver<IOTAHelpTrait>
{
public:
  IOTAHelpTraitDispT(){}

  IOTAHelpTraitDispT(IOTAHelpTrait *pintf)
  {
    TAutoDriver<IOTAHelpTrait>::Bind(pintf, false);
  }

  IOTAHelpTraitDispT(IOTAHelpTraitPtr pintf)
  {
    TAutoDriver<IOTAHelpTrait>::Bind(pintf, true);
  }

  IOTAHelpTraitDispT& operator=(IOTAHelpTrait *pintf)
  {
    TAutoDriver<IOTAHelpTrait>::Bind(pintf, false);
    return *this;
  }

  IOTAHelpTraitDispT& operator=(IOTAHelpTraitPtr pintf)
  {
    TAutoDriver<IOTAHelpTrait>::Bind(pintf, true);
    return *this;
  }


};
typedef IOTAHelpTraitDispT<IOTAHelpTrait> IOTAHelpTraitDisp;

typedef TComInterface<IOTAPersonalityHelpTrait>  TCOMIOTAPersonalityHelpTrait;

// *********************************************************************//
// DispIntf:  IOTAPersonalityHelpTrait
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {914E82DB-4123-4AA8-91D9-DB105E1FEC64}
// *********************************************************************//
template<class T>
class IOTAPersonalityHelpTraitDispT : public TAutoDriver<IOTAPersonalityHelpTrait>
{
public:
  IOTAPersonalityHelpTraitDispT(){}

  IOTAPersonalityHelpTraitDispT(IOTAPersonalityHelpTrait *pintf)
  {
    TAutoDriver<IOTAPersonalityHelpTrait>::Bind(pintf, false);
  }

  IOTAPersonalityHelpTraitDispT(IOTAPersonalityHelpTraitPtr pintf)
  {
    TAutoDriver<IOTAPersonalityHelpTrait>::Bind(pintf, true);
  }

  IOTAPersonalityHelpTraitDispT& operator=(IOTAPersonalityHelpTrait *pintf)
  {
    TAutoDriver<IOTAPersonalityHelpTrait>::Bind(pintf, false);
    return *this;
  }

  IOTAPersonalityHelpTraitDispT& operator=(IOTAPersonalityHelpTraitPtr pintf)
  {
    TAutoDriver<IOTAPersonalityHelpTrait>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall ShowKeywordHelp(BSTR keyword/*[in]*/);
  HRESULT         __fastcall UnderstandsKeyword(BSTR keyword/*[in]*/, 
                                                VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall UnderstandsKeyword(BSTR keyword/*[in]*/);

};
typedef IOTAPersonalityHelpTraitDispT<IOTAPersonalityHelpTrait> IOTAPersonalityHelpTraitDisp;

typedef TComInterface<IOTAHelpServices>  TCOMIOTAHelpServices;

// *********************************************************************//
// DispIntf:  IOTAHelpServices
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {25F4CC12-EA93-4AEC-BC4A-DFDF427053B0}
// *********************************************************************//
template<class T>
class IOTAHelpServicesDispT : public TAutoDriver<IOTAHelpServices>
{
public:
  IOTAHelpServicesDispT(){}

  IOTAHelpServicesDispT(IOTAHelpServices *pintf)
  {
    TAutoDriver<IOTAHelpServices>::Bind(pintf, false);
  }

  IOTAHelpServicesDispT(IOTAHelpServicesPtr pintf)
  {
    TAutoDriver<IOTAHelpServices>::Bind(pintf, true);
  }

  IOTAHelpServicesDispT& operator=(IOTAHelpServices *pintf)
  {
    TAutoDriver<IOTAHelpServices>::Bind(pintf, false);
    return *this;
  }

  IOTAHelpServicesDispT& operator=(IOTAHelpServicesPtr pintf)
  {
    TAutoDriver<IOTAHelpServices>::Bind(pintf, true);
    return *this;
  }

  HRESULT         __fastcall ShowKeywordHelp(BSTR keyword/*[in]*/);
  HRESULT         __fastcall UnderstandsKeyword(BSTR keyword/*[in]*/, 
                                                VARIANT_BOOL* pRetVal/*[out,retval]*/);
  VARIANT_BOOL    __fastcall UnderstandsKeyword(BSTR keyword/*[in]*/);
  HRESULT         __fastcall ShowContextHelp(long contextID/*[in]*/);
  HRESULT         __fastcall ShowTopicHelp(BSTR topic/*[in]*/);
  HRESULT         __fastcall GetFileHelpTrait(BSTR fileName/*[in]*/, 
                                              Borland_studio_toolsapi_tlb::IOTAHelpTrait** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAHelpTrait* __fastcall GetFileHelpTrait(BSTR fileName/*[in]*/);
  HRESULT         __fastcall GetPersonalityHelpTrait(BSTR personality/*[in]*/, 
                                                     Borland_studio_toolsapi_tlb::IOTAPersonalityHelpTrait** pRetVal/*[out,retval]*/);
  Borland_studio_toolsapi_tlb::IOTAPersonalityHelpTrait* __fastcall GetPersonalityHelpTrait(BSTR personality/*[in]*/);

};
typedef IOTAHelpServicesDispT<IOTAHelpServices> IOTAHelpServicesDisp;

// *********************************************************************//
// SmartIntf: TCOM_CodeUpdater
// Interface: _CodeUpdater
// *********************************************************************//
// *********************************************************************//
// DispIntf:  _CodeUpdater
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {400786A2-A2FF-3714-AD36-1A87580A56B4}
// *********************************************************************//
// *********************************************************************//
// DispIntf:  ILanguage
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {52140F24-D25C-399C-BB6C-EDF1625DA50A}
// *********************************************************************//
template <class T> HRESULT __fastcall
ILanguageDispT<T>::get_Name(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Name"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
ILanguageDispT<T>::get_Name(void)
{
  BSTR pRetVal;
  this->get_Name((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
ILanguageDispT<T>::AssemblyChanged(BSTR Name/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("AssemblyChanged"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<1> _args;
  _args[1] = Name /*[VT_BSTR:0]*/;
  return OleFunction(_dispid, _args);
}

// *********************************************************************//
// DispIntf:  IFileSymbols
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4BC0FA96-F783-339A-9E65-21E2F36F0553}
// *********************************************************************//
template <class T> HRESULT __fastcall
IFileSymbolsDispT<T>::GetCodeDomFile(Borland_studio_toolsapi_tlb::IOTACodeDomFile** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetCodeDomFile"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTACodeDomFile**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTACodeDomFile* __fastcall
IFileSymbolsDispT<T>::GetCodeDomFile(void)
{
  Borland_studio_toolsapi_tlb::IOTACodeDomFile* pRetVal;
  this->GetCodeDomFile((Borland_studio_toolsapi_tlb::IOTACodeDomFile**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IFileSymbolsDispT<T>::GetInsite(Borland_studio_toolsapi_tlb::IInsite** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetInsite"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IInsite**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IInsite* __fastcall
IFileSymbolsDispT<T>::GetInsite(void)
{
  Borland_studio_toolsapi_tlb::IInsite* pRetVal;
  this->GetInsite((Borland_studio_toolsapi_tlb::IInsite**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IFileSymbolsDispT<T>::GetRegions(Borland_studio_toolsapi_tlb::IRegions** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetRegions"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IRegions**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IRegions* __fastcall
IFileSymbolsDispT<T>::GetRegions(void)
{
  Borland_studio_toolsapi_tlb::IRegions* pRetVal;
  this->GetRegions((Borland_studio_toolsapi_tlb::IRegions**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IFileSymbolsDispT<T>::GetModuleInfo(Borland_studio_toolsapi_tlb::IModuleInfo** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetModuleInfo"), DISPID(DISPID_UNKNOWN/*[1610743811]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IModuleInfo**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IModuleInfo* __fastcall
IFileSymbolsDispT<T>::GetModuleInfo(void)
{
  Borland_studio_toolsapi_tlb::IModuleInfo* pRetVal;
  this->GetModuleInfo((Borland_studio_toolsapi_tlb::IModuleInfo**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IFileSymbolsDispT<T>::GetErrors(Borland_studio_toolsapi_tlb::IErrors** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetErrors"), DISPID(DISPID_UNKNOWN/*[1610743812]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IErrors**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IErrors* __fastcall
IFileSymbolsDispT<T>::GetErrors(void)
{
  Borland_studio_toolsapi_tlb::IErrors* pRetVal;
  this->GetErrors((Borland_studio_toolsapi_tlb::IErrors**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IFileSymbolsDispT<T>::GetComments(Borland_studio_toolsapi_tlb::IComments** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetComments"), DISPID(DISPID_UNKNOWN/*[1610743813]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IComments**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IComments* __fastcall
IFileSymbolsDispT<T>::GetComments(void)
{
  Borland_studio_toolsapi_tlb::IComments* pRetVal;
  this->GetComments((Borland_studio_toolsapi_tlb::IComments**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IFileSymbolsDispT<T>::GetStructureContext(Borland_studio_toolsapi_tlb::IOTAStructureContext** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetStructureContext"), DISPID(DISPID_UNKNOWN/*[1610743814]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAStructureContext**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAStructureContext* __fastcall
IFileSymbolsDispT<T>::GetStructureContext(void)
{
  Borland_studio_toolsapi_tlb::IOTAStructureContext* pRetVal;
  this->GetStructureContext((Borland_studio_toolsapi_tlb::IOTAStructureContext**)&pRetVal);
  return pRetVal;
}

// *********************************************************************//
// DispIntf:  IFileParse
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {325F8844-7EC5-3867-8281-BB3DD9934766}
// *********************************************************************//
template <class T> HRESULT __fastcall
IFileParseDispT<T>::Modified()
{
  _TDispID _dispid(*this, OLETEXT("Modified"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IFileParseDispT<T>::Parse()
{
  _TDispID _dispid(*this, OLETEXT("Parse"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  return OleFunction(_dispid);
}

// *********************************************************************//
// DispIntf:  IBlockComplete
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7AEB3A47-55DB-3E61-B114-30D8557FD3F2}
// *********************************************************************//
template <class T> HRESULT __fastcall
IBlockCompleteDispT<T>::Parse(BSTR fileName/*[in]*/, long line/*[in]*/, long col/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Parse"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<3> _args;
  _args[1] = fileName /*[VT_BSTR:0]*/;
  _args[2] = line /*[VT_I4:0]*/;
  _args[3] = col /*[VT_I4:0]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IBlockCompleteDispT<T>::GetBlockType(Borland_studio_toolsapi_tlb::BlockCompleteType* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetBlockType"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr((int*)pRetVal /*[VT_USERDEFINED:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::BlockCompleteType __fastcall
IBlockCompleteDispT<T>::GetBlockType(void)
{
  Borland_studio_toolsapi_tlb::BlockCompleteType pRetVal;
  this->GetBlockType((Borland_studio_toolsapi_tlb::BlockCompleteType*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IBlockCompleteDispT<T>::GetBlockPos(/*AUTO_PARAM_ERROR(Borland_studio_toolsapi_tlb::OTACharPos* pRetVal)*/ VARIANT*  pRetVal)
{
  _TDispID _dispid(*this, OLETEXT("GetBlockPos"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_USERDEFINED:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> HRESULT __fastcall
IBlockCompleteDispT<T>::GetIsValid(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetIsValid"), DISPID(DISPID_UNKNOWN/*[1610743811]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IBlockCompleteDispT<T>::GetIsValid(void)
{
  VARIANT_BOOL pRetVal;
  this->GetIsValid((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

// *********************************************************************//
// DispIntf:  IOTABrowserModule
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {10F40E7C-2D93-45B4-B776-36A50D7511F8}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTABrowserModuleDispT<T>::BrowseToSymbol(BSTR symbolName/*[in]*/, 
                                          VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("BrowseToSymbol"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<1> _args;
  _args[1] = symbolName /*[VT_BSTR:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTABrowserModuleDispT<T>::BrowseToSymbol(BSTR symbolName/*[in]*/)
{
  VARIANT_BOOL pRetVal;
  this->BrowseToSymbol(symbolName, (VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

// *********************************************************************//
// DispIntf:  IMethodNavigate
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {711E1D36-28A1-345B-9FB6-6814FF9005B5}
// *********************************************************************//
template <class T> HRESULT __fastcall
IMethodNavigateDispT<T>::Navigate(Borland_studio_toolsapi_tlb::IOTAEditView* AView/*[in]*/, 
                                  BSTR fileName/*[in]*/, 
                                  Borland_studio_toolsapi_tlb::MethodNavigateType NavigateType/*[in]*/
                                  , VARIANT_BOOL ClassLock/*[in]*/, 
                                  VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Navigate"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<4> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTAEditView*)AView /*[VT_USERDEFINED:1]*/;
  _args[2] = fileName /*[VT_BSTR:0]*/;
  _args[3] = (int)NavigateType /*[VT_USERDEFINED:0]*/;
  _args[4] = ClassLock /*[VT_BOOL:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IMethodNavigateDispT<T>::Navigate(Borland_studio_toolsapi_tlb::IOTAEditView* AView/*[in]*/, 
                                  BSTR fileName/*[in]*/, 
                                  Borland_studio_toolsapi_tlb::MethodNavigateType NavigateType/*[in]*/, 
                                  VARIANT_BOOL ClassLock/*[in]*/)
{
  VARIANT_BOOL pRetVal;
  this->Navigate(AView, fileName, NavigateType, ClassLock, (VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

// *********************************************************************//
// DispIntf:  IStringList
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A987910E-C8B2-3C42-8063-06E02F35351A}
// *********************************************************************//
template <class T> HRESULT __fastcall
IStringListDispT<T>::get_Count(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Count"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> long __fastcall
IStringListDispT<T>::get_Count(void)
{
  long pRetVal;
  this->get_Count((long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IStringListDispT<T>::Add(BSTR value/*[in]*/, long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Add"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<1> _args;
  _args[1] = value /*[VT_BSTR:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> long __fastcall
IStringListDispT<T>::Add(BSTR value/*[in]*/)
{
  long pRetVal;
  this->Add(value, (long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IStringListDispT<T>::Remove(BSTR value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Remove"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<1> _args;
  _args[1] = value /*[VT_BSTR:0]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IStringListDispT<T>::Clear()
{
  _TDispID _dispid(*this, OLETEXT("Clear"), DISPID(DISPID_UNKNOWN/*[1610743811]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IStringListDispT<T>::IndexOf(BSTR value/*[in]*/, long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("IndexOf"), DISPID(DISPID_UNKNOWN/*[1610743812]*/));
  TAutoArgs<1> _args;
  _args[1] = value /*[VT_BSTR:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> long __fastcall
IStringListDispT<T>::IndexOf(BSTR value/*[in]*/)
{
  long pRetVal;
  this->IndexOf(value, (long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IStringListDispT<T>::get_Item(long index/*[in]*/, BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Item"), DISPID(0));
  TAutoArgs<1> _args;
  _args[1] = index /*[VT_I4:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IStringListDispT<T>::get_Item(long index/*[in]*/)
{
  BSTR pRetVal;
  this->get_Item(index, (BSTR*)&pRetVal);
  return pRetVal;
}

// *********************************************************************//
// DispIntf:  IProject
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BF4941E6-EDBD-47BD-8839-B404170740F4}
// *********************************************************************//
template <class T> HRESULT __fastcall
IProjectDispT<T>::get_Ident(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Ident"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> long __fastcall
IProjectDispT<T>::get_Ident(void)
{
  long pRetVal;
  this->get_Ident((long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IProjectDispT<T>::FileChanged(BSTR fileName/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("FileChanged"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<1> _args;
  _args[1] = fileName /*[VT_BSTR:0]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IProjectDispT<T>::GetInternalProject(VARIANT* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetInternalProject"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_VARIANT:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT __fastcall
IProjectDispT<T>::GetInternalProject(void)
{
  VARIANT pRetVal;
  this->GetInternalProject((VARIANT*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IProjectDispT<T>::SynchronizeModel()
{
  _TDispID _dispid(*this, OLETEXT("SynchronizeModel"), DISPID(DISPID_UNKNOWN/*[1610743811]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IProjectDispT<T>::GetDomFile(BSTR fileName/*[in]*/, 
                             Borland_studio_toolsapi_tlb::IOTACodeDomFile** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetDomFile"), DISPID(DISPID_UNKNOWN/*[1610743812]*/));
  TAutoArgs<1> _args;
  _args[1] = fileName /*[VT_BSTR:0]*/;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTACodeDomFile**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTACodeDomFile* __fastcall
IProjectDispT<T>::GetDomFile(BSTR fileName/*[in]*/)
{
  Borland_studio_toolsapi_tlb::IOTACodeDomFile* pRetVal;
  this->GetDomFile(fileName, (Borland_studio_toolsapi_tlb::IOTACodeDomFile**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IProjectDispT<T>::GetDomFile_2(Borland_studio_toolsapi_tlb::IOTAModule* module/*[in]*/, 
                               Borland_studio_toolsapi_tlb::IOTACodeDomFile** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetDomFile_2"), DISPID(DISPID_UNKNOWN/*[1610743813]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTAModule*)module /*[VT_USERDEFINED:1]*/;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTACodeDomFile**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTACodeDomFile* __fastcall
IProjectDispT<T>::GetDomFile_2(Borland_studio_toolsapi_tlb::IOTAModule* module/*[in]*/)
{
  Borland_studio_toolsapi_tlb::IOTACodeDomFile* pRetVal;
  this->GetDomFile_2(module, (Borland_studio_toolsapi_tlb::IOTACodeDomFile**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IProjectDispT<T>::GetFileComments(Borland_studio_toolsapi_tlb::IComments** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetFileComments"), DISPID(DISPID_UNKNOWN/*[1610743814]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IComments**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IComments* __fastcall
IProjectDispT<T>::GetFileComments(void)
{
  Borland_studio_toolsapi_tlb::IComments* pRetVal;
  this->GetFileComments((Borland_studio_toolsapi_tlb::IComments**)&pRetVal);
  return pRetVal;
}

// *********************************************************************//
// DispIntf:  ISymbolsInfo
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {379617BD-F801-3978-A81D-7D406B8CF047}
// *********************************************************************//
template <class T> HRESULT __fastcall
ISymbolsInfoDispT<T>::SetSortOrder(VARIANT_BOOL sortByName/*[in]*/, long* bestMatchIndex/*[out]*/, 
                                   long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("SetSortOrder"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<2> _args;
  _args[1] = sortByName /*[VT_BOOL:0]*/;
  _args[2] = bestMatchIndex /*[VT_I4:1]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> long __fastcall
ISymbolsInfoDispT<T>::SetSortOrder(VARIANT_BOOL sortByName/*[in]*/, long* bestMatchIndex/*[out]*/)
{
  long pRetVal;
  this->SetSortOrder(sortByName, bestMatchIndex, (long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
ISymbolsInfoDispT<T>::SetFilter(BSTR filter/*[in]*/, long* bestMatchIndex/*[out]*/, 
                                long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("SetFilter"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<2> _args;
  _args[1] = filter /*[VT_BSTR:0]*/;
  _args[2] = bestMatchIndex /*[VT_I4:1]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> long __fastcall
ISymbolsInfoDispT<T>::SetFilter(BSTR filter/*[in]*/, long* bestMatchIndex/*[out]*/)
{
  long pRetVal;
  this->SetFilter(filter, bestMatchIndex, (long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
ISymbolsInfoDispT<T>::GetCount(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetCount"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> long __fastcall
ISymbolsInfoDispT<T>::GetCount(void)
{
  long pRetVal;
  this->GetCount((long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
ISymbolsInfoDispT<T>::GetBestMatchIndex(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetBestMatchIndex"), DISPID(DISPID_UNKNOWN/*[1610743811]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> long __fastcall
ISymbolsInfoDispT<T>::GetBestMatchIndex(void)
{
  long pRetVal;
  this->GetBestMatchIndex((long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
ISymbolsInfoDispT<T>::GetItems(long offset/*[in]*/, long length/*[in]*/, LPSAFEARRAY* items/*[out]*/
                               , long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetItems"), DISPID(DISPID_UNKNOWN/*[1610743812]*/));
  TAutoArgs<3> _args;
  _args[1] = offset /*[VT_I4:0]*/;
  _args[2] = length /*[VT_I4:0]*/;
  _args[3] = items /*[VT_SAFEARRAY:1]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> long __fastcall
ISymbolsInfoDispT<T>::GetItems(long offset/*[in]*/, long length/*[in]*/, LPSAFEARRAY* items/*[out]*/)
{
  long pRetVal;
  this->GetItems(offset, length, items, (long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
ISymbolsInfoDispT<T>::GetCompletionContext(Borland_studio_toolsapi_tlb::TCodeCompletionContext* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetCompletionContext"), DISPID(DISPID_UNKNOWN/*[1610743813]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr((int*)pRetVal /*[VT_USERDEFINED:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::TCodeCompletionContext __fastcall
ISymbolsInfoDispT<T>::GetCompletionContext(void)
{
  Borland_studio_toolsapi_tlb::TCodeCompletionContext pRetVal;
  this->GetCompletionContext((Borland_studio_toolsapi_tlb::TCodeCompletionContext*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
ISymbolsInfoDispT<T>::GetHelpInsightHtml(long symbol/*[in]*/, BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetHelpInsightHtml"), DISPID(DISPID_UNKNOWN/*[1610743814]*/));
  TAutoArgs<1> _args;
  _args[1] = symbol /*[VT_I4:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> BSTR __fastcall
ISymbolsInfoDispT<T>::GetHelpInsightHtml(long symbol/*[in]*/)
{
  BSTR pRetVal;
  this->GetHelpInsightHtml(symbol, (BSTR*)&pRetVal);
  return pRetVal;
}

// *********************************************************************//
// DispIntf:  IInsite
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {529A4ED6-D770-3F07-89FA-4D5237BB1126}
// *********************************************************************//
template <class T> HRESULT __fastcall
IInsiteDispT<T>::GetFilename(long index/*[in]*/, BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetFilename"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<1> _args;
  _args[1] = index /*[VT_I4:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> BSTR __fastcall
IInsiteDispT<T>::GetFilename(long index/*[in]*/)
{
  BSTR pRetVal;
  this->GetFilename(index, (BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IInsiteDispT<T>::GetIndex(BSTR fileName/*[in]*/, long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetIndex"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<1> _args;
  _args[1] = fileName /*[VT_BSTR:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> long __fastcall
IInsiteDispT<T>::GetIndex(BSTR fileName/*[in]*/)
{
  long pRetVal;
  this->GetIndex(fileName, (long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IInsiteDispT<T>::symbolName(long sym/*[in]*/, BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("symbolName"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<1> _args;
  _args[1] = sym /*[VT_I4:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> BSTR __fastcall
IInsiteDispT<T>::symbolName(long sym/*[in]*/)
{
  BSTR pRetVal;
  this->symbolName(sym, (BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IInsiteDispT<T>::SymbolHint(long sym/*[in]*/, BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("SymbolHint"), DISPID(DISPID_UNKNOWN/*[1610743811]*/));
  TAutoArgs<1> _args;
  _args[1] = sym /*[VT_I4:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> BSTR __fastcall
IInsiteDispT<T>::SymbolHint(long sym/*[in]*/)
{
  BSTR pRetVal;
  this->SymbolHint(sym, (BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IInsiteDispT<T>::SymbolLocation(long sym/*[in]*/, 
                                /*AUTO_PARAM_ERROR(Borland_studio_toolsapi_tlb::SourceLocation* pRetVal)*/ VARIANT*  pRetVal)
{
  _TDispID _dispid(*this, OLETEXT("SymbolLocation"), DISPID(DISPID_UNKNOWN/*[1610743812]*/));
  TAutoArgs<1> _args;
  _args[1] = sym /*[VT_I4:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_USERDEFINED:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> HRESULT __fastcall
IInsiteDispT<T>::GetSymbolAccessFlags(long sym/*[in]*/, 
                                      Borland_studio_toolsapi_tlb::SymbolAccessFlags* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetSymbolAccessFlags"), DISPID(DISPID_UNKNOWN/*[1610743813]*/));
  TAutoArgs<1> _args;
  _args[1] = sym /*[VT_I4:0]*/;
  return OutRetValSetterPtr((int*)pRetVal /*[VT_USERDEFINED:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::SymbolAccessFlags __fastcall
IInsiteDispT<T>::GetSymbolAccessFlags(long sym/*[in]*/)
{
  Borland_studio_toolsapi_tlb::SymbolAccessFlags pRetVal;
  this->GetSymbolAccessFlags(sym, (Borland_studio_toolsapi_tlb::SymbolAccessFlags*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IInsiteDispT<T>::GetSymbolKind(long sym/*[in]*/, 
                               Borland_studio_toolsapi_tlb::SymbolKind* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetSymbolKind"), DISPID(DISPID_UNKNOWN/*[1610743814]*/));
  TAutoArgs<1> _args;
  _args[1] = sym /*[VT_I4:0]*/;
  return OutRetValSetterPtr((int*)pRetVal /*[VT_USERDEFINED:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::SymbolKind __fastcall
IInsiteDispT<T>::GetSymbolKind(long sym/*[in]*/)
{
  Borland_studio_toolsapi_tlb::SymbolKind pRetVal;
  this->GetSymbolKind(sym, (Borland_studio_toolsapi_tlb::SymbolKind*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IInsiteDispT<T>::SymbolDocComment(long sym/*[in]*/, BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("SymbolDocComment"), DISPID(DISPID_UNKNOWN/*[1610743815]*/));
  TAutoArgs<1> _args;
  _args[1] = sym /*[VT_I4:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> BSTR __fastcall
IInsiteDispT<T>::SymbolDocComment(long sym/*[in]*/)
{
  BSTR pRetVal;
  this->SymbolDocComment(sym, (BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IInsiteDispT<T>::SymbolHelpQuery(long sym/*[in]*/, BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("SymbolHelpQuery"), DISPID(DISPID_UNKNOWN/*[1610743816]*/));
  TAutoArgs<1> _args;
  _args[1] = sym /*[VT_I4:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> BSTR __fastcall
IInsiteDispT<T>::SymbolHelpQuery(long sym/*[in]*/)
{
  BSTR pRetVal;
  this->SymbolHelpQuery(sym, (BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IInsiteDispT<T>::SymbolAt(/*AUTO_PARAM_ERROR(Borland_studio_toolsapi_tlb::SourceLocation location)*/ VARIANT  location
                          , long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("SymbolAt"), DISPID(DISPID_UNKNOWN/*[1610743817]*/));
  TAutoArgs<1> _args;
  _args[1] = location;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> HRESULT __fastcall
IInsiteDispT<T>::ScopeAt(/*AUTO_PARAM_ERROR(Borland_studio_toolsapi_tlb::SourceLocation location)*/ VARIANT  location
                         , long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("ScopeAt"), DISPID(DISPID_UNKNOWN/*[1610743818]*/));
  TAutoArgs<1> _args;
  _args[1] = location;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> HRESULT __fastcall
IInsiteDispT<T>::FindSymbol(BSTR Name/*[in]*/, long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("FindSymbol"), DISPID(DISPID_UNKNOWN/*[1610743819]*/));
  TAutoArgs<1> _args;
  _args[1] = Name /*[VT_BSTR:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> long __fastcall
IInsiteDispT<T>::FindSymbol(BSTR Name/*[in]*/)
{
  long pRetVal;
  this->FindSymbol(Name, (long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IInsiteDispT<T>::GetSourceContext(/*AUTO_PARAM_ERROR(Borland_studio_toolsapi_tlb::SourceLocation location)*/ VARIANT  location
                                  , long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetSourceContext"), DISPID(DISPID_UNKNOWN/*[1610743820]*/));
  TAutoArgs<1> _args;
  _args[1] = location;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> HRESULT __fastcall
IInsiteDispT<T>::GetSymbols(long symbolOrScope/*[in]*/, long sourceContext/*[in]*/, 
                            Borland_studio_toolsapi_tlb::QueryFlags flags/*[in]*/, 
                            BSTR filter/*[in]*/, LPSAFEARRAY* symbols/*[out]*/, 
                            long* bestMatch/*[out]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetSymbols"), DISPID(DISPID_UNKNOWN/*[1610743821]*/));
  TAutoArgs<6> _args;
  _args[1] = symbolOrScope /*[VT_I4:0]*/;
  _args[2] = sourceContext /*[VT_I4:0]*/;
  _args[3] = (int)flags /*[VT_USERDEFINED:0]*/;
  _args[4] = filter /*[VT_BSTR:0]*/;
  _args[5] = symbols /*[VT_SAFEARRAY:1]*/;
  _args[6] = bestMatch /*[VT_I4:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IInsiteDispT<T>::GetParameters(/*AUTO_PARAM_ERROR(Borland_studio_toolsapi_tlb::SourceLocation location)*/ VARIANT  location
                               , LPSAFEARRAY* parameters/*[out]*/, 
                               LPSAFEARRAY* paramLocations/*[out]*/, 
                               VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetParameters"), DISPID(DISPID_UNKNOWN/*[1610743822]*/));
  TAutoArgs<3> _args;
  _args[1] = location;
  _args[2] = parameters /*[VT_SAFEARRAY:1]*/;
  _args[3] = paramLocations /*[VT_SAFEARRAY:1]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> HRESULT __fastcall
IInsiteDispT<T>::GetSymbolsInfo(long symbolOrScope/*[in]*/, long sourceContext/*[in]*/, 
                                Borland_studio_toolsapi_tlb::QueryFlags flags/*[in]*/, 
                                BSTR filter/*[in]*/, long* Count/*[out]*/, long* bestMatch/*[out]*/
                                , 
                                Borland_studio_toolsapi_tlb::ISymbolsInfo** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetSymbolsInfo"), DISPID(DISPID_UNKNOWN/*[1610743823]*/));
  TAutoArgs<6> _args;
  _args[1] = symbolOrScope /*[VT_I4:0]*/;
  _args[2] = sourceContext /*[VT_I4:0]*/;
  _args[3] = (int)flags /*[VT_USERDEFINED:0]*/;
  _args[4] = filter /*[VT_BSTR:0]*/;
  _args[5] = Count /*[VT_I4:1]*/;
  _args[6] = bestMatch /*[VT_I4:1]*/;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::ISymbolsInfo**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::ISymbolsInfo* __fastcall
IInsiteDispT<T>::GetSymbolsInfo(long symbolOrScope/*[in]*/, long sourceContext/*[in]*/, 
                                Borland_studio_toolsapi_tlb::QueryFlags flags/*[in]*/, 
                                BSTR filter/*[in]*/, long* Count/*[out]*/, long* bestMatch/*[out]*/)
{
  Borland_studio_toolsapi_tlb::ISymbolsInfo* pRetVal;
  this->GetSymbolsInfo(symbolOrScope, sourceContext, flags, filter, Count, bestMatch, (Borland_studio_toolsapi_tlb::ISymbolsInfo**)&pRetVal);
  return pRetVal;
}

// *********************************************************************//
// DispIntf:  IComments
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9B70D729-12E1-3161-84FA-18CD633683F9}
// *********************************************************************//
template <class T> HRESULT __fastcall
ICommentsDispT<T>::GetCommentInfo(BSTR fileName/*[in]*/, LPSAFEARRAY* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetCommentInfo"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<1> _args;
  _args[1] = fileName /*[VT_BSTR:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_SAFEARRAY:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> LPSAFEARRAY __fastcall
ICommentsDispT<T>::GetCommentInfo(BSTR fileName/*[in]*/)
{
  LPSAFEARRAY pRetVal;
  this->GetCommentInfo(fileName, (LPSAFEARRAY*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
ICommentsDispT<T>::AddComment(long start/*[in]*/, long end/*[in]*/, BSTR fileName/*[in]*/, 
                              BSTR CommentText/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("AddComment"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<4> _args;
  _args[1] = start /*[VT_I4:0]*/;
  _args[2] = end /*[VT_I4:0]*/;
  _args[3] = fileName /*[VT_BSTR:0]*/;
  _args[4] = CommentText /*[VT_BSTR:0]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
ICommentsDispT<T>::DeleteComment(long start/*[in]*/, long end/*[in]*/, BSTR fileName/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("DeleteComment"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<3> _args;
  _args[1] = start /*[VT_I4:0]*/;
  _args[2] = end /*[VT_I4:0]*/;
  _args[3] = fileName /*[VT_BSTR:0]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
ICommentsDispT<T>::ChangeComment(long start/*[in]*/, long end/*[in]*/, BSTR fileName/*[in]*/, 
                                 BSTR CommentText/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("ChangeComment"), DISPID(DISPID_UNKNOWN/*[1610743811]*/));
  TAutoArgs<4> _args;
  _args[1] = start /*[VT_I4:0]*/;
  _args[2] = end /*[VT_I4:0]*/;
  _args[3] = fileName /*[VT_BSTR:0]*/;
  _args[4] = CommentText /*[VT_BSTR:0]*/;
  return OleFunction(_dispid, _args);
}

// *********************************************************************//
// DispIntf:  IRegions
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5AD8A626-94F3-3EC9-839A-F4A509E2D38E}
// *********************************************************************//
template <class T> HRESULT __fastcall
IRegionsDispT<T>::GetRegionInfo(BSTR fileName/*[in]*/, LPSAFEARRAY* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetRegionInfo"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<1> _args;
  _args[1] = fileName /*[VT_BSTR:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_SAFEARRAY:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> LPSAFEARRAY __fastcall
IRegionsDispT<T>::GetRegionInfo(BSTR fileName/*[in]*/)
{
  LPSAFEARRAY pRetVal;
  this->GetRegionInfo(fileName, (LPSAFEARRAY*)&pRetVal);
  return pRetVal;
}

// *********************************************************************//
// DispIntf:  IErrors
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7F2B5BB4-D61D-3E6A-A7B6-0F1EA4A5C2F5}
// *********************************************************************//
template <class T> HRESULT __fastcall
IErrorsDispT<T>::GetErrorInfo(BSTR fileName/*[in]*/, LPSAFEARRAY* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetErrorInfo"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<1> _args;
  _args[1] = fileName /*[VT_BSTR:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_SAFEARRAY:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> LPSAFEARRAY __fastcall
IErrorsDispT<T>::GetErrorInfo(BSTR fileName/*[in]*/)
{
  LPSAFEARRAY pRetVal;
  this->GetErrorInfo(fileName, (LPSAFEARRAY*)&pRetVal);
  return pRetVal;
}

// *********************************************************************//
// DispIntf:  IModuleInfo
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EE6AF2AE-D709-3996-BA89-5A604C4C0B3C}
// *********************************************************************//
template <class T> HRESULT __fastcall
IModuleInfoDispT<T>::GetModuleRoot(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetModuleRoot"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> long __fastcall
IModuleInfoDispT<T>::GetModuleRoot(void)
{
  long pRetVal;
  this->GetModuleRoot((long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IModuleInfoDispT<T>::GetChildren(long sym/*[in]*/, LPSAFEARRAY* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetChildren"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<1> _args;
  _args[1] = sym /*[VT_I4:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_SAFEARRAY:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> LPSAFEARRAY __fastcall
IModuleInfoDispT<T>::GetChildren(long sym/*[in]*/)
{
  LPSAFEARRAY pRetVal;
  this->GetChildren(sym, (LPSAFEARRAY*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IModuleInfoDispT<T>::symbolName(long sym/*[in]*/, BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("symbolName"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<1> _args;
  _args[1] = sym /*[VT_I4:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> BSTR __fastcall
IModuleInfoDispT<T>::symbolName(long sym/*[in]*/)
{
  BSTR pRetVal;
  this->symbolName(sym, (BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IModuleInfoDispT<T>::SymbolText(long sym/*[in]*/, VARIANT_BOOL fullText/*[in]*/, 
                                BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("SymbolText"), DISPID(DISPID_UNKNOWN/*[1610743811]*/));
  TAutoArgs<2> _args;
  _args[1] = sym /*[VT_I4:0]*/;
  _args[2] = fullText /*[VT_BOOL:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> BSTR __fastcall
IModuleInfoDispT<T>::SymbolText(long sym/*[in]*/, VARIANT_BOOL fullText/*[in]*/)
{
  BSTR pRetVal;
  this->SymbolText(sym, fullText, (BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IModuleInfoDispT<T>::SymbolLocation(long sym/*[in]*/, 
                                    /*AUTO_PARAM_ERROR(Borland_studio_toolsapi_tlb::SourceLocation* pRetVal)*/ VARIANT*  pRetVal)
{
  _TDispID _dispid(*this, OLETEXT("SymbolLocation"), DISPID(DISPID_UNKNOWN/*[1610743812]*/));
  TAutoArgs<1> _args;
  _args[1] = sym /*[VT_I4:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_USERDEFINED:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> HRESULT __fastcall
IModuleInfoDispT<T>::GetSymbolAccessFlags(long sym/*[in]*/, 
                                          Borland_studio_toolsapi_tlb::SymbolAccessFlags* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetSymbolAccessFlags"), DISPID(DISPID_UNKNOWN/*[1610743813]*/));
  TAutoArgs<1> _args;
  _args[1] = sym /*[VT_I4:0]*/;
  return OutRetValSetterPtr((int*)pRetVal /*[VT_USERDEFINED:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::SymbolAccessFlags __fastcall
IModuleInfoDispT<T>::GetSymbolAccessFlags(long sym/*[in]*/)
{
  Borland_studio_toolsapi_tlb::SymbolAccessFlags pRetVal;
  this->GetSymbolAccessFlags(sym, (Borland_studio_toolsapi_tlb::SymbolAccessFlags*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IModuleInfoDispT<T>::GetSymbolKind(long sym/*[in]*/, 
                                   Borland_studio_toolsapi_tlb::SymbolKind* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetSymbolKind"), DISPID(DISPID_UNKNOWN/*[1610743814]*/));
  TAutoArgs<1> _args;
  _args[1] = sym /*[VT_I4:0]*/;
  return OutRetValSetterPtr((int*)pRetVal /*[VT_USERDEFINED:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::SymbolKind __fastcall
IModuleInfoDispT<T>::GetSymbolKind(long sym/*[in]*/)
{
  Borland_studio_toolsapi_tlb::SymbolKind pRetVal;
  this->GetSymbolKind(sym, (Borland_studio_toolsapi_tlb::SymbolKind*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IModuleInfoDispT<T>::Modifiable(long sym/*[in]*/, VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Modifiable"), DISPID(DISPID_UNKNOWN/*[1610743815]*/));
  TAutoArgs<1> _args;
  _args[1] = sym /*[VT_I4:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IModuleInfoDispT<T>::Modifiable(long sym/*[in]*/)
{
  VARIANT_BOOL pRetVal;
  this->Modifiable(sym, (VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IModuleInfoDispT<T>::ModifySymbol(long sym/*[in]*/, BSTR Text/*[in]*/, BSTR* Error/*[out]*/, 
                                  long* offset/*[out]*/, VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("ModifySymbol"), DISPID(DISPID_UNKNOWN/*[1610743816]*/));
  TAutoArgs<4> _args;
  _args[1] = sym /*[VT_I4:0]*/;
  _args[2] = Text /*[VT_BSTR:0]*/;
  _args[3] = Error /*[VT_BSTR:1]*/;
  _args[4] = offset /*[VT_I4:1]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IModuleInfoDispT<T>::ModifySymbol(long sym/*[in]*/, BSTR Text/*[in]*/, BSTR* Error/*[out]*/, 
                                  long* offset/*[out]*/)
{
  VARIANT_BOOL pRetVal;
  this->ModifySymbol(sym, Text, Error, offset, (VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

// *********************************************************************//
// SmartIntf: TCOM_StringCollectionAdapter
// Interface: _StringCollectionAdapter
// *********************************************************************//
// *********************************************************************//
// DispIntf:  _StringCollectionAdapter
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {0BC2F4A5-350A-3882-B8B3-BA6DE48E200A}
// *********************************************************************//
// *********************************************************************//
// SmartIntf: TCOM_DocumentationManager
// Interface: _DocumentationManager
// *********************************************************************//
// *********************************************************************//
// DispIntf:  _DocumentationManager
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {82710262-BC20-34DE-B3DC-3343AB64A090}
// *********************************************************************//
// *********************************************************************//
// DispIntf:  IRefactoring
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {20163D8A-B5BB-39E5-90D3-6CED95A15A69}
// *********************************************************************//
template <class T> HRESULT __fastcall
IRefactoringDispT<T>::DoRefactoring()
{
  _TDispID _dispid(*this, OLETEXT("DoRefactoring"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IRefactoringDispT<T>::get_CanRefactor(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("CanRefactor"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IRefactoringDispT<T>::get_CanRefactor(void)
{
  VARIANT_BOOL pRetVal;
  this->get_CanRefactor((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IRefactoringDispT<T>::Undo()
{
  _TDispID _dispid(*this, OLETEXT("Undo"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IRefactoringDispT<T>::get_CanUndo(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("CanUndo"), DISPID(DISPID_UNKNOWN/*[1610743811]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IRefactoringDispT<T>::get_CanUndo(void)
{
  VARIANT_BOOL pRetVal;
  this->get_CanUndo((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IRefactoringDispT<T>::Closed()
{
  _TDispID _dispid(*this, OLETEXT("Closed"), DISPID(DISPID_UNKNOWN/*[1610743812]*/));
  return OleFunction(_dispid);
}

// *********************************************************************//
// SmartIntf: TCOM_RefactoringException
// Interface: _RefactoringException
// *********************************************************************//
// *********************************************************************//
// DispIntf:  _RefactoringException
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {16926FE4-1BE2-3EFE-BB38-BFFEE9517BDB}
// *********************************************************************//
// *********************************************************************//
// SmartIntf: TCOM_RefactoringKinds
// Interface: _RefactoringKinds
// *********************************************************************//
// *********************************************************************//
// DispIntf:  _RefactoringKinds
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {A5B0C318-839F-3CC7-8507-8D73312BFE10}
// *********************************************************************//
// *********************************************************************//
// SmartIntf: TCOM_RefactoringHelpContextIds
// Interface: _RefactoringHelpContextIds
// *********************************************************************//
// *********************************************************************//
// DispIntf:  _RefactoringHelpContextIds
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {D42A8462-B20E-3611-85A5-7086BD2690FF}
// *********************************************************************//
// *********************************************************************//
// DispIntf:  IRefactoringItem
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {AB8BE244-9291-3A05-9C56-29B82E1177A5}
// *********************************************************************//
template <class T> HRESULT __fastcall
IRefactoringItemDispT<T>::get_Kind(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Kind"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IRefactoringItemDispT<T>::get_Kind(void)
{
  BSTR pRetVal;
  this->get_Kind((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IRefactoringItemDispT<T>::get_Caption(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Caption"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IRefactoringItemDispT<T>::get_Caption(void)
{
  BSTR pRetVal;
  this->get_Caption((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IRefactoringItemDispT<T>::get_HelpContextId(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("HelpContextId"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> long __fastcall
IRefactoringItemDispT<T>::get_HelpContextId(void)
{
  long pRetVal;
  this->get_HelpContextId((long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IRefactoringItemDispT<T>::get_Shortcut(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Shortcut"), DISPID(DISPID_UNKNOWN/*[1610743811]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IRefactoringItemDispT<T>::get_Shortcut(void)
{
  BSTR pRetVal;
  this->get_Shortcut((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IRefactoringItemDispT<T>::get_Enabled(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Enabled"), DISPID(DISPID_UNKNOWN/*[1610743812]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IRefactoringItemDispT<T>::get_Enabled(void)
{
  VARIANT_BOOL pRetVal;
  this->get_Enabled((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IRefactoringItemDispT<T>::Invoke_2()
{
  _TDispID _dispid(*this, OLETEXT("Invoke_2"), DISPID(DISPID_UNKNOWN/*[1610743813]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IRefactoringItemDispT<T>::_Update()
{
  _TDispID _dispid(*this, OLETEXT("Update"), DISPID(DISPID_UNKNOWN/*[1610743814]*/));
  return OleFunction(_dispid);
}

// *********************************************************************//
// DispIntf:  IDeclareVariableRefactoringItem
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {27AE3BC6-E171-33B9-8147-C5F74BA1F818}
// *********************************************************************//
template <class T> HRESULT __fastcall
IDeclareVariableRefactoringItemDispT<T>::DeclareVariable(long AOffset/*[in]*/, BSTR AIdent/*[in]*/, 
                                                         BSTR AType/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("DeclareVariable"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<3> _args;
  _args[1] = AOffset /*[VT_I4:0]*/;
  _args[2] = AIdent /*[VT_BSTR:0]*/;
  _args[3] = AType /*[VT_BSTR:0]*/;
  return OleFunction(_dispid, _args);
}

// *********************************************************************//
// DispIntf:  IImportScopeRefactoringItem
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {58411D13-D08E-3B57-A2D2-99B1C4974A9C}
// *********************************************************************//
template <class T> HRESULT __fastcall
IImportScopeRefactoringItemDispT<T>::ImportScope(BSTR AScope/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("ImportScope"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<1> _args;
  _args[1] = AScope /*[VT_BSTR:0]*/;
  return OleFunction(_dispid, _args);
}

// *********************************************************************//
// DispIntf:  IRefactorable
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6F5BCCA3-04E2-3B07-AACC-709FC958278A}
// *********************************************************************//
template <class T> HRESULT __fastcall
IRefactorableDispT<T>::GetRefactoring(BSTR refactoringKind/*[in]*/, 
                                      Borland_studio_toolsapi_tlb::IRefactoringItem** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetRefactoring"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<1> _args;
  _args[1] = refactoringKind /*[VT_BSTR:0]*/;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IRefactoringItem**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IRefactoringItem* __fastcall
IRefactorableDispT<T>::GetRefactoring(BSTR refactoringKind/*[in]*/)
{
  Borland_studio_toolsapi_tlb::IRefactoringItem* pRetVal;
  this->GetRefactoring(refactoringKind, (Borland_studio_toolsapi_tlb::IRefactoringItem**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IRefactorableDispT<T>::GetRefactoringByIndex(long index/*[in]*/, 
                                             Borland_studio_toolsapi_tlb::IRefactoringItem** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetRefactoringByIndex"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<1> _args;
  _args[1] = index /*[VT_I4:0]*/;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IRefactoringItem**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IRefactoringItem* __fastcall
IRefactorableDispT<T>::GetRefactoringByIndex(long index/*[in]*/)
{
  Borland_studio_toolsapi_tlb::IRefactoringItem* pRetVal;
  this->GetRefactoringByIndex(index, (Borland_studio_toolsapi_tlb::IRefactoringItem**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IRefactorableDispT<T>::GetRefactoringCount(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetRefactoringCount"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> long __fastcall
IRefactorableDispT<T>::GetRefactoringCount(void)
{
  long pRetVal;
  this->GetRefactoringCount((long*)&pRetVal);
  return pRetVal;
}

// *********************************************************************//
// SmartIntf: TCOM_RefactoringEventArgs
// Interface: _RefactoringEventArgs
// *********************************************************************//
// *********************************************************************//
// DispIntf:  _RefactoringEventArgs
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {0C3D6B68-8238-3301-A34B-1F7806273B4E}
// *********************************************************************//
// *********************************************************************//
// SmartIntf: TCOM_RefactoringEvent
// Interface: _RefactoringEvent
// *********************************************************************//
// *********************************************************************//
// DispIntf:  _RefactoringEvent
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {191DF914-7AFD-3E49-B4A9-0EA9EE0F800D}
// *********************************************************************//
// *********************************************************************//
// DispIntf:  IRefactoringEngine
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CB56BAD6-B387-39A8-8321-5CBC270DD7DD}
// *********************************************************************//
template <class T> HRESULT __fastcall
IRefactoringEngineDispT<T>::add_BeforeRefactoringSetup(Borland_studio_toolsapi_tlb::_RefactoringEvent* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("add_BeforeRefactoringSetup"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::_RefactoringEvent*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IRefactoringEngineDispT<T>::remove_BeforeRefactoringSetup(Borland_studio_toolsapi_tlb::_RefactoringEvent* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("remove_BeforeRefactoringSetup"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::_RefactoringEvent*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IRefactoringEngineDispT<T>::add_AfterRefactoringSetup(Borland_studio_toolsapi_tlb::_RefactoringEvent* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("add_AfterRefactoringSetup"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::_RefactoringEvent*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IRefactoringEngineDispT<T>::remove_AfterRefactoringSetup(Borland_studio_toolsapi_tlb::_RefactoringEvent* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("remove_AfterRefactoringSetup"), DISPID(DISPID_UNKNOWN/*[1610743811]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::_RefactoringEvent*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IRefactoringEngineDispT<T>::add_BeforeRefactoring(Borland_studio_toolsapi_tlb::_RefactoringEvent* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("add_BeforeRefactoring"), DISPID(DISPID_UNKNOWN/*[1610743812]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::_RefactoringEvent*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IRefactoringEngineDispT<T>::remove_BeforeRefactoring(Borland_studio_toolsapi_tlb::_RefactoringEvent* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("remove_BeforeRefactoring"), DISPID(DISPID_UNKNOWN/*[1610743813]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::_RefactoringEvent*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IRefactoringEngineDispT<T>::add_AfterRefactoring(Borland_studio_toolsapi_tlb::_RefactoringEvent* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("add_AfterRefactoring"), DISPID(DISPID_UNKNOWN/*[1610743814]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::_RefactoringEvent*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IRefactoringEngineDispT<T>::remove_AfterRefactoring(Borland_studio_toolsapi_tlb::_RefactoringEvent* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("remove_AfterRefactoring"), DISPID(DISPID_UNKNOWN/*[1610743815]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::_RefactoringEvent*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IRefactoringEngineDispT<T>::add_RefactoringUndone(Borland_studio_toolsapi_tlb::_RefactoringEvent* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("add_RefactoringUndone"), DISPID(DISPID_UNKNOWN/*[1610743816]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::_RefactoringEvent*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IRefactoringEngineDispT<T>::remove_RefactoringUndone(Borland_studio_toolsapi_tlb::_RefactoringEvent* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("remove_RefactoringUndone"), DISPID(DISPID_UNKNOWN/*[1610743817]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::_RefactoringEvent*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IRefactoringEngineDispT<T>::add_RefactoringClosed(Borland_studio_toolsapi_tlb::_RefactoringEvent* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("add_RefactoringClosed"), DISPID(DISPID_UNKNOWN/*[1610743818]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::_RefactoringEvent*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IRefactoringEngineDispT<T>::remove_RefactoringClosed(Borland_studio_toolsapi_tlb::_RefactoringEvent* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("remove_RefactoringClosed"), DISPID(DISPID_UNKNOWN/*[1610743819]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::_RefactoringEvent*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IRefactoringEngineDispT<T>::add_RefactoringCancelled(Borland_studio_toolsapi_tlb::_RefactoringEvent* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("add_RefactoringCancelled"), DISPID(DISPID_UNKNOWN/*[1610743820]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::_RefactoringEvent*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IRefactoringEngineDispT<T>::remove_RefactoringCancelled(Borland_studio_toolsapi_tlb::_RefactoringEvent* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("remove_RefactoringCancelled"), DISPID(DISPID_UNKNOWN/*[1610743821]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::_RefactoringEvent*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IRefactoringEngineDispT<T>::OnBeforeRefactoringSetup(Borland_studio_toolsapi_tlb::IRefactoring* refactoring/*[in]*/
                                                     , LPUNKNOWN refactoringNode/*[in]*/, 
                                                     Borland_studio_toolsapi_tlb::IRefactoringUserInterface* refactoringUI/*[in]*/
                                                     , 
                                                     Borland_studio_toolsapi_tlb::IRefactoringNode* rootNode/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("OnBeforeRefactoringSetup"), DISPID(DISPID_UNKNOWN/*[1610743822]*/));
  TAutoArgs<4> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IRefactoring*)refactoring /*[VT_USERDEFINED:1]*/;
  _args[2] = refactoringNode /*[VT_UNKNOWN:0]*/;
  _args[3] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IRefactoringUserInterface*)refactoringUI /*[VT_USERDEFINED:1]*/;
  _args[4] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IRefactoringNode*)rootNode /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IRefactoringEngineDispT<T>::OnAfterRefactoringSetup(Borland_studio_toolsapi_tlb::IRefactoring* refactoring/*[in]*/
                                                    , LPUNKNOWN refactoringNode/*[in]*/, 
                                                    Borland_studio_toolsapi_tlb::IRefactoringUserInterface* refactoringUI/*[in]*/
                                                    , 
                                                    Borland_studio_toolsapi_tlb::IRefactoringNode* rootNode/*[in]*/
                                                    , 
                                                    Mscorlib_tlb::IEnumerable* bufferPositions/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("OnAfterRefactoringSetup"), DISPID(DISPID_UNKNOWN/*[1610743823]*/));
  TAutoArgs<5> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IRefactoring*)refactoring /*[VT_USERDEFINED:1]*/;
  _args[2] = refactoringNode /*[VT_UNKNOWN:0]*/;
  _args[3] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IRefactoringUserInterface*)refactoringUI /*[VT_USERDEFINED:1]*/;
  _args[4] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IRefactoringNode*)rootNode /*[VT_USERDEFINED:1]*/;
  _args[5] = (LPDISPATCH)(Mscorlib_tlb::IEnumerable*)bufferPositions /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IRefactoringEngineDispT<T>::OnBeforeRefactoring(Borland_studio_toolsapi_tlb::IRefactoring* refactoring/*[in]*/
                                                , LPUNKNOWN refactoringNode/*[in]*/, 
                                                Borland_studio_toolsapi_tlb::IRefactoringUserInterface* refactoringUI/*[in]*/
                                                , 
                                                Borland_studio_toolsapi_tlb::IRefactoringNode* rootNode/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("OnBeforeRefactoring"), DISPID(DISPID_UNKNOWN/*[1610743824]*/));
  TAutoArgs<4> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IRefactoring*)refactoring /*[VT_USERDEFINED:1]*/;
  _args[2] = refactoringNode /*[VT_UNKNOWN:0]*/;
  _args[3] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IRefactoringUserInterface*)refactoringUI /*[VT_USERDEFINED:1]*/;
  _args[4] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IRefactoringNode*)rootNode /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IRefactoringEngineDispT<T>::OnAfterRefactoring(Borland_studio_toolsapi_tlb::IRefactoring* refactoring/*[in]*/
                                               , LPUNKNOWN refactoringNode/*[in]*/, 
                                               Borland_studio_toolsapi_tlb::IRefactoringUserInterface* refactoringUI/*[in]*/
                                               , 
                                               Borland_studio_toolsapi_tlb::IRefactoringNode* rootNode/*[in]*/
                                               , Mscorlib_tlb::IEnumerable* bufferPositions/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("OnAfterRefactoring"), DISPID(DISPID_UNKNOWN/*[1610743825]*/));
  TAutoArgs<5> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IRefactoring*)refactoring /*[VT_USERDEFINED:1]*/;
  _args[2] = refactoringNode /*[VT_UNKNOWN:0]*/;
  _args[3] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IRefactoringUserInterface*)refactoringUI /*[VT_USERDEFINED:1]*/;
  _args[4] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IRefactoringNode*)rootNode /*[VT_USERDEFINED:1]*/;
  _args[5] = (LPDISPATCH)(Mscorlib_tlb::IEnumerable*)bufferPositions /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IRefactoringEngineDispT<T>::OnRefactoringUndone(Borland_studio_toolsapi_tlb::IRefactoring* refactoring/*[in]*/
                                                , LPUNKNOWN refactoringNode/*[in]*/, 
                                                Borland_studio_toolsapi_tlb::IRefactoringUserInterface* refactoringUI/*[in]*/
                                                , 
                                                Borland_studio_toolsapi_tlb::IRefactoringNode* rootNode/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("OnRefactoringUndone"), DISPID(DISPID_UNKNOWN/*[1610743826]*/));
  TAutoArgs<4> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IRefactoring*)refactoring /*[VT_USERDEFINED:1]*/;
  _args[2] = refactoringNode /*[VT_UNKNOWN:0]*/;
  _args[3] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IRefactoringUserInterface*)refactoringUI /*[VT_USERDEFINED:1]*/;
  _args[4] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IRefactoringNode*)rootNode /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IRefactoringEngineDispT<T>::OnRefactoringClosed(Borland_studio_toolsapi_tlb::IRefactoring* refactoring/*[in]*/
                                                , LPUNKNOWN refactoringNode/*[in]*/, 
                                                Borland_studio_toolsapi_tlb::IRefactoringUserInterface* refactoringUI/*[in]*/
                                                , 
                                                Borland_studio_toolsapi_tlb::IRefactoringNode* rootNode/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("OnRefactoringClosed"), DISPID(DISPID_UNKNOWN/*[1610743827]*/));
  TAutoArgs<4> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IRefactoring*)refactoring /*[VT_USERDEFINED:1]*/;
  _args[2] = refactoringNode /*[VT_UNKNOWN:0]*/;
  _args[3] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IRefactoringUserInterface*)refactoringUI /*[VT_USERDEFINED:1]*/;
  _args[4] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IRefactoringNode*)rootNode /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IRefactoringEngineDispT<T>::OnRefactoringCancelled(Borland_studio_toolsapi_tlb::IRefactoring* refactoring/*[in]*/
                                                   , LPUNKNOWN refactoringNode/*[in]*/, 
                                                   Borland_studio_toolsapi_tlb::IRefactoringUserInterface* refactoringUI/*[in]*/
                                                   , 
                                                   Borland_studio_toolsapi_tlb::IRefactoringNode* rootNode/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("OnRefactoringCancelled"), DISPID(DISPID_UNKNOWN/*[1610743828]*/));
  TAutoArgs<4> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IRefactoring*)refactoring /*[VT_USERDEFINED:1]*/;
  _args[2] = refactoringNode /*[VT_UNKNOWN:0]*/;
  _args[3] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IRefactoringUserInterface*)refactoringUI /*[VT_USERDEFINED:1]*/;
  _args[4] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IRefactoringNode*)rootNode /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

// *********************************************************************//
// DispIntf:  IRefactoringNode
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {98FD5A08-D076-36AF-A9C6-BDD9DA6ECC3B}
// *********************************************************************//
template <class T> HRESULT __fastcall
IRefactoringNodeDispT<T>::get_Icon(Borland_studio_toolsapi_tlb::RefactoringIcon* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Icon"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr((int*)pRetVal /*[VT_USERDEFINED:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::RefactoringIcon __fastcall
IRefactoringNodeDispT<T>::get_Icon(void)
{
  Borland_studio_toolsapi_tlb::RefactoringIcon pRetVal;
  this->get_Icon((Borland_studio_toolsapi_tlb::RefactoringIcon*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IRefactoringNodeDispT<T>::get_Text(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Text"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IRefactoringNodeDispT<T>::get_Text(void)
{
  BSTR pRetVal;
  this->get_Text((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IRefactoringNodeDispT<T>::get_Hint(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Hint"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IRefactoringNodeDispT<T>::get_Hint(void)
{
  BSTR pRetVal;
  this->get_Hint((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IRefactoringNodeDispT<T>::get_Data(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Data"), DISPID(DISPID_UNKNOWN/*[1610743811]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> long __fastcall
IRefactoringNodeDispT<T>::get_Data(void)
{
  long pRetVal;
  this->get_Data((long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IRefactoringNodeDispT<T>::set_Data(long pRetVal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Data"), DISPID(1610743811));
  TAutoArgs<1> _args;
  _args[1] = pRetVal /*[VT_I4:0]*/;
  return OlePropertyPut(_dispid, _args);
}

// *********************************************************************//
// DispIntf:  IBoldNode
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F161CCE5-BF7B-3789-956C-24474506EC45}
// *********************************************************************//
template <class T> HRESULT __fastcall
IBoldNodeDispT<T>::get_BoldStart(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("BoldStart"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> long __fastcall
IBoldNodeDispT<T>::get_BoldStart(void)
{
  long pRetVal;
  this->get_BoldStart((long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IBoldNodeDispT<T>::get_BoldEnd(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("BoldEnd"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> long __fastcall
IBoldNodeDispT<T>::get_BoldEnd(void)
{
  long pRetVal;
  this->get_BoldEnd((long*)&pRetVal);
  return pRetVal;
}

// *********************************************************************//
// DispIntf:  IRefactoringFileNode
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {AD2C828B-04F2-3F73-AA1E-8423B34B1D5B}
// *********************************************************************//
template <class T> HRESULT __fastcall
IRefactoringFileNodeDispT<T>::get_fileName(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("fileName"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IRefactoringFileNodeDispT<T>::get_fileName(void)
{
  BSTR pRetVal;
  this->get_fileName((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IRefactoringFileNodeDispT<T>::get_LineNumber(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("LineNumber"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> long __fastcall
IRefactoringFileNodeDispT<T>::get_LineNumber(void)
{
  long pRetVal;
  this->get_LineNumber((long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IRefactoringFileNodeDispT<T>::get_ColumnNumber(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("ColumnNumber"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> long __fastcall
IRefactoringFileNodeDispT<T>::get_ColumnNumber(void)
{
  long pRetVal;
  this->get_ColumnNumber((long*)&pRetVal);
  return pRetVal;
}

// *********************************************************************//
// DispIntf:  IBaseRefactoringUserInterface
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5BDA4177-24B2-3439-8566-FD3DA833A7C0}
// *********************************************************************//
template <class T> HRESULT __fastcall
IBaseRefactoringUserInterfaceDispT<T>::AddChild(Borland_studio_toolsapi_tlb::IRefactoringNode* parent/*[in]*/
                                                , 
                                                Borland_studio_toolsapi_tlb::IRefactoringNode* child/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("AddChild"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<2> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IRefactoringNode*)parent /*[VT_USERDEFINED:1]*/;
  _args[2] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IRefactoringNode*)child /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IBaseRefactoringUserInterfaceDispT<T>::InsertChild(Borland_studio_toolsapi_tlb::IRefactoringNode* parent/*[in]*/
                                                   , 
                                                   Borland_studio_toolsapi_tlb::IRefactoringNode* child/*[in]*/
                                                   , 
                                                   Borland_studio_toolsapi_tlb::NodeInsertType attachMode/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("InsertChild"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<3> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IRefactoringNode*)parent /*[VT_USERDEFINED:1]*/;
  _args[2] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IRefactoringNode*)child /*[VT_USERDEFINED:1]*/;
  _args[3] = (int)attachMode /*[VT_USERDEFINED:0]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IBaseRefactoringUserInterfaceDispT<T>::RemoveChild(Borland_studio_toolsapi_tlb::IRefactoringNode* child/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("RemoveChild"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IRefactoringNode*)child /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IBaseRefactoringUserInterfaceDispT<T>::ClearChildren(Borland_studio_toolsapi_tlb::IRefactoringNode* parent/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("ClearChildren"), DISPID(DISPID_UNKNOWN/*[1610743811]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IRefactoringNode*)parent /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IBaseRefactoringUserInterfaceDispT<T>::BeginUpdate()
{
  _TDispID _dispid(*this, OLETEXT("BeginUpdate"), DISPID(DISPID_UNKNOWN/*[1610743812]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IBaseRefactoringUserInterfaceDispT<T>::EndUpdate()
{
  _TDispID _dispid(*this, OLETEXT("EndUpdate"), DISPID(DISPID_UNKNOWN/*[1610743813]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IBaseRefactoringUserInterfaceDispT<T>::ExpandNode(Borland_studio_toolsapi_tlb::IRefactoringNode* node/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("ExpandNode"), DISPID(DISPID_UNKNOWN/*[1610743814]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IRefactoringNode*)node /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IBaseRefactoringUserInterfaceDispT<T>::StatusMessage(BSTR message/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("StatusMessage"), DISPID(DISPID_UNKNOWN/*[1610743815]*/));
  TAutoArgs<1> _args;
  _args[1] = message /*[VT_BSTR:0]*/;
  return OleFunction(_dispid, _args);
}

// *********************************************************************//
// DispIntf:  IRefactoringUserInterface
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CB03956A-3CDF-35F9-9457-D7F456A05BE4}
// *********************************************************************//
template <class T> HRESULT __fastcall
IRefactoringUserInterfaceDispT<T>::AddRootRefactoringNode(Borland_studio_toolsapi_tlb::IRefactoringNode* node/*[in]*/
                                                          , 
                                                          Borland_studio_toolsapi_tlb::IRefactoring* refactoring/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("AddRootRefactoringNode"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<2> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IRefactoringNode*)node /*[VT_USERDEFINED:1]*/;
  _args[2] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IRefactoring*)refactoring /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

// *********************************************************************//
// DispIntf:  IFindReferenceUserInterface
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C06264F1-A014-3EA5-B09E-6C7D032764E2}
// *********************************************************************//
template <class T> HRESULT __fastcall
IFindReferenceUserInterfaceDispT<T>::AddRootReferenceNode(Borland_studio_toolsapi_tlb::IRefactoringNode* node/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("AddRootReferenceNode"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IRefactoringNode*)node /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

// *********************************************************************//
// DispIntf:  IFindIdentifierRefactoring
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F542F4E7-4AF1-3BEE-A693-F20B3393A111}
// *********************************************************************//
template <class T> HRESULT __fastcall
IFindIdentifierRefactoringDispT<T>::FindIdentifier(BSTR symbolName/*[in]*/, 
                                                   VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("FindIdentifier"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<1> _args;
  _args[1] = symbolName /*[VT_BSTR:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IFindIdentifierRefactoringDispT<T>::FindIdentifier(BSTR symbolName/*[in]*/)
{
  VARIANT_BOOL pRetVal;
  this->FindIdentifier(symbolName, (VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

// *********************************************************************//
// DispIntf:  IRefactoringRegistrar
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {71BF7B07-B420-3E5A-979A-03BFF80FCCBE}
// *********************************************************************//
template <class T> HRESULT __fastcall
IRefactoringRegistrarDispT<T>::RegisterRefactoring(Borland_studio_toolsapi_tlb::IRefactoringItem* Item/*[in]*/
                                                   , BSTR personality/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("RegisterRefactoring"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<2> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IRefactoringItem*)Item /*[VT_USERDEFINED:1]*/;
  _args[2] = personality /*[VT_BSTR:0]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IRefactoringRegistrarDispT<T>::UnregisterRefactoring(Borland_studio_toolsapi_tlb::IRefactoringItem* Item/*[in]*/
                                                     , BSTR personality/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("UnregisterRefactoring"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<2> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IRefactoringItem*)Item /*[VT_USERDEFINED:1]*/;
  _args[2] = personality /*[VT_BSTR:0]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IRefactoringRegistrarDispT<T>::GetRefactoringsEnumerator(BSTR personality/*[in]*/, 
                                                         IEnumVARIANT** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetRefactoringsEnumerator"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<1> _args;
  _args[1] = personality /*[VT_BSTR:0]*/;
  return OutRetValSetterPtr((LPUNKNOWN*)(IEnumVARIANT**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> IEnumVARIANT* __fastcall
IRefactoringRegistrarDispT<T>::GetRefactoringsEnumerator(BSTR personality/*[in]*/)
{
  IEnumVARIANT* pRetVal;
  this->GetRefactoringsEnumerator(personality, (IEnumVARIANT**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IRefactoringRegistrarDispT<T>::add_RefactoringListChanged(Borland_studio_toolsapi_tlb::_RefactoringRegistrarEventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("add_RefactoringListChanged"), DISPID(DISPID_UNKNOWN/*[1610743811]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::_RefactoringRegistrarEventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IRefactoringRegistrarDispT<T>::remove_RefactoringListChanged(Borland_studio_toolsapi_tlb::_RefactoringRegistrarEventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("remove_RefactoringListChanged"), DISPID(DISPID_UNKNOWN/*[1610743812]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::_RefactoringRegistrarEventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IRefactoringRegistrarDispT<T>::OnRefactoringListChanged()
{
  _TDispID _dispid(*this, OLETEXT("OnRefactoringListChanged"), DISPID(DISPID_UNKNOWN/*[1610743813]*/));
  return OleFunction(_dispid);
}

// *********************************************************************//
// SmartIntf: TCOM_RefactoringRegistrarEventHandler
// Interface: _RefactoringRegistrarEventHandler
// *********************************************************************//
// *********************************************************************//
// DispIntf:  _RefactoringRegistrarEventHandler
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {E374BD1F-8457-30A6-9B09-B934711DDACF}
// *********************************************************************//
// *********************************************************************//
// SmartIntf: TCOM_Platforms
// Interface: _Platforms
// *********************************************************************//
// *********************************************************************//
// DispIntf:  _Platforms
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {78E17028-1AD5-3077-972A-189336D59753}
// *********************************************************************//
// *********************************************************************//
// DispIntf:  IOTAHelpInsight
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D05FBF46-8468-4934-BF70-7EAE1AB8FEAB}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAHelpInsightDispT<T>::GetEditorDocInfo(long* line/*[in,out]*/, long* col/*[in,out]*/, 
                                          long* width/*[in,out]*/, BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetEditorDocInfo"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<3> _args;
  _args[1] = line /*[VT_I4:1]*/;
  _args[2] = col /*[VT_I4:1]*/;
  _args[3] = width /*[VT_I4:1]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAHelpInsightDispT<T>::GetEditorDocInfo(long* line/*[in,out]*/, long* col/*[in,out]*/, 
                                          long* width/*[in,out]*/)
{
  BSTR pRetVal;
  this->GetEditorDocInfo(line, col, width, (BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAHelpInsightDispT<T>::GetSymbolDocInfo(BSTR symbolName/*[in]*/, BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetSymbolDocInfo"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<1> _args;
  _args[1] = symbolName /*[VT_BSTR:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAHelpInsightDispT<T>::GetSymbolDocInfo(BSTR symbolName/*[in]*/)
{
  BSTR pRetVal;
  this->GetSymbolDocInfo(symbolName, (BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAHelpInsightDispT<T>::IsEnabled(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("IsEnabled"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAHelpInsightDispT<T>::IsEnabled(void)
{
  VARIANT_BOOL pRetVal;
  this->IsEnabled((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

// *********************************************************************//
// DispIntf:  IOTAModuleServices
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D1FB17B4-C46C-4C65-97AF-1BA38016E80D}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAModuleServicesDispT<T>::CloseAll(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("CloseAll"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAModuleServicesDispT<T>::CloseAll(void)
{
  VARIANT_BOOL pRetVal;
  this->CloseAll((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAModuleServicesDispT<T>::CreateModule(Borland_studio_toolsapi_tlb::IOTACreator* Creator/*[in]*/, 
                                         Borland_studio_toolsapi_tlb::IOTAModule** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("CreateModule"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTACreator*)Creator /*[VT_USERDEFINED:1]*/;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAModule**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAModule* __fastcall
IOTAModuleServicesDispT<T>::CreateModule(Borland_studio_toolsapi_tlb::IOTACreator* Creator/*[in]*/)
{
  Borland_studio_toolsapi_tlb::IOTAModule* pRetVal;
  this->CreateModule(Creator, (Borland_studio_toolsapi_tlb::IOTAModule**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAModuleServicesDispT<T>::get_CurrentModule(Borland_studio_toolsapi_tlb::IOTAModule** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("CurrentModule"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAModule**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAModulePtr __fastcall
IOTAModuleServicesDispT<T>::get_CurrentModule(void)
{
  Borland_studio_toolsapi_tlb::IOTAModulePtr pRetVal;
  this->get_CurrentModule(&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAModuleServicesDispT<T>::FindModule(BSTR fileName/*[in]*/, 
                                       Borland_studio_toolsapi_tlb::IOTAModule** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("FindModule"), DISPID(DISPID_UNKNOWN/*[1610743811]*/));
  TAutoArgs<1> _args;
  _args[1] = fileName /*[VT_BSTR:0]*/;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAModule**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAModule* __fastcall
IOTAModuleServicesDispT<T>::FindModule(BSTR fileName/*[in]*/)
{
  Borland_studio_toolsapi_tlb::IOTAModule* pRetVal;
  this->FindModule(fileName, (Borland_studio_toolsapi_tlb::IOTAModule**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAModuleServicesDispT<T>::get_ModuleCount(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("ModuleCount"), DISPID(DISPID_UNKNOWN/*[1610743812]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> long __fastcall
IOTAModuleServicesDispT<T>::get_ModuleCount(void)
{
  long pRetVal;
  this->get_ModuleCount((long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAModuleServicesDispT<T>::GetModule(long index/*[in]*/, 
                                      Borland_studio_toolsapi_tlb::IOTAModule** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetModule"), DISPID(DISPID_UNKNOWN/*[1610743813]*/));
  TAutoArgs<1> _args;
  _args[1] = index /*[VT_I4:0]*/;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAModule**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAModule* __fastcall
IOTAModuleServicesDispT<T>::GetModule(long index/*[in]*/)
{
  Borland_studio_toolsapi_tlb::IOTAModule* pRetVal;
  this->GetModule(index, (Borland_studio_toolsapi_tlb::IOTAModule**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAModuleServicesDispT<T>::NewModule(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("NewModule"), DISPID(DISPID_UNKNOWN/*[1610743814]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAModuleServicesDispT<T>::NewModule(void)
{
  VARIANT_BOOL pRetVal;
  this->NewModule((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAModuleServicesDispT<T>::SaveAll(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("SaveAll"), DISPID(DISPID_UNKNOWN/*[1610743815]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAModuleServicesDispT<T>::SaveAll(void)
{
  VARIANT_BOOL pRetVal;
  this->SaveAll((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAModuleServicesDispT<T>::get_MainProjectGroup(Borland_studio_toolsapi_tlb::IOTAProjectGroup** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("MainProjectGroup"), DISPID(DISPID_UNKNOWN/*[1610743816]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAProjectGroup**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAProjectGroupPtr __fastcall
IOTAModuleServicesDispT<T>::get_MainProjectGroup(void)
{
  Borland_studio_toolsapi_tlb::IOTAProjectGroupPtr pRetVal;
  this->get_MainProjectGroup(&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAModuleServicesDispT<T>::get_ActiveProject(Borland_studio_toolsapi_tlb::IOTAProject** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("ActiveProject"), DISPID(DISPID_UNKNOWN/*[1610743817]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAProject**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAProjectPtr __fastcall
IOTAModuleServicesDispT<T>::get_ActiveProject(void)
{
  Borland_studio_toolsapi_tlb::IOTAProjectPtr pRetVal;
  this->get_ActiveProject(&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAModuleServicesDispT<T>::FindProjectFromFileNameEntry(BSTR fileName/*[in]*/, 
                                                         Borland_studio_toolsapi_tlb::IOTAProject** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("FindProjectFromFileNameEntry"), DISPID(DISPID_UNKNOWN/*[1610743818]*/));
  TAutoArgs<1> _args;
  _args[1] = fileName /*[VT_BSTR:0]*/;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAProject**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAProject* __fastcall
IOTAModuleServicesDispT<T>::FindProjectFromFileNameEntry(BSTR fileName/*[in]*/)
{
  Borland_studio_toolsapi_tlb::IOTAProject* pRetVal;
  this->FindProjectFromFileNameEntry(fileName, (Borland_studio_toolsapi_tlb::IOTAProject**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAModuleServicesDispT<T>::OpenModule(BSTR fileName/*[in]*/, 
                                       Borland_studio_toolsapi_tlb::IOTAModule** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("OpenModule"), DISPID(DISPID_UNKNOWN/*[1610743819]*/));
  TAutoArgs<1> _args;
  _args[1] = fileName /*[VT_BSTR:0]*/;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAModule**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAModule* __fastcall
IOTAModuleServicesDispT<T>::OpenModule(BSTR fileName/*[in]*/)
{
  Borland_studio_toolsapi_tlb::IOTAModule* pRetVal;
  this->OpenModule(fileName, (Borland_studio_toolsapi_tlb::IOTAModule**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAModuleServicesDispT<T>::AddFileSystem(Borland_studio_toolsapi_tlb::IOTAFileSystem* fileSystem/*[in]*/
                                          , long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("AddFileSystem"), DISPID(DISPID_UNKNOWN/*[1610743820]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTAFileSystem*)fileSystem /*[VT_USERDEFINED:1]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> long __fastcall
IOTAModuleServicesDispT<T>::AddFileSystem(Borland_studio_toolsapi_tlb::IOTAFileSystem* fileSystem/*[in]*/)
{
  long pRetVal;
  this->AddFileSystem(fileSystem, (long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAModuleServicesDispT<T>::RemoveFileSystem(long index/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("RemoveFileSystem"), DISPID(DISPID_UNKNOWN/*[1610743821]*/));
  TAutoArgs<1> _args;
  _args[1] = index /*[VT_I4:0]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAModuleServicesDispT<T>::GetNewModuleAndClassName(BSTR Prefix/*[in]*/, 
                                                     BSTR* unitIdent/*[in,out]*/, 
                                                     BSTR* className/*[in,out]*/, 
                                                     BSTR* fileName/*[in,out]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetNewModuleAndClassName"), DISPID(DISPID_UNKNOWN/*[1610743822]*/));
  TAutoArgs<4> _args;
  _args[1] = Prefix /*[VT_BSTR:0]*/;
  _args[2] = unitIdent /*[VT_BSTR:1]*/;
  _args[3] = className /*[VT_BSTR:1]*/;
  _args[4] = fileName /*[VT_BSTR:1]*/;
  return OleFunction(_dispid, _args);
}

// *********************************************************************//
// DispIntf:  IOTAEditBlock
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F668E20A-7DCF-4D9D-82B1-EB5A6D32FD18}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAEditBlockDispT<T>::BeginBlock()
{
  _TDispID _dispid(*this, OLETEXT("BeginBlock"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAEditBlockDispT<T>::Copy(VARIANT_BOOL append/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Copy"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<1> _args;
  _args[1] = append /*[VT_BOOL:0]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAEditBlockDispT<T>::Cut(VARIANT_BOOL append/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Cut"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<1> _args;
  _args[1] = append /*[VT_BOOL:0]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAEditBlockDispT<T>::Delete(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Delete"), DISPID(DISPID_UNKNOWN/*[1610743811]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAEditBlockDispT<T>::Delete(void)
{
  VARIANT_BOOL pRetVal;
  this->Delete((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditBlockDispT<T>::EndBlock()
{
  _TDispID _dispid(*this, OLETEXT("EndBlock"), DISPID(DISPID_UNKNOWN/*[1610743812]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAEditBlockDispT<T>::Extend(long newRow/*[in]*/, long newCol/*[in]*/, 
                              VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Extend"), DISPID(DISPID_UNKNOWN/*[1610743813]*/));
  TAutoArgs<2> _args;
  _args[1] = newRow /*[VT_I4:0]*/;
  _args[2] = newCol /*[VT_I4:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAEditBlockDispT<T>::Extend(long newRow/*[in]*/, long newCol/*[in]*/)
{
  VARIANT_BOOL pRetVal;
  this->Extend(newRow, newCol, (VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditBlockDispT<T>::ExtendPageUp(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("ExtendPageUp"), DISPID(DISPID_UNKNOWN/*[1610743814]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAEditBlockDispT<T>::ExtendPageUp(void)
{
  VARIANT_BOOL pRetVal;
  this->ExtendPageUp((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditBlockDispT<T>::ExtendPageDown(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("ExtendPageDown"), DISPID(DISPID_UNKNOWN/*[1610743815]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAEditBlockDispT<T>::ExtendPageDown(void)
{
  VARIANT_BOOL pRetVal;
  this->ExtendPageDown((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditBlockDispT<T>::ExtendReal(long newRow/*[in]*/, long newCol/*[in]*/, 
                                  VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("ExtendReal"), DISPID(DISPID_UNKNOWN/*[1610743816]*/));
  TAutoArgs<2> _args;
  _args[1] = newRow /*[VT_I4:0]*/;
  _args[2] = newCol /*[VT_I4:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAEditBlockDispT<T>::ExtendReal(long newRow/*[in]*/, long newCol/*[in]*/)
{
  VARIANT_BOOL pRetVal;
  this->ExtendReal(newRow, newCol, (VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditBlockDispT<T>::ExtendRelative(long deltaRow/*[in]*/, long deltaCol/*[in]*/, 
                                      VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("ExtendRelative"), DISPID(DISPID_UNKNOWN/*[1610743817]*/));
  TAutoArgs<2> _args;
  _args[1] = deltaRow /*[VT_I4:0]*/;
  _args[2] = deltaCol /*[VT_I4:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAEditBlockDispT<T>::ExtendRelative(long deltaRow/*[in]*/, long deltaCol/*[in]*/)
{
  VARIANT_BOOL pRetVal;
  this->ExtendRelative(deltaRow, deltaCol, (VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditBlockDispT<T>::get_EndingColumn(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("EndingColumn"), DISPID(DISPID_UNKNOWN/*[1610743818]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> long __fastcall
IOTAEditBlockDispT<T>::get_EndingColumn(void)
{
  long pRetVal;
  this->get_EndingColumn((long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditBlockDispT<T>::get_EndingRow(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("EndingRow"), DISPID(DISPID_UNKNOWN/*[1610743819]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> long __fastcall
IOTAEditBlockDispT<T>::get_EndingRow(void)
{
  long pRetVal;
  this->get_EndingRow((long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditBlockDispT<T>::get_IsValid(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("IsValid"), DISPID(DISPID_UNKNOWN/*[1610743820]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAEditBlockDispT<T>::get_IsValid(void)
{
  VARIANT_BOOL pRetVal;
  this->get_IsValid((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditBlockDispT<T>::get_Size(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Size"), DISPID(DISPID_UNKNOWN/*[1610743821]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> long __fastcall
IOTAEditBlockDispT<T>::get_Size(void)
{
  long pRetVal;
  this->get_Size((long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditBlockDispT<T>::get_StartingColumn(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("StartingColumn"), DISPID(DISPID_UNKNOWN/*[1610743822]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> long __fastcall
IOTAEditBlockDispT<T>::get_StartingColumn(void)
{
  long pRetVal;
  this->get_StartingColumn((long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditBlockDispT<T>::get_StartingRow(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("StartingRow"), DISPID(DISPID_UNKNOWN/*[1610743823]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> long __fastcall
IOTAEditBlockDispT<T>::get_StartingRow(void)
{
  long pRetVal;
  this->get_StartingRow((long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditBlockDispT<T>::get_Style(Borland_studio_toolsapi_tlb::OTABlockType* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Style"), DISPID(DISPID_UNKNOWN/*[1610743824]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr((int*)pRetVal /*[VT_USERDEFINED:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::OTABlockType __fastcall
IOTAEditBlockDispT<T>::get_Style(void)
{
  Borland_studio_toolsapi_tlb::OTABlockType pRetVal;
  this->get_Style((Borland_studio_toolsapi_tlb::OTABlockType*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditBlockDispT<T>::set_Style(Borland_studio_toolsapi_tlb::OTABlockType pRetVal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Style"), DISPID(1610743824));
  TAutoArgs<1> _args;
  _args[1] = (int)pRetVal /*[VT_USERDEFINED:0]*/;
  return OlePropertyPut(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAEditBlockDispT<T>::get_Text(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Text"), DISPID(DISPID_UNKNOWN/*[1610743826]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAEditBlockDispT<T>::get_Text(void)
{
  BSTR pRetVal;
  this->get_Text((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditBlockDispT<T>::get_Visible(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Visible"), DISPID(DISPID_UNKNOWN/*[1610743827]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAEditBlockDispT<T>::get_Visible(void)
{
  VARIANT_BOOL pRetVal;
  this->get_Visible((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditBlockDispT<T>::set_Visible(VARIANT_BOOL pRetVal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Visible"), DISPID(1610743827));
  TAutoArgs<1> _args;
  _args[1] = pRetVal /*[VT_BOOL:0]*/;
  return OlePropertyPut(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAEditBlockDispT<T>::Indent(long magnitude/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Indent"), DISPID(DISPID_UNKNOWN/*[1610743829]*/));
  TAutoArgs<1> _args;
  _args[1] = magnitude /*[VT_I4:0]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAEditBlockDispT<T>::LowerCase()
{
  _TDispID _dispid(*this, OLETEXT("LowerCase"), DISPID(DISPID_UNKNOWN/*[1610743830]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAEditBlockDispT<T>::Print(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Print"), DISPID(DISPID_UNKNOWN/*[1610743831]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAEditBlockDispT<T>::Print(void)
{
  VARIANT_BOOL pRetVal;
  this->Print((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditBlockDispT<T>::Reset()
{
  _TDispID _dispid(*this, OLETEXT("Reset"), DISPID(DISPID_UNKNOWN/*[1610743832]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAEditBlockDispT<T>::Restore()
{
  _TDispID _dispid(*this, OLETEXT("Restore"), DISPID(DISPID_UNKNOWN/*[1610743833]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAEditBlockDispT<T>::Save()
{
  _TDispID _dispid(*this, OLETEXT("Save"), DISPID(DISPID_UNKNOWN/*[1610743834]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAEditBlockDispT<T>::SaveToFile(BSTR fileName/*[in]*/, VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("SaveToFile"), DISPID(DISPID_UNKNOWN/*[1610743835]*/));
  TAutoArgs<1> _args;
  _args[1] = fileName /*[VT_BSTR:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAEditBlockDispT<T>::SaveToFile(BSTR fileName/*[in]*/)
{
  VARIANT_BOOL pRetVal;
  this->SaveToFile(fileName, (VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditBlockDispT<T>::ToggleCase()
{
  _TDispID _dispid(*this, OLETEXT("ToggleCase"), DISPID(DISPID_UNKNOWN/*[1610743836]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAEditBlockDispT<T>::UpperCase()
{
  _TDispID _dispid(*this, OLETEXT("UpperCase"), DISPID(DISPID_UNKNOWN/*[1610743837]*/));
  return OleFunction(_dispid);
}

// *********************************************************************//
// DispIntf:  IOTABufferOptions
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D724AD3A-A9A3-47CB-A160-B29BB427B34F}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTABufferOptionsDispT<T>::get_AutoIndent(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("AutoIndent"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTABufferOptionsDispT<T>::get_AutoIndent(void)
{
  VARIANT_BOOL pRetVal;
  this->get_AutoIndent((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTABufferOptionsDispT<T>::set_AutoIndent(VARIANT_BOOL pRetVal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("AutoIndent"), DISPID(1610743808));
  TAutoArgs<1> _args;
  _args[1] = pRetVal /*[VT_BOOL:0]*/;
  return OlePropertyPut(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTABufferOptionsDispT<T>::get_BackspaceUnindents(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("BackspaceUnindents"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTABufferOptionsDispT<T>::get_BackspaceUnindents(void)
{
  VARIANT_BOOL pRetVal;
  this->get_BackspaceUnindents((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTABufferOptionsDispT<T>::set_BackspaceUnindents(VARIANT_BOOL pRetVal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("BackspaceUnindents"), DISPID(1610743810));
  TAutoArgs<1> _args;
  _args[1] = pRetVal /*[VT_BOOL:0]*/;
  return OlePropertyPut(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTABufferOptionsDispT<T>::get_CreateBackupFile(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("CreateBackupFile"), DISPID(DISPID_UNKNOWN/*[1610743812]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTABufferOptionsDispT<T>::get_CreateBackupFile(void)
{
  VARIANT_BOOL pRetVal;
  this->get_CreateBackupFile((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTABufferOptionsDispT<T>::set_CreateBackupFile(VARIANT_BOOL pRetVal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("CreateBackupFile"), DISPID(1610743812));
  TAutoArgs<1> _args;
  _args[1] = pRetVal /*[VT_BOOL:0]*/;
  return OlePropertyPut(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTABufferOptionsDispT<T>::get_CursorThroughTabs(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("CursorThroughTabs"), DISPID(DISPID_UNKNOWN/*[1610743814]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTABufferOptionsDispT<T>::get_CursorThroughTabs(void)
{
  VARIANT_BOOL pRetVal;
  this->get_CursorThroughTabs((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTABufferOptionsDispT<T>::set_CursorThroughTabs(VARIANT_BOOL pRetVal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("CursorThroughTabs"), DISPID(1610743814));
  TAutoArgs<1> _args;
  _args[1] = pRetVal /*[VT_BOOL:0]*/;
  return OlePropertyPut(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTABufferOptionsDispT<T>::get_InsertMode(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("InsertMode"), DISPID(DISPID_UNKNOWN/*[1610743816]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTABufferOptionsDispT<T>::get_InsertMode(void)
{
  VARIANT_BOOL pRetVal;
  this->get_InsertMode((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTABufferOptionsDispT<T>::set_InsertMode(VARIANT_BOOL pRetVal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("InsertMode"), DISPID(1610743816));
  TAutoArgs<1> _args;
  _args[1] = pRetVal /*[VT_BOOL:0]*/;
  return OlePropertyPut(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTABufferOptionsDispT<T>::get_GroupUndo(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GroupUndo"), DISPID(DISPID_UNKNOWN/*[1610743818]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTABufferOptionsDispT<T>::get_GroupUndo(void)
{
  VARIANT_BOOL pRetVal;
  this->get_GroupUndo((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTABufferOptionsDispT<T>::set_GroupUndo(VARIANT_BOOL pRetVal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("GroupUndo"), DISPID(1610743818));
  TAutoArgs<1> _args;
  _args[1] = pRetVal /*[VT_BOOL:0]*/;
  return OlePropertyPut(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTABufferOptionsDispT<T>::get_KeepTrailingBlanks(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("KeepTrailingBlanks"), DISPID(DISPID_UNKNOWN/*[1610743820]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTABufferOptionsDispT<T>::get_KeepTrailingBlanks(void)
{
  VARIANT_BOOL pRetVal;
  this->get_KeepTrailingBlanks((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTABufferOptionsDispT<T>::set_KeepTrailingBlanks(VARIANT_BOOL pRetVal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("KeepTrailingBlanks"), DISPID(1610743820));
  TAutoArgs<1> _args;
  _args[1] = pRetVal /*[VT_BOOL:0]*/;
  return OlePropertyPut(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTABufferOptionsDispT<T>::get_LeftGutterWidth(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("LeftGutterWidth"), DISPID(DISPID_UNKNOWN/*[1610743822]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> long __fastcall
IOTABufferOptionsDispT<T>::get_LeftGutterWidth(void)
{
  long pRetVal;
  this->get_LeftGutterWidth((long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTABufferOptionsDispT<T>::set_LeftGutterWidth(long pRetVal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("LeftGutterWidth"), DISPID(1610743822));
  TAutoArgs<1> _args;
  _args[1] = pRetVal /*[VT_I4:0]*/;
  return OlePropertyPut(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTABufferOptionsDispT<T>::get_RightMargin(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("RightMargin"), DISPID(DISPID_UNKNOWN/*[1610743824]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> long __fastcall
IOTABufferOptionsDispT<T>::get_RightMargin(void)
{
  long pRetVal;
  this->get_RightMargin((long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTABufferOptionsDispT<T>::set_RightMargin(long pRetVal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("RightMargin"), DISPID(1610743824));
  TAutoArgs<1> _args;
  _args[1] = pRetVal /*[VT_I4:0]*/;
  return OlePropertyPut(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTABufferOptionsDispT<T>::get_OverwriteBlocks(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("OverwriteBlocks"), DISPID(DISPID_UNKNOWN/*[1610743826]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTABufferOptionsDispT<T>::get_OverwriteBlocks(void)
{
  VARIANT_BOOL pRetVal;
  this->get_OverwriteBlocks((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTABufferOptionsDispT<T>::set_OverwriteBlocks(VARIANT_BOOL pRetVal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("OverwriteBlocks"), DISPID(1610743826));
  TAutoArgs<1> _args;
  _args[1] = pRetVal /*[VT_BOOL:0]*/;
  return OlePropertyPut(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTABufferOptionsDispT<T>::get_PersistentBlocks(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("PersistentBlocks"), DISPID(DISPID_UNKNOWN/*[1610743828]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTABufferOptionsDispT<T>::get_PersistentBlocks(void)
{
  VARIANT_BOOL pRetVal;
  this->get_PersistentBlocks((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTABufferOptionsDispT<T>::set_PersistentBlocks(VARIANT_BOOL pRetVal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("PersistentBlocks"), DISPID(1610743828));
  TAutoArgs<1> _args;
  _args[1] = pRetVal /*[VT_BOOL:0]*/;
  return OlePropertyPut(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTABufferOptionsDispT<T>::get_PreserveLineEnds(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("PreserveLineEnds"), DISPID(DISPID_UNKNOWN/*[1610743830]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTABufferOptionsDispT<T>::get_PreserveLineEnds(void)
{
  VARIANT_BOOL pRetVal;
  this->get_PreserveLineEnds((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTABufferOptionsDispT<T>::set_PreserveLineEnds(VARIANT_BOOL pRetVal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("PreserveLineEnds"), DISPID(1610743830));
  TAutoArgs<1> _args;
  _args[1] = pRetVal /*[VT_BOOL:0]*/;
  return OlePropertyPut(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTABufferOptionsDispT<T>::get_SmartTab(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("SmartTab"), DISPID(DISPID_UNKNOWN/*[1610743832]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTABufferOptionsDispT<T>::get_SmartTab(void)
{
  VARIANT_BOOL pRetVal;
  this->get_SmartTab((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTABufferOptionsDispT<T>::set_SmartTab(VARIANT_BOOL pRetVal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("SmartTab"), DISPID(1610743832));
  TAutoArgs<1> _args;
  _args[1] = pRetVal /*[VT_BOOL:0]*/;
  return OlePropertyPut(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTABufferOptionsDispT<T>::get_SyntaxHighlight(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("SyntaxHighlight"), DISPID(DISPID_UNKNOWN/*[1610743834]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTABufferOptionsDispT<T>::get_SyntaxHighlight(void)
{
  VARIANT_BOOL pRetVal;
  this->get_SyntaxHighlight((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTABufferOptionsDispT<T>::set_SyntaxHighlight(VARIANT_BOOL pRetVal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("SyntaxHighlight"), DISPID(1610743834));
  TAutoArgs<1> _args;
  _args[1] = pRetVal /*[VT_BOOL:0]*/;
  return OlePropertyPut(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTABufferOptionsDispT<T>::get_TabStops(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("TabStops"), DISPID(DISPID_UNKNOWN/*[1610743836]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTABufferOptionsDispT<T>::get_TabStops(void)
{
  BSTR pRetVal;
  this->get_TabStops((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTABufferOptionsDispT<T>::set_TabStops(BSTR pRetVal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("TabStops"), DISPID(1610743836));
  TAutoArgs<1> _args;
  _args[1] = pRetVal /*[VT_BSTR:0]*/;
  return OlePropertyPut(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTABufferOptionsDispT<T>::get_UndoAfterSave(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("UndoAfterSave"), DISPID(DISPID_UNKNOWN/*[1610743838]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTABufferOptionsDispT<T>::get_UndoAfterSave(void)
{
  VARIANT_BOOL pRetVal;
  this->get_UndoAfterSave((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTABufferOptionsDispT<T>::set_UndoAfterSave(VARIANT_BOOL pRetVal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("UndoAfterSave"), DISPID(1610743838));
  TAutoArgs<1> _args;
  _args[1] = pRetVal /*[VT_BOOL:0]*/;
  return OlePropertyPut(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTABufferOptionsDispT<T>::get_UndoLimit(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("UndoLimit"), DISPID(DISPID_UNKNOWN/*[1610743840]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> long __fastcall
IOTABufferOptionsDispT<T>::get_UndoLimit(void)
{
  long pRetVal;
  this->get_UndoLimit((long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTABufferOptionsDispT<T>::set_UndoLimit(long pRetVal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("UndoLimit"), DISPID(1610743840));
  TAutoArgs<1> _args;
  _args[1] = pRetVal /*[VT_I4:0]*/;
  return OlePropertyPut(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTABufferOptionsDispT<T>::get_UseTabCharacter(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("UseTabCharacter"), DISPID(DISPID_UNKNOWN/*[1610743842]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTABufferOptionsDispT<T>::get_UseTabCharacter(void)
{
  VARIANT_BOOL pRetVal;
  this->get_UseTabCharacter((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTABufferOptionsDispT<T>::set_UseTabCharacter(VARIANT_BOOL pRetVal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("UseTabCharacter"), DISPID(1610743842));
  TAutoArgs<1> _args;
  _args[1] = pRetVal /*[VT_BOOL:0]*/;
  return OlePropertyPut(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTABufferOptionsDispT<T>::get_ShowSpace(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("ShowSpace"), DISPID(DISPID_UNKNOWN/*[1610743844]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTABufferOptionsDispT<T>::get_ShowSpace(void)
{
  VARIANT_BOOL pRetVal;
  this->get_ShowSpace((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTABufferOptionsDispT<T>::set_ShowSpace(VARIANT_BOOL pRetVal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("ShowSpace"), DISPID(1610743844));
  TAutoArgs<1> _args;
  _args[1] = pRetVal /*[VT_BOOL:0]*/;
  return OlePropertyPut(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTABufferOptionsDispT<T>::get_ShowTab(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("ShowTab"), DISPID(DISPID_UNKNOWN/*[1610743846]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTABufferOptionsDispT<T>::get_ShowTab(void)
{
  VARIANT_BOOL pRetVal;
  this->get_ShowTab((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTABufferOptionsDispT<T>::set_ShowTab(VARIANT_BOOL pRetVal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("ShowTab"), DISPID(1610743846));
  TAutoArgs<1> _args;
  _args[1] = pRetVal /*[VT_BOOL:0]*/;
  return OlePropertyPut(_dispid, _args);
}

// *********************************************************************//
// SmartIntf: TCOM_OTAEditorFileTypes
// Interface: _OTAEditorFileTypes
// *********************************************************************//
// *********************************************************************//
// DispIntf:  _OTAEditorFileTypes
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {D3BE9DD0-F947-3AC2-8F33-675A038E0E81}
// *********************************************************************//
// *********************************************************************//
// DispIntf:  IOTAEditorService
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B51B7655-F1F7-477D-9B35-395BFB5BA9AA}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAEditorServiceDispT<T>::get_EditOptions(Borland_studio_toolsapi_tlb::IOTAEditOptions** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("EditOptions"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAEditOptions**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAEditOptionsPtr __fastcall
IOTAEditorServiceDispT<T>::get_EditOptions(void)
{
  Borland_studio_toolsapi_tlb::IOTAEditOptionsPtr pRetVal;
  this->get_EditOptions(&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditorServiceDispT<T>::GetEditOptions(BSTR IDString/*[in]*/, 
                                          Borland_studio_toolsapi_tlb::IOTAEditOptions** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetEditOptions"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<1> _args;
  _args[1] = IDString /*[VT_BSTR:0]*/;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAEditOptions**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAEditOptions* __fastcall
IOTAEditorServiceDispT<T>::GetEditOptions(BSTR IDString/*[in]*/)
{
  Borland_studio_toolsapi_tlb::IOTAEditOptions* pRetVal;
  this->GetEditOptions(IDString, (Borland_studio_toolsapi_tlb::IOTAEditOptions**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditorServiceDispT<T>::GetEditOptionsForFile(BSTR fileName/*[in]*/, 
                                                 Borland_studio_toolsapi_tlb::IOTAEditOptions** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetEditOptionsForFile"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<1> _args;
  _args[1] = fileName /*[VT_BSTR:0]*/;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAEditOptions**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAEditOptions* __fastcall
IOTAEditorServiceDispT<T>::GetEditOptionsForFile(BSTR fileName/*[in]*/)
{
  Borland_studio_toolsapi_tlb::IOTAEditOptions* pRetVal;
  this->GetEditOptionsForFile(fileName, (Borland_studio_toolsapi_tlb::IOTAEditOptions**)&pRetVal);
  return pRetVal;
}

// *********************************************************************//
// DispIntf:  IOTAEditOptions
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CD847E36-EBE2-4448-9106-4D67835D4995}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAEditOptionsDispT<T>::BeginUpdate()
{
  _TDispID _dispid(*this, OLETEXT("BeginUpdate"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAEditOptionsDispT<T>::EndUpdate()
{
  _TDispID _dispid(*this, OLETEXT("EndUpdate"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAEditOptionsDispT<T>::get_BlockIndent(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("BlockIndent"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> long __fastcall
IOTAEditOptionsDispT<T>::get_BlockIndent(void)
{
  long pRetVal;
  this->get_BlockIndent((long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditOptionsDispT<T>::set_BlockIndent(long pRetVal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("BlockIndent"), DISPID(1610743810));
  TAutoArgs<1> _args;
  _args[1] = pRetVal /*[VT_I4:0]*/;
  return OlePropertyPut(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAEditOptionsDispT<T>::get_BufferOptions(Borland_studio_toolsapi_tlb::IOTABufferOptions** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("BufferOptions"), DISPID(DISPID_UNKNOWN/*[1610743812]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTABufferOptions**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTABufferOptionsPtr __fastcall
IOTAEditOptionsDispT<T>::get_BufferOptions(void)
{
  Borland_studio_toolsapi_tlb::IOTABufferOptionsPtr pRetVal;
  this->get_BufferOptions(&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditOptionsDispT<T>::get_FontName(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("FontName"), DISPID(DISPID_UNKNOWN/*[1610743813]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAEditOptionsDispT<T>::get_FontName(void)
{
  BSTR pRetVal;
  this->get_FontName((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditOptionsDispT<T>::set_FontName(BSTR pRetVal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("FontName"), DISPID(1610743813));
  TAutoArgs<1> _args;
  _args[1] = pRetVal /*[VT_BSTR:0]*/;
  return OlePropertyPut(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAEditOptionsDispT<T>::get_FontSize(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("FontSize"), DISPID(DISPID_UNKNOWN/*[1610743815]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> long __fastcall
IOTAEditOptionsDispT<T>::get_FontSize(void)
{
  long pRetVal;
  this->get_FontSize((long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditOptionsDispT<T>::set_FontSize(long pRetVal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("FontSize"), DISPID(1610743815));
  TAutoArgs<1> _args;
  _args[1] = pRetVal /*[VT_I4:0]*/;
  return OlePropertyPut(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAEditOptionsDispT<T>::get_ForceCutCopyEnabled(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("ForceCutCopyEnabled"), DISPID(DISPID_UNKNOWN/*[1610743817]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAEditOptionsDispT<T>::get_ForceCutCopyEnabled(void)
{
  VARIANT_BOOL pRetVal;
  this->get_ForceCutCopyEnabled((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditOptionsDispT<T>::set_ForceCutCopyEnabled(VARIANT_BOOL pRetVal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("ForceCutCopyEnabled"), DISPID(1610743817));
  TAutoArgs<1> _args;
  _args[1] = pRetVal /*[VT_BOOL:0]*/;
  return OlePropertyPut(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAEditOptionsDispT<T>::get_UseBriefCursorShapes(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("UseBriefCursorShapes"), DISPID(DISPID_UNKNOWN/*[1610743819]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAEditOptionsDispT<T>::get_UseBriefCursorShapes(void)
{
  VARIANT_BOOL pRetVal;
  this->get_UseBriefCursorShapes((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditOptionsDispT<T>::set_UseBriefCursorShapes(VARIANT_BOOL pRetVal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("UseBriefCursorShapes"), DISPID(1610743819));
  TAutoArgs<1> _args;
  _args[1] = pRetVal /*[VT_BOOL:0]*/;
  return OlePropertyPut(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAEditOptionsDispT<T>::get_UseBriefRegularExpressions(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("UseBriefRegularExpressions"), DISPID(DISPID_UNKNOWN/*[1610743821]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAEditOptionsDispT<T>::get_UseBriefRegularExpressions(void)
{
  VARIANT_BOOL pRetVal;
  this->get_UseBriefRegularExpressions((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditOptionsDispT<T>::set_UseBriefRegularExpressions(VARIANT_BOOL pRetVal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("UseBriefRegularExpressions"), DISPID(1610743821));
  TAutoArgs<1> _args;
  _args[1] = pRetVal /*[VT_BOOL:0]*/;
  return OlePropertyPut(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAEditOptionsDispT<T>::get_Extensions(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Extensions"), DISPID(DISPID_UNKNOWN/*[1610743823]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAEditOptionsDispT<T>::get_Extensions(void)
{
  BSTR pRetVal;
  this->get_Extensions((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditOptionsDispT<T>::set_Extensions(BSTR pRetVal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Extensions"), DISPID(1610743823));
  TAutoArgs<1> _args;
  _args[1] = pRetVal /*[VT_BSTR:0]*/;
  return OlePropertyPut(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAEditOptionsDispT<T>::get_OptionsName(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("OptionsName"), DISPID(DISPID_UNKNOWN/*[1610743825]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAEditOptionsDispT<T>::get_OptionsName(void)
{
  BSTR pRetVal;
  this->get_OptionsName((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditOptionsDispT<T>::set_OptionsName(BSTR pRetVal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("OptionsName"), DISPID(1610743825));
  TAutoArgs<1> _args;
  _args[1] = pRetVal /*[VT_BSTR:0]*/;
  return OlePropertyPut(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAEditOptionsDispT<T>::get_OptionsIDString(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("OptionsIDString"), DISPID(DISPID_UNKNOWN/*[1610743827]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAEditOptionsDispT<T>::get_OptionsIDString(void)
{
  BSTR pRetVal;
  this->get_OptionsIDString((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditOptionsDispT<T>::get_OptionsIndex(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("OptionsIndex"), DISPID(DISPID_UNKNOWN/*[1610743828]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> long __fastcall
IOTAEditOptionsDispT<T>::get_OptionsIndex(void)
{
  long pRetVal;
  this->get_OptionsIndex((long*)&pRetVal);
  return pRetVal;
}

// *********************************************************************//
// DispIntf:  IOTAEditBuffer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7F71A0BA-1A6D-411C-B763-73434ACD7DF5}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAEditBufferDispT<T>::ClearUndo()
{
  _TDispID _dispid(*this, OLETEXT("ClearUndo"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAEditBufferDispT<T>::get_BufferOptions(Borland_studio_toolsapi_tlb::IOTABufferOptions** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("BufferOptions"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTABufferOptions**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTABufferOptionsPtr __fastcall
IOTAEditBufferDispT<T>::get_BufferOptions(void)
{
  Borland_studio_toolsapi_tlb::IOTABufferOptionsPtr pRetVal;
  this->get_BufferOptions(&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditBufferDispT<T>::get_CurrentDate(DATE* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("CurrentDate"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_DATE:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> DATE __fastcall
IOTAEditBufferDispT<T>::get_CurrentDate(void)
{
  DATE pRetVal;
  this->get_CurrentDate((DATE*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditBufferDispT<T>::get_EditBlock(Borland_studio_toolsapi_tlb::IOTAEditBlock** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("EditBlock"), DISPID(DISPID_UNKNOWN/*[1610743811]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAEditBlock**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAEditBlockPtr __fastcall
IOTAEditBufferDispT<T>::get_EditBlock(void)
{
  Borland_studio_toolsapi_tlb::IOTAEditBlockPtr pRetVal;
  this->get_EditBlock(&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditBufferDispT<T>::get_EditPosition(Borland_studio_toolsapi_tlb::IOTAEditPosition** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("EditPosition"), DISPID(DISPID_UNKNOWN/*[1610743812]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAEditPosition**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAEditPositionPtr __fastcall
IOTAEditBufferDispT<T>::get_EditPosition(void)
{
  Borland_studio_toolsapi_tlb::IOTAEditPositionPtr pRetVal;
  this->get_EditPosition(&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditBufferDispT<T>::get_InitialDate(DATE* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("InitialDate"), DISPID(DISPID_UNKNOWN/*[1610743813]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_DATE:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> DATE __fastcall
IOTAEditBufferDispT<T>::get_InitialDate(void)
{
  DATE pRetVal;
  this->get_InitialDate((DATE*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditBufferDispT<T>::get_IsModified(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("IsModified"), DISPID(DISPID_UNKNOWN/*[1610743814]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAEditBufferDispT<T>::get_IsModified(void)
{
  VARIANT_BOOL pRetVal;
  this->get_IsModified((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditBufferDispT<T>::get_IsReadOnly(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("IsReadOnly"), DISPID(DISPID_UNKNOWN/*[1610743815]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAEditBufferDispT<T>::get_IsReadOnly(void)
{
  VARIANT_BOOL pRetVal;
  this->get_IsReadOnly((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditBufferDispT<T>::set_IsReadOnly(VARIANT_BOOL pRetVal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("IsReadOnly"), DISPID(1610743815));
  TAutoArgs<1> _args;
  _args[1] = pRetVal /*[VT_BOOL:0]*/;
  return OlePropertyPut(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAEditBufferDispT<T>::get_TopView(Borland_studio_toolsapi_tlb::IOTAEditView** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("TopView"), DISPID(DISPID_UNKNOWN/*[1610743817]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAEditView**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAEditViewPtr __fastcall
IOTAEditBufferDispT<T>::get_TopView(void)
{
  Borland_studio_toolsapi_tlb::IOTAEditViewPtr pRetVal;
  this->get_TopView(&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditBufferDispT<T>::Print(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Print"), DISPID(DISPID_UNKNOWN/*[1610743818]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAEditBufferDispT<T>::Print(void)
{
  VARIANT_BOOL pRetVal;
  this->Print((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditBufferDispT<T>::Redo(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Redo"), DISPID(DISPID_UNKNOWN/*[1610743819]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAEditBufferDispT<T>::Redo(void)
{
  VARIANT_BOOL pRetVal;
  this->Redo((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditBufferDispT<T>::Undo(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Undo"), DISPID(DISPID_UNKNOWN/*[1610743820]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAEditBufferDispT<T>::Undo(void)
{
  VARIANT_BOOL pRetVal;
  this->Undo((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditBufferDispT<T>::get_EditOptions(Borland_studio_toolsapi_tlb::IOTAEditOptions** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("EditOptions"), DISPID(DISPID_UNKNOWN/*[1610743821]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAEditOptions**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAEditOptionsPtr __fastcall
IOTAEditBufferDispT<T>::get_EditOptions(void)
{
  Borland_studio_toolsapi_tlb::IOTAEditOptionsPtr pRetVal;
  this->get_EditOptions(&pRetVal);
  return pRetVal;
}

// *********************************************************************//
// DispIntf:  IOTASearchOptions
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {29D0A5EE-10B9-4792-B7EE-8A462A28BDCE}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTASearchOptionsDispT<T>::get_CaseSensitive(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("CaseSensitive"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTASearchOptionsDispT<T>::get_CaseSensitive(void)
{
  VARIANT_BOOL pRetVal;
  this->get_CaseSensitive((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTASearchOptionsDispT<T>::set_CaseSensitive(VARIANT_BOOL pRetVal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("CaseSensitive"), DISPID(1610743808));
  TAutoArgs<1> _args;
  _args[1] = pRetVal /*[VT_BOOL:0]*/;
  return OlePropertyPut(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTASearchOptionsDispT<T>::get_Direction(Borland_studio_toolsapi_tlb::OTASearchDirection* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Direction"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr((int*)pRetVal /*[VT_USERDEFINED:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::OTASearchDirection __fastcall
IOTASearchOptionsDispT<T>::get_Direction(void)
{
  Borland_studio_toolsapi_tlb::OTASearchDirection pRetVal;
  this->get_Direction((Borland_studio_toolsapi_tlb::OTASearchDirection*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTASearchOptionsDispT<T>::set_Direction(Borland_studio_toolsapi_tlb::OTASearchDirection pRetVal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Direction"), DISPID(1610743810));
  TAutoArgs<1> _args;
  _args[1] = (int)pRetVal /*[VT_USERDEFINED:0]*/;
  return OlePropertyPut(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTASearchOptionsDispT<T>::get_FromCursor(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("FromCursor"), DISPID(DISPID_UNKNOWN/*[1610743812]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTASearchOptionsDispT<T>::get_FromCursor(void)
{
  VARIANT_BOOL pRetVal;
  this->get_FromCursor((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTASearchOptionsDispT<T>::set_FromCursor(VARIANT_BOOL pRetVal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("FromCursor"), DISPID(1610743812));
  TAutoArgs<1> _args;
  _args[1] = pRetVal /*[VT_BOOL:0]*/;
  return OlePropertyPut(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTASearchOptionsDispT<T>::get_RegularExpression(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("RegularExpression"), DISPID(DISPID_UNKNOWN/*[1610743814]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTASearchOptionsDispT<T>::get_RegularExpression(void)
{
  VARIANT_BOOL pRetVal;
  this->get_RegularExpression((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTASearchOptionsDispT<T>::set_RegularExpression(VARIANT_BOOL pRetVal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("RegularExpression"), DISPID(1610743814));
  TAutoArgs<1> _args;
  _args[1] = pRetVal /*[VT_BOOL:0]*/;
  return OlePropertyPut(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTASearchOptionsDispT<T>::get_SearchText(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("SearchText"), DISPID(DISPID_UNKNOWN/*[1610743816]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTASearchOptionsDispT<T>::get_SearchText(void)
{
  BSTR pRetVal;
  this->get_SearchText((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTASearchOptionsDispT<T>::set_SearchText(BSTR pRetVal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("SearchText"), DISPID(1610743816));
  TAutoArgs<1> _args;
  _args[1] = pRetVal /*[VT_BSTR:0]*/;
  return OlePropertyPut(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTASearchOptionsDispT<T>::get_WholeFile(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("WholeFile"), DISPID(DISPID_UNKNOWN/*[1610743818]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTASearchOptionsDispT<T>::get_WholeFile(void)
{
  VARIANT_BOOL pRetVal;
  this->get_WholeFile((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTASearchOptionsDispT<T>::set_WholeFile(VARIANT_BOOL pRetVal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("WholeFile"), DISPID(1610743818));
  TAutoArgs<1> _args;
  _args[1] = pRetVal /*[VT_BOOL:0]*/;
  return OlePropertyPut(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTASearchOptionsDispT<T>::get_WordBoundary(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("WordBoundary"), DISPID(DISPID_UNKNOWN/*[1610743820]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTASearchOptionsDispT<T>::get_WordBoundary(void)
{
  VARIANT_BOOL pRetVal;
  this->get_WordBoundary((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTASearchOptionsDispT<T>::set_WordBoundary(VARIANT_BOOL pRetVal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("WordBoundary"), DISPID(1610743820));
  TAutoArgs<1> _args;
  _args[1] = pRetVal /*[VT_BOOL:0]*/;
  return OlePropertyPut(_dispid, _args);
}

// *********************************************************************//
// DispIntf:  IOTAReplaceOptions
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4FAFD11A-91B1-41D5-BCA7-8B0C2389D37C}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAReplaceOptionsDispT<T>::get_PromptOnReplace(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("PromptOnReplace"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAReplaceOptionsDispT<T>::get_PromptOnReplace(void)
{
  VARIANT_BOOL pRetVal;
  this->get_PromptOnReplace((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAReplaceOptionsDispT<T>::set_PromptOnReplace(VARIANT_BOOL pRetVal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("PromptOnReplace"), DISPID(1610743808));
  TAutoArgs<1> _args;
  _args[1] = pRetVal /*[VT_BOOL:0]*/;
  return OlePropertyPut(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAReplaceOptionsDispT<T>::get_ReplaceAll(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("ReplaceAll"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAReplaceOptionsDispT<T>::get_ReplaceAll(void)
{
  VARIANT_BOOL pRetVal;
  this->get_ReplaceAll((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAReplaceOptionsDispT<T>::set_ReplaceAll(VARIANT_BOOL pRetVal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("ReplaceAll"), DISPID(1610743810));
  TAutoArgs<1> _args;
  _args[1] = pRetVal /*[VT_BOOL:0]*/;
  return OlePropertyPut(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAReplaceOptionsDispT<T>::get_ReplaceText(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("ReplaceText"), DISPID(DISPID_UNKNOWN/*[1610743812]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAReplaceOptionsDispT<T>::get_ReplaceText(void)
{
  BSTR pRetVal;
  this->get_ReplaceText((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAReplaceOptionsDispT<T>::set_ReplaceText(BSTR pRetVal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("ReplaceText"), DISPID(1610743812));
  TAutoArgs<1> _args;
  _args[1] = pRetVal /*[VT_BSTR:0]*/;
  return OlePropertyPut(_dispid, _args);
}

// *********************************************************************//
// DispIntf:  IOTAEditPosition
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {64962216-E0E1-458F-B984-38561573DE94}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAEditPositionDispT<T>::Align(long magnitude/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Align"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<1> _args;
  _args[1] = magnitude /*[VT_I4:0]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAEditPositionDispT<T>::BackspaceDelete(long howMany/*[in]*/, 
                                          VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("BackspaceDelete"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<1> _args;
  _args[1] = howMany /*[VT_I4:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAEditPositionDispT<T>::BackspaceDelete(long howMany/*[in]*/)
{
  VARIANT_BOOL pRetVal;
  this->BackspaceDelete(howMany, (VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditPositionDispT<T>::Delete(long howMany/*[in]*/, VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Delete"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<1> _args;
  _args[1] = howMany /*[VT_I4:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAEditPositionDispT<T>::Delete(long howMany/*[in]*/)
{
  VARIANT_BOOL pRetVal;
  this->Delete(howMany, (VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditPositionDispT<T>::DistanceToTab(Borland_studio_toolsapi_tlb::OTASearchDirection Direction/*[in]*/
                                        , long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("DistanceToTab"), DISPID(DISPID_UNKNOWN/*[1610743811]*/));
  TAutoArgs<1> _args;
  _args[1] = (int)Direction /*[VT_USERDEFINED:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> long __fastcall
IOTAEditPositionDispT<T>::DistanceToTab(Borland_studio_toolsapi_tlb::OTASearchDirection Direction/*[in]*/)
{
  long pRetVal;
  this->DistanceToTab(Direction, (long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditPositionDispT<T>::get_Character(unsigned_short* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Character"), DISPID(DISPID_UNKNOWN/*[1610743812]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_UI2:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> unsigned_short __fastcall
IOTAEditPositionDispT<T>::get_Character(void)
{
  unsigned_short pRetVal;
  this->get_Character((unsigned_short*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditPositionDispT<T>::get_column(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("column"), DISPID(DISPID_UNKNOWN/*[1610743813]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> long __fastcall
IOTAEditPositionDispT<T>::get_column(void)
{
  long pRetVal;
  this->get_column((long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditPositionDispT<T>::get_IsSpecialCharacter(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("IsSpecialCharacter"), DISPID(DISPID_UNKNOWN/*[1610743814]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAEditPositionDispT<T>::get_IsSpecialCharacter(void)
{
  VARIANT_BOOL pRetVal;
  this->get_IsSpecialCharacter((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditPositionDispT<T>::get_IsWhitespace(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("IsWhitespace"), DISPID(DISPID_UNKNOWN/*[1610743815]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAEditPositionDispT<T>::get_IsWhitespace(void)
{
  VARIANT_BOOL pRetVal;
  this->get_IsWhitespace((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditPositionDispT<T>::get_IsWordCharacter(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("IsWordCharacter"), DISPID(DISPID_UNKNOWN/*[1610743816]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAEditPositionDispT<T>::get_IsWordCharacter(void)
{
  VARIANT_BOOL pRetVal;
  this->get_IsWordCharacter((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditPositionDispT<T>::get_LastRow(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("LastRow"), DISPID(DISPID_UNKNOWN/*[1610743817]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> long __fastcall
IOTAEditPositionDispT<T>::get_LastRow(void)
{
  long pRetVal;
  this->get_LastRow((long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditPositionDispT<T>::get_ReplaceOptions(Borland_studio_toolsapi_tlb::IOTAReplaceOptions** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("ReplaceOptions"), DISPID(DISPID_UNKNOWN/*[1610743818]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAReplaceOptions**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAReplaceOptionsPtr __fastcall
IOTAEditPositionDispT<T>::get_ReplaceOptions(void)
{
  Borland_studio_toolsapi_tlb::IOTAReplaceOptionsPtr pRetVal;
  this->get_ReplaceOptions(&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditPositionDispT<T>::get_Row(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Row"), DISPID(DISPID_UNKNOWN/*[1610743819]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> long __fastcall
IOTAEditPositionDispT<T>::get_Row(void)
{
  long pRetVal;
  this->get_Row((long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditPositionDispT<T>::GetSearchErrorString(long errorCode/*[in]*/, BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetSearchErrorString"), DISPID(DISPID_UNKNOWN/*[1610743820]*/));
  TAutoArgs<1> _args;
  _args[1] = errorCode /*[VT_I4:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAEditPositionDispT<T>::GetSearchErrorString(long errorCode/*[in]*/)
{
  BSTR pRetVal;
  this->GetSearchErrorString(errorCode, (BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditPositionDispT<T>::get_SearchOptions(Borland_studio_toolsapi_tlb::IOTASearchOptions** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("SearchOptions"), DISPID(DISPID_UNKNOWN/*[1610743821]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTASearchOptions**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTASearchOptionsPtr __fastcall
IOTAEditPositionDispT<T>::get_SearchOptions(void)
{
  Borland_studio_toolsapi_tlb::IOTASearchOptionsPtr pRetVal;
  this->get_SearchOptions(&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditPositionDispT<T>::GotoLine(long LineNumber/*[in]*/, VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GotoLine"), DISPID(DISPID_UNKNOWN/*[1610743822]*/));
  TAutoArgs<1> _args;
  _args[1] = LineNumber /*[VT_I4:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAEditPositionDispT<T>::GotoLine(long LineNumber/*[in]*/)
{
  VARIANT_BOOL pRetVal;
  this->GotoLine(LineNumber, (VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditPositionDispT<T>::InsertBlock(Borland_studio_toolsapi_tlb::IOTAEditBlock* block/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("InsertBlock"), DISPID(DISPID_UNKNOWN/*[1610743823]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTAEditBlock*)block /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAEditPositionDispT<T>::InsertCharacter(unsigned_short Character/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("InsertCharacter"), DISPID(DISPID_UNKNOWN/*[1610743824]*/));
  TAutoArgs<1> _args;
  _args[1] = Character /*[VT_UI2:0]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAEditPositionDispT<T>::InsertFile(BSTR fileName/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("InsertFile"), DISPID(DISPID_UNKNOWN/*[1610743825]*/));
  TAutoArgs<1> _args;
  _args[1] = fileName /*[VT_BSTR:0]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAEditPositionDispT<T>::InsertText(BSTR Text/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("InsertText"), DISPID(DISPID_UNKNOWN/*[1610743826]*/));
  TAutoArgs<1> _args;
  _args[1] = Text /*[VT_BSTR:0]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAEditPositionDispT<T>::Move(long Row/*[in]*/, long col/*[in]*/, 
                               VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Move"), DISPID(DISPID_UNKNOWN/*[1610743827]*/));
  TAutoArgs<2> _args;
  _args[1] = Row /*[VT_I4:0]*/;
  _args[2] = col /*[VT_I4:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAEditPositionDispT<T>::Move(long Row/*[in]*/, long col/*[in]*/)
{
  VARIANT_BOOL pRetVal;
  this->Move(Row, col, (VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditPositionDispT<T>::MoveBOL(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("MoveBOL"), DISPID(DISPID_UNKNOWN/*[1610743828]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAEditPositionDispT<T>::MoveBOL(void)
{
  VARIANT_BOOL pRetVal;
  this->MoveBOL((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditPositionDispT<T>::MoveEOF(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("MoveEOF"), DISPID(DISPID_UNKNOWN/*[1610743829]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAEditPositionDispT<T>::MoveEOF(void)
{
  VARIANT_BOOL pRetVal;
  this->MoveEOF((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditPositionDispT<T>::MoveEOL(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("MoveEOL"), DISPID(DISPID_UNKNOWN/*[1610743830]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAEditPositionDispT<T>::MoveEOL(void)
{
  VARIANT_BOOL pRetVal;
  this->MoveEOL((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditPositionDispT<T>::MoveCursor(Borland_studio_toolsapi_tlb::OTAMoveCursorMasks moveMask/*[in]*/
                                     , VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("MoveCursor"), DISPID(DISPID_UNKNOWN/*[1610743831]*/));
  TAutoArgs<1> _args;
  _args[1] = (int)moveMask /*[VT_USERDEFINED:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAEditPositionDispT<T>::MoveCursor(Borland_studio_toolsapi_tlb::OTAMoveCursorMasks moveMask/*[in]*/)
{
  VARIANT_BOOL pRetVal;
  this->MoveCursor(moveMask, (VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditPositionDispT<T>::MoveReal(long Row/*[in]*/, long col/*[in]*/, 
                                   VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("MoveReal"), DISPID(DISPID_UNKNOWN/*[1610743832]*/));
  TAutoArgs<2> _args;
  _args[1] = Row /*[VT_I4:0]*/;
  _args[2] = col /*[VT_I4:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAEditPositionDispT<T>::MoveReal(long Row/*[in]*/, long col/*[in]*/)
{
  VARIANT_BOOL pRetVal;
  this->MoveReal(Row, col, (VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditPositionDispT<T>::MoveRelative(long Row/*[in]*/, long col/*[in]*/, 
                                       VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("MoveRelative"), DISPID(DISPID_UNKNOWN/*[1610743833]*/));
  TAutoArgs<2> _args;
  _args[1] = Row /*[VT_I4:0]*/;
  _args[2] = col /*[VT_I4:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAEditPositionDispT<T>::MoveRelative(long Row/*[in]*/, long col/*[in]*/)
{
  VARIANT_BOOL pRetVal;
  this->MoveRelative(Row, col, (VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditPositionDispT<T>::Paste()
{
  _TDispID _dispid(*this, OLETEXT("Paste"), DISPID(DISPID_UNKNOWN/*[1610743834]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAEditPositionDispT<T>::Read(long numberOfCharacters/*[in]*/, BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Read"), DISPID(DISPID_UNKNOWN/*[1610743835]*/));
  TAutoArgs<1> _args;
  _args[1] = numberOfCharacters /*[VT_I4:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAEditPositionDispT<T>::Read(long numberOfCharacters/*[in]*/)
{
  BSTR pRetVal;
  this->Read(numberOfCharacters, (BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditPositionDispT<T>::RepeatLastSearchOrReplace(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("RepeatLastSearchOrReplace"), DISPID(DISPID_UNKNOWN/*[1610743836]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAEditPositionDispT<T>::RepeatLastSearchOrReplace(void)
{
  VARIANT_BOOL pRetVal;
  this->RepeatLastSearchOrReplace((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditPositionDispT<T>::Replace(BSTR pattern/*[in]*/, BSTR ReplaceText/*[in]*/, 
                                  VARIANT_BOOL CaseSensitive/*[in]*/, 
                                  VARIANT_BOOL RegularExpression/*[in]*/, 
                                  VARIANT_BOOL WholeFile/*[in]*/, 
                                  Borland_studio_toolsapi_tlb::OTASearchDirection Direction/*[in]*/
                                  , long* errorCode/*[out]*/, long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Replace"), DISPID(DISPID_UNKNOWN/*[1610743837]*/));
  TAutoArgs<7> _args;
  _args[1] = pattern /*[VT_BSTR:0]*/;
  _args[2] = ReplaceText /*[VT_BSTR:0]*/;
  _args[3] = CaseSensitive /*[VT_BOOL:0]*/;
  _args[4] = RegularExpression /*[VT_BOOL:0]*/;
  _args[5] = WholeFile /*[VT_BOOL:0]*/;
  _args[6] = (int)Direction /*[VT_USERDEFINED:0]*/;
  _args[7] = errorCode /*[VT_I4:1]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> long __fastcall
IOTAEditPositionDispT<T>::Replace(BSTR pattern/*[in]*/, BSTR ReplaceText/*[in]*/, 
                                  VARIANT_BOOL CaseSensitive/*[in]*/, 
                                  VARIANT_BOOL RegularExpression/*[in]*/, 
                                  VARIANT_BOOL WholeFile/*[in]*/, 
                                  Borland_studio_toolsapi_tlb::OTASearchDirection Direction/*[in]*/, 
                                  long* errorCode/*[out]*/)
{
  long pRetVal;
  this->Replace(pattern, ReplaceText, CaseSensitive, RegularExpression, WholeFile, Direction, 
                errorCode, (long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditPositionDispT<T>::Replace_2(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Replace_2"), DISPID(DISPID_UNKNOWN/*[1610743838]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> long __fastcall
IOTAEditPositionDispT<T>::Replace_2(void)
{
  long pRetVal;
  this->Replace_2((long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditPositionDispT<T>::ReplaceAgain(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("ReplaceAgain"), DISPID(DISPID_UNKNOWN/*[1610743839]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> long __fastcall
IOTAEditPositionDispT<T>::ReplaceAgain(void)
{
  long pRetVal;
  this->ReplaceAgain((long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditPositionDispT<T>::Restore()
{
  _TDispID _dispid(*this, OLETEXT("Restore"), DISPID(DISPID_UNKNOWN/*[1610743840]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAEditPositionDispT<T>::RipText(BSTR validChars/*[in]*/, 
                                  Borland_studio_toolsapi_tlb::OTARipFlags ripFlags/*[in]*/, 
                                  BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("RipText"), DISPID(DISPID_UNKNOWN/*[1610743841]*/));
  TAutoArgs<2> _args;
  _args[1] = validChars /*[VT_BSTR:0]*/;
  _args[2] = (int)ripFlags /*[VT_USERDEFINED:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAEditPositionDispT<T>::RipText(BSTR validChars/*[in]*/, 
                                  Borland_studio_toolsapi_tlb::OTARipFlags ripFlags/*[in]*/)
{
  BSTR pRetVal;
  this->RipText(validChars, ripFlags, (BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditPositionDispT<T>::Save()
{
  _TDispID _dispid(*this, OLETEXT("Save"), DISPID(DISPID_UNKNOWN/*[1610743842]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAEditPositionDispT<T>::Search(BSTR pattern/*[in]*/, VARIANT_BOOL CaseSensitive/*[in]*/, 
                                 VARIANT_BOOL RegularExpression/*[in]*/, 
                                 VARIANT_BOOL WholeFile/*[in]*/, 
                                 Borland_studio_toolsapi_tlb::OTASearchDirection Direction/*[in]*/, 
                                 long* errorCode/*[out]*/, VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Search"), DISPID(DISPID_UNKNOWN/*[1610743843]*/));
  TAutoArgs<6> _args;
  _args[1] = pattern /*[VT_BSTR:0]*/;
  _args[2] = CaseSensitive /*[VT_BOOL:0]*/;
  _args[3] = RegularExpression /*[VT_BOOL:0]*/;
  _args[4] = WholeFile /*[VT_BOOL:0]*/;
  _args[5] = (int)Direction /*[VT_USERDEFINED:0]*/;
  _args[6] = errorCode /*[VT_I4:1]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAEditPositionDispT<T>::Search(BSTR pattern/*[in]*/, VARIANT_BOOL CaseSensitive/*[in]*/, 
                                 VARIANT_BOOL RegularExpression/*[in]*/, 
                                 VARIANT_BOOL WholeFile/*[in]*/, 
                                 Borland_studio_toolsapi_tlb::OTASearchDirection Direction/*[in]*/, 
                                 long* errorCode/*[out]*/)
{
  VARIANT_BOOL pRetVal;
  this->Search(pattern, CaseSensitive, RegularExpression, WholeFile, Direction, errorCode, (VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditPositionDispT<T>::Search_2(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Search_2"), DISPID(DISPID_UNKNOWN/*[1610743844]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAEditPositionDispT<T>::Search_2(void)
{
  VARIANT_BOOL pRetVal;
  this->Search_2((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditPositionDispT<T>::SearchAgain(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("SearchAgain"), DISPID(DISPID_UNKNOWN/*[1610743845]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAEditPositionDispT<T>::SearchAgain(void)
{
  VARIANT_BOOL pRetVal;
  this->SearchAgain((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditPositionDispT<T>::Tab(long magnitude/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Tab"), DISPID(DISPID_UNKNOWN/*[1610743846]*/));
  TAutoArgs<1> _args;
  _args[1] = magnitude /*[VT_I4:0]*/;
  return OleFunction(_dispid, _args);
}

// *********************************************************************//
// DispIntf:  IOTAEditView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A97FEAE3-7BE3-458D-B6B2-4A9EF6400AFC}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAEditViewDispT<T>::get_CursorPos(/*AUTO_PARAM_ERROR(Borland_studio_toolsapi_tlb::OTAEditPos* pRetVal)*/ VARIANT*  pRetVal)
{
  _TDispID _dispid(*this, OLETEXT("CursorPos"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_USERDEFINED:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> HRESULT __fastcall
IOTAEditViewDispT<T>::set_CursorPos(/*AUTO_PARAM_ERROR(Borland_studio_toolsapi_tlb::OTAEditPos pRetVal)*/ VARIANT  pRetVal)
{
  _TDispID _dispid(*this, OLETEXT("CursorPos"), DISPID(1610743808));
  TAutoArgs<1> _args;
  _args[1] = pRetVal /*[VT_USERDEFINED:0]*/;
  return OlePropertyPut(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAEditViewDispT<T>::get_TopPos(/*AUTO_PARAM_ERROR(Borland_studio_toolsapi_tlb::OTAEditPos* pRetVal)*/ VARIANT*  pRetVal)
{
  _TDispID _dispid(*this, OLETEXT("TopPos"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_USERDEFINED:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> HRESULT __fastcall
IOTAEditViewDispT<T>::set_TopPos(/*AUTO_PARAM_ERROR(Borland_studio_toolsapi_tlb::OTAEditPos pRetVal)*/ VARIANT  pRetVal)
{
  _TDispID _dispid(*this, OLETEXT("TopPos"), DISPID(1610743810));
  TAutoArgs<1> _args;
  _args[1] = pRetVal /*[VT_USERDEFINED:0]*/;
  return OlePropertyPut(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAEditViewDispT<T>::get_ViewSize(/*AUTO_PARAM_ERROR(Borland_studio_toolsapi_tlb::OTASize* pRetVal)*/ VARIANT*  pRetVal)
{
  _TDispID _dispid(*this, OLETEXT("ViewSize"), DISPID(DISPID_UNKNOWN/*[1610743812]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_USERDEFINED:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> HRESULT __fastcall
IOTAEditViewDispT<T>::PosToCharPos(long pos/*[in]*/, 
                                   /*AUTO_PARAM_ERROR(Borland_studio_toolsapi_tlb::OTACharPos* pRetVal)*/ VARIANT*  pRetVal)
{
  _TDispID _dispid(*this, OLETEXT("PosToCharPos"), DISPID(DISPID_UNKNOWN/*[1610743813]*/));
  TAutoArgs<1> _args;
  _args[1] = pos /*[VT_I4:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_USERDEFINED:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> HRESULT __fastcall
IOTAEditViewDispT<T>::CharPosToPos(/*AUTO_PARAM_ERROR(Borland_studio_toolsapi_tlb::OTACharPos charPos)*/ VARIANT  charPos
                                   , long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("CharPosToPos"), DISPID(DISPID_UNKNOWN/*[1610743814]*/));
  TAutoArgs<1> _args;
  _args[1] = charPos;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> HRESULT __fastcall
IOTAEditViewDispT<T>::ConvertPos(VARIANT_BOOL EdPosToCharPos/*[in]*/, 
                                 /*AUTO_PARAM_ERROR(Borland_studio_toolsapi_tlb::OTAEditPos* editPos)*/ VARIANT  editPos
                                 , 
                                 /*AUTO_PARAM_ERROR(Borland_studio_toolsapi_tlb::OTACharPos* charPos)*/ VARIANT  charPos)
{
  _TDispID _dispid(*this, OLETEXT("ConvertPos"), DISPID(DISPID_UNKNOWN/*[1610743815]*/));
  TAutoArgs<3> _args;
  _args[1] = EdPosToCharPos /*[VT_BOOL:0]*/;
  _args[2] = editPos;
  _args[3] = charPos;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAEditViewDispT<T>::GetAttributeAtPos(/*AUTO_PARAM_ERROR(Borland_studio_toolsapi_tlb::OTAEditPos edPos)*/ VARIANT  edPos
                                        , VARIANT_BOOL includeMargin/*[in]*/, long* element/*[out]*/
                                        , long* lineFlag/*[out]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetAttributeAtPos"), DISPID(DISPID_UNKNOWN/*[1610743816]*/));
  TAutoArgs<4> _args;
  _args[1] = edPos;
  _args[2] = includeMargin /*[VT_BOOL:0]*/;
  _args[3] = element /*[VT_I4:1]*/;
  _args[4] = lineFlag /*[VT_I4:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAEditViewDispT<T>::SameView(Borland_studio_toolsapi_tlb::IOTAEditView* editView/*[in]*/, 
                               VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("SameView"), DISPID(DISPID_UNKNOWN/*[1610743817]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTAEditView*)editView /*[VT_USERDEFINED:1]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAEditViewDispT<T>::SameView(Borland_studio_toolsapi_tlb::IOTAEditView* editView/*[in]*/)
{
  VARIANT_BOOL pRetVal;
  this->SameView(editView, (VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditViewDispT<T>::BookmarkGoto(long bookmarkID/*[in]*/, VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("BookmarkGoto"), DISPID(DISPID_UNKNOWN/*[1610743818]*/));
  TAutoArgs<1> _args;
  _args[1] = bookmarkID /*[VT_I4:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAEditViewDispT<T>::BookmarkGoto(long bookmarkID/*[in]*/)
{
  VARIANT_BOOL pRetVal;
  this->BookmarkGoto(bookmarkID, (VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditViewDispT<T>::BookmarkRecord(long bookmarkID/*[in]*/, VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("BookmarkRecord"), DISPID(DISPID_UNKNOWN/*[1610743819]*/));
  TAutoArgs<1> _args;
  _args[1] = bookmarkID /*[VT_I4:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAEditViewDispT<T>::BookmarkRecord(long bookmarkID/*[in]*/)
{
  VARIANT_BOOL pRetVal;
  this->BookmarkRecord(bookmarkID, (VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditViewDispT<T>::BookmarkToggle(long bookmarkID/*[in]*/, VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("BookmarkToggle"), DISPID(DISPID_UNKNOWN/*[1610743820]*/));
  TAutoArgs<1> _args;
  _args[1] = bookmarkID /*[VT_I4:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAEditViewDispT<T>::BookmarkToggle(long bookmarkID/*[in]*/)
{
  VARIANT_BOOL pRetVal;
  this->BookmarkToggle(bookmarkID, (VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditViewDispT<T>::ClearAllBookmarks()
{
  _TDispID _dispid(*this, OLETEXT("ClearAllBookmarks"), DISPID(DISPID_UNKNOWN/*[1610743821]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAEditViewDispT<T>::Center(long Row/*[in]*/, long col/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Center"), DISPID(DISPID_UNKNOWN/*[1610743822]*/));
  TAutoArgs<2> _args;
  _args[1] = Row /*[VT_I4:0]*/;
  _args[2] = col /*[VT_I4:0]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAEditViewDispT<T>::get_block(Borland_studio_toolsapi_tlb::IOTAEditBlock** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("block"), DISPID(DISPID_UNKNOWN/*[1610743823]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAEditBlock**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAEditBlockPtr __fastcall
IOTAEditViewDispT<T>::get_block(void)
{
  Borland_studio_toolsapi_tlb::IOTAEditBlockPtr pRetVal;
  this->get_block(&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditViewDispT<T>::GetBookmarkPos(long bookmarkID/*[in]*/, 
                                     /*AUTO_PARAM_ERROR(Borland_studio_toolsapi_tlb::OTACharPos* pRetVal)*/ VARIANT*  pRetVal)
{
  _TDispID _dispid(*this, OLETEXT("GetBookmarkPos"), DISPID(DISPID_UNKNOWN/*[1610743824]*/));
  TAutoArgs<1> _args;
  _args[1] = bookmarkID /*[VT_I4:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_USERDEFINED:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> HRESULT __fastcall
IOTAEditViewDispT<T>::get_BottomRow(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("BottomRow"), DISPID(DISPID_UNKNOWN/*[1610743825]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> long __fastcall
IOTAEditViewDispT<T>::get_BottomRow(void)
{
  long pRetVal;
  this->get_BottomRow((long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditViewDispT<T>::get_Buffer(Borland_studio_toolsapi_tlb::IOTAEditBuffer** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Buffer"), DISPID(DISPID_UNKNOWN/*[1610743826]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAEditBuffer**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAEditBufferPtr __fastcall
IOTAEditViewDispT<T>::get_Buffer(void)
{
  Borland_studio_toolsapi_tlb::IOTAEditBufferPtr pRetVal;
  this->get_Buffer(&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditViewDispT<T>::get_LastEditColumn(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("LastEditColumn"), DISPID(DISPID_UNKNOWN/*[1610743827]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> long __fastcall
IOTAEditViewDispT<T>::get_LastEditColumn(void)
{
  long pRetVal;
  this->get_LastEditColumn((long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditViewDispT<T>::get_LastEditRow(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("LastEditRow"), DISPID(DISPID_UNKNOWN/*[1610743828]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> long __fastcall
IOTAEditViewDispT<T>::get_LastEditRow(void)
{
  long pRetVal;
  this->get_LastEditRow((long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditViewDispT<T>::get_LeftColumn(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("LeftColumn"), DISPID(DISPID_UNKNOWN/*[1610743829]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> long __fastcall
IOTAEditViewDispT<T>::get_LeftColumn(void)
{
  long pRetVal;
  this->get_LeftColumn((long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditViewDispT<T>::get_Position(Borland_studio_toolsapi_tlb::IOTAEditPosition** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Position"), DISPID(DISPID_UNKNOWN/*[1610743830]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAEditPosition**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAEditPositionPtr __fastcall
IOTAEditViewDispT<T>::get_Position(void)
{
  Borland_studio_toolsapi_tlb::IOTAEditPositionPtr pRetVal;
  this->get_Position(&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditViewDispT<T>::get_RightColumn(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("RightColumn"), DISPID(DISPID_UNKNOWN/*[1610743831]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> long __fastcall
IOTAEditViewDispT<T>::get_RightColumn(void)
{
  long pRetVal;
  this->get_RightColumn((long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditViewDispT<T>::get_TopRow(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("TopRow"), DISPID(DISPID_UNKNOWN/*[1610743832]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> long __fastcall
IOTAEditViewDispT<T>::get_TopRow(void)
{
  long pRetVal;
  this->get_TopRow((long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditViewDispT<T>::MoveCursorToView()
{
  _TDispID _dispid(*this, OLETEXT("MoveCursorToView"), DISPID(DISPID_UNKNOWN/*[1610743833]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAEditViewDispT<T>::MoveViewToCursor()
{
  _TDispID _dispid(*this, OLETEXT("MoveViewToCursor"), DISPID(DISPID_UNKNOWN/*[1610743834]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAEditViewDispT<T>::PageDown()
{
  _TDispID _dispid(*this, OLETEXT("PageDown"), DISPID(DISPID_UNKNOWN/*[1610743835]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAEditViewDispT<T>::PageUp()
{
  _TDispID _dispid(*this, OLETEXT("PageUp"), DISPID(DISPID_UNKNOWN/*[1610743836]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAEditViewDispT<T>::Paint()
{
  _TDispID _dispid(*this, OLETEXT("Paint"), DISPID(DISPID_UNKNOWN/*[1610743837]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAEditViewDispT<T>::Scroll(long deltaRow/*[in]*/, long deltaCol/*[in]*/, 
                             long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Scroll"), DISPID(DISPID_UNKNOWN/*[1610743838]*/));
  TAutoArgs<2> _args;
  _args[1] = deltaRow /*[VT_I4:0]*/;
  _args[2] = deltaCol /*[VT_I4:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> long __fastcall
IOTAEditViewDispT<T>::Scroll(long deltaRow/*[in]*/, long deltaCol/*[in]*/)
{
  long pRetVal;
  this->Scroll(deltaRow, deltaCol, (long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditViewDispT<T>::SetTopLeft(long TopRow/*[in]*/, long leftCol/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("SetTopLeft"), DISPID(DISPID_UNKNOWN/*[1610743839]*/));
  TAutoArgs<2> _args;
  _args[1] = TopRow /*[VT_I4:0]*/;
  _args[2] = leftCol /*[VT_I4:0]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAEditViewDispT<T>::SetTempMsg(BSTR msg/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("SetTempMsg"), DISPID(DISPID_UNKNOWN/*[1610743840]*/));
  TAutoArgs<1> _args;
  _args[1] = msg /*[VT_BSTR:0]*/;
  return OleFunction(_dispid, _args);
}

// *********************************************************************//
// DispIntf:  IOTAElideActions
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BC19685E-1C37-4492-81E8-BDB8634C6F8C}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAElideActionsDispT<T>::ElideNearestBlock()
{
  _TDispID _dispid(*this, OLETEXT("ElideNearestBlock"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAElideActionsDispT<T>::UnElideNearestBlock()
{
  _TDispID _dispid(*this, OLETEXT("UnElideNearestBlock"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAElideActionsDispT<T>::UnElideAllBlocks()
{
  _TDispID _dispid(*this, OLETEXT("UnElideAllBlocks"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAElideActionsDispT<T>::EnableElisions()
{
  _TDispID _dispid(*this, OLETEXT("EnableElisions"), DISPID(DISPID_UNKNOWN/*[1610743811]*/));
  return OleFunction(_dispid);
}

// *********************************************************************//
// DispIntf:  IOTAEditor
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {614847EC-D01E-4170-8F12-58E5A162F250}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAEditorDispT<T>::add_BeforeSave(Mscorlib_tlb::_EventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("add_BeforeSave"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Mscorlib_tlb::_EventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAEditorDispT<T>::remove_BeforeSave(Mscorlib_tlb::_EventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("remove_BeforeSave"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Mscorlib_tlb::_EventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAEditorDispT<T>::add_AfterSave(Mscorlib_tlb::_EventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("add_AfterSave"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Mscorlib_tlb::_EventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAEditorDispT<T>::remove_AfterSave(Mscorlib_tlb::_EventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("remove_AfterSave"), DISPID(DISPID_UNKNOWN/*[1610743811]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Mscorlib_tlb::_EventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAEditorDispT<T>::add_Closed(Mscorlib_tlb::_EventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("add_Closed"), DISPID(DISPID_UNKNOWN/*[1610743812]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Mscorlib_tlb::_EventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAEditorDispT<T>::remove_Closed(Mscorlib_tlb::_EventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("remove_Closed"), DISPID(DISPID_UNKNOWN/*[1610743813]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Mscorlib_tlb::_EventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAEditorDispT<T>::add_Modified(Mscorlib_tlb::_EventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("add_Modified"), DISPID(DISPID_UNKNOWN/*[1610743814]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Mscorlib_tlb::_EventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAEditorDispT<T>::remove_Modified(Mscorlib_tlb::_EventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("remove_Modified"), DISPID(DISPID_UNKNOWN/*[1610743815]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Mscorlib_tlb::_EventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAEditorDispT<T>::get_fileName(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("fileName"), DISPID(DISPID_UNKNOWN/*[1610743816]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAEditorDispT<T>::get_fileName(void)
{
  BSTR pRetVal;
  this->get_fileName((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditorDispT<T>::get_IsModified(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("IsModified"), DISPID(DISPID_UNKNOWN/*[1610743817]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAEditorDispT<T>::get_IsModified(void)
{
  VARIANT_BOOL pRetVal;
  this->get_IsModified((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditorDispT<T>::get_module(Borland_studio_toolsapi_tlb::IOTAModule** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("module"), DISPID(DISPID_UNKNOWN/*[1610743818]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAModule**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAModulePtr __fastcall
IOTAEditorDispT<T>::get_module(void)
{
  Borland_studio_toolsapi_tlb::IOTAModulePtr pRetVal;
  this->get_module(&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditorDispT<T>::MarkModified()
{
  _TDispID _dispid(*this, OLETEXT("MarkModified"), DISPID(DISPID_UNKNOWN/*[1610743819]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAEditorDispT<T>::Show()
{
  _TDispID _dispid(*this, OLETEXT("Show"), DISPID(DISPID_UNKNOWN/*[1610743820]*/));
  return OleFunction(_dispid);
}

// *********************************************************************//
// DispIntf:  IOTAProjectResource
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C706DF59-7EDF-4E70-98F5-765F195F930C}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAProjectResourceDispT<T>::GetEntryCount(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetEntryCount"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> long __fastcall
IOTAProjectResourceDispT<T>::GetEntryCount(void)
{
  long pRetVal;
  this->GetEntryCount((long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAProjectResourceDispT<T>::GetEntry(long index/*[in]*/, 
                                      Borland_studio_toolsapi_tlb::IOTAResourceEntry** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetEntry"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<1> _args;
  _args[1] = index /*[VT_I4:0]*/;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAResourceEntry**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAResourceEntry* __fastcall
IOTAProjectResourceDispT<T>::GetEntry(long index/*[in]*/)
{
  Borland_studio_toolsapi_tlb::IOTAResourceEntry* pRetVal;
  this->GetEntry(index, (Borland_studio_toolsapi_tlb::IOTAResourceEntry**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAProjectResourceDispT<T>::GetEntryFromHandle(Borland_studio_toolsapi_tlb::_TOTAHandle* EntryHandle/*[in]*/
                                                , 
                                                Borland_studio_toolsapi_tlb::IOTAResourceEntry** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetEntryFromHandle"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::_TOTAHandle*)EntryHandle /*[VT_USERDEFINED:1]*/;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAResourceEntry**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAResourceEntry* __fastcall
IOTAProjectResourceDispT<T>::GetEntryFromHandle(Borland_studio_toolsapi_tlb::_TOTAHandle* EntryHandle/*[in]*/)
{
  Borland_studio_toolsapi_tlb::IOTAResourceEntry* pRetVal;
  this->GetEntryFromHandle(EntryHandle, (Borland_studio_toolsapi_tlb::IOTAResourceEntry**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAProjectResourceDispT<T>::FindEntry(BSTR ResType/*[in]*/, BSTR Name/*[in]*/, 
                                       Borland_studio_toolsapi_tlb::IOTAResourceEntry** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("FindEntry"), DISPID(DISPID_UNKNOWN/*[1610743811]*/));
  TAutoArgs<2> _args;
  _args[1] = ResType /*[VT_BSTR:0]*/;
  _args[2] = Name /*[VT_BSTR:0]*/;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAResourceEntry**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAResourceEntry* __fastcall
IOTAProjectResourceDispT<T>::FindEntry(BSTR ResType/*[in]*/, BSTR Name/*[in]*/)
{
  Borland_studio_toolsapi_tlb::IOTAResourceEntry* pRetVal;
  this->FindEntry(ResType, Name, (Borland_studio_toolsapi_tlb::IOTAResourceEntry**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAProjectResourceDispT<T>::DeleteEntry(Borland_studio_toolsapi_tlb::_TOTAHandle* EntryHandle/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("DeleteEntry"), DISPID(DISPID_UNKNOWN/*[1610743812]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::_TOTAHandle*)EntryHandle /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAProjectResourceDispT<T>::CreateEntry(BSTR ResType/*[in]*/, BSTR Name/*[in]*/, 
                                         unsigned_short flags/*[in]*/, 
                                         unsigned_short LanguageId/*[in]*/, long DataVersion/*[in]*/
                                         , long Version/*[in]*/, long Characteristics/*[in]*/, 
                                         Borland_studio_toolsapi_tlb::IOTAResourceEntry** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("CreateEntry"), DISPID(DISPID_UNKNOWN/*[1610743813]*/));
  TAutoArgs<7> _args;
  _args[1] = ResType /*[VT_BSTR:0]*/;
  _args[2] = Name /*[VT_BSTR:0]*/;
  _args[3] = flags /*[VT_UI2:0]*/;
  _args[4] = LanguageId /*[VT_UI2:0]*/;
  _args[5] = DataVersion /*[VT_I4:0]*/;
  _args[6] = Version /*[VT_I4:0]*/;
  _args[7] = Characteristics /*[VT_I4:0]*/;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAResourceEntry**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAResourceEntry* __fastcall
IOTAProjectResourceDispT<T>::CreateEntry(BSTR ResType/*[in]*/, BSTR Name/*[in]*/, 
                                         unsigned_short flags/*[in]*/, 
                                         unsigned_short LanguageId/*[in]*/, long DataVersion/*[in]*/, 
                                         long Version/*[in]*/, long Characteristics/*[in]*/)
{
  Borland_studio_toolsapi_tlb::IOTAResourceEntry* pRetVal;
  this->CreateEntry(ResType, Name, flags, LanguageId, DataVersion, Version, Characteristics, (Borland_studio_toolsapi_tlb::IOTAResourceEntry**)&pRetVal);
  return pRetVal;
}

// *********************************************************************//
// DispIntf:  IOTAResourceEntry
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C198D6D5-145C-40D0-8E4E-9261FCE5C21F}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAResourceEntryDispT<T>::GetResourceType(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetResourceType"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> long __fastcall
IOTAResourceEntryDispT<T>::GetResourceType(void)
{
  long pRetVal;
  this->GetResourceType((long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAResourceEntryDispT<T>::GetResourceName(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetResourceName"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAResourceEntryDispT<T>::GetResourceName(void)
{
  BSTR pRetVal;
  this->GetResourceName((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAResourceEntryDispT<T>::Change(BSTR NewType/*[in]*/, BSTR NewName/*[in]*/, 
                                  VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Change"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<2> _args;
  _args[1] = NewType /*[VT_BSTR:0]*/;
  _args[2] = NewName /*[VT_BSTR:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAResourceEntryDispT<T>::Change(BSTR NewType/*[in]*/, BSTR NewName/*[in]*/)
{
  VARIANT_BOOL pRetVal;
  this->Change(NewType, NewName, (VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAResourceEntryDispT<T>::GetHeaderValue(Borland_studio_toolsapi_tlb::TOTAResHeaderValue HeaderValue/*[in]*/
                                          , long* value/*[in,out]*/, 
                                          VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetHeaderValue"), DISPID(DISPID_UNKNOWN/*[1610743811]*/));
  TAutoArgs<2> _args;
  _args[1] = (int)HeaderValue /*[VT_USERDEFINED:0]*/;
  _args[2] = value /*[VT_I4:1]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAResourceEntryDispT<T>::GetHeaderValue(Borland_studio_toolsapi_tlb::TOTAResHeaderValue HeaderValue/*[in]*/, 
                                          long* value/*[in,out]*/)
{
  VARIANT_BOOL pRetVal;
  this->GetHeaderValue(HeaderValue, value, (VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAResourceEntryDispT<T>::SetHeaderValue(Borland_studio_toolsapi_tlb::TOTAResHeaderValue HeaderValue/*[in]*/
                                          , long value/*[in]*/, 
                                          VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("SetHeaderValue"), DISPID(DISPID_UNKNOWN/*[1610743812]*/));
  TAutoArgs<2> _args;
  _args[1] = (int)HeaderValue /*[VT_USERDEFINED:0]*/;
  _args[2] = value /*[VT_I4:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAResourceEntryDispT<T>::SetHeaderValue(Borland_studio_toolsapi_tlb::TOTAResHeaderValue HeaderValue/*[in]*/, 
                                          long value/*[in]*/)
{
  VARIANT_BOOL pRetVal;
  this->SetHeaderValue(HeaderValue, value, (VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAResourceEntryDispT<T>::GetData(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetData"), DISPID(DISPID_UNKNOWN/*[1610743813]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> long __fastcall
IOTAResourceEntryDispT<T>::GetData(void)
{
  long pRetVal;
  this->GetData((long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAResourceEntryDispT<T>::get_DataSize(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("DataSize"), DISPID(DISPID_UNKNOWN/*[1610743814]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> long __fastcall
IOTAResourceEntryDispT<T>::get_DataSize(void)
{
  long pRetVal;
  this->get_DataSize((long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAResourceEntryDispT<T>::set_DataSize(long pRetVal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("DataSize"), DISPID(1610743814));
  TAutoArgs<1> _args;
  _args[1] = pRetVal /*[VT_I4:0]*/;
  return OlePropertyPut(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAResourceEntryDispT<T>::GetEntryHandle(Borland_studio_toolsapi_tlb::_TOTAHandle** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetEntryHandle"), DISPID(DISPID_UNKNOWN/*[1610743816]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::_TOTAHandle**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::_TOTAHandle* __fastcall
IOTAResourceEntryDispT<T>::GetEntryHandle(void)
{
  Borland_studio_toolsapi_tlb::_TOTAHandle* pRetVal;
  this->GetEntryHandle((Borland_studio_toolsapi_tlb::_TOTAHandle**)&pRetVal);
  return pRetVal;
}

// *********************************************************************//
// DispIntf:  IOTAEditorContent
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F203BC3F-2DA9-4F40-B05D-8EA610F24B2E}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAEditorContentDispT<T>::get_Content(LPUNKNOWN* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Content"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_UNKNOWN:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> LPUNKNOWN __fastcall
IOTAEditorContentDispT<T>::get_Content(void)
{
  LPUNKNOWN pRetVal;
  this->get_Content((LPUNKNOWN*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditorContentDispT<T>::_set_Content(LPUNKNOWN pRetVal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Content"), DISPID(1610743808));
  TAutoArgs<1> _args;
  _args[1] = pRetVal /*[VT_UNKNOWN:0]*/;
  return OlePropertyPut(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAEditorContentDispT<T>::get_ContentAge(DATE* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("ContentAge"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_DATE:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> DATE __fastcall
IOTAEditorContentDispT<T>::get_ContentAge(void)
{
  DATE pRetVal;
  this->get_ContentAge((DATE*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditorContentDispT<T>::ResetDiskAge()
{
  _TDispID _dispid(*this, OLETEXT("ResetDiskAge"), DISPID(DISPID_UNKNOWN/*[1610743811]*/));
  return OleFunction(_dispid);
}

// *********************************************************************//
// SmartIntf: TCOM_ViewActivatedEventArgs
// Interface: _ViewActivatedEventArgs
// *********************************************************************//
// *********************************************************************//
// DispIntf:  _ViewActivatedEventArgs
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {329F6CBF-1039-366A-8E14-57D7C3E7B0CB}
// *********************************************************************//
// *********************************************************************//
// SmartIntf: TCOM_ViewNotificationEventArgs
// Interface: _ViewNotificationEventArgs
// *********************************************************************//
// *********************************************************************//
// DispIntf:  _ViewNotificationEventArgs
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {4A746E50-D362-3EEB-948F-70E30834C620}
// *********************************************************************//
// *********************************************************************//
// SmartIntf: TCOM_ViewActivatedEventHandler
// Interface: _ViewActivatedEventHandler
// *********************************************************************//
// *********************************************************************//
// DispIntf:  _ViewActivatedEventHandler
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {8C5CE0CB-419E-372B-9730-345188F4FE46}
// *********************************************************************//
// *********************************************************************//
// SmartIntf: TCOM_ViewNotificationEventHandler
// Interface: _ViewNotificationEventHandler
// *********************************************************************//
// *********************************************************************//
// DispIntf:  _ViewNotificationEventHandler
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {21C2C2F6-77F7-342C-84D8-1ABBC6ECE631}
// *********************************************************************//
// *********************************************************************//
// DispIntf:  IOTASourceEditor
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FB7521C9-358F-4F81-AAE6-590B64A74107}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTASourceEditorDispT<T>::CreateReader(Borland_studio_toolsapi_tlb::IOTAFileReader** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("CreateReader"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAFileReader**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAFileReader* __fastcall
IOTASourceEditorDispT<T>::CreateReader(void)
{
  Borland_studio_toolsapi_tlb::IOTAFileReader* pRetVal;
  this->CreateReader((Borland_studio_toolsapi_tlb::IOTAFileReader**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTASourceEditorDispT<T>::CreateWriter(Borland_studio_toolsapi_tlb::IOTAFileWriter** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("CreateWriter"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAFileWriter**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAFileWriter* __fastcall
IOTASourceEditorDispT<T>::CreateWriter(void)
{
  Borland_studio_toolsapi_tlb::IOTAFileWriter* pRetVal;
  this->CreateWriter((Borland_studio_toolsapi_tlb::IOTAFileWriter**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTASourceEditorDispT<T>::get_EditViewCount(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("EditViewCount"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> long __fastcall
IOTASourceEditorDispT<T>::get_EditViewCount(void)
{
  long pRetVal;
  this->get_EditViewCount((long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTASourceEditorDispT<T>::GetEditView(long index/*[in]*/, 
                                      Borland_studio_toolsapi_tlb::IOTAEditView** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetEditView"), DISPID(DISPID_UNKNOWN/*[1610743811]*/));
  TAutoArgs<1> _args;
  _args[1] = index /*[VT_I4:0]*/;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAEditView**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAEditView* __fastcall
IOTASourceEditorDispT<T>::GetEditView(long index/*[in]*/)
{
  Borland_studio_toolsapi_tlb::IOTAEditView* pRetVal;
  this->GetEditView(index, (Borland_studio_toolsapi_tlb::IOTAEditView**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTASourceEditorDispT<T>::get_LinesInBuffer(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("LinesInBuffer"), DISPID(DISPID_UNKNOWN/*[1610743812]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> long __fastcall
IOTASourceEditorDispT<T>::get_LinesInBuffer(void)
{
  long pRetVal;
  this->get_LinesInBuffer((long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTASourceEditorDispT<T>::get_BlockAfter(/*AUTO_PARAM_ERROR(Borland_studio_toolsapi_tlb::OTACharPos* pRetVal)*/ VARIANT*  pRetVal)
{
  _TDispID _dispid(*this, OLETEXT("BlockAfter"), DISPID(DISPID_UNKNOWN/*[1610743813]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_USERDEFINED:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> HRESULT __fastcall
IOTASourceEditorDispT<T>::set_BlockAfter(/*AUTO_PARAM_ERROR(Borland_studio_toolsapi_tlb::OTACharPos pRetVal)*/ VARIANT  pRetVal)
{
  _TDispID _dispid(*this, OLETEXT("BlockAfter"), DISPID(1610743813));
  TAutoArgs<1> _args;
  _args[1] = pRetVal /*[VT_USERDEFINED:0]*/;
  return OlePropertyPut(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTASourceEditorDispT<T>::get_BlockStart(/*AUTO_PARAM_ERROR(Borland_studio_toolsapi_tlb::OTACharPos* pRetVal)*/ VARIANT*  pRetVal)
{
  _TDispID _dispid(*this, OLETEXT("BlockStart"), DISPID(DISPID_UNKNOWN/*[1610743815]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_USERDEFINED:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> HRESULT __fastcall
IOTASourceEditorDispT<T>::set_BlockStart(/*AUTO_PARAM_ERROR(Borland_studio_toolsapi_tlb::OTACharPos pRetVal)*/ VARIANT  pRetVal)
{
  _TDispID _dispid(*this, OLETEXT("BlockStart"), DISPID(1610743815));
  TAutoArgs<1> _args;
  _args[1] = pRetVal /*[VT_USERDEFINED:0]*/;
  return OlePropertyPut(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTASourceEditorDispT<T>::get_BlockType(Borland_studio_toolsapi_tlb::OTABlockType* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("BlockType"), DISPID(DISPID_UNKNOWN/*[1610743817]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr((int*)pRetVal /*[VT_USERDEFINED:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::OTABlockType __fastcall
IOTASourceEditorDispT<T>::get_BlockType(void)
{
  Borland_studio_toolsapi_tlb::OTABlockType pRetVal;
  this->get_BlockType((Borland_studio_toolsapi_tlb::OTABlockType*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTASourceEditorDispT<T>::set_BlockType(Borland_studio_toolsapi_tlb::OTABlockType pRetVal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("BlockType"), DISPID(1610743817));
  TAutoArgs<1> _args;
  _args[1] = (int)pRetVal /*[VT_USERDEFINED:0]*/;
  return OlePropertyPut(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTASourceEditorDispT<T>::get_BlockVisible(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("BlockVisible"), DISPID(DISPID_UNKNOWN/*[1610743819]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTASourceEditorDispT<T>::get_BlockVisible(void)
{
  VARIANT_BOOL pRetVal;
  this->get_BlockVisible((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTASourceEditorDispT<T>::set_BlockVisible(VARIANT_BOOL pRetVal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("BlockVisible"), DISPID(1610743819));
  TAutoArgs<1> _args;
  _args[1] = pRetVal /*[VT_BOOL:0]*/;
  return OlePropertyPut(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTASourceEditorDispT<T>::get_SubViewCount(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("SubViewCount"), DISPID(DISPID_UNKNOWN/*[1610743821]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> long __fastcall
IOTASourceEditorDispT<T>::get_SubViewCount(void)
{
  long pRetVal;
  this->get_SubViewCount((long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTASourceEditorDispT<T>::GetSubViewIdentifier(long index/*[in]*/, BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetSubViewIdentifier"), DISPID(DISPID_UNKNOWN/*[1610743822]*/));
  TAutoArgs<1> _args;
  _args[1] = index /*[VT_I4:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTASourceEditorDispT<T>::GetSubViewIdentifier(long index/*[in]*/)
{
  BSTR pRetVal;
  this->GetSubViewIdentifier(index, (BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTASourceEditorDispT<T>::get_SubViewIndex(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("SubViewIndex"), DISPID(DISPID_UNKNOWN/*[1610743823]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> long __fastcall
IOTASourceEditorDispT<T>::get_SubViewIndex(void)
{
  long pRetVal;
  this->get_SubViewIndex((long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTASourceEditorDispT<T>::SwitchToView(long index/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("SwitchToView"), DISPID(DISPID_UNKNOWN/*[1610743824]*/));
  TAutoArgs<1> _args;
  _args[1] = index /*[VT_I4:0]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTASourceEditorDispT<T>::SwitchToView_2(BSTR viewIdentifier/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("SwitchToView_2"), DISPID(DISPID_UNKNOWN/*[1610743825]*/));
  TAutoArgs<1> _args;
  _args[1] = viewIdentifier /*[VT_BSTR:0]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTASourceEditorDispT<T>::add_ViewNotification(Borland_studio_toolsapi_tlb::_ViewNotificationEventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("add_ViewNotification"), DISPID(DISPID_UNKNOWN/*[1610743826]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::_ViewNotificationEventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTASourceEditorDispT<T>::remove_ViewNotification(Borland_studio_toolsapi_tlb::_ViewNotificationEventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("remove_ViewNotification"), DISPID(DISPID_UNKNOWN/*[1610743827]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::_ViewNotificationEventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTASourceEditorDispT<T>::add_ViewActivated(Borland_studio_toolsapi_tlb::_ViewActivatedEventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("add_ViewActivated"), DISPID(DISPID_UNKNOWN/*[1610743828]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::_ViewActivatedEventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTASourceEditorDispT<T>::remove_ViewActivated(Borland_studio_toolsapi_tlb::_ViewActivatedEventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("remove_ViewActivated"), DISPID(DISPID_UNKNOWN/*[1610743829]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::_ViewActivatedEventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

// *********************************************************************//
// SmartIntf: TCOM_RenameNotificationEventArgs
// Interface: _RenameNotificationEventArgs
// *********************************************************************//
// *********************************************************************//
// DispIntf:  _RenameNotificationEventArgs
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {12CB5FE4-DB0F-39B9-BB64-AF97C7B8C5D2}
// *********************************************************************//
// *********************************************************************//
// SmartIntf: TCOM_RenameNotificationEventHandler
// Interface: _RenameNotificationEventHandler
// *********************************************************************//
// *********************************************************************//
// DispIntf:  _RenameNotificationEventHandler
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {D4246AF0-AA90-3FAD-9A4D-64E12E8609C4}
// *********************************************************************//
// *********************************************************************//
// DispIntf:  IOTAModule
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9F18CD2A-DCEE-48D9-8507-4C45D3D1F551}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAModuleDispT<T>::add_BeforeSave(Mscorlib_tlb::_EventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("add_BeforeSave"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Mscorlib_tlb::_EventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAModuleDispT<T>::remove_BeforeSave(Mscorlib_tlb::_EventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("remove_BeforeSave"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Mscorlib_tlb::_EventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAModuleDispT<T>::add_AfterSave(Mscorlib_tlb::_EventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("add_AfterSave"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Mscorlib_tlb::_EventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAModuleDispT<T>::remove_AfterSave(Mscorlib_tlb::_EventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("remove_AfterSave"), DISPID(DISPID_UNKNOWN/*[1610743811]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Mscorlib_tlb::_EventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAModuleDispT<T>::add_Closed(Mscorlib_tlb::_EventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("add_Closed"), DISPID(DISPID_UNKNOWN/*[1610743812]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Mscorlib_tlb::_EventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAModuleDispT<T>::remove_Closed(Mscorlib_tlb::_EventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("remove_Closed"), DISPID(DISPID_UNKNOWN/*[1610743813]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Mscorlib_tlb::_EventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAModuleDispT<T>::add_Modified(Mscorlib_tlb::_EventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("add_Modified"), DISPID(DISPID_UNKNOWN/*[1610743814]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Mscorlib_tlb::_EventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAModuleDispT<T>::remove_Modified(Mscorlib_tlb::_EventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("remove_Modified"), DISPID(DISPID_UNKNOWN/*[1610743815]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Mscorlib_tlb::_EventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAModuleDispT<T>::add_Renamed(Mscorlib_tlb::_EventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("add_Renamed"), DISPID(DISPID_UNKNOWN/*[1610743816]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Mscorlib_tlb::_EventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAModuleDispT<T>::remove_Renamed(Mscorlib_tlb::_EventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("remove_Renamed"), DISPID(DISPID_UNKNOWN/*[1610743817]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Mscorlib_tlb::_EventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAModuleDispT<T>::Close(VARIANT_BOOL forceClosed/*[in]*/, VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Close"), DISPID(DISPID_UNKNOWN/*[1610743818]*/));
  TAutoArgs<1> _args;
  _args[1] = forceClosed /*[VT_BOOL:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAModuleDispT<T>::Close(VARIANT_BOOL forceClosed/*[in]*/)
{
  VARIANT_BOOL pRetVal;
  this->Close(forceClosed, (VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAModuleDispT<T>::Save(VARIANT_BOOL changeName/*[in]*/, VARIANT_BOOL forceSave/*[in]*/, 
                         VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Save"), DISPID(DISPID_UNKNOWN/*[1610743819]*/));
  TAutoArgs<2> _args;
  _args[1] = changeName /*[VT_BOOL:0]*/;
  _args[2] = forceSave /*[VT_BOOL:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAModuleDispT<T>::Save(VARIANT_BOOL changeName/*[in]*/, VARIANT_BOOL forceSave/*[in]*/)
{
  VARIANT_BOOL pRetVal;
  this->Save(changeName, forceSave, (VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAModuleDispT<T>::get_fileName(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("fileName"), DISPID(DISPID_UNKNOWN/*[1610743820]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAModuleDispT<T>::get_fileName(void)
{
  BSTR pRetVal;
  this->get_fileName((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAModuleDispT<T>::set_fileName(BSTR pRetVal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("fileName"), DISPID(1610743820));
  TAutoArgs<1> _args;
  _args[1] = pRetVal /*[VT_BSTR:0]*/;
  return OlePropertyPut(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAModuleDispT<T>::get_fileSystem(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("fileSystem"), DISPID(DISPID_UNKNOWN/*[1610743822]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAModuleDispT<T>::get_fileSystem(void)
{
  BSTR pRetVal;
  this->get_fileSystem((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAModuleDispT<T>::set_fileSystem(BSTR pRetVal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("fileSystem"), DISPID(1610743822));
  TAutoArgs<1> _args;
  _args[1] = pRetVal /*[VT_BSTR:0]*/;
  return OlePropertyPut(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAModuleDispT<T>::get_ModuleFileCount(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("ModuleFileCount"), DISPID(DISPID_UNKNOWN/*[1610743824]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> long __fastcall
IOTAModuleDispT<T>::get_ModuleFileCount(void)
{
  long pRetVal;
  this->get_ModuleFileCount((long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAModuleDispT<T>::ModuleFileEditors(long index/*[in]*/, 
                                      Borland_studio_toolsapi_tlb::IOTAEditor** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("ModuleFileEditors"), DISPID(DISPID_UNKNOWN/*[1610743825]*/));
  TAutoArgs<1> _args;
  _args[1] = index /*[VT_I4:0]*/;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAEditor**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAEditor* __fastcall
IOTAModuleDispT<T>::ModuleFileEditors(long index/*[in]*/)
{
  Borland_studio_toolsapi_tlb::IOTAEditor* pRetVal;
  this->ModuleFileEditors(index, (Borland_studio_toolsapi_tlb::IOTAEditor**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAModuleDispT<T>::get_CurrentEditor(Borland_studio_toolsapi_tlb::IOTAEditor** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("CurrentEditor"), DISPID(DISPID_UNKNOWN/*[1610743826]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAEditor**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAEditorPtr __fastcall
IOTAModuleDispT<T>::get_CurrentEditor(void)
{
  Borland_studio_toolsapi_tlb::IOTAEditorPtr pRetVal;
  this->get_CurrentEditor(&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAModuleDispT<T>::MarkModified()
{
  _TDispID _dispid(*this, OLETEXT("MarkModified"), DISPID(DISPID_UNKNOWN/*[1610743827]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAModuleDispT<T>::get_OwnerModuleCount(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("OwnerModuleCount"), DISPID(DISPID_UNKNOWN/*[1610743828]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> long __fastcall
IOTAModuleDispT<T>::get_OwnerModuleCount(void)
{
  long pRetVal;
  this->get_OwnerModuleCount((long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAModuleDispT<T>::GetOwnerModule(long index/*[in]*/, 
                                   Borland_studio_toolsapi_tlb::IOTAModule** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetOwnerModule"), DISPID(DISPID_UNKNOWN/*[1610743829]*/));
  TAutoArgs<1> _args;
  _args[1] = index /*[VT_I4:0]*/;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAModule**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAModule* __fastcall
IOTAModuleDispT<T>::GetOwnerModule(long index/*[in]*/)
{
  Borland_studio_toolsapi_tlb::IOTAModule* pRetVal;
  this->GetOwnerModule(index, (Borland_studio_toolsapi_tlb::IOTAModule**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAModuleDispT<T>::Show()
{
  _TDispID _dispid(*this, OLETEXT("Show"), DISPID(DISPID_UNKNOWN/*[1610743830]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAModuleDispT<T>::ShowFileName(BSTR fileName/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("ShowFileName"), DISPID(DISPID_UNKNOWN/*[1610743831]*/));
  TAutoArgs<1> _args;
  _args[1] = fileName /*[VT_BSTR:0]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAModuleDispT<T>::add_BeforeRename(Borland_studio_toolsapi_tlb::_RenameNotificationEventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("add_BeforeRename"), DISPID(DISPID_UNKNOWN/*[1610743832]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::_RenameNotificationEventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAModuleDispT<T>::remove_BeforeRename(Borland_studio_toolsapi_tlb::_RenameNotificationEventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("remove_BeforeRename"), DISPID(DISPID_UNKNOWN/*[1610743833]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::_RenameNotificationEventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAModuleDispT<T>::add_AfterRename(Borland_studio_toolsapi_tlb::_RenameNotificationEventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("add_AfterRename"), DISPID(DISPID_UNKNOWN/*[1610743834]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::_RenameNotificationEventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAModuleDispT<T>::remove_AfterRename(Borland_studio_toolsapi_tlb::_RenameNotificationEventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("remove_AfterRename"), DISPID(DISPID_UNKNOWN/*[1610743835]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::_RenameNotificationEventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

// *********************************************************************//
// DispIntf:  IOTADotNetModule
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DD4C2119-66FA-4166-A62A-22E3C9236291}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTADotNetModuleDispT<T>::ShowCode(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("ShowCode"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTADotNetModuleDispT<T>::ShowCode(void)
{
  VARIANT_BOOL pRetVal;
  this->ShowCode((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTADotNetModuleDispT<T>::ShowCode_2(long LineNumber/*[in]*/, VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("ShowCode_2"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<1> _args;
  _args[1] = LineNumber /*[VT_I4:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTADotNetModuleDispT<T>::ShowCode_2(long LineNumber/*[in]*/)
{
  VARIANT_BOOL pRetVal;
  this->ShowCode_2(LineNumber, (VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTADotNetModuleDispT<T>::ShowCode_3(long LineNumber/*[in]*/, long colNumber/*[in]*/, 
                                     VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("ShowCode_3"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<2> _args;
  _args[1] = LineNumber /*[VT_I4:0]*/;
  _args[2] = colNumber /*[VT_I4:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTADotNetModuleDispT<T>::ShowCode_3(long LineNumber/*[in]*/, long colNumber/*[in]*/)
{
  VARIANT_BOOL pRetVal;
  this->ShowCode_3(LineNumber, colNumber, (VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTADotNetModuleDispT<T>::ShowCode_4(long topLineNumber/*[in]*/, long LineNumber/*[in]*/, 
                                     long colNumber/*[in]*/, VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("ShowCode_4"), DISPID(DISPID_UNKNOWN/*[1610743811]*/));
  TAutoArgs<3> _args;
  _args[1] = topLineNumber /*[VT_I4:0]*/;
  _args[2] = LineNumber /*[VT_I4:0]*/;
  _args[3] = colNumber /*[VT_I4:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTADotNetModuleDispT<T>::ShowCode_4(long topLineNumber/*[in]*/, long LineNumber/*[in]*/, 
                                     long colNumber/*[in]*/)
{
  VARIANT_BOOL pRetVal;
  this->ShowCode_4(topLineNumber, LineNumber, colNumber, (VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTADotNetModuleDispT<T>::ShowCodeOffset(long offset/*[in]*/, VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("ShowCodeOffset"), DISPID(DISPID_UNKNOWN/*[1610743812]*/));
  TAutoArgs<1> _args;
  _args[1] = offset /*[VT_I4:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTADotNetModuleDispT<T>::ShowCodeOffset(long offset/*[in]*/)
{
  VARIANT_BOOL pRetVal;
  this->ShowCodeOffset(offset, (VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTADotNetModuleDispT<T>::ShowDesigner(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("ShowDesigner"), DISPID(DISPID_UNKNOWN/*[1610743813]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTADotNetModuleDispT<T>::ShowDesigner(void)
{
  VARIANT_BOOL pRetVal;
  this->ShowDesigner((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTADotNetModuleDispT<T>::get_CodeGeneratorOptions(Borland_studio_toolsapi_tlb::IOTACodeDomGeneratorOptions** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("CodeGeneratorOptions"), DISPID(DISPID_UNKNOWN/*[1610743814]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTACodeDomGeneratorOptions**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTACodeDomGeneratorOptionsPtr __fastcall
IOTADotNetModuleDispT<T>::get_CodeGeneratorOptions(void)
{
  Borland_studio_toolsapi_tlb::IOTACodeDomGeneratorOptionsPtr pRetVal;
  this->get_CodeGeneratorOptions(&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTADotNetModuleDispT<T>::get_RootComponentClassName(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("RootComponentClassName"), DISPID(DISPID_UNKNOWN/*[1610743815]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTADotNetModuleDispT<T>::get_RootComponentClassName(void)
{
  BSTR pRetVal;
  this->get_RootComponentClassName((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTADotNetModuleDispT<T>::set_RootComponentClassName(BSTR pRetVal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("RootComponentClassName"), DISPID(1610743815));
  TAutoArgs<1> _args;
  _args[1] = pRetVal /*[VT_BSTR:0]*/;
  return OlePropertyPut(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTADotNetModuleDispT<T>::get_HasDesignableType(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("HasDesignableType"), DISPID(DISPID_UNKNOWN/*[1610743817]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTADotNetModuleDispT<T>::get_HasDesignableType(void)
{
  VARIANT_BOOL pRetVal;
  this->get_HasDesignableType((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTADotNetModuleDispT<T>::get_DesignerActive(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("DesignerActive"), DISPID(DISPID_UNKNOWN/*[1610743818]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTADotNetModuleDispT<T>::get_DesignerActive(void)
{
  VARIANT_BOOL pRetVal;
  this->get_DesignerActive((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTADotNetModuleDispT<T>::FlushDesigner()
{
  _TDispID _dispid(*this, OLETEXT("FlushDesigner"), DISPID(DISPID_UNKNOWN/*[1610743819]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTADotNetModuleDispT<T>::ReloadDesigner(VARIANT_BOOL synchronous/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("ReloadDesigner"), DISPID(DISPID_UNKNOWN/*[1610743820]*/));
  TAutoArgs<1> _args;
  _args[1] = synchronous /*[VT_BOOL:0]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTADotNetModuleDispT<T>::get_DesignerHost(System_tlb::IDesignerHost** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("DesignerHost"), DISPID(DISPID_UNKNOWN/*[1610743821]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr((LPDISPATCH*)(System_tlb::IDesignerHost**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> System_tlb::IDesignerHostPtr __fastcall
IOTADotNetModuleDispT<T>::get_DesignerHost(void)
{
  System_tlb::IDesignerHostPtr pRetVal;
  this->get_DesignerHost(&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTADotNetModuleDispT<T>::get_MainSourceFileName(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("MainSourceFileName"), DISPID(DISPID_UNKNOWN/*[1610743822]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTADotNetModuleDispT<T>::get_MainSourceFileName(void)
{
  BSTR pRetVal;
  this->get_MainSourceFileName((BSTR*)&pRetVal);
  return pRetVal;
}

// *********************************************************************//
// DispIntf:  IOTADotNetProject
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7E063121-7FCB-406D-AF70-E07D618D88C8}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTADotNetProjectDispT<T>::get_References(Borland_studio_toolsapi_tlb::IOTAReferences** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("References"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAReferences**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAReferencesPtr __fastcall
IOTADotNetProjectDispT<T>::get_References(void)
{
  Borland_studio_toolsapi_tlb::IOTAReferencesPtr pRetVal;
  this->get_References(&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTADotNetProjectDispT<T>::get_LicenseProvider(Borland_studio_toolsapi_tlb::IOTAProjectLicenseProvider** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("LicenseProvider"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAProjectLicenseProvider**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAProjectLicenseProviderPtr __fastcall
IOTADotNetProjectDispT<T>::get_LicenseProvider(void)
{
  Borland_studio_toolsapi_tlb::IOTAProjectLicenseProviderPtr pRetVal;
  this->get_LicenseProvider(&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTADotNetProjectDispT<T>::get_ConfigurationProvider(Borland_studio_toolsapi_tlb::IOTAProjectConfigurationProvider** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("ConfigurationProvider"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAProjectConfigurationProvider**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAProjectConfigurationProviderPtr __fastcall
IOTADotNetProjectDispT<T>::get_ConfigurationProvider(void)
{
  Borland_studio_toolsapi_tlb::IOTAProjectConfigurationProviderPtr pRetVal;
  this->get_ConfigurationProvider(&pRetVal);
  return pRetVal;
}

// *********************************************************************//
// DispIntf:  IOTAReference
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {35BC768A-B1A2-4036-8F9E-8C2D986D831A}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAReferenceDispT<T>::get_CopyLocal(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("CopyLocal"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAReferenceDispT<T>::get_CopyLocal(void)
{
  VARIANT_BOOL pRetVal;
  this->get_CopyLocal((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAReferenceDispT<T>::set_CopyLocal(VARIANT_BOOL pRetVal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("CopyLocal"), DISPID(1610743808));
  TAutoArgs<1> _args;
  _args[1] = pRetVal /*[VT_BOOL:0]*/;
  return OlePropertyPut(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAReferenceDispT<T>::get_Name(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Name"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAReferenceDispT<T>::get_Name(void)
{
  BSTR pRetVal;
  this->get_Name((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAReferenceDispT<T>::get_Path(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Path"), DISPID(DISPID_UNKNOWN/*[1610743811]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAReferenceDispT<T>::get_Path(void)
{
  BSTR pRetVal;
  this->get_Path((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAReferenceDispT<T>::get_Version(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Version"), DISPID(DISPID_UNKNOWN/*[1610743812]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAReferenceDispT<T>::get_Version(void)
{
  BSTR pRetVal;
  this->get_Version((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAReferenceDispT<T>::get_Culture(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Culture"), DISPID(DISPID_UNKNOWN/*[1610743813]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAReferenceDispT<T>::get_Culture(void)
{
  BSTR pRetVal;
  this->get_Culture((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAReferenceDispT<T>::get_ProjectGUID(/*AUTO_PARAM_ERROR(System::TGUID* pRetVal)*/ VARIANT*  pRetVal)
{
  _TDispID _dispid(*this, OLETEXT("ProjectGUID"), DISPID(DISPID_UNKNOWN/*[1610743814]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_USERDEFINED:1]*/, _args, OlePropertyGet(_dispid, _args));
}

// *********************************************************************//
// DispIntf:  IOTAReferences
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6100CC1A-E0D4-4600-A889-5C510E8BC9EA}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAReferencesDispT<T>::AddReference(BSTR fileName/*[in]*/, 
                                     Borland_studio_toolsapi_tlb::IOTAReference** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("AddReference"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<1> _args;
  _args[1] = fileName /*[VT_BSTR:0]*/;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAReference**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAReference* __fastcall
IOTAReferencesDispT<T>::AddReference(BSTR fileName/*[in]*/)
{
  Borland_studio_toolsapi_tlb::IOTAReference* pRetVal;
  this->AddReference(fileName, (Borland_studio_toolsapi_tlb::IOTAReference**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAReferencesDispT<T>::AddComReference(BSTR guid/*[in]*/, BSTR Version/*[in]*/, BSTR lcid/*[in]*/, 
                                        Borland_studio_toolsapi_tlb::IOTAReference** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("AddComReference"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<3> _args;
  _args[1] = guid /*[VT_BSTR:0]*/;
  _args[2] = Version /*[VT_BSTR:0]*/;
  _args[3] = lcid /*[VT_BSTR:0]*/;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAReference**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAReference* __fastcall
IOTAReferencesDispT<T>::AddComReference(BSTR guid/*[in]*/, BSTR Version/*[in]*/, BSTR lcid/*[in]*/)
{
  Borland_studio_toolsapi_tlb::IOTAReference* pRetVal;
  this->AddComReference(guid, Version, lcid, (Borland_studio_toolsapi_tlb::IOTAReference**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAReferencesDispT<T>::AddActiveXReference(BSTR guid/*[in]*/, BSTR Version/*[in]*/, 
                                            BSTR lcid/*[in]*/, 
                                            Borland_studio_toolsapi_tlb::IOTAReference** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("AddActiveXReference"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<3> _args;
  _args[1] = guid /*[VT_BSTR:0]*/;
  _args[2] = Version /*[VT_BSTR:0]*/;
  _args[3] = lcid /*[VT_BSTR:0]*/;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAReference**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAReference* __fastcall
IOTAReferencesDispT<T>::AddActiveXReference(BSTR guid/*[in]*/, BSTR Version/*[in]*/, 
                                            BSTR lcid/*[in]*/)
{
  Borland_studio_toolsapi_tlb::IOTAReference* pRetVal;
  this->AddActiveXReference(guid, Version, lcid, (Borland_studio_toolsapi_tlb::IOTAReference**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAReferencesDispT<T>::AddProjectReference(Borland_studio_toolsapi_tlb::IOTAProject* project/*[in]*/
                                            , 
                                            Borland_studio_toolsapi_tlb::IOTAReference** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("AddProjectReference"), DISPID(DISPID_UNKNOWN/*[1610743811]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTAProject*)project /*[VT_USERDEFINED:1]*/;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAReference**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAReference* __fastcall
IOTAReferencesDispT<T>::AddProjectReference(Borland_studio_toolsapi_tlb::IOTAProject* project/*[in]*/)
{
  Borland_studio_toolsapi_tlb::IOTAReference* pRetVal;
  this->AddProjectReference(project, (Borland_studio_toolsapi_tlb::IOTAReference**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAReferencesDispT<T>::Contains(BSTR fileName/*[in]*/, VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Contains"), DISPID(DISPID_UNKNOWN/*[1610743812]*/));
  TAutoArgs<1> _args;
  _args[1] = fileName /*[VT_BSTR:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAReferencesDispT<T>::Contains(BSTR fileName/*[in]*/)
{
  VARIANT_BOOL pRetVal;
  this->Contains(fileName, (VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAReferencesDispT<T>::RemoveReference(Borland_studio_toolsapi_tlb::IOTAReference* reference/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("RemoveReference"), DISPID(DISPID_UNKNOWN/*[1610743813]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTAReference*)reference /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAReferencesDispT<T>::get_Count(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Count"), DISPID(DISPID_UNKNOWN/*[1610743814]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> long __fastcall
IOTAReferencesDispT<T>::get_Count(void)
{
  long pRetVal;
  this->get_Count((long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAReferencesDispT<T>::get_Item(long index/*[in]*/, 
                                 Borland_studio_toolsapi_tlb::IOTAReference** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Item"), DISPID(0));
  TAutoArgs<1> _args;
  _args[1] = index /*[VT_I4:0]*/;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAReference**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAReference* __fastcall
IOTAReferencesDispT<T>::get_Item(long index/*[in]*/)
{
  Borland_studio_toolsapi_tlb::IOTAReference* pRetVal;
  this->get_Item(index, (Borland_studio_toolsapi_tlb::IOTAReference**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAReferencesDispT<T>::get_project(Borland_studio_toolsapi_tlb::IOTAProject** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("project"), DISPID(DISPID_UNKNOWN/*[1610743816]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAProject**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAProjectPtr __fastcall
IOTAReferencesDispT<T>::get_project(void)
{
  Borland_studio_toolsapi_tlb::IOTAProjectPtr pRetVal;
  this->get_project(&pRetVal);
  return pRetVal;
}

// *********************************************************************//
// DispIntf:  IOTAModuleInfo
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D0787E83-F5A2-467E-A871-FDB50A5925F5}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAModuleInfoDispT<T>::get_Name(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Name"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAModuleInfoDispT<T>::get_Name(void)
{
  BSTR pRetVal;
  this->get_Name((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAModuleInfoDispT<T>::get_fileName(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("fileName"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAModuleInfoDispT<T>::get_fileName(void)
{
  BSTR pRetVal;
  this->get_fileName((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAModuleInfoDispT<T>::get_ModuleType(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("ModuleType"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAModuleInfoDispT<T>::get_ModuleType(void)
{
  BSTR pRetVal;
  this->get_ModuleType((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAModuleInfoDispT<T>::OpenModule(Borland_studio_toolsapi_tlb::IOTAModule** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("OpenModule"), DISPID(DISPID_UNKNOWN/*[1610743811]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAModule**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAModule* __fastcall
IOTAModuleInfoDispT<T>::OpenModule(void)
{
  Borland_studio_toolsapi_tlb::IOTAModule* pRetVal;
  this->OpenModule((Borland_studio_toolsapi_tlb::IOTAModule**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAModuleInfoDispT<T>::get_className(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("className"), DISPID(DISPID_UNKNOWN/*[1610743812]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAModuleInfoDispT<T>::get_className(void)
{
  BSTR pRetVal;
  this->get_className((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAModuleInfoDispT<T>::get_DesignClassName(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("DesignClassName"), DISPID(DISPID_UNKNOWN/*[1610743813]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAModuleInfoDispT<T>::get_DesignClassName(void)
{
  BSTR pRetVal;
  this->get_DesignClassName((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAModuleInfoDispT<T>::get_AdditionalFilesCount(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("AdditionalFilesCount"), DISPID(DISPID_UNKNOWN/*[1610743814]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> long __fastcall
IOTAModuleInfoDispT<T>::get_AdditionalFilesCount(void)
{
  long pRetVal;
  this->get_AdditionalFilesCount((long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAModuleInfoDispT<T>::AdditionalFiles(long index/*[in]*/, BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("AdditionalFiles"), DISPID(DISPID_UNKNOWN/*[1610743815]*/));
  TAutoArgs<1> _args;
  _args[1] = index /*[VT_I4:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAModuleInfoDispT<T>::AdditionalFiles(long index/*[in]*/)
{
  BSTR pRetVal;
  this->AdditionalFiles(index, (BSTR*)&pRetVal);
  return pRetVal;
}

// *********************************************************************//
// DispIntf:  IOTACodeDomProvider
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {35501657-34C3-47A5-BE03-3E8AF77FD860}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTACodeDomProviderDispT<T>::get_CodeDomFile(Borland_studio_toolsapi_tlb::IOTACodeDomFile** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("CodeDomFile"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTACodeDomFile**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTACodeDomFilePtr __fastcall
IOTACodeDomProviderDispT<T>::get_CodeDomFile(void)
{
  Borland_studio_toolsapi_tlb::IOTACodeDomFilePtr pRetVal;
  this->get_CodeDomFile(&pRetVal);
  return pRetVal;
}

// *********************************************************************//
// SmartIntf: TCOM_ModuleAddedRemovedEventArgs
// Interface: _ModuleAddedRemovedEventArgs
// *********************************************************************//
// *********************************************************************//
// DispIntf:  _ModuleAddedRemovedEventArgs
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {9A6F1634-F602-3669-AF26-975C6FC35DD2}
// *********************************************************************//
// *********************************************************************//
// SmartIntf: TCOM_ModuleRenamedEventArgs
// Interface: _ModuleRenamedEventArgs
// *********************************************************************//
// *********************************************************************//
// DispIntf:  _ModuleRenamedEventArgs
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {D5523F8B-9E2E-3D96-8228-D5FBEE2F00DB}
// *********************************************************************//
// *********************************************************************//
// SmartIntf: TCOM_ModuleAddedRemovedEventHandler
// Interface: _ModuleAddedRemovedEventHandler
// *********************************************************************//
// *********************************************************************//
// DispIntf:  _ModuleAddedRemovedEventHandler
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {15165F5A-EEF4-3A67-8EE4-08B2BC7B33CE}
// *********************************************************************//
// *********************************************************************//
// SmartIntf: TCOM_ModuleRenamedEventHandler
// Interface: _ModuleRenamedEventHandler
// *********************************************************************//
// *********************************************************************//
// DispIntf:  _ModuleRenamedEventHandler
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {E7410390-B6CF-3182-9610-BB1207CCA5BC}
// *********************************************************************//
// *********************************************************************//
// DispIntf:  IOTAProject
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {42B792B0-229C-4D53-A9B5-BF9C90630BE0}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAProjectDispT<T>::add_ModuleAdded(Borland_studio_toolsapi_tlb::_ModuleAddedRemovedEventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("add_ModuleAdded"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::_ModuleAddedRemovedEventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAProjectDispT<T>::remove_ModuleAdded(Borland_studio_toolsapi_tlb::_ModuleAddedRemovedEventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("remove_ModuleAdded"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::_ModuleAddedRemovedEventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAProjectDispT<T>::add_ModuleRemoved(Borland_studio_toolsapi_tlb::_ModuleAddedRemovedEventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("add_ModuleRemoved"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::_ModuleAddedRemovedEventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAProjectDispT<T>::remove_ModuleRemoved(Borland_studio_toolsapi_tlb::_ModuleAddedRemovedEventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("remove_ModuleRemoved"), DISPID(DISPID_UNKNOWN/*[1610743811]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::_ModuleAddedRemovedEventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAProjectDispT<T>::add_ModuleRenamed(Borland_studio_toolsapi_tlb::_ModuleRenamedEventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("add_ModuleRenamed"), DISPID(DISPID_UNKNOWN/*[1610743812]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::_ModuleRenamedEventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAProjectDispT<T>::remove_ModuleRenamed(Borland_studio_toolsapi_tlb::_ModuleRenamedEventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("remove_ModuleRenamed"), DISPID(DISPID_UNKNOWN/*[1610743813]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::_ModuleRenamedEventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAProjectDispT<T>::get_ModuleCount(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("ModuleCount"), DISPID(DISPID_UNKNOWN/*[1610743814]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> long __fastcall
IOTAProjectDispT<T>::get_ModuleCount(void)
{
  long pRetVal;
  this->get_ModuleCount((long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAProjectDispT<T>::GetModuleInfo(long index/*[in]*/, 
                                   Borland_studio_toolsapi_tlb::IOTAModuleInfo** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetModuleInfo"), DISPID(DISPID_UNKNOWN/*[1610743815]*/));
  TAutoArgs<1> _args;
  _args[1] = index /*[VT_I4:0]*/;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAModuleInfo**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAModuleInfo* __fastcall
IOTAProjectDispT<T>::GetModuleInfo(long index/*[in]*/)
{
  Borland_studio_toolsapi_tlb::IOTAModuleInfo* pRetVal;
  this->GetModuleInfo(index, (Borland_studio_toolsapi_tlb::IOTAModuleInfo**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAProjectDispT<T>::GetModuleFileName(long index/*[in]*/, BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetModuleFileName"), DISPID(DISPID_UNKNOWN/*[1610743816]*/));
  TAutoArgs<1> _args;
  _args[1] = index /*[VT_I4:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAProjectDispT<T>::GetModuleFileName(long index/*[in]*/)
{
  BSTR pRetVal;
  this->GetModuleFileName(index, (BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAProjectDispT<T>::get_ProjectOptions(Borland_studio_toolsapi_tlb::IOTAProjectOptions** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("ProjectOptions"), DISPID(DISPID_UNKNOWN/*[1610743817]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAProjectOptions**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAProjectOptionsPtr __fastcall
IOTAProjectDispT<T>::get_ProjectOptions(void)
{
  Borland_studio_toolsapi_tlb::IOTAProjectOptionsPtr pRetVal;
  this->get_ProjectOptions(&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAProjectDispT<T>::get_ProjectBuilder(Borland_studio_toolsapi_tlb::IOTAProjectBuilder** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("ProjectBuilder"), DISPID(DISPID_UNKNOWN/*[1610743818]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAProjectBuilder**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAProjectBuilderPtr __fastcall
IOTAProjectDispT<T>::get_ProjectBuilder(void)
{
  Borland_studio_toolsapi_tlb::IOTAProjectBuilderPtr pRetVal;
  this->get_ProjectBuilder(&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAProjectDispT<T>::get_ProjectGUID(/*AUTO_PARAM_ERROR(System::TGUID* pRetVal)*/ VARIANT*  pRetVal)
{
  _TDispID _dispid(*this, OLETEXT("ProjectGUID"), DISPID(DISPID_UNKNOWN/*[1610743819]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_USERDEFINED:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> HRESULT __fastcall
IOTAProjectDispT<T>::AddFile(BSTR fileName/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("AddFile"), DISPID(DISPID_UNKNOWN/*[1610743820]*/));
  TAutoArgs<1> _args;
  _args[1] = fileName /*[VT_BSTR:0]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAProjectDispT<T>::AddFile_2(BSTR fileName/*[in]*/, BSTR parentFile/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("AddFile_2"), DISPID(DISPID_UNKNOWN/*[1610743821]*/));
  TAutoArgs<2> _args;
  _args[1] = fileName /*[VT_BSTR:0]*/;
  _args[2] = parentFile /*[VT_BSTR:0]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAProjectDispT<T>::AddFile_3(BSTR AFileName/*[in]*/, VARIANT_BOOL IsUnitOrForm/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("AddFile_3"), DISPID(DISPID_UNKNOWN/*[1610743822]*/));
  TAutoArgs<2> _args;
  _args[1] = AFileName /*[VT_BSTR:0]*/;
  _args[2] = IsUnitOrForm /*[VT_BOOL:0]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAProjectDispT<T>::RemoveFile(BSTR fileName/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("RemoveFile"), DISPID(DISPID_UNKNOWN/*[1610743823]*/));
  TAutoArgs<1> _args;
  _args[1] = fileName /*[VT_BSTR:0]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAProjectDispT<T>::FileInProject(BSTR fileName/*[in]*/, VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("FileInProject"), DISPID(DISPID_UNKNOWN/*[1610743824]*/));
  TAutoArgs<1> _args;
  _args[1] = fileName /*[VT_BSTR:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAProjectDispT<T>::FileInProject(BSTR fileName/*[in]*/)
{
  VARIANT_BOOL pRetVal;
  this->FileInProject(fileName, (VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAProjectDispT<T>::Activate()
{
  _TDispID _dispid(*this, OLETEXT("Activate"), DISPID(DISPID_UNKNOWN/*[1610743825]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAProjectDispT<T>::get_personality(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("personality"), DISPID(DISPID_UNKNOWN/*[1610743826]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAProjectDispT<T>::get_personality(void)
{
  BSTR pRetVal;
  this->get_personality((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAProjectDispT<T>::Rename(BSTR OldFileName/*[in]*/, BSTR NewFileName/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Rename"), DISPID(DISPID_UNKNOWN/*[1610743827]*/));
  TAutoArgs<2> _args;
  _args[1] = OldFileName /*[VT_BSTR:0]*/;
  _args[2] = NewFileName /*[VT_BSTR:0]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAProjectDispT<T>::get_CurrentConfiguration(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("CurrentConfiguration"), DISPID(DISPID_UNKNOWN/*[1610743828]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAProjectDispT<T>::get_CurrentConfiguration(void)
{
  BSTR pRetVal;
  this->get_CurrentConfiguration((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAProjectDispT<T>::get_CurrentPlatform(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("CurrentPlatform"), DISPID(DISPID_UNKNOWN/*[1610743829]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAProjectDispT<T>::get_CurrentPlatform(void)
{
  BSTR pRetVal;
  this->get_CurrentPlatform((BSTR*)&pRetVal);
  return pRetVal;
}

// *********************************************************************//
// DispIntf:  IOTAProjectMainSource
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0A4619FA-DE5E-4A25-A56F-C3D3DE1EA293}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAProjectMainSourceDispT<T>::get_MainSourceName(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("MainSourceName"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAProjectMainSourceDispT<T>::get_MainSourceName(void)
{
  BSTR pRetVal;
  this->get_MainSourceName((BSTR*)&pRetVal);
  return pRetVal;
}

// *********************************************************************//
// DispIntf:  IOTAProjectLicenseProvider
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {637694C4-B01F-48F5-A06C-FC5FDF9F0951}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAProjectLicenseProviderDispT<T>::AddLicensedControl(BSTR LicensedControl/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("AddLicensedControl"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<1> _args;
  _args[1] = LicensedControl /*[VT_BSTR:0]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAProjectLicenseProviderDispT<T>::Clear()
{
  _TDispID _dispid(*this, OLETEXT("Clear"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAProjectLicenseProviderDispT<T>::get_LicensedControlCount(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("LicensedControlCount"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> long __fastcall
IOTAProjectLicenseProviderDispT<T>::get_LicensedControlCount(void)
{
  long pRetVal;
  this->get_LicensedControlCount((long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAProjectLicenseProviderDispT<T>::get_Item(long index/*[in]*/, BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Item"), DISPID(0));
  TAutoArgs<1> _args;
  _args[1] = index /*[VT_I4:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAProjectLicenseProviderDispT<T>::get_Item(long index/*[in]*/)
{
  BSTR pRetVal;
  this->get_Item(index, (BSTR*)&pRetVal);
  return pRetVal;
}

// *********************************************************************//
// DispIntf:  IOTAProjectConfigurationProvider
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {40A6AFE4-E560-404A-AE84-586528C8D931}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAProjectConfigurationProviderDispT<T>::ReadProjectConfigData(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("ReadProjectConfigData"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAProjectConfigurationProviderDispT<T>::ReadProjectConfigData(void)
{
  BSTR pRetVal;
  this->ReadProjectConfigData((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAProjectConfigurationProviderDispT<T>::WriteProjectConfigData(BSTR Data/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("WriteProjectConfigData"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<1> _args;
  _args[1] = Data /*[VT_BSTR:0]*/;
  return OleFunction(_dispid, _args);
}

// *********************************************************************//
// DispIntf:  IOTAProjectBuilder
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {14D562B2-A1B4-41BC-B6A7-65878CE44DB6}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAProjectBuilderDispT<T>::get_ShouldBuild(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("ShouldBuild"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAProjectBuilderDispT<T>::get_ShouldBuild(void)
{
  VARIANT_BOOL pRetVal;
  this->get_ShouldBuild((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAProjectBuilderDispT<T>::BuildProject(Borland_studio_toolsapi_tlb::OTACompileMode CompileMode/*[in]*/
                                         , VARIANT_BOOL Wait/*[in]*/, 
                                         VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("BuildProject"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<2> _args;
  _args[1] = (int)CompileMode /*[VT_USERDEFINED:0]*/;
  _args[2] = Wait /*[VT_BOOL:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAProjectBuilderDispT<T>::BuildProject(Borland_studio_toolsapi_tlb::OTACompileMode CompileMode/*[in]*/, 
                                         VARIANT_BOOL Wait/*[in]*/)
{
  VARIANT_BOOL pRetVal;
  this->BuildProject(CompileMode, Wait, (VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAProjectBuilderDispT<T>::BuildProject_2(Borland_studio_toolsapi_tlb::OTACompileMode CompileMode/*[in]*/
                                           , VARIANT_BOOL Wait/*[in]*/, 
                                           VARIANT_BOOL ClearMessages/*[in]*/, 
                                           VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("BuildProject_2"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<3> _args;
  _args[1] = (int)CompileMode /*[VT_USERDEFINED:0]*/;
  _args[2] = Wait /*[VT_BOOL:0]*/;
  _args[3] = ClearMessages /*[VT_BOOL:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAProjectBuilderDispT<T>::BuildProject_2(Borland_studio_toolsapi_tlb::OTACompileMode CompileMode/*[in]*/, 
                                           VARIANT_BOOL Wait/*[in]*/, 
                                           VARIANT_BOOL ClearMessages/*[in]*/)
{
  VARIANT_BOOL pRetVal;
  this->BuildProject_2(CompileMode, Wait, ClearMessages, (VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

// *********************************************************************//
// DispIntf:  IOTAOptionNames
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2F0ACB55-2F39-483F-9046-1037790576AE}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAOptionNamesDispT<T>::get_Count(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Count"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> long __fastcall
IOTAOptionNamesDispT<T>::get_Count(void)
{
  long pRetVal;
  this->get_Count((long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAOptionNamesDispT<T>::GetName(long index/*[in]*/, BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetName"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<1> _args;
  _args[1] = index /*[VT_I4:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAOptionNamesDispT<T>::GetName(long index/*[in]*/)
{
  BSTR pRetVal;
  this->GetName(index, (BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAOptionNamesDispT<T>::GetType(long index/*[in]*/, 
                                 Borland_studio_toolsapi_tlb::OTATypeKind* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetType"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<1> _args;
  _args[1] = index /*[VT_I4:0]*/;
  return OutRetValSetterPtr((int*)pRetVal /*[VT_USERDEFINED:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::OTATypeKind __fastcall
IOTAOptionNamesDispT<T>::GetType(long index/*[in]*/)
{
  Borland_studio_toolsapi_tlb::OTATypeKind pRetVal;
  this->GetType(index, (Borland_studio_toolsapi_tlb::OTATypeKind*)&pRetVal);
  return pRetVal;
}

// *********************************************************************//
// DispIntf:  IOTAOptions
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BD8042B4-A87C-4816-A396-5B291C83F225}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAOptionsDispT<T>::EditOptions()
{
  _TDispID _dispid(*this, OLETEXT("EditOptions"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAOptionsDispT<T>::GetOptionValue(BSTR ValueName/*[in]*/, VARIANT* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetOptionValue"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<1> _args;
  _args[1] = ValueName /*[VT_BSTR:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_VARIANT:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT __fastcall
IOTAOptionsDispT<T>::GetOptionValue(BSTR ValueName/*[in]*/)
{
  VARIANT pRetVal;
  this->GetOptionValue(ValueName, (VARIANT*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAOptionsDispT<T>::SetOptionValue(BSTR ValueName/*[in]*/, VARIANT value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("SetOptionValue"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<2> _args;
  _args[1] = ValueName /*[VT_BSTR:0]*/;
  _args[2] = value /*[VT_VARIANT:0]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAOptionsDispT<T>::get_OptionNames(Borland_studio_toolsapi_tlb::IOTAOptionNames** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("OptionNames"), DISPID(DISPID_UNKNOWN/*[1610743811]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAOptionNames**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAOptionNamesPtr __fastcall
IOTAOptionsDispT<T>::get_OptionNames(void)
{
  Borland_studio_toolsapi_tlb::IOTAOptionNamesPtr pRetVal;
  this->get_OptionNames(&pRetVal);
  return pRetVal;
}

// *********************************************************************//
// DispIntf:  IOTAProjectOptions
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {41136635-A785-45F0-8DF3-3EB768DC0F22}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAProjectOptionsDispT<T>::get_ModifiedState(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("ModifiedState"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAProjectOptionsDispT<T>::get_ModifiedState(void)
{
  VARIANT_BOOL pRetVal;
  this->get_ModifiedState((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAProjectOptionsDispT<T>::set_ModifiedState(VARIANT_BOOL pRetVal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("ModifiedState"), DISPID(1610743808));
  TAutoArgs<1> _args;
  _args[1] = pRetVal /*[VT_BOOL:0]*/;
  return OlePropertyPut(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAProjectOptionsDispT<T>::get_TargetName(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("TargetName"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAProjectOptionsDispT<T>::get_TargetName(void)
{
  BSTR pRetVal;
  this->get_TargetName((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAProjectOptionsDispT<T>::get_Configurations(Borland_studio_toolsapi_tlb::IOTAProjectOptionsConfigurations** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Configurations"), DISPID(DISPID_UNKNOWN/*[1610743811]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAProjectOptionsConfigurations**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAProjectOptionsConfigurationsPtr __fastcall
IOTAProjectOptionsDispT<T>::get_Configurations(void)
{
  Borland_studio_toolsapi_tlb::IOTAProjectOptionsConfigurationsPtr pRetVal;
  this->get_Configurations(&pRetVal);
  return pRetVal;
}

// *********************************************************************//
// DispIntf:  IOTABuildConfiguration
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6C5B5235-01D0-48FD-B410-EF50F064687F}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTABuildConfigurationDispT<T>::get_Name(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Name"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTABuildConfigurationDispT<T>::get_Name(void)
{
  BSTR pRetVal;
  this->get_Name((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTABuildConfigurationDispT<T>::set_Name(BSTR pRetVal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Name"), DISPID(1610743808));
  TAutoArgs<1> _args;
  _args[1] = pRetVal /*[VT_BSTR:0]*/;
  return OlePropertyPut(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTABuildConfigurationDispT<T>::get_Key(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Key"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTABuildConfigurationDispT<T>::get_Key(void)
{
  BSTR pRetVal;
  this->get_Key((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTABuildConfigurationDispT<T>::get_parent(Borland_studio_toolsapi_tlb::IOTABuildConfiguration** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("parent"), DISPID(DISPID_UNKNOWN/*[1610743811]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTABuildConfiguration**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTABuildConfigurationPtr __fastcall
IOTABuildConfigurationDispT<T>::get_parent(void)
{
  Borland_studio_toolsapi_tlb::IOTABuildConfigurationPtr pRetVal;
  this->get_parent(&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTABuildConfigurationDispT<T>::get_Count(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Count"), DISPID(DISPID_UNKNOWN/*[1610743812]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> long __fastcall
IOTABuildConfigurationDispT<T>::get_Count(void)
{
  long pRetVal;
  this->get_Count((long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTABuildConfigurationDispT<T>::GetChild(long index/*[in]*/, 
                                         Borland_studio_toolsapi_tlb::IOTABuildConfiguration** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetChild"), DISPID(DISPID_UNKNOWN/*[1610743813]*/));
  TAutoArgs<1> _args;
  _args[1] = index /*[VT_I4:0]*/;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTABuildConfiguration**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTABuildConfiguration* __fastcall
IOTABuildConfigurationDispT<T>::GetChild(long index/*[in]*/)
{
  Borland_studio_toolsapi_tlb::IOTABuildConfiguration* pRetVal;
  this->GetChild(index, (Borland_studio_toolsapi_tlb::IOTABuildConfiguration**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTABuildConfigurationDispT<T>::get_PropertyCount(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("PropertyCount"), DISPID(DISPID_UNKNOWN/*[1610743814]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> long __fastcall
IOTABuildConfigurationDispT<T>::get_PropertyCount(void)
{
  long pRetVal;
  this->get_PropertyCount((long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTABuildConfigurationDispT<T>::GetPropertyName(long index/*[in]*/, BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetPropertyName"), DISPID(DISPID_UNKNOWN/*[1610743815]*/));
  TAutoArgs<1> _args;
  _args[1] = index /*[VT_I4:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTABuildConfigurationDispT<T>::GetPropertyName(long index/*[in]*/)
{
  BSTR pRetVal;
  this->GetPropertyName(index, (BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTABuildConfigurationDispT<T>::get_IsEmpty(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("IsEmpty"), DISPID(DISPID_UNKNOWN/*[1610743816]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTABuildConfigurationDispT<T>::get_IsEmpty(void)
{
  VARIANT_BOOL pRetVal;
  this->get_IsEmpty((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTABuildConfigurationDispT<T>::get_IsModified(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("IsModified"), DISPID(DISPID_UNKNOWN/*[1610743817]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTABuildConfigurationDispT<T>::get_IsModified(void)
{
  VARIANT_BOOL pRetVal;
  this->get_IsModified((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTABuildConfigurationDispT<T>::Remove(BSTR PropName/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Remove"), DISPID(DISPID_UNKNOWN/*[1610743818]*/));
  TAutoArgs<1> _args;
  _args[1] = PropName /*[VT_BSTR:0]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTABuildConfigurationDispT<T>::Clear()
{
  _TDispID _dispid(*this, OLETEXT("Clear"), DISPID(DISPID_UNKNOWN/*[1610743819]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTABuildConfigurationDispT<T>::PropertyExists(BSTR PropName/*[in]*/, 
                                               VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("PropertyExists"), DISPID(DISPID_UNKNOWN/*[1610743820]*/));
  TAutoArgs<1> _args;
  _args[1] = PropName /*[VT_BSTR:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTABuildConfigurationDispT<T>::PropertyExists(BSTR PropName/*[in]*/)
{
  VARIANT_BOOL pRetVal;
  this->PropertyExists(PropName, (VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTABuildConfigurationDispT<T>::GetValue(BSTR PropName/*[in]*/, BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetValue"), DISPID(DISPID_UNKNOWN/*[1610743821]*/));
  TAutoArgs<1> _args;
  _args[1] = PropName /*[VT_BSTR:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTABuildConfigurationDispT<T>::GetValue(BSTR PropName/*[in]*/)
{
  BSTR pRetVal;
  this->GetValue(PropName, (BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTABuildConfigurationDispT<T>::GetValue_2(BSTR PropName/*[in]*/, 
                                           VARIANT_BOOL IncludeInheritedValues/*[in]*/, 
                                           BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetValue_2"), DISPID(DISPID_UNKNOWN/*[1610743822]*/));
  TAutoArgs<2> _args;
  _args[1] = PropName /*[VT_BSTR:0]*/;
  _args[2] = IncludeInheritedValues /*[VT_BOOL:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTABuildConfigurationDispT<T>::GetValue_2(BSTR PropName/*[in]*/, 
                                           VARIANT_BOOL IncludeInheritedValues/*[in]*/)
{
  BSTR pRetVal;
  this->GetValue_2(PropName, IncludeInheritedValues, (BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTABuildConfigurationDispT<T>::SetValue(BSTR PropName/*[in]*/, BSTR value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("SetValue"), DISPID(DISPID_UNKNOWN/*[1610743823]*/));
  TAutoArgs<2> _args;
  _args[1] = PropName /*[VT_BSTR:0]*/;
  _args[2] = value /*[VT_BSTR:0]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTABuildConfigurationDispT<T>::GetBoolean(BSTR PropName/*[in]*/, 
                                           VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetBoolean"), DISPID(DISPID_UNKNOWN/*[1610743824]*/));
  TAutoArgs<1> _args;
  _args[1] = PropName /*[VT_BSTR:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTABuildConfigurationDispT<T>::GetBoolean(BSTR PropName/*[in]*/)
{
  VARIANT_BOOL pRetVal;
  this->GetBoolean(PropName, (VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTABuildConfigurationDispT<T>::GetBoolean_2(BSTR PropName/*[in]*/, 
                                             VARIANT_BOOL IncludeInheritedValues/*[in]*/, 
                                             VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetBoolean_2"), DISPID(DISPID_UNKNOWN/*[1610743825]*/));
  TAutoArgs<2> _args;
  _args[1] = PropName /*[VT_BSTR:0]*/;
  _args[2] = IncludeInheritedValues /*[VT_BOOL:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTABuildConfigurationDispT<T>::GetBoolean_2(BSTR PropName/*[in]*/, 
                                             VARIANT_BOOL IncludeInheritedValues/*[in]*/)
{
  VARIANT_BOOL pRetVal;
  this->GetBoolean_2(PropName, IncludeInheritedValues, (VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTABuildConfigurationDispT<T>::SetBoolean(BSTR PropName/*[in]*/, VARIANT_BOOL value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("SetBoolean"), DISPID(DISPID_UNKNOWN/*[1610743826]*/));
  TAutoArgs<2> _args;
  _args[1] = PropName /*[VT_BSTR:0]*/;
  _args[2] = value /*[VT_BOOL:0]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTABuildConfigurationDispT<T>::GetInteger(BSTR PropName/*[in]*/, long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetInteger"), DISPID(DISPID_UNKNOWN/*[1610743827]*/));
  TAutoArgs<1> _args;
  _args[1] = PropName /*[VT_BSTR:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> long __fastcall
IOTABuildConfigurationDispT<T>::GetInteger(BSTR PropName/*[in]*/)
{
  long pRetVal;
  this->GetInteger(PropName, (long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTABuildConfigurationDispT<T>::GetInteger_2(BSTR PropName/*[in]*/, 
                                             VARIANT_BOOL IncludeInheritedValues/*[in]*/, 
                                             long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetInteger_2"), DISPID(DISPID_UNKNOWN/*[1610743828]*/));
  TAutoArgs<2> _args;
  _args[1] = PropName /*[VT_BSTR:0]*/;
  _args[2] = IncludeInheritedValues /*[VT_BOOL:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> long __fastcall
IOTABuildConfigurationDispT<T>::GetInteger_2(BSTR PropName/*[in]*/, 
                                             VARIANT_BOOL IncludeInheritedValues/*[in]*/)
{
  long pRetVal;
  this->GetInteger_2(PropName, IncludeInheritedValues, (long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTABuildConfigurationDispT<T>::SetInteger(BSTR PropName/*[in]*/, long value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("SetInteger"), DISPID(DISPID_UNKNOWN/*[1610743829]*/));
  TAutoArgs<2> _args;
  _args[1] = PropName /*[VT_BSTR:0]*/;
  _args[2] = value /*[VT_I4:0]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTABuildConfigurationDispT<T>::InheritedValue(BSTR PropName/*[in]*/, BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("InheritedValue"), DISPID(DISPID_UNKNOWN/*[1610743830]*/));
  TAutoArgs<1> _args;
  _args[1] = PropName /*[VT_BSTR:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTABuildConfigurationDispT<T>::InheritedValue(BSTR PropName/*[in]*/)
{
  BSTR pRetVal;
  this->InheritedValue(PropName, (BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTABuildConfigurationDispT<T>::GetMerged(BSTR PropName/*[in]*/, 
                                          VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetMerged"), DISPID(DISPID_UNKNOWN/*[1610743831]*/));
  TAutoArgs<1> _args;
  _args[1] = PropName /*[VT_BSTR:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTABuildConfigurationDispT<T>::GetMerged(BSTR PropName/*[in]*/)
{
  VARIANT_BOOL pRetVal;
  this->GetMerged(PropName, (VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTABuildConfigurationDispT<T>::SetMerged(BSTR PropName/*[in]*/, VARIANT_BOOL value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("SetMerged"), DISPID(DISPID_UNKNOWN/*[1610743832]*/));
  TAutoArgs<2> _args;
  _args[1] = PropName /*[VT_BSTR:0]*/;
  _args[2] = value /*[VT_BOOL:0]*/;
  return OleFunction(_dispid, _args);
}

// *********************************************************************//
// DispIntf:  IOTAProjectOptionsConfigurations
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5A6F8603-F29B-461C-9EBB-D40DDDB7EADE}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAProjectOptionsConfigurationsDispT<T>::get_ConfigurationCount(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("ConfigurationCount"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> long __fastcall
IOTAProjectOptionsConfigurationsDispT<T>::get_ConfigurationCount(void)
{
  long pRetVal;
  this->get_ConfigurationCount((long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAProjectOptionsConfigurationsDispT<T>::GetConfiguration(long index/*[in]*/, 
                                                           Borland_studio_toolsapi_tlb::IOTABuildConfiguration** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetConfiguration"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<1> _args;
  _args[1] = index /*[VT_I4:0]*/;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTABuildConfiguration**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTABuildConfiguration* __fastcall
IOTAProjectOptionsConfigurationsDispT<T>::GetConfiguration(long index/*[in]*/)
{
  Borland_studio_toolsapi_tlb::IOTABuildConfiguration* pRetVal;
  this->GetConfiguration(index, (Borland_studio_toolsapi_tlb::IOTABuildConfiguration**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAProjectOptionsConfigurationsDispT<T>::get_ActiveConfiguration(Borland_studio_toolsapi_tlb::IOTABuildConfiguration** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("ActiveConfiguration"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTABuildConfiguration**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTABuildConfigurationPtr __fastcall
IOTAProjectOptionsConfigurationsDispT<T>::get_ActiveConfiguration(void)
{
  Borland_studio_toolsapi_tlb::IOTABuildConfigurationPtr pRetVal;
  this->get_ActiveConfiguration(&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAProjectOptionsConfigurationsDispT<T>::_set_ActiveConfiguration(Borland_studio_toolsapi_tlb::IOTABuildConfiguration* pRetVal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("ActiveConfiguration"), DISPID(1610743810));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTABuildConfiguration*)pRetVal /*[VT_USERDEFINED:1]*/;
  return OlePropertyPut(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAProjectOptionsConfigurationsDispT<T>::get_BaseConfiguration(Borland_studio_toolsapi_tlb::IOTABuildConfiguration** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("BaseConfiguration"), DISPID(DISPID_UNKNOWN/*[1610743812]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTABuildConfiguration**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTABuildConfigurationPtr __fastcall
IOTAProjectOptionsConfigurationsDispT<T>::get_BaseConfiguration(void)
{
  Borland_studio_toolsapi_tlb::IOTABuildConfigurationPtr pRetVal;
  this->get_BaseConfiguration(&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAProjectOptionsConfigurationsDispT<T>::AddConfiguration(BSTR Name/*[in]*/, 
                                                           Borland_studio_toolsapi_tlb::IOTABuildConfiguration* parent/*[in]*/
                                                           , 
                                                           Borland_studio_toolsapi_tlb::IOTABuildConfiguration** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("AddConfiguration"), DISPID(DISPID_UNKNOWN/*[1610743813]*/));
  TAutoArgs<2> _args;
  _args[1] = Name /*[VT_BSTR:0]*/;
  _args[2] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTABuildConfiguration*)parent /*[VT_USERDEFINED:1]*/;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTABuildConfiguration**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTABuildConfiguration* __fastcall
IOTAProjectOptionsConfigurationsDispT<T>::AddConfiguration(BSTR Name/*[in]*/, 
                                                           Borland_studio_toolsapi_tlb::IOTABuildConfiguration* parent/*[in]*/)
{
  Borland_studio_toolsapi_tlb::IOTABuildConfiguration* pRetVal;
  this->AddConfiguration(Name, parent, (Borland_studio_toolsapi_tlb::IOTABuildConfiguration**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAProjectOptionsConfigurationsDispT<T>::RemoveConfiguration(BSTR Name/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("RemoveConfiguration"), DISPID(DISPID_UNKNOWN/*[1610743814]*/));
  TAutoArgs<1> _args;
  _args[1] = Name /*[VT_BSTR:0]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAProjectOptionsConfigurationsDispT<T>::get_CurrentConfiguration(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("CurrentConfiguration"), DISPID(DISPID_UNKNOWN/*[1610743815]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAProjectOptionsConfigurationsDispT<T>::get_CurrentConfiguration(void)
{
  BSTR pRetVal;
  this->get_CurrentConfiguration((BSTR*)&pRetVal);
  return pRetVal;
}

// *********************************************************************//
// DispIntf:  IOTAProjectGroup
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B2C9049A-F958-4410-83DB-FE50C1D53A85}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAProjectGroupDispT<T>::AddNewProject()
{
  _TDispID _dispid(*this, OLETEXT("AddNewProject"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAProjectGroupDispT<T>::AddExistingProject()
{
  _TDispID _dispid(*this, OLETEXT("AddExistingProject"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAProjectGroupDispT<T>::RemoveProject(Borland_studio_toolsapi_tlb::IOTAProject* project/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("RemoveProject"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTAProject*)project /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAProjectGroupDispT<T>::get_ActiveProject(Borland_studio_toolsapi_tlb::IOTAProject** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("ActiveProject"), DISPID(DISPID_UNKNOWN/*[1610743811]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAProject**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAProjectPtr __fastcall
IOTAProjectGroupDispT<T>::get_ActiveProject(void)
{
  Borland_studio_toolsapi_tlb::IOTAProjectPtr pRetVal;
  this->get_ActiveProject(&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAProjectGroupDispT<T>::_set_ActiveProject(Borland_studio_toolsapi_tlb::IOTAProject* pRetVal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("ActiveProject"), DISPID(1610743811));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTAProject*)pRetVal /*[VT_USERDEFINED:1]*/;
  return OlePropertyPut(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAProjectGroupDispT<T>::get_ProjectCount(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("ProjectCount"), DISPID(DISPID_UNKNOWN/*[1610743813]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> long __fastcall
IOTAProjectGroupDispT<T>::get_ProjectCount(void)
{
  long pRetVal;
  this->get_ProjectCount((long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAProjectGroupDispT<T>::get_Item(long index/*[in]*/, 
                                   Borland_studio_toolsapi_tlb::IOTAProject** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Item"), DISPID(0));
  TAutoArgs<1> _args;
  _args[1] = index /*[VT_I4:0]*/;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAProject**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAProject* __fastcall
IOTAProjectGroupDispT<T>::get_Item(long index/*[in]*/)
{
  Borland_studio_toolsapi_tlb::IOTAProject* pRetVal;
  this->get_Item(index, (Borland_studio_toolsapi_tlb::IOTAProject**)&pRetVal);
  return pRetVal;
}

// *********************************************************************//
// DispIntf:  IOTAProjectDependenciesList
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {86002707-98C7-4791-9FE5-547C57AA6821}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAProjectDependenciesListDispT<T>::AddProject(Borland_studio_toolsapi_tlb::IOTAProject* AProject/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("AddProject"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTAProject*)AProject /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAProjectDependenciesListDispT<T>::get_ProjectCount(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("ProjectCount"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> long __fastcall
IOTAProjectDependenciesListDispT<T>::get_ProjectCount(void)
{
  long pRetVal;
  this->get_ProjectCount((long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAProjectDependenciesListDispT<T>::get_Item(long index/*[in]*/, 
                                              Borland_studio_toolsapi_tlb::IOTAProject** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Item"), DISPID(0));
  TAutoArgs<1> _args;
  _args[1] = index /*[VT_I4:0]*/;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAProject**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAProject* __fastcall
IOTAProjectDependenciesListDispT<T>::get_Item(long index/*[in]*/)
{
  Borland_studio_toolsapi_tlb::IOTAProject* pRetVal;
  this->get_Item(index, (Borland_studio_toolsapi_tlb::IOTAProject**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAProjectDependenciesListDispT<T>::RemoveProject(Borland_studio_toolsapi_tlb::IOTAProject* AProject/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("RemoveProject"), DISPID(DISPID_UNKNOWN/*[1610743811]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTAProject*)AProject /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

// *********************************************************************//
// DispIntf:  IOTAProjectGroupProjectDependencies
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {54370E82-8D3E-454A-A854-172C41E261DA}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAProjectGroupProjectDependenciesDispT<T>::GetEmptyProjectDependenciesList(Borland_studio_toolsapi_tlb::IOTAProjectDependenciesList** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetEmptyProjectDependenciesList"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAProjectDependenciesList**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAProjectDependenciesList* __fastcall
IOTAProjectGroupProjectDependenciesDispT<T>::GetEmptyProjectDependenciesList(void)
{
  Borland_studio_toolsapi_tlb::IOTAProjectDependenciesList* pRetVal;
  this->GetEmptyProjectDependenciesList((Borland_studio_toolsapi_tlb::IOTAProjectDependenciesList**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAProjectGroupProjectDependenciesDispT<T>::GetProjectDependencies(Borland_studio_toolsapi_tlb::IOTAProject* AProject/*[in]*/
                                                                    , 
                                                                    Borland_studio_toolsapi_tlb::IOTAProjectDependenciesList** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetProjectDependencies"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTAProject*)AProject /*[VT_USERDEFINED:1]*/;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAProjectDependenciesList**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAProjectDependenciesList* __fastcall
IOTAProjectGroupProjectDependenciesDispT<T>::GetProjectDependencies(Borland_studio_toolsapi_tlb::IOTAProject* AProject/*[in]*/)
{
  Borland_studio_toolsapi_tlb::IOTAProjectDependenciesList* pRetVal;
  this->GetProjectDependencies(AProject, (Borland_studio_toolsapi_tlb::IOTAProjectDependenciesList**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAProjectGroupProjectDependenciesDispT<T>::GetValidProjectDependencies(Borland_studio_toolsapi_tlb::IOTAProject* AProject/*[in]*/
                                                                         , 
                                                                         Borland_studio_toolsapi_tlb::IOTAProjectDependenciesList** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetValidProjectDependencies"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTAProject*)AProject /*[VT_USERDEFINED:1]*/;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAProjectDependenciesList**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAProjectDependenciesList* __fastcall
IOTAProjectGroupProjectDependenciesDispT<T>::GetValidProjectDependencies(Borland_studio_toolsapi_tlb::IOTAProject* AProject/*[in]*/)
{
  Borland_studio_toolsapi_tlb::IOTAProjectDependenciesList* pRetVal;
  this->GetValidProjectDependencies(AProject, (Borland_studio_toolsapi_tlb::IOTAProjectDependenciesList**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAProjectGroupProjectDependenciesDispT<T>::SetProjectDependencies(Borland_studio_toolsapi_tlb::IOTAProject* AProject/*[in]*/
                                                                    , 
                                                                    Borland_studio_toolsapi_tlb::IOTAProjectDependenciesList* ADependencies/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("SetProjectDependencies"), DISPID(DISPID_UNKNOWN/*[1610743811]*/));
  TAutoArgs<2> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTAProject*)AProject /*[VT_USERDEFINED:1]*/;
  _args[2] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTAProjectDependenciesList*)ADependencies /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

// *********************************************************************//
// DispIntf:  IOTASearchPaths
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {756DF4C9-B22A-4095-866D-89E437B88750}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTASearchPathsDispT<T>::Add(BSTR Path/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Add"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<1> _args;
  _args[1] = Path /*[VT_BSTR:0]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTASearchPathsDispT<T>::Remove(BSTR Path/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Remove"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<1> _args;
  _args[1] = Path /*[VT_BSTR:0]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTASearchPathsDispT<T>::Clear()
{
  _TDispID _dispid(*this, OLETEXT("Clear"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTASearchPathsDispT<T>::get_Count(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Count"), DISPID(DISPID_UNKNOWN/*[1610743811]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> long __fastcall
IOTASearchPathsDispT<T>::get_Count(void)
{
  long pRetVal;
  this->get_Count((long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTASearchPathsDispT<T>::get_items(long index/*[in]*/, BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("items"), DISPID(0));
  TAutoArgs<1> _args;
  _args[1] = index /*[VT_I4:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTASearchPathsDispT<T>::get_items(long index/*[in]*/)
{
  BSTR pRetVal;
  this->get_items(index, (BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTASearchPathsDispT<T>::ExpandedSearchPath(long index/*[in]*/, BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("ExpandedSearchPath"), DISPID(DISPID_UNKNOWN/*[1610743813]*/));
  TAutoArgs<1> _args;
  _args[1] = index /*[VT_I4:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTASearchPathsDispT<T>::ExpandedSearchPath(long index/*[in]*/)
{
  BSTR pRetVal;
  this->ExpandedSearchPath(index, (BSTR*)&pRetVal);
  return pRetVal;
}

// *********************************************************************//
// DispIntf:  IOTAAssemblySearchPathService
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9BA69737-335D-3A6D-A134-A3F61121A67C}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAAssemblySearchPathServiceDispT<T>::Load()
{
  _TDispID _dispid(*this, OLETEXT("Load"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAAssemblySearchPathServiceDispT<T>::Save()
{
  _TDispID _dispid(*this, OLETEXT("Save"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAAssemblySearchPathServiceDispT<T>::IsIgnoredDirectory(BSTR directory/*[in]*/, 
                                                          VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("IsIgnoredDirectory"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<1> _args;
  _args[1] = directory /*[VT_BSTR:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAAssemblySearchPathServiceDispT<T>::IsIgnoredDirectory(BSTR directory/*[in]*/)
{
  VARIANT_BOOL pRetVal;
  this->IsIgnoredDirectory(directory, (VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAAssemblySearchPathServiceDispT<T>::AddIgnoredDirectory(BSTR directory/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("AddIgnoredDirectory"), DISPID(DISPID_UNKNOWN/*[1610743811]*/));
  TAutoArgs<1> _args;
  _args[1] = directory /*[VT_BSTR:0]*/;
  return OleFunction(_dispid, _args);
}

// *********************************************************************//
// DispIntf:  IOTAPersistenceManager
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {99243387-CCBE-4810-9D3C-D494DE468170}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAPersistenceManagerDispT<T>::SaveDocument(LPUNKNOWN document/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("SaveDocument"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<1> _args;
  _args[1] = document /*[VT_UNKNOWN:0]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAPersistenceManagerDispT<T>::GetDocument(LPUNKNOWN* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetDocument"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_UNKNOWN:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> LPUNKNOWN __fastcall
IOTAPersistenceManagerDispT<T>::GetDocument(void)
{
  LPUNKNOWN pRetVal;
  this->GetDocument((LPUNKNOWN*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAPersistenceManagerDispT<T>::GetOriginalDocument(LPUNKNOWN* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetOriginalDocument"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_UNKNOWN:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> LPUNKNOWN __fastcall
IOTAPersistenceManagerDispT<T>::GetOriginalDocument(void)
{
  LPUNKNOWN pRetVal;
  this->GetOriginalDocument((LPUNKNOWN*)&pRetVal);
  return pRetVal;
}

// *********************************************************************//
// SmartIntf: TCOM_ToolboxItemEventArgs
// Interface: _ToolboxItemEventArgs
// *********************************************************************//
// *********************************************************************//
// DispIntf:  _ToolboxItemEventArgs
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {6AA62B56-293C-334C-A809-5A6ED810D7A6}
// *********************************************************************//
// *********************************************************************//
// SmartIntf: TCOM_ToolboxItemAddedEventArgs
// Interface: _ToolboxItemAddedEventArgs
// *********************************************************************//
// *********************************************************************//
// DispIntf:  _ToolboxItemAddedEventArgs
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {BC0AC352-8549-3535-A516-9BD1DC25535E}
// *********************************************************************//
// *********************************************************************//
// SmartIntf: TCOM_TOTAHandle
// Interface: _TOTAHandle
// *********************************************************************//
// *********************************************************************//
// DispIntf:  _TOTAHandle
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {081F9B72-A1A0-3ED5-8965-AF2906DA90F6}
// *********************************************************************//
// *********************************************************************//
// SmartIntf: TCOM_gccEventArgs
// Interface: _gccEventArgs
// *********************************************************************//
// *********************************************************************//
// DispIntf:  _gccEventArgs
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {6402D97D-5DB3-37BA-934B-24796B16039B}
// *********************************************************************//
// *********************************************************************//
// SmartIntf: TCOM_ToolboxItemEventHandler
// Interface: _ToolboxItemEventHandler
// *********************************************************************//
// *********************************************************************//
// DispIntf:  _ToolboxItemEventHandler
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {9347589F-F528-3A07-AF93-83CA95BBF553}
// *********************************************************************//
// *********************************************************************//
// SmartIntf: TCOM_ToolboxItemAddedEventHandler
// Interface: _ToolboxItemAddedEventHandler
// *********************************************************************//
// *********************************************************************//
// DispIntf:  _ToolboxItemAddedEventHandler
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {74A6E330-3B11-35CB-A7AD-DDDCAD045DB8}
// *********************************************************************//
// *********************************************************************//
// DispIntf:  IOTAToolboxServiceEvents
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DBFBBC7E-4AC1-4FB1-88B6-34DF77F48B14}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAToolboxServiceEventsDispT<T>::add_ToolboxItemAdded(Borland_studio_toolsapi_tlb::_ToolboxItemAddedEventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("add_ToolboxItemAdded"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::_ToolboxItemAddedEventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAToolboxServiceEventsDispT<T>::remove_ToolboxItemAdded(Borland_studio_toolsapi_tlb::_ToolboxItemAddedEventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("remove_ToolboxItemAdded"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::_ToolboxItemAddedEventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAToolboxServiceEventsDispT<T>::add_ToolboxItemRemoved(Borland_studio_toolsapi_tlb::_ToolboxItemEventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("add_ToolboxItemRemoved"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::_ToolboxItemEventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAToolboxServiceEventsDispT<T>::remove_ToolboxItemRemoved(Borland_studio_toolsapi_tlb::_ToolboxItemEventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("remove_ToolboxItemRemoved"), DISPID(DISPID_UNKNOWN/*[1610743811]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::_ToolboxItemEventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAToolboxServiceEventsDispT<T>::add_SelectedItemUsed(Borland_studio_toolsapi_tlb::_ToolboxItemEventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("add_SelectedItemUsed"), DISPID(DISPID_UNKNOWN/*[1610743812]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::_ToolboxItemEventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAToolboxServiceEventsDispT<T>::remove_SelectedItemUsed(Borland_studio_toolsapi_tlb::_ToolboxItemEventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("remove_SelectedItemUsed"), DISPID(DISPID_UNKNOWN/*[1610743813]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::_ToolboxItemEventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAToolboxServiceEventsDispT<T>::add_ToolboxServiceRefresh(Mscorlib_tlb::_EventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("add_ToolboxServiceRefresh"), DISPID(DISPID_UNKNOWN/*[1610743814]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Mscorlib_tlb::_EventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAToolboxServiceEventsDispT<T>::remove_ToolboxServiceRefresh(Mscorlib_tlb::_EventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("remove_ToolboxServiceRefresh"), DISPID(DISPID_UNKNOWN/*[1610743815]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Mscorlib_tlb::_EventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

// *********************************************************************//
// DispIntf:  IOTAEventMethodsService
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5E2773EC-DC4A-4B79-9B2C-763B8A2321C0}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAEventMethodsServiceDispT<T>::AddComponentEventMethod(VARIANT component/*[in]*/, 
                                                         BSTR methodName/*[in]*/, 
                                                         System_tlb::_EventDescriptor* eventDescriptor/*[in]*/
                                                         , BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("AddComponentEventMethod"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<3> _args;
  _args[1] = component /*[VT_VARIANT:0]*/;
  _args[2] = methodName /*[VT_BSTR:0]*/;
  _args[3] = (LPDISPATCH)(System_tlb::_EventDescriptor*)eventDescriptor /*[VT_USERDEFINED:1]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAEventMethodsServiceDispT<T>::AddComponentEventMethod(VARIANT component/*[in]*/, 
                                                         BSTR methodName/*[in]*/, 
                                                         System_tlb::_EventDescriptor* eventDescriptor/*[in]*/)
{
  BSTR pRetVal;
  this->AddComponentEventMethod(component, methodName, eventDescriptor, (BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEventMethodsServiceDispT<T>::RemoveComponentEventMethod(VARIANT component/*[in]*/, 
                                                            BSTR methodName/*[in]*/, 
                                                            System_tlb::_EventDescriptor* eventDescriptor/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("RemoveComponentEventMethod"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<3> _args;
  _args[1] = component /*[VT_VARIANT:0]*/;
  _args[2] = methodName /*[VT_BSTR:0]*/;
  _args[3] = (LPDISPATCH)(System_tlb::_EventDescriptor*)eventDescriptor /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAEventMethodsServiceDispT<T>::RemoveComponentEventMethods(VARIANT component/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("RemoveComponentEventMethods"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<1> _args;
  _args[1] = component /*[VT_VARIANT:0]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAEventMethodsServiceDispT<T>::ResetState()
{
  _TDispID _dispid(*this, OLETEXT("ResetState"), DISPID(DISPID_UNKNOWN/*[1610743811]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAEventMethodsServiceDispT<T>::RemoveEmptyEvents()
{
  _TDispID _dispid(*this, OLETEXT("RemoveEmptyEvents"), DISPID(DISPID_UNKNOWN/*[1610743812]*/));
  return OleFunction(_dispid);
}

// *********************************************************************//
// DispIntf:  IBorlandIDEServices
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6C120D3D-BD59-4E3F-97AE-1EA4C0E204ED}
// *********************************************************************//
template <class T> HRESULT __fastcall
IBorlandIDEServicesDispT<T>::AddOTAExtension(VARIANT extension/*[in]*/, 
                                             long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("AddOTAExtension"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<1> _args;
  _args[1] = extension /*[VT_VARIANT:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> long __fastcall
IBorlandIDEServicesDispT<T>::AddOTAExtension(VARIANT extension/*[in]*/)
{
  long pRetVal;
  this->AddOTAExtension(extension, (long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IBorlandIDEServicesDispT<T>::RemoveOTAExtension(long index/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("RemoveOTAExtension"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<1> _args;
  _args[1] = index /*[VT_I4:0]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IBorlandIDEServicesDispT<T>::GetService(Mscorlib_tlb::_Type* serviceType/*[in]*/, 
                                        VARIANT* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetService"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPUNKNOWN)(Mscorlib_tlb::_Type*)serviceType /*[VT_USERDEFINED:1]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_VARIANT:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT __fastcall
IBorlandIDEServicesDispT<T>::GetService(Mscorlib_tlb::_Type* serviceType/*[in]*/)
{
  VARIANT pRetVal;
  this->GetService(serviceType, (VARIANT*)&pRetVal);
  return pRetVal;
}

// *********************************************************************//
// DispIntf:  IOTAVirtualFileService
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {728068F4-29B9-361F-A6ED-D719C6A4863C}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAVirtualFileServiceDispT<T>::OpenFile(BSTR fileName/*[in]*/, 
                                         Borland_studio_toolsapi_tlb::IOTAVirtualFile** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("OpenFile"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<1> _args;
  _args[1] = fileName /*[VT_BSTR:0]*/;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAVirtualFile**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAVirtualFile* __fastcall
IOTAVirtualFileServiceDispT<T>::OpenFile(BSTR fileName/*[in]*/)
{
  Borland_studio_toolsapi_tlb::IOTAVirtualFile* pRetVal;
  this->OpenFile(fileName, (Borland_studio_toolsapi_tlb::IOTAVirtualFile**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAVirtualFileServiceDispT<T>::GetReader(BSTR fileName/*[in]*/, long offset/*[in]*/, 
                                          Borland_studio_toolsapi_tlb::IOTAFileReader** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetReader"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<2> _args;
  _args[1] = fileName /*[VT_BSTR:0]*/;
  _args[2] = offset /*[VT_I4:0]*/;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAFileReader**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAFileReader* __fastcall
IOTAVirtualFileServiceDispT<T>::GetReader(BSTR fileName/*[in]*/, long offset/*[in]*/)
{
  Borland_studio_toolsapi_tlb::IOTAFileReader* pRetVal;
  this->GetReader(fileName, offset, (Borland_studio_toolsapi_tlb::IOTAFileReader**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAVirtualFileServiceDispT<T>::GetWriter(BSTR fileName/*[in]*/, 
                                          Borland_studio_toolsapi_tlb::IOTAFileWriter** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetWriter"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<1> _args;
  _args[1] = fileName /*[VT_BSTR:0]*/;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAFileWriter**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAFileWriter* __fastcall
IOTAVirtualFileServiceDispT<T>::GetWriter(BSTR fileName/*[in]*/)
{
  Borland_studio_toolsapi_tlb::IOTAFileWriter* pRetVal;
  this->GetWriter(fileName, (Borland_studio_toolsapi_tlb::IOTAFileWriter**)&pRetVal);
  return pRetVal;
}

// *********************************************************************//
// DispIntf:  IOTAVirtualFile
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {779E0FCF-A177-48A5-A242-3AE5CDCA5C5A}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAVirtualFileDispT<T>::GetReader(long offset/*[in]*/, 
                                   Borland_studio_toolsapi_tlb::IOTAFileReader** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetReader"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<1> _args;
  _args[1] = offset /*[VT_I4:0]*/;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAFileReader**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAFileReader* __fastcall
IOTAVirtualFileDispT<T>::GetReader(long offset/*[in]*/)
{
  Borland_studio_toolsapi_tlb::IOTAFileReader* pRetVal;
  this->GetReader(offset, (Borland_studio_toolsapi_tlb::IOTAFileReader**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAVirtualFileDispT<T>::GetWriter(Borland_studio_toolsapi_tlb::IOTAFileWriter** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetWriter"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAFileWriter**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAFileWriter* __fastcall
IOTAVirtualFileDispT<T>::GetWriter(void)
{
  Borland_studio_toolsapi_tlb::IOTAFileWriter* pRetVal;
  this->GetWriter((Borland_studio_toolsapi_tlb::IOTAFileWriter**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAVirtualFileDispT<T>::Close()
{
  _TDispID _dispid(*this, OLETEXT("Close"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  return OleFunction(_dispid);
}

// *********************************************************************//
// DispIntf:  IOTAFileReader
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {60623BF1-C097-4DD7-BA7F-ADC40FE032E9}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAFileReaderDispT<T>::Read(long length/*[in]*/, long padding/*[in]*/, 
                             LPSAFEARRAY* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Read"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<2> _args;
  _args[1] = length /*[VT_I4:0]*/;
  _args[2] = padding /*[VT_I4:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_SAFEARRAY:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> LPSAFEARRAY __fastcall
IOTAFileReaderDispT<T>::Read(long length/*[in]*/, long padding/*[in]*/)
{
  LPSAFEARRAY pRetVal;
  this->Read(length, padding, (LPSAFEARRAY*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAFileReaderDispT<T>::Close()
{
  _TDispID _dispid(*this, OLETEXT("Close"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  return OleFunction(_dispid);
}

// *********************************************************************//
// DispIntf:  IOTAFileWriter
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DCEDFCFF-7111-49B5-8A53-57F084B8C0C9}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAFileWriterDispT<T>::CopyTo(__int64 offset/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("CopyTo"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<1> _args;
  _args[1] = offset /*[VT_I8:0]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAFileWriterDispT<T>::DeleteTo(__int64 offset/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("DeleteTo"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<1> _args;
  _args[1] = offset /*[VT_I8:0]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAFileWriterDispT<T>::Insert(BSTR Text/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Insert"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<1> _args;
  _args[1] = Text /*[VT_BSTR:0]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAFileWriterDispT<T>::Insert_2(LPSAFEARRAY bytes/*[in]*/, long offset/*[in]*/, long Count/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Insert_2"), DISPID(DISPID_UNKNOWN/*[1610743811]*/));
  TAutoArgs<3> _args;
  _args[1] = bytes /*[VT_SAFEARRAY:0]*/;
  _args[2] = offset /*[VT_I4:0]*/;
  _args[3] = Count /*[VT_I4:0]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAFileWriterDispT<T>::Close()
{
  _TDispID _dispid(*this, OLETEXT("Close"), DISPID(DISPID_UNKNOWN/*[1610743812]*/));
  return OleFunction(_dispid);
}

// *********************************************************************//
// DispIntf:  IOTACodeDomGeneratorOptions
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {93B43D3C-D524-440D-9569-4C4D79D26C9E}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTACodeDomGeneratorOptionsDispT<T>::get_BlankLinesBetweenMembers(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("BlankLinesBetweenMembers"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTACodeDomGeneratorOptionsDispT<T>::get_BlankLinesBetweenMembers(void)
{
  VARIANT_BOOL pRetVal;
  this->get_BlankLinesBetweenMembers((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTACodeDomGeneratorOptionsDispT<T>::get_BracingStyle(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("BracingStyle"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTACodeDomGeneratorOptionsDispT<T>::get_BracingStyle(void)
{
  BSTR pRetVal;
  this->get_BracingStyle((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTACodeDomGeneratorOptionsDispT<T>::get_ElseOnClosing(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("ElseOnClosing"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTACodeDomGeneratorOptionsDispT<T>::get_ElseOnClosing(void)
{
  VARIANT_BOOL pRetVal;
  this->get_ElseOnClosing((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTACodeDomGeneratorOptionsDispT<T>::get_IndentString(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("IndentString"), DISPID(DISPID_UNKNOWN/*[1610743811]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTACodeDomGeneratorOptionsDispT<T>::get_IndentString(void)
{
  BSTR pRetVal;
  this->get_IndentString((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTACodeDomGeneratorOptionsDispT<T>::get_CaseSensitive(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("CaseSensitive"), DISPID(DISPID_UNKNOWN/*[1610743812]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTACodeDomGeneratorOptionsDispT<T>::get_CaseSensitive(void)
{
  VARIANT_BOOL pRetVal;
  this->get_CaseSensitive((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

// *********************************************************************//
// DispIntf:  IOTACodeDomFile
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {487E1E2B-8CF5-4BD4-929A-4D82E862FAB0}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTACodeDomFileDispT<T>::GetDom(System_tlb::_CodeObject** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetDom"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr((LPDISPATCH*)(System_tlb::_CodeObject**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> System_tlb::_CodeObject* __fastcall
IOTACodeDomFileDispT<T>::GetDom(void)
{
  System_tlb::_CodeObject* pRetVal;
  this->GetDom((System_tlb::_CodeObject**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTACodeDomFileDispT<T>::WriteDom(System_tlb::_CodeCompileUnit* codeDom/*[in]*/, 
                                  Borland_studio_toolsapi_tlb::IOTACodeDomGeneratorOptions* generatorOptions/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("WriteDom"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<2> _args;
  _args[1] = (LPDISPATCH)(System_tlb::_CodeCompileUnit*)codeDom /*[VT_USERDEFINED:1]*/;
  _args[2] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTACodeDomGeneratorOptions*)generatorOptions /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

// *********************************************************************//
// DispIntf:  IOTAInstalledToolboxItem
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {72655E0D-ED21-4B1A-93D6-F30E96782A1F}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAInstalledToolboxItemDispT<T>::get_ToolboxItem(LPUNKNOWN* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("ToolboxItem"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_UNKNOWN:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> LPUNKNOWN __fastcall
IOTAInstalledToolboxItemDispT<T>::get_ToolboxItem(void)
{
  LPUNKNOWN pRetVal;
  this->get_ToolboxItem((LPUNKNOWN*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAInstalledToolboxItemDispT<T>::get_CategoryName(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("CategoryName"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAInstalledToolboxItemDispT<T>::get_CategoryName(void)
{
  BSTR pRetVal;
  this->get_CategoryName((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAInstalledToolboxItemDispT<T>::set_CategoryName(BSTR pRetVal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("CategoryName"), DISPID(1610743809));
  TAutoArgs<1> _args;
  _args[1] = pRetVal /*[VT_BSTR:0]*/;
  return OlePropertyPut(_dispid, _args);
}

// *********************************************************************//
// DispIntf:  IOTAComponentInstallService
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B36018B6-AA77-4BB7-82AC-7B2D2C3B04E4}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAComponentInstallServiceDispT<T>::Add(LPUNKNOWN Item/*[in]*/, BSTR category/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Add"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<2> _args;
  _args[1] = Item /*[VT_UNKNOWN:0]*/;
  _args[2] = category /*[VT_BSTR:0]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAComponentInstallServiceDispT<T>::Remove(LPSAFEARRAY items/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Remove"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<1> _args;
  _args[1] = items /*[VT_SAFEARRAY:0]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAComponentInstallServiceDispT<T>::Remove_2(LPUNKNOWN Item/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Remove_2"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<1> _args;
  _args[1] = Item /*[VT_UNKNOWN:0]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAComponentInstallServiceDispT<T>::ItemFromToolboxItem(LPUNKNOWN Item/*[in]*/, 
                                                         Borland_studio_toolsapi_tlb::IOTAInstalledToolboxItem** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("ItemFromToolboxItem"), DISPID(DISPID_UNKNOWN/*[1610743811]*/));
  TAutoArgs<1> _args;
  _args[1] = Item /*[VT_UNKNOWN:0]*/;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAInstalledToolboxItem**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAInstalledToolboxItem* __fastcall
IOTAComponentInstallServiceDispT<T>::ItemFromToolboxItem(LPUNKNOWN Item/*[in]*/)
{
  Borland_studio_toolsapi_tlb::IOTAInstalledToolboxItem* pRetVal;
  this->ItemFromToolboxItem(Item, (Borland_studio_toolsapi_tlb::IOTAInstalledToolboxItem**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAComponentInstallServiceDispT<T>::Clear()
{
  _TDispID _dispid(*this, OLETEXT("Clear"), DISPID(DISPID_UNKNOWN/*[1610743812]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAComponentInstallServiceDispT<T>::get_InstalledItems(LPSAFEARRAY* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("InstalledItems"), DISPID(DISPID_UNKNOWN/*[1610743813]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_SAFEARRAY:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> LPSAFEARRAY __fastcall
IOTAComponentInstallServiceDispT<T>::get_InstalledItems(void)
{
  LPSAFEARRAY pRetVal;
  this->get_InstalledItems((LPSAFEARRAY*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAComponentInstallServiceDispT<T>::get_InstalledComponents(LPSAFEARRAY* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("InstalledComponents"), DISPID(DISPID_UNKNOWN/*[1610743814]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_SAFEARRAY:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> LPSAFEARRAY __fastcall
IOTAComponentInstallServiceDispT<T>::get_InstalledComponents(void)
{
  LPSAFEARRAY pRetVal;
  this->get_InstalledComponents((LPSAFEARRAY*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAComponentInstallServiceDispT<T>::ShowInstallComponentsForm(System_windows_forms_tlb::DialogResult* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("ShowInstallComponentsForm"), DISPID(DISPID_UNKNOWN/*[1610743815]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr((int*)pRetVal /*[VT_USERDEFINED:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> System_windows_forms_tlb::DialogResult __fastcall
IOTAComponentInstallServiceDispT<T>::ShowInstallComponentsForm(void)
{
  System_windows_forms_tlb::DialogResult pRetVal;
  this->ShowInstallComponentsForm((System_windows_forms_tlb::DialogResult*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAComponentInstallServiceDispT<T>::SaveState()
{
  _TDispID _dispid(*this, OLETEXT("SaveState"), DISPID(DISPID_UNKNOWN/*[1610743816]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAComponentInstallServiceDispT<T>::LoadState()
{
  _TDispID _dispid(*this, OLETEXT("LoadState"), DISPID(DISPID_UNKNOWN/*[1610743817]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAComponentInstallServiceDispT<T>::ResetTypesToDefault()
{
  _TDispID _dispid(*this, OLETEXT("ResetTypesToDefault"), DISPID(DISPID_UNKNOWN/*[1610743818]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAComponentInstallServiceDispT<T>::add_BeginUpdate(Mscorlib_tlb::_EventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("add_BeginUpdate"), DISPID(DISPID_UNKNOWN/*[1610743819]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Mscorlib_tlb::_EventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAComponentInstallServiceDispT<T>::remove_BeginUpdate(Mscorlib_tlb::_EventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("remove_BeginUpdate"), DISPID(DISPID_UNKNOWN/*[1610743820]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Mscorlib_tlb::_EventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAComponentInstallServiceDispT<T>::add_EndUpdate(Mscorlib_tlb::_EventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("add_EndUpdate"), DISPID(DISPID_UNKNOWN/*[1610743821]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Mscorlib_tlb::_EventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAComponentInstallServiceDispT<T>::remove_EndUpdate(Mscorlib_tlb::_EventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("remove_EndUpdate"), DISPID(DISPID_UNKNOWN/*[1610743822]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Mscorlib_tlb::_EventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAComponentInstallServiceDispT<T>::OnBeginUpdate()
{
  _TDispID _dispid(*this, OLETEXT("OnBeginUpdate"), DISPID(DISPID_UNKNOWN/*[1610743823]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAComponentInstallServiceDispT<T>::OnEndUpdate()
{
  _TDispID _dispid(*this, OLETEXT("OnEndUpdate"), DISPID(DISPID_UNKNOWN/*[1610743824]*/));
  return OleFunction(_dispid);
}

// *********************************************************************//
// DispIntf:  IOTAModuleHandlerGauntletMember
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {47C01B8C-7ACA-487D-A249-78F9DB894CB7}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAModuleHandlerGauntletMemberDispT<T>::AttachHandler(Borland_studio_toolsapi_tlb::IOTAModule* module/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("AttachHandler"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTAModule*)module /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

// *********************************************************************//
// DispIntf:  IOTAModuleHandlerGauntletService
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {46E708B5-1B3D-4A94-869F-DF1752A6CE35}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAModuleHandlerGauntletServiceDispT<T>::AddMember(Borland_studio_toolsapi_tlb::IOTAModuleHandlerGauntletMember* handler/*[in]*/
                                                    , long priority/*[in]*/, 
                                                    long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("AddMember"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<2> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTAModuleHandlerGauntletMember*)handler /*[VT_USERDEFINED:1]*/;
  _args[2] = priority /*[VT_I4:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> long __fastcall
IOTAModuleHandlerGauntletServiceDispT<T>::AddMember(Borland_studio_toolsapi_tlb::IOTAModuleHandlerGauntletMember* handler/*[in]*/, 
                                                    long priority/*[in]*/)
{
  long pRetVal;
  this->AddMember(handler, priority, (long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAModuleHandlerGauntletServiceDispT<T>::RemoveMember(long index/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("RemoveMember"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<1> _args;
  _args[1] = index /*[VT_I4:0]*/;
  return OleFunction(_dispid, _args);
}

// *********************************************************************//
// DispIntf:  IOTAAddReferenceDialog
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0BBA329E-B28D-3343-953A-9D97655F9CD2}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAAddReferenceDialogDispT<T>::ShowDialog(Borland_studio_toolsapi_tlb::IOTAProject* project/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("ShowDialog"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTAProject*)project /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

// *********************************************************************//
// DispIntf:  IOTAAddInService
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B7D01D1D-5414-48E8-A691-090A0B191D6D}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAAddInServiceDispT<T>::LoadAddIn(BSTR fileName/*[in]*/, VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("LoadAddIn"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<1> _args;
  _args[1] = fileName /*[VT_BSTR:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAAddInServiceDispT<T>::LoadAddIn(BSTR fileName/*[in]*/)
{
  VARIANT_BOOL pRetVal;
  this->LoadAddIn(fileName, (VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

// *********************************************************************//
// DispIntf:  IOTABitmapService
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9B9487F0-3F83-4817-AACD-3C84D2FEF954}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTABitmapServiceDispT<T>::LoadFromResourceID(BSTR fileName/*[in]*/, long resID/*[in]*/, 
                                              long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("LoadFromResourceID"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<2> _args;
  _args[1] = fileName /*[VT_BSTR:0]*/;
  _args[2] = resID /*[VT_I4:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> long __fastcall
IOTABitmapServiceDispT<T>::LoadFromResourceID(BSTR fileName/*[in]*/, long resID/*[in]*/)
{
  long pRetVal;
  this->LoadFromResourceID(fileName, resID, (long*)&pRetVal);
  return pRetVal;
}

// *********************************************************************//
// SmartIntf: TCOM_AssemblyUnloadedEventArgs
// Interface: _AssemblyUnloadedEventArgs
// *********************************************************************//
// *********************************************************************//
// DispIntf:  _AssemblyUnloadedEventArgs
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {BB77DC4F-7E1C-33FD-9E94-C7C631F3FC43}
// *********************************************************************//
// *********************************************************************//
// SmartIntf: TCOM_AssemblyUnloadedEventHandler
// Interface: _AssemblyUnloadedEventHandler
// *********************************************************************//
// *********************************************************************//
// DispIntf:  _AssemblyUnloadedEventHandler
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {BC05AA32-5149-33E6-9865-83DF06FE9233}
// *********************************************************************//
// *********************************************************************//
// DispIntf:  IOTAAssemblyUnloadedService
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B8BF8F11-9F74-3754-8968-F65738FD7120}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAAssemblyUnloadedServiceDispT<T>::add_AssemblyUnloaded(Borland_studio_toolsapi_tlb::_AssemblyUnloadedEventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("add_AssemblyUnloaded"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::_AssemblyUnloadedEventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAAssemblyUnloadedServiceDispT<T>::remove_AssemblyUnloaded(Borland_studio_toolsapi_tlb::_AssemblyUnloadedEventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("remove_AssemblyUnloaded"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::_AssemblyUnloadedEventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAAssemblyUnloadedServiceDispT<T>::OnAssemblyUnloaded(VARIANT sender/*[in]*/, 
                                                        Borland_studio_toolsapi_tlb::_AssemblyUnloadedEventArgs* args/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("OnAssemblyUnloaded"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<2> _args;
  _args[1] = sender /*[VT_VARIANT:0]*/;
  _args[2] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::_AssemblyUnloadedEventArgs*)args /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

// *********************************************************************//
// DispIntf:  IOTAMessageGroup
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {56352901-9004-426F-8C34-CD3652E8B01A}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAMessageGroupDispT<T>::get_Name(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Name"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAMessageGroupDispT<T>::get_Name(void)
{
  BSTR pRetVal;
  this->get_Name((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAMessageGroupDispT<T>::get_AutoScroll(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("AutoScroll"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAMessageGroupDispT<T>::get_AutoScroll(void)
{
  VARIANT_BOOL pRetVal;
  this->get_AutoScroll((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAMessageGroupDispT<T>::set_AutoScroll(VARIANT_BOOL pRetVal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("AutoScroll"), DISPID(1610743809));
  TAutoArgs<1> _args;
  _args[1] = pRetVal /*[VT_BOOL:0]*/;
  return OlePropertyPut(_dispid, _args);
}

// *********************************************************************//
// SmartIntf: TCOM_MessageGroupEventArgs
// Interface: _MessageGroupEventArgs
// *********************************************************************//
// *********************************************************************//
// DispIntf:  _MessageGroupEventArgs
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {6AB2B46B-745D-34CB-B1F6-80E1A2C8ECF4}
// *********************************************************************//
// *********************************************************************//
// DispIntf:  IOTACustomMessage
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E5133BA9-9859-49CE-A295-D337E7BC3C48}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTACustomMessageDispT<T>::ShowHelp()
{
  _TDispID _dispid(*this, OLETEXT("ShowHelp"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTACustomMessageDispT<T>::get_fileName(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("fileName"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTACustomMessageDispT<T>::get_fileName(void)
{
  BSTR pRetVal;
  this->get_fileName((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTACustomMessageDispT<T>::get_LineNumber(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("LineNumber"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> long __fastcall
IOTACustomMessageDispT<T>::get_LineNumber(void)
{
  long pRetVal;
  this->get_LineNumber((long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTACustomMessageDispT<T>::get_ColumnNumber(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("ColumnNumber"), DISPID(DISPID_UNKNOWN/*[1610743811]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> long __fastcall
IOTACustomMessageDispT<T>::get_ColumnNumber(void)
{
  long pRetVal;
  this->get_ColumnNumber((long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTACustomMessageDispT<T>::get_LineText(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("LineText"), DISPID(DISPID_UNKNOWN/*[1610743812]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTACustomMessageDispT<T>::get_LineText(void)
{
  BSTR pRetVal;
  this->get_LineText((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTACustomMessageDispT<T>::get_ChildCount(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("ChildCount"), DISPID(DISPID_UNKNOWN/*[1610743813]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> long __fastcall
IOTACustomMessageDispT<T>::get_ChildCount(void)
{
  long pRetVal;
  this->get_ChildCount((long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTACustomMessageDispT<T>::GetChild(long index/*[in]*/, 
                                    Borland_studio_toolsapi_tlb::IOTACustomMessage** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetChild"), DISPID(DISPID_UNKNOWN/*[1610743814]*/));
  TAutoArgs<1> _args;
  _args[1] = index /*[VT_I4:0]*/;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTACustomMessage**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTACustomMessage* __fastcall
IOTACustomMessageDispT<T>::GetChild(long index/*[in]*/)
{
  Borland_studio_toolsapi_tlb::IOTACustomMessage* pRetVal;
  this->GetChild(index, (Borland_studio_toolsapi_tlb::IOTACustomMessage**)&pRetVal);
  return pRetVal;
}

// *********************************************************************//
// SmartIntf: TCOM_MessageGroupHandler
// Interface: _MessageGroupHandler
// *********************************************************************//
// *********************************************************************//
// DispIntf:  _MessageGroupHandler
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {64B4C7E7-41A9-341E-BB19-C3279B9DD1AE}
// *********************************************************************//
// *********************************************************************//
// DispIntf:  IOTAMessageService
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {37542A61-0649-49CB-BC6F-2FFA0D2E3E1E}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAMessageServiceDispT<T>::AddCustomMessage(Borland_studio_toolsapi_tlb::IOTACustomMessage* customMsg/*[in]*/
                                             , long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("AddCustomMessage"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTACustomMessage*)customMsg /*[VT_USERDEFINED:1]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> long __fastcall
IOTAMessageServiceDispT<T>::AddCustomMessage(Borland_studio_toolsapi_tlb::IOTACustomMessage* customMsg/*[in]*/)
{
  long pRetVal;
  this->AddCustomMessage(customMsg, (long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAMessageServiceDispT<T>::AddCustomMessage_2(Borland_studio_toolsapi_tlb::IOTACustomMessage* customMsg/*[in]*/
                                               , long parent/*[in]*/, long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("AddCustomMessage_2"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<2> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTACustomMessage*)customMsg /*[VT_USERDEFINED:1]*/;
  _args[2] = parent /*[VT_I4:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> long __fastcall
IOTAMessageServiceDispT<T>::AddCustomMessage_2(Borland_studio_toolsapi_tlb::IOTACustomMessage* customMsg/*[in]*/, 
                                               long parent/*[in]*/)
{
  long pRetVal;
  this->AddCustomMessage_2(customMsg, parent, (long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAMessageServiceDispT<T>::AddCustomMessage_3(Borland_studio_toolsapi_tlb::IOTACustomMessage* customMsg/*[in]*/
                                               , 
                                               Borland_studio_toolsapi_tlb::IOTAMessageGroup* messageGroup/*[in]*/
                                               , long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("AddCustomMessage_3"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<2> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTACustomMessage*)customMsg /*[VT_USERDEFINED:1]*/;
  _args[2] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTAMessageGroup*)messageGroup /*[VT_USERDEFINED:1]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> long __fastcall
IOTAMessageServiceDispT<T>::AddCustomMessage_3(Borland_studio_toolsapi_tlb::IOTACustomMessage* customMsg/*[in]*/, 
                                               Borland_studio_toolsapi_tlb::IOTAMessageGroup* messageGroup/*[in]*/)
{
  long pRetVal;
  this->AddCustomMessage_3(customMsg, messageGroup, (long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAMessageServiceDispT<T>::AddTitleMessage(BSTR messageStr/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("AddTitleMessage"), DISPID(DISPID_UNKNOWN/*[1610743811]*/));
  TAutoArgs<1> _args;
  _args[1] = messageStr /*[VT_BSTR:0]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAMessageServiceDispT<T>::AddToolMessage(BSTR fileName/*[in]*/, BSTR messageStr/*[in]*/, 
                                           BSTR prefixStr/*[in]*/, long LineNumber/*[in]*/, 
                                           long ColumnNumber/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("AddToolMessage"), DISPID(DISPID_UNKNOWN/*[1610743812]*/));
  TAutoArgs<5> _args;
  _args[1] = fileName /*[VT_BSTR:0]*/;
  _args[2] = messageStr /*[VT_BSTR:0]*/;
  _args[3] = prefixStr /*[VT_BSTR:0]*/;
  _args[4] = LineNumber /*[VT_I4:0]*/;
  _args[5] = ColumnNumber /*[VT_I4:0]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAMessageServiceDispT<T>::ClearAllMessages()
{
  _TDispID _dispid(*this, OLETEXT("ClearAllMessages"), DISPID(DISPID_UNKNOWN/*[1610743813]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAMessageServiceDispT<T>::ClearCompilerMessages()
{
  _TDispID _dispid(*this, OLETEXT("ClearCompilerMessages"), DISPID(DISPID_UNKNOWN/*[1610743814]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAMessageServiceDispT<T>::ClearSearchMessages()
{
  _TDispID _dispid(*this, OLETEXT("ClearSearchMessages"), DISPID(DISPID_UNKNOWN/*[1610743815]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAMessageServiceDispT<T>::ClearToolMessages()
{
  _TDispID _dispid(*this, OLETEXT("ClearToolMessages"), DISPID(DISPID_UNKNOWN/*[1610743816]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAMessageServiceDispT<T>::AddToolMessage_2(BSTR fileName/*[in]*/, BSTR messageStr/*[in]*/, 
                                             BSTR prefixStr/*[in]*/, long LineNumber/*[in]*/, 
                                             long ColumnNumber/*[in]*/, long parent/*[in]*/, 
                                             long* lineRef/*[out]*/)
{
  _TDispID _dispid(*this, OLETEXT("AddToolMessage_2"), DISPID(DISPID_UNKNOWN/*[1610743817]*/));
  TAutoArgs<7> _args;
  _args[1] = fileName /*[VT_BSTR:0]*/;
  _args[2] = messageStr /*[VT_BSTR:0]*/;
  _args[3] = prefixStr /*[VT_BSTR:0]*/;
  _args[4] = LineNumber /*[VT_I4:0]*/;
  _args[5] = ColumnNumber /*[VT_I4:0]*/;
  _args[6] = parent /*[VT_I4:0]*/;
  _args[7] = lineRef /*[VT_I4:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAMessageServiceDispT<T>::AddMessageGroup(BSTR groupName/*[in]*/, 
                                            Borland_studio_toolsapi_tlb::IOTAMessageGroup** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("AddMessageGroup"), DISPID(DISPID_UNKNOWN/*[1610743818]*/));
  TAutoArgs<1> _args;
  _args[1] = groupName /*[VT_BSTR:0]*/;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAMessageGroup**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAMessageGroup* __fastcall
IOTAMessageServiceDispT<T>::AddMessageGroup(BSTR groupName/*[in]*/)
{
  Borland_studio_toolsapi_tlb::IOTAMessageGroup* pRetVal;
  this->AddMessageGroup(groupName, (Borland_studio_toolsapi_tlb::IOTAMessageGroup**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAMessageServiceDispT<T>::AddTitleMessage_2(BSTR messageStr/*[in]*/, 
                                              Borland_studio_toolsapi_tlb::IOTAMessageGroup* messageGroup/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("AddTitleMessage_2"), DISPID(DISPID_UNKNOWN/*[1610743819]*/));
  TAutoArgs<2> _args;
  _args[1] = messageStr /*[VT_BSTR:0]*/;
  _args[2] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTAMessageGroup*)messageGroup /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAMessageServiceDispT<T>::AddToolMessage_3(BSTR fileName/*[in]*/, BSTR messageStr/*[in]*/, 
                                             BSTR prefixStr/*[in]*/, long LineNumber/*[in]*/, 
                                             long ColumnNumber/*[in]*/, long parent/*[in]*/, 
                                             long* lineRef/*[out]*/, 
                                             Borland_studio_toolsapi_tlb::IOTAMessageGroup* messageGroup/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("AddToolMessage_3"), DISPID(DISPID_UNKNOWN/*[1610743820]*/));
  TAutoArgs<8> _args;
  _args[1] = fileName /*[VT_BSTR:0]*/;
  _args[2] = messageStr /*[VT_BSTR:0]*/;
  _args[3] = prefixStr /*[VT_BSTR:0]*/;
  _args[4] = LineNumber /*[VT_I4:0]*/;
  _args[5] = ColumnNumber /*[VT_I4:0]*/;
  _args[6] = parent /*[VT_I4:0]*/;
  _args[7] = lineRef /*[VT_I4:1]*/;
  _args[8] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTAMessageGroup*)messageGroup /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAMessageServiceDispT<T>::ClearMessageGroup(Borland_studio_toolsapi_tlb::IOTAMessageGroup* messageGroup/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("ClearMessageGroup"), DISPID(DISPID_UNKNOWN/*[1610743821]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTAMessageGroup*)messageGroup /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAMessageServiceDispT<T>::ClearToolMessages_2(Borland_studio_toolsapi_tlb::IOTAMessageGroup* messageGroup/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("ClearToolMessages_2"), DISPID(DISPID_UNKNOWN/*[1610743822]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTAMessageGroup*)messageGroup /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAMessageServiceDispT<T>::get_MessageGroupCount(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("MessageGroupCount"), DISPID(DISPID_UNKNOWN/*[1610743823]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> long __fastcall
IOTAMessageServiceDispT<T>::get_MessageGroupCount(void)
{
  long pRetVal;
  this->get_MessageGroupCount((long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAMessageServiceDispT<T>::GetMessageGroup(long index/*[in]*/, 
                                            Borland_studio_toolsapi_tlb::IOTAMessageGroup** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetMessageGroup"), DISPID(DISPID_UNKNOWN/*[1610743824]*/));
  TAutoArgs<1> _args;
  _args[1] = index /*[VT_I4:0]*/;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAMessageGroup**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAMessageGroup* __fastcall
IOTAMessageServiceDispT<T>::GetMessageGroup(long index/*[in]*/)
{
  Borland_studio_toolsapi_tlb::IOTAMessageGroup* pRetVal;
  this->GetMessageGroup(index, (Borland_studio_toolsapi_tlb::IOTAMessageGroup**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAMessageServiceDispT<T>::GetGroup(BSTR groupName/*[in]*/, 
                                     Borland_studio_toolsapi_tlb::IOTAMessageGroup** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetGroup"), DISPID(DISPID_UNKNOWN/*[1610743825]*/));
  TAutoArgs<1> _args;
  _args[1] = groupName /*[VT_BSTR:0]*/;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAMessageGroup**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAMessageGroup* __fastcall
IOTAMessageServiceDispT<T>::GetGroup(BSTR groupName/*[in]*/)
{
  Borland_studio_toolsapi_tlb::IOTAMessageGroup* pRetVal;
  this->GetGroup(groupName, (Borland_studio_toolsapi_tlb::IOTAMessageGroup**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAMessageServiceDispT<T>::ShowMessageView(Borland_studio_toolsapi_tlb::IOTAMessageGroup* messageGroup/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("ShowMessageView"), DISPID(DISPID_UNKNOWN/*[1610743826]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTAMessageGroup*)messageGroup /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAMessageServiceDispT<T>::RemoveMessageGroup(Borland_studio_toolsapi_tlb::IOTAMessageGroup* messageGroup/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("RemoveMessageGroup"), DISPID(DISPID_UNKNOWN/*[1610743827]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTAMessageGroup*)messageGroup /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAMessageServiceDispT<T>::AddCompilerMessage(BSTR fileName/*[in]*/, BSTR messageStr/*[in]*/, 
                                               BSTR toolName/*[in]*/, unsigned_char Kind/*[in]*/, 
                                               long LineNumber/*[in]*/, long ColumnNumber/*[in]*/, 
                                               long parent/*[in]*/, long* lineRef/*[out]*/)
{
  _TDispID _dispid(*this, OLETEXT("AddCompilerMessage"), DISPID(DISPID_UNKNOWN/*[1610743828]*/));
  TAutoArgs<8> _args;
  _args[1] = fileName /*[VT_BSTR:0]*/;
  _args[2] = messageStr /*[VT_BSTR:0]*/;
  _args[3] = toolName /*[VT_BSTR:0]*/;
  _args[4] = Kind /*[VT_UI1:0]*/;
  _args[5] = LineNumber /*[VT_I4:0]*/;
  _args[6] = ColumnNumber /*[VT_I4:0]*/;
  _args[7] = parent /*[VT_I4:0]*/;
  _args[8] = lineRef /*[VT_I4:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAMessageServiceDispT<T>::AddCompilerMessage_2(BSTR fileName/*[in]*/, BSTR messageStr/*[in]*/, 
                                                 BSTR toolName/*[in]*/, unsigned_char Kind/*[in]*/, 
                                                 long LineNumber/*[in]*/, long ColumnNumber/*[in]*/
                                                 , BSTR helpKeyword/*[in]*/, long parent/*[in]*/, 
                                                 long* lineRef/*[out]*/)
{
  _TDispID _dispid(*this, OLETEXT("AddCompilerMessage_2"), DISPID(DISPID_UNKNOWN/*[1610743829]*/));
  TAutoArgs<9> _args;
  _args[1] = fileName /*[VT_BSTR:0]*/;
  _args[2] = messageStr /*[VT_BSTR:0]*/;
  _args[3] = toolName /*[VT_BSTR:0]*/;
  _args[4] = Kind /*[VT_UI1:0]*/;
  _args[5] = LineNumber /*[VT_I4:0]*/;
  _args[6] = ColumnNumber /*[VT_I4:0]*/;
  _args[7] = helpKeyword /*[VT_BSTR:0]*/;
  _args[8] = parent /*[VT_I4:0]*/;
  _args[9] = lineRef /*[VT_I4:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAMessageServiceDispT<T>::AddCompilerMessage_3(BSTR fileName/*[in]*/, BSTR messageStr/*[in]*/, 
                                                 BSTR toolName/*[in]*/, unsigned_char Kind/*[in]*/, 
                                                 long LineNumber/*[in]*/, long ColumnNumber/*[in]*/
                                                 , long helpContext/*[in]*/, long parent/*[in]*/, 
                                                 long* lineRef/*[out]*/)
{
  _TDispID _dispid(*this, OLETEXT("AddCompilerMessage_3"), DISPID(DISPID_UNKNOWN/*[1610743830]*/));
  TAutoArgs<9> _args;
  _args[1] = fileName /*[VT_BSTR:0]*/;
  _args[2] = messageStr /*[VT_BSTR:0]*/;
  _args[3] = toolName /*[VT_BSTR:0]*/;
  _args[4] = Kind /*[VT_UI1:0]*/;
  _args[5] = LineNumber /*[VT_I4:0]*/;
  _args[6] = ColumnNumber /*[VT_I4:0]*/;
  _args[7] = helpContext /*[VT_I4:0]*/;
  _args[8] = parent /*[VT_I4:0]*/;
  _args[9] = lineRef /*[VT_I4:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAMessageServiceDispT<T>::add_MessageGroupAdded(Borland_studio_toolsapi_tlb::_MessageGroupHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("add_MessageGroupAdded"), DISPID(DISPID_UNKNOWN/*[1610743831]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::_MessageGroupHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAMessageServiceDispT<T>::remove_MessageGroupAdded(Borland_studio_toolsapi_tlb::_MessageGroupHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("remove_MessageGroupAdded"), DISPID(DISPID_UNKNOWN/*[1610743832]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::_MessageGroupHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAMessageServiceDispT<T>::add_MessageGroupDeleted(Borland_studio_toolsapi_tlb::_MessageGroupHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("add_MessageGroupDeleted"), DISPID(DISPID_UNKNOWN/*[1610743833]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::_MessageGroupHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAMessageServiceDispT<T>::remove_MessageGroupDeleted(Borland_studio_toolsapi_tlb::_MessageGroupHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("remove_MessageGroupDeleted"), DISPID(DISPID_UNKNOWN/*[1610743834]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::_MessageGroupHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAMessageServiceDispT<T>::NextMessage(VARIANT_BOOL goForward/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("NextMessage"), DISPID(DISPID_UNKNOWN/*[1610743835]*/));
  TAutoArgs<1> _args;
  _args[1] = goForward /*[VT_BOOL:0]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAMessageServiceDispT<T>::NextErrorMessage(VARIANT_BOOL goForward/*[in]*/, 
                                             VARIANT_BOOL errorsOnly/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("NextErrorMessage"), DISPID(DISPID_UNKNOWN/*[1610743836]*/));
  TAutoArgs<2> _args;
  _args[1] = goForward /*[VT_BOOL:0]*/;
  _args[2] = errorsOnly /*[VT_BOOL:0]*/;
  return OleFunction(_dispid, _args);
}

// *********************************************************************//
// DispIntf:  IOTAEnvironmentOptions
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0036BC84-FB29-4769-98CA-A374E71F7544}
// *********************************************************************//
// *********************************************************************//
// DispIntf:  IFileNotificationEventArgs
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E3F325D2-1720-4C71-9239-E3CFBE0EB3E8}
// *********************************************************************//
template <class T> HRESULT __fastcall
IFileNotificationEventArgsDispT<T>::get_NotifyCode(Borland_studio_toolsapi_tlb::OTAFileNotification* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("NotifyCode"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr((int*)pRetVal /*[VT_USERDEFINED:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::OTAFileNotification __fastcall
IFileNotificationEventArgsDispT<T>::get_NotifyCode(void)
{
  Borland_studio_toolsapi_tlb::OTAFileNotification pRetVal;
  this->get_NotifyCode((Borland_studio_toolsapi_tlb::OTAFileNotification*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IFileNotificationEventArgsDispT<T>::get_fileName(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("fileName"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IFileNotificationEventArgsDispT<T>::get_fileName(void)
{
  BSTR pRetVal;
  this->get_fileName((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IFileNotificationEventArgsDispT<T>::get_Cancel(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Cancel"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IFileNotificationEventArgsDispT<T>::get_Cancel(void)
{
  VARIANT_BOOL pRetVal;
  this->get_Cancel((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IFileNotificationEventArgsDispT<T>::set_Cancel(VARIANT_BOOL pRetVal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Cancel"), DISPID(1610743810));
  TAutoArgs<1> _args;
  _args[1] = pRetVal /*[VT_BOOL:0]*/;
  return OlePropertyPut(_dispid, _args);
}

// *********************************************************************//
// SmartIntf: TCOM_FileNotificationEventArgs
// Interface: _FileNotificationEventArgs
// *********************************************************************//
// *********************************************************************//
// DispIntf:  _FileNotificationEventArgs
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {F5AB5C1B-FDC3-3D42-AB2B-9820E1A737C8}
// *********************************************************************//
// *********************************************************************//
// DispIntf:  IBeforeCompileEventArgs
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E4DD4461-03AB-4E1C-B2F7-84495C360920}
// *********************************************************************//
template <class T> HRESULT __fastcall
IBeforeCompileEventArgsDispT<T>::get_project(Borland_studio_toolsapi_tlb::IOTAProject** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("project"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAProject**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAProjectPtr __fastcall
IBeforeCompileEventArgsDispT<T>::get_project(void)
{
  Borland_studio_toolsapi_tlb::IOTAProjectPtr pRetVal;
  this->get_project(&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IBeforeCompileEventArgsDispT<T>::get_IsCodeInsight(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("IsCodeInsight"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IBeforeCompileEventArgsDispT<T>::get_IsCodeInsight(void)
{
  VARIANT_BOOL pRetVal;
  this->get_IsCodeInsight((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IBeforeCompileEventArgsDispT<T>::get_Cancel(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Cancel"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IBeforeCompileEventArgsDispT<T>::get_Cancel(void)
{
  VARIANT_BOOL pRetVal;
  this->get_Cancel((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IBeforeCompileEventArgsDispT<T>::set_Cancel(VARIANT_BOOL pRetVal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Cancel"), DISPID(1610743810));
  TAutoArgs<1> _args;
  _args[1] = pRetVal /*[VT_BOOL:0]*/;
  return OlePropertyPut(_dispid, _args);
}

// *********************************************************************//
// SmartIntf: TCOM_BeforeCompileArgs
// Interface: _BeforeCompileArgs
// *********************************************************************//
// *********************************************************************//
// DispIntf:  _BeforeCompileArgs
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {F88936B3-5313-3308-A5B6-35ECF6F4AC73}
// *********************************************************************//
// *********************************************************************//
// DispIntf:  IAfterCompileEventArgs
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {015F0FB1-6E8A-41EE-B419-5078C6F5F0D0}
// *********************************************************************//
template <class T> HRESULT __fastcall
IAfterCompileEventArgsDispT<T>::get_IsCodeInsight(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("IsCodeInsight"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IAfterCompileEventArgsDispT<T>::get_IsCodeInsight(void)
{
  VARIANT_BOOL pRetVal;
  this->get_IsCodeInsight((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IAfterCompileEventArgsDispT<T>::get_Succeeded(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Succeeded"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IAfterCompileEventArgsDispT<T>::get_Succeeded(void)
{
  VARIANT_BOOL pRetVal;
  this->get_Succeeded((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

// *********************************************************************//
// SmartIntf: TCOM_AfterCompileArgs
// Interface: _AfterCompileArgs
// *********************************************************************//
// *********************************************************************//
// DispIntf:  _AfterCompileArgs
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {609A4F69-2731-3F4F-98C1-A008B2077FD4}
// *********************************************************************//
// *********************************************************************//
// SmartIntf: TCOM_FileNotificationHandler
// Interface: _FileNotificationHandler
// *********************************************************************//
// *********************************************************************//
// DispIntf:  _FileNotificationHandler
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {65B58C48-9B9B-348B-8A6F-2FF96DE79AF1}
// *********************************************************************//
// *********************************************************************//
// SmartIntf: TCOM_BeforeCompileHandler
// Interface: _BeforeCompileHandler
// *********************************************************************//
// *********************************************************************//
// DispIntf:  _BeforeCompileHandler
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {6A531A35-013E-3BA9-8E59-55EF858ABF74}
// *********************************************************************//
// *********************************************************************//
// SmartIntf: TCOM_AfterCompileHandler
// Interface: _AfterCompileHandler
// *********************************************************************//
// *********************************************************************//
// DispIntf:  _AfterCompileHandler
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {8100CA55-F867-37DC-B256-FADD8C308F5D}
// *********************************************************************//
// *********************************************************************//
// DispIntf:  IOTAService
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {724986CC-FE2A-4691-9495-A1C20328A5BE}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAServiceDispT<T>::add_BeforeCompile(Borland_studio_toolsapi_tlb::_BeforeCompileHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("add_BeforeCompile"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::_BeforeCompileHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAServiceDispT<T>::remove_BeforeCompile(Borland_studio_toolsapi_tlb::_BeforeCompileHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("remove_BeforeCompile"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::_BeforeCompileHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAServiceDispT<T>::add_AfterCompile(Borland_studio_toolsapi_tlb::_AfterCompileHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("add_AfterCompile"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::_AfterCompileHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAServiceDispT<T>::remove_AfterCompile(Borland_studio_toolsapi_tlb::_AfterCompileHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("remove_AfterCompile"), DISPID(DISPID_UNKNOWN/*[1610743811]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::_AfterCompileHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAServiceDispT<T>::add_FileNotification(Borland_studio_toolsapi_tlb::_FileNotificationHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("add_FileNotification"), DISPID(DISPID_UNKNOWN/*[1610743812]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::_FileNotificationHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAServiceDispT<T>::remove_FileNotification(Borland_studio_toolsapi_tlb::_FileNotificationHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("remove_FileNotification"), DISPID(DISPID_UNKNOWN/*[1610743813]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::_FileNotificationHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAServiceDispT<T>::get_BaseRegistryKey(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("BaseRegistryKey"), DISPID(DISPID_UNKNOWN/*[1610743814]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAServiceDispT<T>::get_BaseRegistryKey(void)
{
  BSTR pRetVal;
  this->get_BaseRegistryKey((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAServiceDispT<T>::get_ProductIdentifier(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("ProductIdentifier"), DISPID(DISPID_UNKNOWN/*[1610743815]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAServiceDispT<T>::get_ProductIdentifier(void)
{
  BSTR pRetVal;
  this->get_ProductIdentifier((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAServiceDispT<T>::get_ActiveDesignerType(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("ActiveDesignerType"), DISPID(DISPID_UNKNOWN/*[1610743816]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAServiceDispT<T>::get_ActiveDesignerType(void)
{
  BSTR pRetVal;
  this->get_ActiveDesignerType((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAServiceDispT<T>::get_RootDirectory(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("RootDirectory"), DISPID(DISPID_UNKNOWN/*[1610743817]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAServiceDispT<T>::get_RootDirectory(void)
{
  BSTR pRetVal;
  this->get_RootDirectory((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAServiceDispT<T>::get_BinDirectory(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("BinDirectory"), DISPID(DISPID_UNKNOWN/*[1610743818]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAServiceDispT<T>::get_BinDirectory(void)
{
  BSTR pRetVal;
  this->get_BinDirectory((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAServiceDispT<T>::get_TemplateDirectory(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("TemplateDirectory"), DISPID(DISPID_UNKNOWN/*[1610743819]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAServiceDispT<T>::get_TemplateDirectory(void)
{
  BSTR pRetVal;
  this->get_TemplateDirectory((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAServiceDispT<T>::get_ApplicationDataDirectory(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("ApplicationDataDirectory"), DISPID(DISPID_UNKNOWN/*[1610743820]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAServiceDispT<T>::get_ApplicationDataDirectory(void)
{
  BSTR pRetVal;
  this->get_ApplicationDataDirectory((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAServiceDispT<T>::get_LocalApplicationDataDirectory(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("LocalApplicationDataDirectory"), DISPID(DISPID_UNKNOWN/*[1610743821]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAServiceDispT<T>::get_LocalApplicationDataDirectory(void)
{
  BSTR pRetVal;
  this->get_LocalApplicationDataDirectory((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAServiceDispT<T>::get_ParentHandle(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("ParentHandle"), DISPID(DISPID_UNKNOWN/*[1610743822]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> long __fastcall
IOTAServiceDispT<T>::get_ParentHandle(void)
{
  long pRetVal;
  this->get_ParentHandle((long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAServiceDispT<T>::get_EnvironmentOptions(Borland_studio_toolsapi_tlb::IOTAEnvironmentOptions** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("EnvironmentOptions"), DISPID(DISPID_UNKNOWN/*[1610743823]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAEnvironmentOptions**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAEnvironmentOptionsPtr __fastcall
IOTAServiceDispT<T>::get_EnvironmentOptions(void)
{
  Borland_studio_toolsapi_tlb::IOTAEnvironmentOptionsPtr pRetVal;
  this->get_EnvironmentOptions(&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAServiceDispT<T>::get_IDEPreferredUILanguages(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("IDEPreferredUILanguages"), DISPID(DISPID_UNKNOWN/*[1610743824]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAServiceDispT<T>::get_IDEPreferredUILanguages(void)
{
  BSTR pRetVal;
  this->get_IDEPreferredUILanguages((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAServiceDispT<T>::add_CacheCleared(Mscorlib_tlb::_EventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("add_CacheCleared"), DISPID(DISPID_UNKNOWN/*[1610743825]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Mscorlib_tlb::_EventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAServiceDispT<T>::remove_CacheCleared(Mscorlib_tlb::_EventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("remove_CacheCleared"), DISPID(DISPID_UNKNOWN/*[1610743826]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Mscorlib_tlb::_EventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

// *********************************************************************//
// DispIntf:  IOTADotNetObjectInspectorService
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5EB65058-01B0-46E2-858F-065C5C5F4A29}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTADotNetObjectInspectorServiceDispT<T>::SelectObjects(LPSAFEARRAY objects/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("SelectObjects"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<1> _args;
  _args[1] = objects /*[VT_SAFEARRAY:0]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTADotNetObjectInspectorServiceDispT<T>::get_SelectedObjects(LPSAFEARRAY* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("SelectedObjects"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_SAFEARRAY:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> LPSAFEARRAY __fastcall
IOTADotNetObjectInspectorServiceDispT<T>::get_SelectedObjects(void)
{
  LPSAFEARRAY pRetVal;
  this->get_SelectedObjects((LPSAFEARRAY*)&pRetVal);
  return pRetVal;
}

// *********************************************************************//
// DispIntf:  IOTACultureInfo
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1DA51503-24DB-4DB5-A151-B57E2569D8AA}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTACultureInfoDispT<T>::GetCultureCodes(LPSAFEARRAY* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetCultureCodes"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_SAFEARRAY:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> LPSAFEARRAY __fastcall
IOTACultureInfoDispT<T>::GetCultureCodes(void)
{
  LPSAFEARRAY pRetVal;
  this->GetCultureCodes((LPSAFEARRAY*)&pRetVal);
  return pRetVal;
}

// *********************************************************************//
// DispIntf:  IOTAMenuItem
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7A123EBF-A0C5-45B8-BDF7-CFBA02528867}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAMenuItemDispT<T>::get_Name(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Name"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAMenuItemDispT<T>::get_Name(void)
{
  BSTR pRetVal;
  this->get_Name((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAMenuItemDispT<T>::set_Name(BSTR pRetVal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Name"), DISPID(1610743808));
  TAutoArgs<1> _args;
  _args[1] = pRetVal /*[VT_BSTR:0]*/;
  return OlePropertyPut(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAMenuItemDispT<T>::get_Text(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Text"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAMenuItemDispT<T>::get_Text(void)
{
  BSTR pRetVal;
  this->get_Text((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAMenuItemDispT<T>::set_Text(BSTR pRetVal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Text"), DISPID(1610743810));
  TAutoArgs<1> _args;
  _args[1] = pRetVal /*[VT_BSTR:0]*/;
  return OlePropertyPut(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAMenuItemDispT<T>::get_Enabled(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Enabled"), DISPID(DISPID_UNKNOWN/*[1610743812]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAMenuItemDispT<T>::get_Enabled(void)
{
  VARIANT_BOOL pRetVal;
  this->get_Enabled((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAMenuItemDispT<T>::set_Enabled(VARIANT_BOOL pRetVal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Enabled"), DISPID(1610743812));
  TAutoArgs<1> _args;
  _args[1] = pRetVal /*[VT_BOOL:0]*/;
  return OlePropertyPut(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAMenuItemDispT<T>::get_Checked(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Checked"), DISPID(DISPID_UNKNOWN/*[1610743814]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAMenuItemDispT<T>::get_Checked(void)
{
  VARIANT_BOOL pRetVal;
  this->get_Checked((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAMenuItemDispT<T>::set_Checked(VARIANT_BOOL pRetVal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Checked"), DISPID(1610743814));
  TAutoArgs<1> _args;
  _args[1] = pRetVal /*[VT_BOOL:0]*/;
  return OlePropertyPut(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAMenuItemDispT<T>::get_Visible(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Visible"), DISPID(DISPID_UNKNOWN/*[1610743816]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAMenuItemDispT<T>::get_Visible(void)
{
  VARIANT_BOOL pRetVal;
  this->get_Visible((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAMenuItemDispT<T>::set_Visible(VARIANT_BOOL pRetVal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Visible"), DISPID(1610743816));
  TAutoArgs<1> _args;
  _args[1] = pRetVal /*[VT_BOOL:0]*/;
  return OlePropertyPut(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAMenuItemDispT<T>::get_Shortcut(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Shortcut"), DISPID(DISPID_UNKNOWN/*[1610743818]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> long __fastcall
IOTAMenuItemDispT<T>::get_Shortcut(void)
{
  long pRetVal;
  this->get_Shortcut((long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAMenuItemDispT<T>::set_Shortcut(long pRetVal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Shortcut"), DISPID(1610743818));
  TAutoArgs<1> _args;
  _args[1] = pRetVal /*[VT_I4:0]*/;
  return OlePropertyPut(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAMenuItemDispT<T>::get_category(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("category"), DISPID(DISPID_UNKNOWN/*[1610743820]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAMenuItemDispT<T>::get_category(void)
{
  BSTR pRetVal;
  this->get_category((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAMenuItemDispT<T>::set_category(BSTR pRetVal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("category"), DISPID(1610743820));
  TAutoArgs<1> _args;
  _args[1] = pRetVal /*[VT_BSTR:0]*/;
  return OlePropertyPut(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAMenuItemDispT<T>::get_helpContext(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("helpContext"), DISPID(DISPID_UNKNOWN/*[1610743822]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> long __fastcall
IOTAMenuItemDispT<T>::get_helpContext(void)
{
  long pRetVal;
  this->get_helpContext((long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAMenuItemDispT<T>::set_helpContext(long pRetVal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("helpContext"), DISPID(1610743822));
  TAutoArgs<1> _args;
  _args[1] = pRetVal /*[VT_I4:0]*/;
  return OlePropertyPut(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAMenuItemDispT<T>::get_PreviousMenuItem(Borland_studio_toolsapi_tlb::IOTAMenuItem** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("PreviousMenuItem"), DISPID(DISPID_UNKNOWN/*[1610743824]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAMenuItem**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAMenuItemPtr __fastcall
IOTAMenuItemDispT<T>::get_PreviousMenuItem(void)
{
  Borland_studio_toolsapi_tlb::IOTAMenuItemPtr pRetVal;
  this->get_PreviousMenuItem(&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAMenuItemDispT<T>::get_NextMenuItem(Borland_studio_toolsapi_tlb::IOTAMenuItem** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("NextMenuItem"), DISPID(DISPID_UNKNOWN/*[1610743825]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAMenuItem**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAMenuItemPtr __fastcall
IOTAMenuItemDispT<T>::get_NextMenuItem(void)
{
  Borland_studio_toolsapi_tlb::IOTAMenuItemPtr pRetVal;
  this->get_NextMenuItem(&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAMenuItemDispT<T>::get_ParentMenuItem(Borland_studio_toolsapi_tlb::IOTAMenuItem** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("ParentMenuItem"), DISPID(DISPID_UNKNOWN/*[1610743826]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAMenuItem**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAMenuItemPtr __fastcall
IOTAMenuItemDispT<T>::get_ParentMenuItem(void)
{
  Borland_studio_toolsapi_tlb::IOTAMenuItemPtr pRetVal;
  this->get_ParentMenuItem(&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAMenuItemDispT<T>::get_ChildCount(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("ChildCount"), DISPID(DISPID_UNKNOWN/*[1610743827]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> long __fastcall
IOTAMenuItemDispT<T>::get_ChildCount(void)
{
  long pRetVal;
  this->get_ChildCount((long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAMenuItemDispT<T>::ChildMenuItem(long index/*[in]*/, 
                                    Borland_studio_toolsapi_tlb::IOTAMenuItem** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("ChildMenuItem"), DISPID(DISPID_UNKNOWN/*[1610743828]*/));
  TAutoArgs<1> _args;
  _args[1] = index /*[VT_I4:0]*/;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAMenuItem**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAMenuItem* __fastcall
IOTAMenuItemDispT<T>::ChildMenuItem(long index/*[in]*/)
{
  Borland_studio_toolsapi_tlb::IOTAMenuItem* pRetVal;
  this->ChildMenuItem(index, (Borland_studio_toolsapi_tlb::IOTAMenuItem**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAMenuItemDispT<T>::Execute()
{
  _TDispID _dispid(*this, OLETEXT("Execute"), DISPID(DISPID_UNKNOWN/*[1610743829]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAMenuItemDispT<T>::add_Executed(Mscorlib_tlb::_EventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("add_Executed"), DISPID(DISPID_UNKNOWN/*[1610743830]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Mscorlib_tlb::_EventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAMenuItemDispT<T>::remove_Executed(Mscorlib_tlb::_EventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("remove_Executed"), DISPID(DISPID_UNKNOWN/*[1610743831]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Mscorlib_tlb::_EventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAMenuItemDispT<T>::add_Updated(Mscorlib_tlb::_EventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("add_Updated"), DISPID(DISPID_UNKNOWN/*[1610743832]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Mscorlib_tlb::_EventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAMenuItemDispT<T>::remove_Updated(Mscorlib_tlb::_EventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("remove_Updated"), DISPID(DISPID_UNKNOWN/*[1610743833]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Mscorlib_tlb::_EventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

// *********************************************************************//
// SmartIntf: TCOM_OTAContainerTypes
// Interface: _OTAContainerTypes
// *********************************************************************//
// *********************************************************************//
// DispIntf:  _OTAContainerTypes
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {5AC81224-7DD8-3F4B-9ABB-7C74FA81FDC3}
// *********************************************************************//
// *********************************************************************//
// DispIntf:  IOTAProjectMenuCreatorNotifier
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9A2035D3-B602-4763-9832-7881CDD2E47F}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAProjectMenuCreatorNotifierDispT<T>::AddMenu(BSTR Ident/*[in]*/, 
                                                Borland_studio_toolsapi_tlb::IOTAMenuItem** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("AddMenu"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<1> _args;
  _args[1] = Ident /*[VT_BSTR:0]*/;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAMenuItem**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAMenuItem* __fastcall
IOTAProjectMenuCreatorNotifierDispT<T>::AddMenu(BSTR Ident/*[in]*/)
{
  Borland_studio_toolsapi_tlb::IOTAMenuItem* pRetVal;
  this->AddMenu(Ident, (Borland_studio_toolsapi_tlb::IOTAMenuItem**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAProjectMenuCreatorNotifierDispT<T>::CanHandle(BSTR Ident/*[in]*/, 
                                                  VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("CanHandle"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<1> _args;
  _args[1] = Ident /*[VT_BSTR:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAProjectMenuCreatorNotifierDispT<T>::CanHandle(BSTR Ident/*[in]*/)
{
  VARIANT_BOOL pRetVal;
  this->CanHandle(Ident, (VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAProjectMenuCreatorNotifierDispT<T>::Destroyed()
{
  _TDispID _dispid(*this, OLETEXT("Destroyed"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  return OleFunction(_dispid);
}

// *********************************************************************//
// DispIntf:  IOTAProjectManagerMenuServices
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {158FFEA2-79EB-4000-AAE7-EBD67D9AF4C3}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAProjectManagerMenuServicesDispT<T>::CreateMenuItem(BSTR Name/*[in]*/, BSTR Text/*[in]*/, 
                                                       Borland_studio_toolsapi_tlb::IOTAMenuItem** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("CreateMenuItem"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<2> _args;
  _args[1] = Name /*[VT_BSTR:0]*/;
  _args[2] = Text /*[VT_BSTR:0]*/;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAMenuItem**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAMenuItem* __fastcall
IOTAProjectManagerMenuServicesDispT<T>::CreateMenuItem(BSTR Name/*[in]*/, BSTR Text/*[in]*/)
{
  Borland_studio_toolsapi_tlb::IOTAMenuItem* pRetVal;
  this->CreateMenuItem(Name, Text, (Borland_studio_toolsapi_tlb::IOTAMenuItem**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAProjectManagerMenuServicesDispT<T>::AddMenuItem(Borland_studio_toolsapi_tlb::IOTAMenuItem* ParentMenu/*[in]*/
                                                    , BSTR Name/*[in]*/, BSTR Text/*[in]*/, 
                                                    Borland_studio_toolsapi_tlb::IOTAMenuItem** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("AddMenuItem"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<3> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTAMenuItem*)ParentMenu /*[VT_USERDEFINED:1]*/;
  _args[2] = Name /*[VT_BSTR:0]*/;
  _args[3] = Text /*[VT_BSTR:0]*/;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAMenuItem**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAMenuItem* __fastcall
IOTAProjectManagerMenuServicesDispT<T>::AddMenuItem(Borland_studio_toolsapi_tlb::IOTAMenuItem* ParentMenu/*[in]*/, 
                                                    BSTR Name/*[in]*/, BSTR Text/*[in]*/)
{
  Borland_studio_toolsapi_tlb::IOTAMenuItem* pRetVal;
  this->AddMenuItem(ParentMenu, Name, Text, (Borland_studio_toolsapi_tlb::IOTAMenuItem**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAProjectManagerMenuServicesDispT<T>::AddMenuCreatorNotifier(Borland_studio_toolsapi_tlb::IOTAProjectMenuCreatorNotifier* Notifier/*[in]*/
                                                               , long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("AddMenuCreatorNotifier"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTAProjectMenuCreatorNotifier*)Notifier /*[VT_USERDEFINED:1]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> long __fastcall
IOTAProjectManagerMenuServicesDispT<T>::AddMenuCreatorNotifier(Borland_studio_toolsapi_tlb::IOTAProjectMenuCreatorNotifier* Notifier/*[in]*/)
{
  long pRetVal;
  this->AddMenuCreatorNotifier(Notifier, (long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAProjectManagerMenuServicesDispT<T>::RemoveMenuCreatorNotifier(long index/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("RemoveMenuCreatorNotifier"), DISPID(DISPID_UNKNOWN/*[1610743811]*/));
  TAutoArgs<1> _args;
  _args[1] = index /*[VT_I4:0]*/;
  return OleFunction(_dispid, _args);
}

// *********************************************************************//
// DispIntf:  IOTAProjectManager
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D53EC96F-F329-43C2-B9A2-E30A1607A87B}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAProjectManagerDispT<T>::get_CurrentSelectionIdent(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("CurrentSelectionIdent"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAProjectManagerDispT<T>::get_CurrentSelectionIdent(void)
{
  BSTR pRetVal;
  this->get_CurrentSelectionIdent((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAProjectManagerDispT<T>::get_CurrentSelectionProject(Borland_studio_toolsapi_tlb::IOTAProject** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("CurrentSelectionProject"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAProject**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAProjectPtr __fastcall
IOTAProjectManagerDispT<T>::get_CurrentSelectionProject(void)
{
  Borland_studio_toolsapi_tlb::IOTAProjectPtr pRetVal;
  this->get_CurrentSelectionProject(&pRetVal);
  return pRetVal;
}

// *********************************************************************//
// DispIntf:  IOTAMainMenuService
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9CCFD283-F6F9-4E2B-A4B6-5EBE67A21313}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAMainMenuServiceDispT<T>::GetFirstMenuItem(Borland_studio_toolsapi_tlb::IOTAMenuItem** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetFirstMenuItem"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAMenuItem**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAMenuItem* __fastcall
IOTAMainMenuServiceDispT<T>::GetFirstMenuItem(void)
{
  Borland_studio_toolsapi_tlb::IOTAMenuItem* pRetVal;
  this->GetFirstMenuItem((Borland_studio_toolsapi_tlb::IOTAMenuItem**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAMainMenuServiceDispT<T>::GetMenuItem(BSTR Name/*[in]*/, 
                                         Borland_studio_toolsapi_tlb::IOTAMenuItem** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetMenuItem"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<1> _args;
  _args[1] = Name /*[VT_BSTR:0]*/;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAMenuItem**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAMenuItem* __fastcall
IOTAMainMenuServiceDispT<T>::GetMenuItem(BSTR Name/*[in]*/)
{
  Borland_studio_toolsapi_tlb::IOTAMenuItem* pRetVal;
  this->GetMenuItem(Name, (Borland_studio_toolsapi_tlb::IOTAMenuItem**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAMainMenuServiceDispT<T>::RemoveMenuItem(BSTR Name/*[in]*/, VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("RemoveMenuItem"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<1> _args;
  _args[1] = Name /*[VT_BSTR:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAMainMenuServiceDispT<T>::RemoveMenuItem(BSTR Name/*[in]*/)
{
  VARIANT_BOOL pRetVal;
  this->RemoveMenuItem(Name, (VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAMainMenuServiceDispT<T>::AddMenuItem(BSTR referenceItemName/*[in]*/, 
                                         Borland_studio_toolsapi_tlb::OTAMenuItemLocation newLocation/*[in]*/
                                         , BSTR NewName/*[in]*/, BSTR newText/*[in]*/, 
                                         Borland_studio_toolsapi_tlb::IOTAMenuItem** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("AddMenuItem"), DISPID(DISPID_UNKNOWN/*[1610743811]*/));
  TAutoArgs<4> _args;
  _args[1] = referenceItemName /*[VT_BSTR:0]*/;
  _args[2] = (int)newLocation /*[VT_USERDEFINED:0]*/;
  _args[3] = NewName /*[VT_BSTR:0]*/;
  _args[4] = newText /*[VT_BSTR:0]*/;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAMenuItem**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAMenuItem* __fastcall
IOTAMainMenuServiceDispT<T>::AddMenuItem(BSTR referenceItemName/*[in]*/, 
                                         Borland_studio_toolsapi_tlb::OTAMenuItemLocation newLocation/*[in]*/, 
                                         BSTR NewName/*[in]*/, BSTR newText/*[in]*/)
{
  Borland_studio_toolsapi_tlb::IOTAMenuItem* pRetVal;
  this->AddMenuItem(referenceItemName, newLocation, NewName, newText, (Borland_studio_toolsapi_tlb::IOTAMenuItem**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAMainMenuServiceDispT<T>::AddMenuItem_2(BSTR referenceItemName/*[in]*/, 
                                           Borland_studio_toolsapi_tlb::OTAMenuItemLocation newLocation/*[in]*/
                                           , BSTR NewName/*[in]*/, BSTR newText/*[in]*/, 
                                           long bitmapHandle/*[in]*/, 
                                           Borland_studio_toolsapi_tlb::IOTAMenuItem** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("AddMenuItem_2"), DISPID(DISPID_UNKNOWN/*[1610743812]*/));
  TAutoArgs<5> _args;
  _args[1] = referenceItemName /*[VT_BSTR:0]*/;
  _args[2] = (int)newLocation /*[VT_USERDEFINED:0]*/;
  _args[3] = NewName /*[VT_BSTR:0]*/;
  _args[4] = newText /*[VT_BSTR:0]*/;
  _args[5] = bitmapHandle /*[VT_I4:0]*/;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAMenuItem**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAMenuItem* __fastcall
IOTAMainMenuServiceDispT<T>::AddMenuItem_2(BSTR referenceItemName/*[in]*/, 
                                           Borland_studio_toolsapi_tlb::OTAMenuItemLocation newLocation/*[in]*/, 
                                           BSTR NewName/*[in]*/, BSTR newText/*[in]*/, 
                                           long bitmapHandle/*[in]*/)
{
  Borland_studio_toolsapi_tlb::IOTAMenuItem* pRetVal;
  this->AddMenuItem_2(referenceItemName, newLocation, NewName, newText, bitmapHandle, (Borland_studio_toolsapi_tlb::IOTAMenuItem**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAMainMenuServiceDispT<T>::AddMenuItem_3(BSTR referenceItemName/*[in]*/, 
                                           Borland_studio_toolsapi_tlb::OTAMenuItemLocation newLocation/*[in]*/
                                           , BSTR NewName/*[in]*/, BSTR newText/*[in]*/, 
                                           long bitmapHandle/*[in]*/, BSTR hintText/*[in]*/, 
                                           Borland_studio_toolsapi_tlb::IOTAMenuItem** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("AddMenuItem_3"), DISPID(DISPID_UNKNOWN/*[1610743813]*/));
  TAutoArgs<6> _args;
  _args[1] = referenceItemName /*[VT_BSTR:0]*/;
  _args[2] = (int)newLocation /*[VT_USERDEFINED:0]*/;
  _args[3] = NewName /*[VT_BSTR:0]*/;
  _args[4] = newText /*[VT_BSTR:0]*/;
  _args[5] = bitmapHandle /*[VT_I4:0]*/;
  _args[6] = hintText /*[VT_BSTR:0]*/;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAMenuItem**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAMenuItem* __fastcall
IOTAMainMenuServiceDispT<T>::AddMenuItem_3(BSTR referenceItemName/*[in]*/, 
                                           Borland_studio_toolsapi_tlb::OTAMenuItemLocation newLocation/*[in]*/, 
                                           BSTR NewName/*[in]*/, BSTR newText/*[in]*/, 
                                           long bitmapHandle/*[in]*/, BSTR hintText/*[in]*/)
{
  Borland_studio_toolsapi_tlb::IOTAMenuItem* pRetVal;
  this->AddMenuItem_3(referenceItemName, newLocation, NewName, newText, bitmapHandle, hintText, (Borland_studio_toolsapi_tlb::IOTAMenuItem**)&pRetVal);
  return pRetVal;
}

// *********************************************************************//
// SmartIntf: TCOM_OTADesignerTypes
// Interface: _OTADesignerTypes
// *********************************************************************//
// *********************************************************************//
// DispIntf:  _OTADesignerTypes
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {3A4EECF9-E15D-3719-975A-040EED1B25E2}
// *********************************************************************//
// *********************************************************************//
// SmartIntf: TCOM_OTACreatorTypes
// Interface: _OTACreatorTypes
// *********************************************************************//
// *********************************************************************//
// DispIntf:  _OTACreatorTypes
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {07E7E651-01B7-36C6-BD3C-7E64B8B8FCA9}
// *********************************************************************//
// *********************************************************************//
// SmartIntf: TCOM_OTAIDEPersonalities
// Interface: _OTAIDEPersonalities
// *********************************************************************//
// *********************************************************************//
// DispIntf:  _OTAIDEPersonalities
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {AB294892-51BD-379A-9905-C49EBEA670CA}
// *********************************************************************//
// *********************************************************************//
// SmartIntf: TCOM_OTAGalleryCategories
// Interface: _OTAGalleryCategories
// *********************************************************************//
// *********************************************************************//
// DispIntf:  _OTAGalleryCategories
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {6AEB0D4C-ED19-3D60-A08C-A9EAA6A9314D}
// *********************************************************************//
// *********************************************************************//
// DispIntf:  IOTAFile
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {83F192E7-9C6D-4FDD-96F3-694FE6C98B4D}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAFileDispT<T>::get_Source(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Source"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAFileDispT<T>::get_Source(void)
{
  BSTR pRetVal;
  this->get_Source((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAFileDispT<T>::get_Age(DATE* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Age"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_DATE:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> DATE __fastcall
IOTAFileDispT<T>::get_Age(void)
{
  DATE pRetVal;
  this->get_Age((DATE*)&pRetVal);
  return pRetVal;
}

// *********************************************************************//
// DispIntf:  IOTACreator
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C9812ADF-42F5-434B-9999-86C366C6536E}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTACreatorDispT<T>::get_CreatorType(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("CreatorType"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTACreatorDispT<T>::get_CreatorType(void)
{
  BSTR pRetVal;
  this->get_CreatorType((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTACreatorDispT<T>::get_Existing(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Existing"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTACreatorDispT<T>::get_Existing(void)
{
  VARIANT_BOOL pRetVal;
  this->get_Existing((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTACreatorDispT<T>::get_fileSystem(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("fileSystem"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTACreatorDispT<T>::get_fileSystem(void)
{
  BSTR pRetVal;
  this->get_fileSystem((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTACreatorDispT<T>::get_Owner(Borland_studio_toolsapi_tlb::IOTAModule** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Owner"), DISPID(DISPID_UNKNOWN/*[1610743811]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAModule**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAModulePtr __fastcall
IOTACreatorDispT<T>::get_Owner(void)
{
  Borland_studio_toolsapi_tlb::IOTAModulePtr pRetVal;
  this->get_Owner(&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTACreatorDispT<T>::get_Unnamed(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Unnamed"), DISPID(DISPID_UNKNOWN/*[1610743812]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTACreatorDispT<T>::get_Unnamed(void)
{
  VARIANT_BOOL pRetVal;
  this->get_Unnamed((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

// *********************************************************************//
// DispIntf:  IOTAModuleCreator
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6A828396-2A30-436C-9E03-2F7EF48CD4A5}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAModuleCreatorDispT<T>::get_AncestorName(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("AncestorName"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAModuleCreatorDispT<T>::get_AncestorName(void)
{
  BSTR pRetVal;
  this->get_AncestorName((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAModuleCreatorDispT<T>::get_ImplFileName(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("ImplFileName"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAModuleCreatorDispT<T>::get_ImplFileName(void)
{
  BSTR pRetVal;
  this->get_ImplFileName((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAModuleCreatorDispT<T>::get_IntfFileName(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("IntfFileName"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAModuleCreatorDispT<T>::get_IntfFileName(void)
{
  BSTR pRetVal;
  this->get_IntfFileName((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAModuleCreatorDispT<T>::get_FormName(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("FormName"), DISPID(DISPID_UNKNOWN/*[1610743811]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAModuleCreatorDispT<T>::get_FormName(void)
{
  BSTR pRetVal;
  this->get_FormName((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAModuleCreatorDispT<T>::get_MainForm(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("MainForm"), DISPID(DISPID_UNKNOWN/*[1610743812]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAModuleCreatorDispT<T>::get_MainForm(void)
{
  VARIANT_BOOL pRetVal;
  this->get_MainForm((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAModuleCreatorDispT<T>::get_ShowForm(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("ShowForm"), DISPID(DISPID_UNKNOWN/*[1610743813]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAModuleCreatorDispT<T>::get_ShowForm(void)
{
  VARIANT_BOOL pRetVal;
  this->get_ShowForm((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAModuleCreatorDispT<T>::get_ShowSource(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("ShowSource"), DISPID(DISPID_UNKNOWN/*[1610743814]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAModuleCreatorDispT<T>::get_ShowSource(void)
{
  VARIANT_BOOL pRetVal;
  this->get_ShowSource((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAModuleCreatorDispT<T>::NewFormFile(BSTR formIdent/*[in]*/, BSTR ancestorIdent/*[in]*/, 
                                       Borland_studio_toolsapi_tlb::IOTAFile** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("NewFormFile"), DISPID(DISPID_UNKNOWN/*[1610743815]*/));
  TAutoArgs<2> _args;
  _args[1] = formIdent /*[VT_BSTR:0]*/;
  _args[2] = ancestorIdent /*[VT_BSTR:0]*/;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAFile**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAFile* __fastcall
IOTAModuleCreatorDispT<T>::NewFormFile(BSTR formIdent/*[in]*/, BSTR ancestorIdent/*[in]*/)
{
  Borland_studio_toolsapi_tlb::IOTAFile* pRetVal;
  this->NewFormFile(formIdent, ancestorIdent, (Borland_studio_toolsapi_tlb::IOTAFile**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAModuleCreatorDispT<T>::NewImplSource(BSTR moduleIdent/*[in]*/, BSTR formIdent/*[in]*/, 
                                         BSTR ancestorIdent/*[in]*/, 
                                         Borland_studio_toolsapi_tlb::IOTAFile** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("NewImplSource"), DISPID(DISPID_UNKNOWN/*[1610743816]*/));
  TAutoArgs<3> _args;
  _args[1] = moduleIdent /*[VT_BSTR:0]*/;
  _args[2] = formIdent /*[VT_BSTR:0]*/;
  _args[3] = ancestorIdent /*[VT_BSTR:0]*/;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAFile**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAFile* __fastcall
IOTAModuleCreatorDispT<T>::NewImplSource(BSTR moduleIdent/*[in]*/, BSTR formIdent/*[in]*/, 
                                         BSTR ancestorIdent/*[in]*/)
{
  Borland_studio_toolsapi_tlb::IOTAFile* pRetVal;
  this->NewImplSource(moduleIdent, formIdent, ancestorIdent, (Borland_studio_toolsapi_tlb::IOTAFile**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAModuleCreatorDispT<T>::NewIntfSource(BSTR moduleIdent/*[in]*/, BSTR formIdent/*[in]*/, 
                                         BSTR ancestorIdent/*[in]*/, 
                                         Borland_studio_toolsapi_tlb::IOTAFile** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("NewIntfSource"), DISPID(DISPID_UNKNOWN/*[1610743817]*/));
  TAutoArgs<3> _args;
  _args[1] = moduleIdent /*[VT_BSTR:0]*/;
  _args[2] = formIdent /*[VT_BSTR:0]*/;
  _args[3] = ancestorIdent /*[VT_BSTR:0]*/;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAFile**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAFile* __fastcall
IOTAModuleCreatorDispT<T>::NewIntfSource(BSTR moduleIdent/*[in]*/, BSTR formIdent/*[in]*/, 
                                         BSTR ancestorIdent/*[in]*/)
{
  Borland_studio_toolsapi_tlb::IOTAFile* pRetVal;
  this->NewIntfSource(moduleIdent, formIdent, ancestorIdent, (Borland_studio_toolsapi_tlb::IOTAFile**)&pRetVal);
  return pRetVal;
}

// *********************************************************************//
// DispIntf:  IOTAProjectCreator
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {38429A28-66D0-4940-B2FD-A297C3432B58}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAProjectCreatorDispT<T>::get_fileName(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("fileName"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAProjectCreatorDispT<T>::get_fileName(void)
{
  BSTR pRetVal;
  this->get_fileName((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAProjectCreatorDispT<T>::get_ShowSource(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("ShowSource"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAProjectCreatorDispT<T>::get_ShowSource(void)
{
  VARIANT_BOOL pRetVal;
  this->get_ShowSource((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAProjectCreatorDispT<T>::NewProjectResource(Borland_studio_toolsapi_tlb::IOTAProject* project/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("NewProjectResource"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTAProject*)project /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAProjectCreatorDispT<T>::NewProjectSource(BSTR projectName/*[in]*/, 
                                             Borland_studio_toolsapi_tlb::IOTAFile** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("NewProjectSource"), DISPID(DISPID_UNKNOWN/*[1610743811]*/));
  TAutoArgs<1> _args;
  _args[1] = projectName /*[VT_BSTR:0]*/;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAFile**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAFile* __fastcall
IOTAProjectCreatorDispT<T>::NewProjectSource(BSTR projectName/*[in]*/)
{
  Borland_studio_toolsapi_tlb::IOTAFile* pRetVal;
  this->NewProjectSource(projectName, (Borland_studio_toolsapi_tlb::IOTAFile**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAProjectCreatorDispT<T>::NewDefaultProjectModule(Borland_studio_toolsapi_tlb::IOTAProject* project/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("NewDefaultProjectModule"), DISPID(DISPID_UNKNOWN/*[1610743812]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTAProject*)project /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAProjectCreatorDispT<T>::get_ProjectPersonality(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("ProjectPersonality"), DISPID(DISPID_UNKNOWN/*[1610743813]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAProjectCreatorDispT<T>::get_ProjectPersonality(void)
{
  BSTR pRetVal;
  this->get_ProjectPersonality((BSTR*)&pRetVal);
  return pRetVal;
}

// *********************************************************************//
// DispIntf:  IOTAProjectGroupCreator
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E69578C5-1C1B-43C5-914C-9AAA7F953EDC}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAProjectGroupCreatorDispT<T>::get_fileName(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("fileName"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAProjectGroupCreatorDispT<T>::get_fileName(void)
{
  BSTR pRetVal;
  this->get_fileName((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAProjectGroupCreatorDispT<T>::get_ShowSource(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("ShowSource"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAProjectGroupCreatorDispT<T>::get_ShowSource(void)
{
  VARIANT_BOOL pRetVal;
  this->get_ShowSource((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

// *********************************************************************//
// DispIntf:  IOTAActionService
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {97ECFDFB-0435-43D2-8270-A48D3C09290E}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAActionServiceDispT<T>::CloseFile(BSTR fileName/*[in]*/, VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("CloseFile"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<1> _args;
  _args[1] = fileName /*[VT_BSTR:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAActionServiceDispT<T>::CloseFile(BSTR fileName/*[in]*/)
{
  VARIANT_BOOL pRetVal;
  this->CloseFile(fileName, (VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAActionServiceDispT<T>::OpenFile(BSTR fileName/*[in]*/, VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("OpenFile"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<1> _args;
  _args[1] = fileName /*[VT_BSTR:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAActionServiceDispT<T>::OpenFile(BSTR fileName/*[in]*/)
{
  VARIANT_BOOL pRetVal;
  this->OpenFile(fileName, (VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAActionServiceDispT<T>::OpenProject(BSTR projName/*[in]*/, VARIANT_BOOL newProjGroup/*[in]*/, 
                                       VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("OpenProject"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<2> _args;
  _args[1] = projName /*[VT_BSTR:0]*/;
  _args[2] = newProjGroup /*[VT_BOOL:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAActionServiceDispT<T>::OpenProject(BSTR projName/*[in]*/, VARIANT_BOOL newProjGroup/*[in]*/)
{
  VARIANT_BOOL pRetVal;
  this->OpenProject(projName, newProjGroup, (VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAActionServiceDispT<T>::ReloadFile(BSTR fileName/*[in]*/, VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("ReloadFile"), DISPID(DISPID_UNKNOWN/*[1610743811]*/));
  TAutoArgs<1> _args;
  _args[1] = fileName /*[VT_BSTR:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAActionServiceDispT<T>::ReloadFile(BSTR fileName/*[in]*/)
{
  VARIANT_BOOL pRetVal;
  this->ReloadFile(fileName, (VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAActionServiceDispT<T>::SaveFile(BSTR fileName/*[in]*/, VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("SaveFile"), DISPID(DISPID_UNKNOWN/*[1610743812]*/));
  TAutoArgs<1> _args;
  _args[1] = fileName /*[VT_BSTR:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAActionServiceDispT<T>::SaveFile(BSTR fileName/*[in]*/)
{
  VARIANT_BOOL pRetVal;
  this->SaveFile(fileName, (VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

// *********************************************************************//
// DispIntf:  IOTAEditActions
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {27484E12-3BEB-4690-8258-E90EA1DC7436}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAEditActionsDispT<T>::AddWatch()
{
  _TDispID _dispid(*this, OLETEXT("AddWatch"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAEditActionsDispT<T>::AddWatchAtCursor()
{
  _TDispID _dispid(*this, OLETEXT("AddWatchAtCursor"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAEditActionsDispT<T>::BrowseSymbolAtCursor()
{
  _TDispID _dispid(*this, OLETEXT("BrowseSymbolAtCursor"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAEditActionsDispT<T>::ClassComplete()
{
  _TDispID _dispid(*this, OLETEXT("ClassComplete"), DISPID(DISPID_UNKNOWN/*[1610743811]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAEditActionsDispT<T>::ClassNavigate(unsigned_char reserved/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("ClassNavigate"), DISPID(DISPID_UNKNOWN/*[1610743812]*/));
  TAutoArgs<1> _args;
  _args[1] = reserved /*[VT_UI1:0]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAEditActionsDispT<T>::ClosePage()
{
  _TDispID _dispid(*this, OLETEXT("ClosePage"), DISPID(DISPID_UNKNOWN/*[1610743813]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAEditActionsDispT<T>::CodeTemplate()
{
  _TDispID _dispid(*this, OLETEXT("CodeTemplate"), DISPID(DISPID_UNKNOWN/*[1610743814]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAEditActionsDispT<T>::CodeCompletion(Borland_studio_toolsapi_tlb::OTACodeCompleteStyle Style/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("CodeCompletion"), DISPID(DISPID_UNKNOWN/*[1610743815]*/));
  TAutoArgs<1> _args;
  _args[1] = (int)Style /*[VT_USERDEFINED:0]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAEditActionsDispT<T>::EvaluateModify()
{
  _TDispID _dispid(*this, OLETEXT("EvaluateModify"), DISPID(DISPID_UNKNOWN/*[1610743816]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAEditActionsDispT<T>::helpKeyword()
{
  _TDispID _dispid(*this, OLETEXT("helpKeyword"), DISPID(DISPID_UNKNOWN/*[1610743817]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAEditActionsDispT<T>::IncrementalSearch()
{
  _TDispID _dispid(*this, OLETEXT("IncrementalSearch"), DISPID(DISPID_UNKNOWN/*[1610743818]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAEditActionsDispT<T>::InsertCompilerOptions()
{
  _TDispID _dispid(*this, OLETEXT("InsertCompilerOptions"), DISPID(DISPID_UNKNOWN/*[1610743819]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAEditActionsDispT<T>::InsertNewGUID()
{
  _TDispID _dispid(*this, OLETEXT("InsertNewGUID"), DISPID(DISPID_UNKNOWN/*[1610743820]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAEditActionsDispT<T>::InspectAtCursor()
{
  _TDispID _dispid(*this, OLETEXT("InspectAtCursor"), DISPID(DISPID_UNKNOWN/*[1610743821]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAEditActionsDispT<T>::CompileProject()
{
  _TDispID _dispid(*this, OLETEXT("CompileProject"), DISPID(DISPID_UNKNOWN/*[1610743822]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAEditActionsDispT<T>::NextError()
{
  _TDispID _dispid(*this, OLETEXT("NextError"), DISPID(DISPID_UNKNOWN/*[1610743823]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAEditActionsDispT<T>::NextPage()
{
  _TDispID _dispid(*this, OLETEXT("NextPage"), DISPID(DISPID_UNKNOWN/*[1610743824]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAEditActionsDispT<T>::OpenFile()
{
  _TDispID _dispid(*this, OLETEXT("OpenFile"), DISPID(DISPID_UNKNOWN/*[1610743825]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAEditActionsDispT<T>::OpenFileAtCursor()
{
  _TDispID _dispid(*this, OLETEXT("OpenFileAtCursor"), DISPID(DISPID_UNKNOWN/*[1610743826]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAEditActionsDispT<T>::PriorError()
{
  _TDispID _dispid(*this, OLETEXT("PriorError"), DISPID(DISPID_UNKNOWN/*[1610743827]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAEditActionsDispT<T>::PriorPage()
{
  _TDispID _dispid(*this, OLETEXT("PriorPage"), DISPID(DISPID_UNKNOWN/*[1610743828]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAEditActionsDispT<T>::ProgramReset()
{
  _TDispID _dispid(*this, OLETEXT("ProgramReset"), DISPID(DISPID_UNKNOWN/*[1610743829]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAEditActionsDispT<T>::RunProgram()
{
  _TDispID _dispid(*this, OLETEXT("RunProgram"), DISPID(DISPID_UNKNOWN/*[1610743830]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAEditActionsDispT<T>::RunToCursor()
{
  _TDispID _dispid(*this, OLETEXT("RunToCursor"), DISPID(DISPID_UNKNOWN/*[1610743831]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAEditActionsDispT<T>::SaveAll()
{
  _TDispID _dispid(*this, OLETEXT("SaveAll"), DISPID(DISPID_UNKNOWN/*[1610743832]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAEditActionsDispT<T>::Save()
{
  _TDispID _dispid(*this, OLETEXT("Save"), DISPID(DISPID_UNKNOWN/*[1610743833]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAEditActionsDispT<T>::SaveAs()
{
  _TDispID _dispid(*this, OLETEXT("SaveAs"), DISPID(DISPID_UNKNOWN/*[1610743834]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAEditActionsDispT<T>::StepOver()
{
  _TDispID _dispid(*this, OLETEXT("StepOver"), DISPID(DISPID_UNKNOWN/*[1610743835]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAEditActionsDispT<T>::SwapSourceFormView()
{
  _TDispID _dispid(*this, OLETEXT("SwapSourceFormView"), DISPID(DISPID_UNKNOWN/*[1610743836]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAEditActionsDispT<T>::SwapCPPHeader()
{
  _TDispID _dispid(*this, OLETEXT("SwapCPPHeader"), DISPID(DISPID_UNKNOWN/*[1610743837]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAEditActionsDispT<T>::ToggleFormUnit()
{
  _TDispID _dispid(*this, OLETEXT("ToggleFormUnit"), DISPID(DISPID_UNKNOWN/*[1610743838]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAEditActionsDispT<T>::TraceInto()
{
  _TDispID _dispid(*this, OLETEXT("TraceInto"), DISPID(DISPID_UNKNOWN/*[1610743839]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAEditActionsDispT<T>::TraceToSource()
{
  _TDispID _dispid(*this, OLETEXT("TraceToSource"), DISPID(DISPID_UNKNOWN/*[1610743840]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAEditActionsDispT<T>::ViewExplorer()
{
  _TDispID _dispid(*this, OLETEXT("ViewExplorer"), DISPID(DISPID_UNKNOWN/*[1610743841]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAEditActionsDispT<T>::ViewForms()
{
  _TDispID _dispid(*this, OLETEXT("ViewForms"), DISPID(DISPID_UNKNOWN/*[1610743842]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAEditActionsDispT<T>::ViewObjectInspector()
{
  _TDispID _dispid(*this, OLETEXT("ViewObjectInspector"), DISPID(DISPID_UNKNOWN/*[1610743843]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAEditActionsDispT<T>::ViewUnits()
{
  _TDispID _dispid(*this, OLETEXT("ViewUnits"), DISPID(DISPID_UNKNOWN/*[1610743844]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAEditActionsDispT<T>::WindowList()
{
  _TDispID _dispid(*this, OLETEXT("WindowList"), DISPID(DISPID_UNKNOWN/*[1610743845]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAEditActionsDispT<T>::ZoomWindow()
{
  _TDispID _dispid(*this, OLETEXT("ZoomWindow"), DISPID(DISPID_UNKNOWN/*[1610743846]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAEditActionsDispT<T>::NextBufferView()
{
  _TDispID _dispid(*this, OLETEXT("NextBufferView"), DISPID(DISPID_UNKNOWN/*[1610743847]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAEditActionsDispT<T>::PreviousBufferView()
{
  _TDispID _dispid(*this, OLETEXT("PreviousBufferView"), DISPID(DISPID_UNKNOWN/*[1610743848]*/));
  return OleFunction(_dispid);
}

// *********************************************************************//
// DispIntf:  IOTAWizard
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {70E01074-3BD8-45AF-818C-9CB4CAD319CA}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAWizardDispT<T>::get_IDString(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("IDString"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAWizardDispT<T>::get_IDString(void)
{
  BSTR pRetVal;
  this->get_IDString((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAWizardDispT<T>::get_Name(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Name"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAWizardDispT<T>::get_Name(void)
{
  BSTR pRetVal;
  this->get_Name((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAWizardDispT<T>::Execute()
{
  _TDispID _dispid(*this, OLETEXT("Execute"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAWizardDispT<T>::Destroyed()
{
  _TDispID _dispid(*this, OLETEXT("Destroyed"), DISPID(DISPID_UNKNOWN/*[1610743811]*/));
  return OleFunction(_dispid);
}

// *********************************************************************//
// DispIntf:  IOTARepositoryWizard
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {884D3988-3B45-43EA-A819-25FE09D00E19}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTARepositoryWizardDispT<T>::get_Author(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Author"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTARepositoryWizardDispT<T>::get_Author(void)
{
  BSTR pRetVal;
  this->get_Author((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTARepositoryWizardDispT<T>::get_Comment(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Comment"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTARepositoryWizardDispT<T>::get_Comment(void)
{
  BSTR pRetVal;
  this->get_Comment((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTARepositoryWizardDispT<T>::get_Glyph(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Glyph"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> long __fastcall
IOTARepositoryWizardDispT<T>::get_Glyph(void)
{
  long pRetVal;
  this->get_Glyph((long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTARepositoryWizardDispT<T>::get_Designer(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Designer"), DISPID(DISPID_UNKNOWN/*[1610743811]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTARepositoryWizardDispT<T>::get_Designer(void)
{
  BSTR pRetVal;
  this->get_Designer((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTARepositoryWizardDispT<T>::get_GalleryCategory(Borland_studio_toolsapi_tlb::IOTAGalleryCategory** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GalleryCategory"), DISPID(DISPID_UNKNOWN/*[1610743812]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAGalleryCategory**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAGalleryCategoryPtr __fastcall
IOTARepositoryWizardDispT<T>::get_GalleryCategory(void)
{
  Borland_studio_toolsapi_tlb::IOTAGalleryCategoryPtr pRetVal;
  this->get_GalleryCategory(&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTARepositoryWizardDispT<T>::get_personality(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("personality"), DISPID(DISPID_UNKNOWN/*[1610743813]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTARepositoryWizardDispT<T>::get_personality(void)
{
  BSTR pRetVal;
  this->get_personality((BSTR*)&pRetVal);
  return pRetVal;
}

// *********************************************************************//
// DispIntf:  IOTAGalleryCategory
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E89472D1-C318-41BE-9146-AF57EC667DB8}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAGalleryCategoryDispT<T>::get_DisplayName(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("DisplayName"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAGalleryCategoryDispT<T>::get_DisplayName(void)
{
  BSTR pRetVal;
  this->get_DisplayName((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAGalleryCategoryDispT<T>::get_IDString(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("IDString"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAGalleryCategoryDispT<T>::get_IDString(void)
{
  BSTR pRetVal;
  this->get_IDString((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAGalleryCategoryDispT<T>::get_parent(Borland_studio_toolsapi_tlb::IOTAGalleryCategory** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("parent"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAGalleryCategory**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAGalleryCategoryPtr __fastcall
IOTAGalleryCategoryDispT<T>::get_parent(void)
{
  Borland_studio_toolsapi_tlb::IOTAGalleryCategoryPtr pRetVal;
  this->get_parent(&pRetVal);
  return pRetVal;
}

// *********************************************************************//
// DispIntf:  IOTAGalleryCategoryManager
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EF79C413-F1DF-4EED-9A0D-2F1CA265EE25}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAGalleryCategoryManagerDispT<T>::FindCategory(BSTR IDString/*[in]*/, 
                                                 Borland_studio_toolsapi_tlb::IOTAGalleryCategory** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("FindCategory"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<1> _args;
  _args[1] = IDString /*[VT_BSTR:0]*/;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAGalleryCategory**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAGalleryCategory* __fastcall
IOTAGalleryCategoryManagerDispT<T>::FindCategory(BSTR IDString/*[in]*/)
{
  Borland_studio_toolsapi_tlb::IOTAGalleryCategory* pRetVal;
  this->FindCategory(IDString, (Borland_studio_toolsapi_tlb::IOTAGalleryCategory**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAGalleryCategoryManagerDispT<T>::AddCategory(BSTR IDString/*[in]*/, BSTR DisplayName/*[in]*/, 
                                                long iconHandle/*[in]*/, 
                                                Borland_studio_toolsapi_tlb::IOTAGalleryCategory** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("AddCategory"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<3> _args;
  _args[1] = IDString /*[VT_BSTR:0]*/;
  _args[2] = DisplayName /*[VT_BSTR:0]*/;
  _args[3] = iconHandle /*[VT_I4:0]*/;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAGalleryCategory**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAGalleryCategory* __fastcall
IOTAGalleryCategoryManagerDispT<T>::AddCategory(BSTR IDString/*[in]*/, BSTR DisplayName/*[in]*/, 
                                                long iconHandle/*[in]*/)
{
  Borland_studio_toolsapi_tlb::IOTAGalleryCategory* pRetVal;
  this->AddCategory(IDString, DisplayName, iconHandle, (Borland_studio_toolsapi_tlb::IOTAGalleryCategory**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAGalleryCategoryManagerDispT<T>::AddCategory_2(Borland_studio_toolsapi_tlb::IOTAGalleryCategory* parentCategory/*[in]*/
                                                  , BSTR IDString/*[in]*/, BSTR DisplayName/*[in]*/
                                                  , long iconHandle/*[in]*/, 
                                                  Borland_studio_toolsapi_tlb::IOTAGalleryCategory** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("AddCategory_2"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<4> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTAGalleryCategory*)parentCategory /*[VT_USERDEFINED:1]*/;
  _args[2] = IDString /*[VT_BSTR:0]*/;
  _args[3] = DisplayName /*[VT_BSTR:0]*/;
  _args[4] = iconHandle /*[VT_I4:0]*/;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAGalleryCategory**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAGalleryCategory* __fastcall
IOTAGalleryCategoryManagerDispT<T>::AddCategory_2(Borland_studio_toolsapi_tlb::IOTAGalleryCategory* parentCategory/*[in]*/, 
                                                  BSTR IDString/*[in]*/, BSTR DisplayName/*[in]*/, 
                                                  long iconHandle/*[in]*/)
{
  Borland_studio_toolsapi_tlb::IOTAGalleryCategory* pRetVal;
  this->AddCategory_2(parentCategory, IDString, DisplayName, iconHandle, (Borland_studio_toolsapi_tlb::IOTAGalleryCategory**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAGalleryCategoryManagerDispT<T>::DeleteCategory(Borland_studio_toolsapi_tlb::IOTAGalleryCategory* category/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("DeleteCategory"), DISPID(DISPID_UNKNOWN/*[1610743811]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTAGalleryCategory*)category /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

// *********************************************************************//
// DispIntf:  IOTAFormWizard
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {02FE97B0-94F7-470F-8B67-1B89EFA26FC4}
// *********************************************************************//
// *********************************************************************//
// DispIntf:  IOTAProjectWizard
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3C107A3B-2E7D-4700-9CE4-9767B1D2FE00}
// *********************************************************************//
// *********************************************************************//
// DispIntf:  IOTAMenuWizard
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EE481221-0047-44FB-929A-38664AF42749}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAMenuWizardDispT<T>::get_MenuText(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("MenuText"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAMenuWizardDispT<T>::get_MenuText(void)
{
  BSTR pRetVal;
  this->get_MenuText((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAMenuWizardDispT<T>::get_Enabled(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Enabled"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAMenuWizardDispT<T>::get_Enabled(void)
{
  VARIANT_BOOL pRetVal;
  this->get_Enabled((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAMenuWizardDispT<T>::get_Checked(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Checked"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAMenuWizardDispT<T>::get_Checked(void)
{
  VARIANT_BOOL pRetVal;
  this->get_Checked((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

// *********************************************************************//
// DispIntf:  IOTAWizardService
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {935F3EA1-EFD6-4901-8138-2415F6AD1C3D}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAWizardServiceDispT<T>::AddWizard(Borland_studio_toolsapi_tlb::IOTAWizard* wizard/*[in]*/, 
                                     long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("AddWizard"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTAWizard*)wizard /*[VT_USERDEFINED:1]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> long __fastcall
IOTAWizardServiceDispT<T>::AddWizard(Borland_studio_toolsapi_tlb::IOTAWizard* wizard/*[in]*/)
{
  long pRetVal;
  this->AddWizard(wizard, (long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAWizardServiceDispT<T>::RemoveWizard(long index/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("RemoveWizard"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<1> _args;
  _args[1] = index /*[VT_I4:0]*/;
  return OleFunction(_dispid, _args);
}

// *********************************************************************//
// DispIntf:  IOTAAboutBoxService
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5C01B0EE-E660-4474-8B18-3676F20006AC}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAAboutBoxServiceDispT<T>::AddPluginInfo(BSTR title/*[in]*/, BSTR description/*[in]*/, 
                                           long aboutImageHandle/*[in]*/, 
                                           VARIANT_BOOL isUnRegistered/*[in]*/, 
                                           BSTR licenseStatus/*[in]*/, BSTR skuName/*[in]*/, 
                                           long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("AddPluginInfo"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<6> _args;
  _args[1] = title /*[VT_BSTR:0]*/;
  _args[2] = description /*[VT_BSTR:0]*/;
  _args[3] = aboutImageHandle /*[VT_I4:0]*/;
  _args[4] = isUnRegistered /*[VT_BOOL:0]*/;
  _args[5] = licenseStatus /*[VT_BSTR:0]*/;
  _args[6] = skuName /*[VT_BSTR:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> long __fastcall
IOTAAboutBoxServiceDispT<T>::AddPluginInfo(BSTR title/*[in]*/, BSTR description/*[in]*/, 
                                           long aboutImageHandle/*[in]*/, 
                                           VARIANT_BOOL isUnRegistered/*[in]*/, 
                                           BSTR licenseStatus/*[in]*/, BSTR skuName/*[in]*/)
{
  long pRetVal;
  this->AddPluginInfo(title, description, aboutImageHandle, isUnRegistered, licenseStatus, skuName, (long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAAboutBoxServiceDispT<T>::AddProductInfo(BSTR dialogTitle/*[in]*/, BSTR copyright/*[in]*/, 
                                            BSTR title/*[in]*/, BSTR description/*[in]*/, 
                                            long aboutImageHandle/*[in]*/, 
                                            long productImageHandle/*[in]*/, 
                                            VARIANT_BOOL isUnRegistered/*[in]*/, 
                                            BSTR licenseStatus/*[in]*/, BSTR skuName/*[in]*/, 
                                            long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("AddProductInfo"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<9> _args;
  _args[1] = dialogTitle /*[VT_BSTR:0]*/;
  _args[2] = copyright /*[VT_BSTR:0]*/;
  _args[3] = title /*[VT_BSTR:0]*/;
  _args[4] = description /*[VT_BSTR:0]*/;
  _args[5] = aboutImageHandle /*[VT_I4:0]*/;
  _args[6] = productImageHandle /*[VT_I4:0]*/;
  _args[7] = isUnRegistered /*[VT_BOOL:0]*/;
  _args[8] = licenseStatus /*[VT_BSTR:0]*/;
  _args[9] = skuName /*[VT_BSTR:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> long __fastcall
IOTAAboutBoxServiceDispT<T>::AddProductInfo(BSTR dialogTitle/*[in]*/, BSTR copyright/*[in]*/, 
                                            BSTR title/*[in]*/, BSTR description/*[in]*/, 
                                            long aboutImageHandle/*[in]*/, 
                                            long productImageHandle/*[in]*/, 
                                            VARIANT_BOOL isUnRegistered/*[in]*/, 
                                            BSTR licenseStatus/*[in]*/, BSTR skuName/*[in]*/)
{
  long pRetVal;
  this->AddProductInfo(dialogTitle, copyright, title, description, aboutImageHandle, 
                       productImageHandle, isUnRegistered, licenseStatus, skuName, (long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAAboutBoxServiceDispT<T>::RemovePluginInfo(long index/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("RemovePluginInfo"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<1> _args;
  _args[1] = index /*[VT_I4:0]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAAboutBoxServiceDispT<T>::RemoveProductInfo(long index/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("RemoveProductInfo"), DISPID(DISPID_UNKNOWN/*[1610743811]*/));
  TAutoArgs<1> _args;
  _args[1] = index /*[VT_I4:0]*/;
  return OleFunction(_dispid, _args);
}

// *********************************************************************//
// DispIntf:  IOTASplashScreenService
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2550066E-CF92-475E-8C27-EBDC6CEFB3D8}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTASplashScreenServiceDispT<T>::AddPluginBitmap(BSTR Caption/*[in]*/, long bitmapHandle/*[in]*/, 
                                                 VARIANT_BOOL isUnRegistered/*[in]*/, 
                                                 BSTR licenseStatus/*[in]*/, BSTR skuName/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("AddPluginBitmap"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<5> _args;
  _args[1] = Caption /*[VT_BSTR:0]*/;
  _args[2] = bitmapHandle /*[VT_I4:0]*/;
  _args[3] = isUnRegistered /*[VT_BOOL:0]*/;
  _args[4] = licenseStatus /*[VT_BSTR:0]*/;
  _args[5] = skuName /*[VT_BSTR:0]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTASplashScreenServiceDispT<T>::AddProductBitmap(BSTR Caption/*[in]*/, long bitmapHandle/*[in]*/, 
                                                  VARIANT_BOOL isUnRegistered/*[in]*/, 
                                                  BSTR licenseStatus/*[in]*/, BSTR skuName/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("AddProductBitmap"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<5> _args;
  _args[1] = Caption /*[VT_BSTR:0]*/;
  _args[2] = bitmapHandle /*[VT_I4:0]*/;
  _args[3] = isUnRegistered /*[VT_BOOL:0]*/;
  _args[4] = licenseStatus /*[VT_BSTR:0]*/;
  _args[5] = skuName /*[VT_BSTR:0]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTASplashScreenServiceDispT<T>::ShowProductSplash(long bitmapHandle/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("ShowProductSplash"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<1> _args;
  _args[1] = bitmapHandle /*[VT_I4:0]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTASplashScreenServiceDispT<T>::StatusMessage(BSTR StatusMessage/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("StatusMessage"), DISPID(DISPID_UNKNOWN/*[1610743811]*/));
  TAutoArgs<1> _args;
  _args[1] = StatusMessage /*[VT_BSTR:0]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTASplashScreenServiceDispT<T>::SetProductIcon(long iconHandle/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("SetProductIcon"), DISPID(DISPID_UNKNOWN/*[1610743812]*/));
  TAutoArgs<1> _args;
  _args[1] = iconHandle /*[VT_I4:0]*/;
  return OleFunction(_dispid, _args);
}

// *********************************************************************//
// DispIntf:  IOTAPersonalityService
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {62198A9F-790C-4A0C-818B-CFC561E2E73B}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAPersonalityServiceDispT<T>::get_CurrentPersonality(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("CurrentPersonality"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAPersonalityServiceDispT<T>::get_CurrentPersonality(void)
{
  BSTR pRetVal;
  this->get_CurrentPersonality((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAPersonalityServiceDispT<T>::set_CurrentPersonality(BSTR pRetVal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("CurrentPersonality"), DISPID(1610743808));
  TAutoArgs<1> _args;
  _args[1] = pRetVal /*[VT_BSTR:0]*/;
  return OlePropertyPut(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAPersonalityServiceDispT<T>::get_PersonalityCount(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("PersonalityCount"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> long __fastcall
IOTAPersonalityServiceDispT<T>::get_PersonalityCount(void)
{
  long pRetVal;
  this->get_PersonalityCount((long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAPersonalityServiceDispT<T>::GetPersonality(long index/*[in]*/, BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetPersonality"), DISPID(DISPID_UNKNOWN/*[1610743811]*/));
  TAutoArgs<1> _args;
  _args[1] = index /*[VT_I4:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAPersonalityServiceDispT<T>::GetPersonality(long index/*[in]*/)
{
  BSTR pRetVal;
  this->GetPersonality(index, (BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAPersonalityServiceDispT<T>::GetFilePersonality(BSTR fileName/*[in]*/, 
                                                   BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetFilePersonality"), DISPID(DISPID_UNKNOWN/*[1610743812]*/));
  TAutoArgs<1> _args;
  _args[1] = fileName /*[VT_BSTR:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAPersonalityServiceDispT<T>::GetFilePersonality(BSTR fileName/*[in]*/)
{
  BSTR pRetVal;
  this->GetFilePersonality(fileName, (BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAPersonalityServiceDispT<T>::PersonalityExists(BSTR personality/*[in]*/, 
                                                  VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("PersonalityExists"), DISPID(DISPID_UNKNOWN/*[1610743813]*/));
  TAutoArgs<1> _args;
  _args[1] = personality /*[VT_BSTR:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAPersonalityServiceDispT<T>::PersonalityExists(BSTR personality/*[in]*/)
{
  VARIANT_BOOL pRetVal;
  this->PersonalityExists(personality, (VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

// *********************************************************************//
// SmartIntf: TCOM_OTAFile
// Interface: _OTAFile
// *********************************************************************//
// *********************************************************************//
// DispIntf:  _OTAFile
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {DA5701D3-B903-34AC-8112-9D457013E8DF}
// *********************************************************************//
// *********************************************************************//
// DispIntf:  IOTAAlignable
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1664F3A1-00B8-4349-A96E-99C678F9BE96}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAAlignableDispT<T>::Align(Borland_studio_toolsapi_tlb::OTAAffect Affect/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Align"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<1> _args;
  _args[1] = (int)Affect /*[VT_USERDEFINED:0]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAAlignableDispT<T>::Size(Borland_studio_toolsapi_tlb::OTASizeAffect Affect/*[in]*/, 
                            long value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Size"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<2> _args;
  _args[1] = (int)Affect /*[VT_USERDEFINED:0]*/;
  _args[2] = value /*[VT_I4:0]*/;
  return OleFunction(_dispid, _args);
}

// *********************************************************************//
// DispIntf:  IOTAAlignableState
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BF5AE0B5-0715-4EC7-BFA5-3922E10EDF3C}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAAlignableStateDispT<T>::GetAlignAffectState(Borland_studio_toolsapi_tlb::OTAAffect Affect/*[in]*/
                                                , 
                                                Borland_studio_toolsapi_tlb::OTAAlignableState* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetAlignAffectState"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<1> _args;
  _args[1] = (int)Affect /*[VT_USERDEFINED:0]*/;
  return OutRetValSetterPtr((int*)pRetVal /*[VT_USERDEFINED:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::OTAAlignableState __fastcall
IOTAAlignableStateDispT<T>::GetAlignAffectState(Borland_studio_toolsapi_tlb::OTAAffect Affect/*[in]*/)
{
  Borland_studio_toolsapi_tlb::OTAAlignableState pRetVal;
  this->GetAlignAffectState(Affect, (Borland_studio_toolsapi_tlb::OTAAlignableState*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAAlignableStateDispT<T>::GetSizeAffectState(Borland_studio_toolsapi_tlb::OTASizeAffect Affect/*[in]*/
                                               , 
                                               Borland_studio_toolsapi_tlb::OTAAlignableState* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetSizeAffectState"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<1> _args;
  _args[1] = (int)Affect /*[VT_USERDEFINED:0]*/;
  return OutRetValSetterPtr((int*)pRetVal /*[VT_USERDEFINED:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::OTAAlignableState __fastcall
IOTAAlignableStateDispT<T>::GetSizeAffectState(Borland_studio_toolsapi_tlb::OTASizeAffect Affect/*[in]*/)
{
  Borland_studio_toolsapi_tlb::OTAAlignableState pRetVal;
  this->GetSizeAffectState(Affect, (Borland_studio_toolsapi_tlb::OTAAlignableState*)&pRetVal);
  return pRetVal;
}

// *********************************************************************//
// DispIntf:  IOTAScaleable
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CBC39180-2D51-4E37-A019-E57866309C93}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAScaleableDispT<T>::Scale(long Factor/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Scale"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<1> _args;
  _args[1] = Factor /*[VT_I4:0]*/;
  return OleFunction(_dispid, _args);
}

// *********************************************************************//
// DispIntf:  IOTATabOrderable
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1C7AD430-314E-3588-A9F5-996EFFD05989}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTATabOrderableDispT<T>::GetTabCompCount(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetTabCompCount"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> long __fastcall
IOTATabOrderableDispT<T>::GetTabCompCount(void)
{
  long pRetVal;
  this->GetTabCompCount((long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTATabOrderableDispT<T>::GetTabCompInfo(long Order/*[in]*/, BSTR* Name/*[out]*/, 
                                         BSTR* className/*[out]*/, VARIANT* Comp/*[out]*/, 
                                         VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetTabCompInfo"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<4> _args;
  _args[1] = Order /*[VT_I4:0]*/;
  _args[2] = Name /*[VT_BSTR:1]*/;
  _args[3] = className /*[VT_BSTR:1]*/;
  _args[4] = Comp /*[VT_VARIANT:1]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTATabOrderableDispT<T>::GetTabCompInfo(long Order/*[in]*/, BSTR* Name/*[out]*/, 
                                         BSTR* className/*[out]*/, VARIANT* Comp/*[out]*/)
{
  VARIANT_BOOL pRetVal;
  this->GetTabCompInfo(Order, Name, className, Comp, (VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTATabOrderableDispT<T>::SetTabCompOrder(VARIANT Comp/*[in]*/, long Order/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("SetTabCompOrder"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<2> _args;
  _args[1] = Comp /*[VT_VARIANT:0]*/;
  _args[2] = Order /*[VT_I4:0]*/;
  return OleFunction(_dispid, _args);
}

// *********************************************************************//
// DispIntf:  IOTACreateOrderable
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C92C0E94-A709-4708-8673-D26C35D0C749}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTACreateOrderableDispT<T>::GetCompCount(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetCompCount"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> long __fastcall
IOTACreateOrderableDispT<T>::GetCompCount(void)
{
  long pRetVal;
  this->GetCompCount((long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTACreateOrderableDispT<T>::GetCompName(long index/*[in]*/, BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetCompName"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<1> _args;
  _args[1] = index /*[VT_I4:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTACreateOrderableDispT<T>::GetCompName(long index/*[in]*/)
{
  BSTR pRetVal;
  this->GetCompName(index, (BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTACreateOrderableDispT<T>::GetCompType(long index/*[in]*/, BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetCompType"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<1> _args;
  _args[1] = index /*[VT_I4:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTACreateOrderableDispT<T>::GetCompType(long index/*[in]*/)
{
  BSTR pRetVal;
  this->GetCompType(index, (BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTACreateOrderableDispT<T>::GetNVComp(long index/*[in]*/, VARIANT* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetNVComp"), DISPID(DISPID_UNKNOWN/*[1610743811]*/));
  TAutoArgs<1> _args;
  _args[1] = index /*[VT_I4:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_VARIANT:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT __fastcall
IOTACreateOrderableDispT<T>::GetNVComp(long index/*[in]*/)
{
  VARIANT pRetVal;
  this->GetNVComp(index, (VARIANT*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTACreateOrderableDispT<T>::SetNVComp(VARIANT Comp/*[in]*/, long Order/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("SetNVComp"), DISPID(DISPID_UNKNOWN/*[1610743812]*/));
  TAutoArgs<2> _args;
  _args[1] = Comp /*[VT_VARIANT:0]*/;
  _args[2] = Order /*[VT_I4:0]*/;
  return OleFunction(_dispid, _args);
}

// *********************************************************************//
// DispIntf:  INTAComponent
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3E9354E0-66E8-46A3-B24F-9CBBBE7FA7EA}
// *********************************************************************//
template <class T> HRESULT __fastcall
INTAComponentDispT<T>::GetPersistent(Mscorlib_tlb::_MarshalByRefObject** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetPersistent"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr((LPDISPATCH*)(Mscorlib_tlb::_MarshalByRefObject**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Mscorlib_tlb::_MarshalByRefObject* __fastcall
INTAComponentDispT<T>::GetPersistent(void)
{
  Mscorlib_tlb::_MarshalByRefObject* pRetVal;
  this->GetPersistent((Mscorlib_tlb::_MarshalByRefObject**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
INTAComponentDispT<T>::GetComponent(System_tlb::_Component** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetComponent"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr((LPDISPATCH*)(System_tlb::_Component**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> System_tlb::_Component* __fastcall
INTAComponentDispT<T>::GetComponent(void)
{
  System_tlb::_Component* pRetVal;
  this->GetComponent((System_tlb::_Component**)&pRetVal);
  return pRetVal;
}

// *********************************************************************//
// DispIntf:  IOTAGetChildCallback
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {28A28BA8-B900-4049-9C49-76086941DEE3}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAGetChildCallbackDispT<T>::ChildCallback(VARIANT Param/*[in]*/, 
                                            Borland_studio_toolsapi_tlb::IOTAComponent* component/*[in]*/
                                            , VARIANT_BOOL* result/*[in,out]*/)
{
  _TDispID _dispid(*this, OLETEXT("ChildCallback"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<3> _args;
  _args[1] = Param /*[VT_VARIANT:0]*/;
  _args[2] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTAComponent*)component /*[VT_USERDEFINED:1]*/;
  _args[3] = result /*[VT_BOOL:1]*/;
  return OleFunction(_dispid, _args);
}

// *********************************************************************//
// SmartIntf: TCOM_TOTAGetChildCallback
// Interface: _TOTAGetChildCallback
// *********************************************************************//
// *********************************************************************//
// DispIntf:  _TOTAGetChildCallback
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {D430F0B5-180B-305A-B1C1-C17006C1884E}
// *********************************************************************//
// *********************************************************************//
// DispIntf:  IOTAComponent
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7F55A081-3BFF-413B-88BF-7E4165F9D136}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAComponentDispT<T>::GetComponentType(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetComponentType"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAComponentDispT<T>::GetComponentType(void)
{
  BSTR pRetVal;
  this->GetComponentType((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAComponentDispT<T>::GetComponentHandle(Borland_studio_toolsapi_tlb::_TOTAHandle** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetComponentHandle"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::_TOTAHandle**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::_TOTAHandle* __fastcall
IOTAComponentDispT<T>::GetComponentHandle(void)
{
  Borland_studio_toolsapi_tlb::_TOTAHandle* pRetVal;
  this->GetComponentHandle((Borland_studio_toolsapi_tlb::_TOTAHandle**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAComponentDispT<T>::GetParent(Borland_studio_toolsapi_tlb::IOTAComponent** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetParent"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAComponent**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAComponent* __fastcall
IOTAComponentDispT<T>::GetParent(void)
{
  Borland_studio_toolsapi_tlb::IOTAComponent* pRetVal;
  this->GetParent((Borland_studio_toolsapi_tlb::IOTAComponent**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAComponentDispT<T>::IsTControl(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("IsTControl"), DISPID(DISPID_UNKNOWN/*[1610743811]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAComponentDispT<T>::IsTControl(void)
{
  VARIANT_BOOL pRetVal;
  this->IsTControl((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAComponentDispT<T>::GetPropCount(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetPropCount"), DISPID(DISPID_UNKNOWN/*[1610743812]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> long __fastcall
IOTAComponentDispT<T>::GetPropCount(void)
{
  long pRetVal;
  this->GetPropCount((long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAComponentDispT<T>::GetPropName(long index/*[in]*/, BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetPropName"), DISPID(DISPID_UNKNOWN/*[1610743813]*/));
  TAutoArgs<1> _args;
  _args[1] = index /*[VT_I4:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAComponentDispT<T>::GetPropName(long index/*[in]*/)
{
  BSTR pRetVal;
  this->GetPropName(index, (BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAComponentDispT<T>::GetPropType(long index/*[in]*/, 
                                   Borland_studio_toolsapi_tlb::OTATypeKind* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetPropType"), DISPID(DISPID_UNKNOWN/*[1610743814]*/));
  TAutoArgs<1> _args;
  _args[1] = index /*[VT_I4:0]*/;
  return OutRetValSetterPtr((int*)pRetVal /*[VT_USERDEFINED:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::OTATypeKind __fastcall
IOTAComponentDispT<T>::GetPropType(long index/*[in]*/)
{
  Borland_studio_toolsapi_tlb::OTATypeKind pRetVal;
  this->GetPropType(index, (Borland_studio_toolsapi_tlb::OTATypeKind*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAComponentDispT<T>::GetPropTypeByName(BSTR Name/*[in]*/, 
                                         Borland_studio_toolsapi_tlb::OTATypeKind* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetPropTypeByName"), DISPID(DISPID_UNKNOWN/*[1610743815]*/));
  TAutoArgs<1> _args;
  _args[1] = Name /*[VT_BSTR:0]*/;
  return OutRetValSetterPtr((int*)pRetVal /*[VT_USERDEFINED:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::OTATypeKind __fastcall
IOTAComponentDispT<T>::GetPropTypeByName(BSTR Name/*[in]*/)
{
  Borland_studio_toolsapi_tlb::OTATypeKind pRetVal;
  this->GetPropTypeByName(Name, (Borland_studio_toolsapi_tlb::OTATypeKind*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAComponentDispT<T>::GetPropValue(long index/*[in]*/, VARIANT* value/*[out]*/, 
                                    VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetPropValue"), DISPID(DISPID_UNKNOWN/*[1610743816]*/));
  TAutoArgs<2> _args;
  _args[1] = index /*[VT_I4:0]*/;
  _args[2] = value /*[VT_VARIANT:1]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAComponentDispT<T>::GetPropValue(long index/*[in]*/, VARIANT* value/*[out]*/)
{
  VARIANT_BOOL pRetVal;
  this->GetPropValue(index, value, (VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAComponentDispT<T>::GetPropValueByName(BSTR Name/*[in]*/, VARIANT* value/*[out]*/, 
                                          VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetPropValueByName"), DISPID(DISPID_UNKNOWN/*[1610743817]*/));
  TAutoArgs<2> _args;
  _args[1] = Name /*[VT_BSTR:0]*/;
  _args[2] = value /*[VT_VARIANT:1]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAComponentDispT<T>::GetPropValueByName(BSTR Name/*[in]*/, VARIANT* value/*[out]*/)
{
  VARIANT_BOOL pRetVal;
  this->GetPropValueByName(Name, value, (VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAComponentDispT<T>::SetProp(long index/*[in]*/, VARIANT value/*[in]*/, 
                               VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("SetProp"), DISPID(DISPID_UNKNOWN/*[1610743818]*/));
  TAutoArgs<2> _args;
  _args[1] = index /*[VT_I4:0]*/;
  _args[2] = value /*[VT_VARIANT:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAComponentDispT<T>::SetProp(long index/*[in]*/, VARIANT value/*[in]*/)
{
  VARIANT_BOOL pRetVal;
  this->SetProp(index, value, (VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAComponentDispT<T>::SetPropByName(BSTR Name/*[in]*/, VARIANT value/*[in]*/, 
                                     VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("SetPropByName"), DISPID(DISPID_UNKNOWN/*[1610743819]*/));
  TAutoArgs<2> _args;
  _args[1] = Name /*[VT_BSTR:0]*/;
  _args[2] = value /*[VT_VARIANT:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAComponentDispT<T>::SetPropByName(BSTR Name/*[in]*/, VARIANT value/*[in]*/)
{
  VARIANT_BOOL pRetVal;
  this->SetPropByName(Name, value, (VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAComponentDispT<T>::GetChildren(VARIANT Param/*[in]*/, 
                                   Borland_studio_toolsapi_tlb::_TOTAGetChildCallback* CallBack/*[in]*/
                                   , VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetChildren"), DISPID(DISPID_UNKNOWN/*[1610743820]*/));
  TAutoArgs<2> _args;
  _args[1] = Param /*[VT_VARIANT:0]*/;
  _args[2] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::_TOTAGetChildCallback*)CallBack /*[VT_USERDEFINED:1]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAComponentDispT<T>::GetChildren(VARIANT Param/*[in]*/, 
                                   Borland_studio_toolsapi_tlb::_TOTAGetChildCallback* CallBack/*[in]*/)
{
  VARIANT_BOOL pRetVal;
  this->GetChildren(Param, CallBack, (VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAComponentDispT<T>::GetChildren_2(VARIANT Param/*[in]*/, 
                                     Borland_studio_toolsapi_tlb::IOTAGetChildCallback* CallBack/*[in]*/
                                     , VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetChildren_2"), DISPID(DISPID_UNKNOWN/*[1610743821]*/));
  TAutoArgs<2> _args;
  _args[1] = Param /*[VT_VARIANT:0]*/;
  _args[2] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTAGetChildCallback*)CallBack /*[VT_USERDEFINED:1]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAComponentDispT<T>::GetChildren_2(VARIANT Param/*[in]*/, 
                                     Borland_studio_toolsapi_tlb::IOTAGetChildCallback* CallBack/*[in]*/)
{
  VARIANT_BOOL pRetVal;
  this->GetChildren_2(Param, CallBack, (VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAComponentDispT<T>::GetControlCount(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetControlCount"), DISPID(DISPID_UNKNOWN/*[1610743822]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> long __fastcall
IOTAComponentDispT<T>::GetControlCount(void)
{
  long pRetVal;
  this->GetControlCount((long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAComponentDispT<T>::GetControl(long index/*[in]*/, 
                                  Borland_studio_toolsapi_tlb::IOTAComponent** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetControl"), DISPID(DISPID_UNKNOWN/*[1610743823]*/));
  TAutoArgs<1> _args;
  _args[1] = index /*[VT_I4:0]*/;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAComponent**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAComponent* __fastcall
IOTAComponentDispT<T>::GetControl(long index/*[in]*/)
{
  Borland_studio_toolsapi_tlb::IOTAComponent* pRetVal;
  this->GetControl(index, (Borland_studio_toolsapi_tlb::IOTAComponent**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAComponentDispT<T>::GetComponentCount(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetComponentCount"), DISPID(DISPID_UNKNOWN/*[1610743824]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> long __fastcall
IOTAComponentDispT<T>::GetComponentCount(void)
{
  long pRetVal;
  this->GetComponentCount((long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAComponentDispT<T>::GetComponent(long index/*[in]*/, 
                                    Borland_studio_toolsapi_tlb::IOTAComponent** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetComponent"), DISPID(DISPID_UNKNOWN/*[1610743825]*/));
  TAutoArgs<1> _args;
  _args[1] = index /*[VT_I4:0]*/;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAComponent**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAComponent* __fastcall
IOTAComponentDispT<T>::GetComponent(long index/*[in]*/)
{
  Borland_studio_toolsapi_tlb::IOTAComponent* pRetVal;
  this->GetComponent(index, (Borland_studio_toolsapi_tlb::IOTAComponent**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAComponentDispT<T>::Select(VARIANT_BOOL AddToSelection/*[in]*/, 
                              VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Select"), DISPID(DISPID_UNKNOWN/*[1610743826]*/));
  TAutoArgs<1> _args;
  _args[1] = AddToSelection /*[VT_BOOL:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAComponentDispT<T>::Select(VARIANT_BOOL AddToSelection/*[in]*/)
{
  VARIANT_BOOL pRetVal;
  this->Select(AddToSelection, (VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAComponentDispT<T>::Focus(VARIANT_BOOL AddToSelection/*[in]*/, 
                             VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Focus"), DISPID(DISPID_UNKNOWN/*[1610743827]*/));
  TAutoArgs<1> _args;
  _args[1] = AddToSelection /*[VT_BOOL:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAComponentDispT<T>::Focus(VARIANT_BOOL AddToSelection/*[in]*/)
{
  VARIANT_BOOL pRetVal;
  this->Focus(AddToSelection, (VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAComponentDispT<T>::Delete(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Delete"), DISPID(DISPID_UNKNOWN/*[1610743828]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAComponentDispT<T>::Delete(void)
{
  VARIANT_BOOL pRetVal;
  this->Delete((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

// *********************************************************************//
// SmartIntf: TCOM_ComponentRenamedEventArgs
// Interface: _ComponentRenamedEventArgs
// *********************************************************************//
// *********************************************************************//
// DispIntf:  _ComponentRenamedEventArgs
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {71BFFDFE-3B56-31B1-9091-D829DFC1CE9A}
// *********************************************************************//
// *********************************************************************//
// SmartIntf: TCOM_ComponentRenamedEventHandler
// Interface: _ComponentRenamedEventHandler
// *********************************************************************//
// *********************************************************************//
// DispIntf:  _ComponentRenamedEventHandler
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {A4866255-ADA6-3784-BE76-B0ED000FDA61}
// *********************************************************************//
// *********************************************************************//
// DispIntf:  IOTAFormEditor
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C9A9D6FC-89B7-40E2-BC64-8797E748EF6E}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAFormEditorDispT<T>::add_FormActivated(Mscorlib_tlb::_EventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("add_FormActivated"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Mscorlib_tlb::_EventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAFormEditorDispT<T>::remove_FormActivated(Mscorlib_tlb::_EventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("remove_FormActivated"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Mscorlib_tlb::_EventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAFormEditorDispT<T>::add_FormSaving(Mscorlib_tlb::_EventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("add_FormSaving"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Mscorlib_tlb::_EventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAFormEditorDispT<T>::remove_FormSaving(Mscorlib_tlb::_EventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("remove_FormSaving"), DISPID(DISPID_UNKNOWN/*[1610743811]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Mscorlib_tlb::_EventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAFormEditorDispT<T>::add_ComponentRenamed(Borland_studio_toolsapi_tlb::_ComponentRenamedEventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("add_ComponentRenamed"), DISPID(DISPID_UNKNOWN/*[1610743812]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::_ComponentRenamedEventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAFormEditorDispT<T>::remove_ComponentRenamed(Borland_studio_toolsapi_tlb::_ComponentRenamedEventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("remove_ComponentRenamed"), DISPID(DISPID_UNKNOWN/*[1610743813]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::_ComponentRenamedEventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAFormEditorDispT<T>::GetRootComponent(Borland_studio_toolsapi_tlb::IOTAComponent** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetRootComponent"), DISPID(DISPID_UNKNOWN/*[1610743814]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAComponent**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAComponent* __fastcall
IOTAFormEditorDispT<T>::GetRootComponent(void)
{
  Borland_studio_toolsapi_tlb::IOTAComponent* pRetVal;
  this->GetRootComponent((Borland_studio_toolsapi_tlb::IOTAComponent**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAFormEditorDispT<T>::FindComponent(BSTR Name/*[in]*/, 
                                      Borland_studio_toolsapi_tlb::IOTAComponent** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("FindComponent"), DISPID(DISPID_UNKNOWN/*[1610743815]*/));
  TAutoArgs<1> _args;
  _args[1] = Name /*[VT_BSTR:0]*/;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAComponent**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAComponent* __fastcall
IOTAFormEditorDispT<T>::FindComponent(BSTR Name/*[in]*/)
{
  Borland_studio_toolsapi_tlb::IOTAComponent* pRetVal;
  this->FindComponent(Name, (Borland_studio_toolsapi_tlb::IOTAComponent**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAFormEditorDispT<T>::GetComponentFromHandle(Borland_studio_toolsapi_tlb::_TOTAHandle* ComponentHandle/*[in]*/
                                               , 
                                               Borland_studio_toolsapi_tlb::IOTAComponent** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetComponentFromHandle"), DISPID(DISPID_UNKNOWN/*[1610743816]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::_TOTAHandle*)ComponentHandle /*[VT_USERDEFINED:1]*/;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAComponent**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAComponent* __fastcall
IOTAFormEditorDispT<T>::GetComponentFromHandle(Borland_studio_toolsapi_tlb::_TOTAHandle* ComponentHandle/*[in]*/)
{
  Borland_studio_toolsapi_tlb::IOTAComponent* pRetVal;
  this->GetComponentFromHandle(ComponentHandle, (Borland_studio_toolsapi_tlb::IOTAComponent**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAFormEditorDispT<T>::GetSelCount(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetSelCount"), DISPID(DISPID_UNKNOWN/*[1610743817]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> long __fastcall
IOTAFormEditorDispT<T>::GetSelCount(void)
{
  long pRetVal;
  this->GetSelCount((long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAFormEditorDispT<T>::GetSelComponent(long index/*[in]*/, 
                                        Borland_studio_toolsapi_tlb::IOTAComponent** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetSelComponent"), DISPID(DISPID_UNKNOWN/*[1610743818]*/));
  TAutoArgs<1> _args;
  _args[1] = index /*[VT_I4:0]*/;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAComponent**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAComponent* __fastcall
IOTAFormEditorDispT<T>::GetSelComponent(long index/*[in]*/)
{
  Borland_studio_toolsapi_tlb::IOTAComponent* pRetVal;
  this->GetSelComponent(index, (Borland_studio_toolsapi_tlb::IOTAComponent**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAFormEditorDispT<T>::GetCreateParent(Borland_studio_toolsapi_tlb::IOTAComponent** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetCreateParent"), DISPID(DISPID_UNKNOWN/*[1610743819]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAComponent**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAComponent* __fastcall
IOTAFormEditorDispT<T>::GetCreateParent(void)
{
  Borland_studio_toolsapi_tlb::IOTAComponent* pRetVal;
  this->GetCreateParent((Borland_studio_toolsapi_tlb::IOTAComponent**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAFormEditorDispT<T>::CreateComponent(Borland_studio_toolsapi_tlb::IOTAComponent* Container/*[in]*/
                                        , BSTR TypeName/*[in]*/, long X/*[in]*/, long Y/*[in]*/, 
                                        long W/*[in]*/, long H/*[in]*/, 
                                        Borland_studio_toolsapi_tlb::IOTAComponent** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("CreateComponent"), DISPID(DISPID_UNKNOWN/*[1610743820]*/));
  TAutoArgs<6> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTAComponent*)Container /*[VT_USERDEFINED:1]*/;
  _args[2] = TypeName /*[VT_BSTR:0]*/;
  _args[3] = X /*[VT_I4:0]*/;
  _args[4] = Y /*[VT_I4:0]*/;
  _args[5] = W /*[VT_I4:0]*/;
  _args[6] = H /*[VT_I4:0]*/;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAComponent**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAComponent* __fastcall
IOTAFormEditorDispT<T>::CreateComponent(Borland_studio_toolsapi_tlb::IOTAComponent* Container/*[in]*/, 
                                        BSTR TypeName/*[in]*/, long X/*[in]*/, long Y/*[in]*/, 
                                        long W/*[in]*/, long H/*[in]*/)
{
  Borland_studio_toolsapi_tlb::IOTAComponent* pRetVal;
  this->CreateComponent(Container, TypeName, X, Y, W, H, (Borland_studio_toolsapi_tlb::IOTAComponent**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAFormEditorDispT<T>::GetFormResource(Mscorlib_tlb::_Stream* Stream/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetFormResource"), DISPID(DISPID_UNKNOWN/*[1610743821]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Mscorlib_tlb::_Stream*)Stream /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

// *********************************************************************//
// DispIntf:  INTAFormEditor
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7ED77880-2D26-353E-A990-FF62FD0D7020}
// *********************************************************************//
template <class T> HRESULT __fastcall
INTAFormEditorDispT<T>::GetFormResource(VARIANT Stream/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetFormResource"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<1> _args;
  _args[1] = Stream /*[VT_VARIANT:0]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
INTAFormEditorDispT<T>::get_FormDesigner(VARIANT* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("FormDesigner"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_VARIANT:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> VARIANT __fastcall
INTAFormEditorDispT<T>::get_FormDesigner(void)
{
  VARIANT pRetVal;
  this->get_FormDesigner((VARIANT*)&pRetVal);
  return pRetVal;
}

// *********************************************************************//
// DispIntf:  IOTAFileFilter
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8346A98D-E405-4BD6-A0A6-91B701DD6BB5}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAFileFilterDispT<T>::GetStream(BSTR AFileName/*[in]*/, Mscorlib_tlb::_Stream* AStream/*[in]*/, 
                                  Mscorlib_tlb::_Stream** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetStream"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<2> _args;
  _args[1] = AFileName /*[VT_BSTR:0]*/;
  _args[2] = (LPDISPATCH)(Mscorlib_tlb::_Stream*)AStream /*[VT_USERDEFINED:1]*/;
  return OutRetValSetterPtr((LPDISPATCH*)(Mscorlib_tlb::_Stream**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Mscorlib_tlb::_Stream* __fastcall
IOTAFileFilterDispT<T>::GetStream(BSTR AFileName/*[in]*/, Mscorlib_tlb::_Stream* AStream/*[in]*/)
{
  Mscorlib_tlb::_Stream* pRetVal;
  this->GetStream(AFileName, AStream, (Mscorlib_tlb::_Stream**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAFileFilterDispT<T>::HandleStream(BSTR AFileName/*[in]*/, Mscorlib_tlb::_Stream* AStream/*[in]*/
                                     , VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("HandleStream"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<2> _args;
  _args[1] = AFileName /*[VT_BSTR:0]*/;
  _args[2] = (LPDISPATCH)(Mscorlib_tlb::_Stream*)AStream /*[VT_USERDEFINED:1]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAFileFilterDispT<T>::HandleStream(BSTR AFileName/*[in]*/, Mscorlib_tlb::_Stream* AStream/*[in]*/)
{
  VARIANT_BOOL pRetVal;
  this->HandleStream(AFileName, AStream, (VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAFileFilterDispT<T>::get_DisplayName(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("DisplayName"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAFileFilterDispT<T>::get_DisplayName(void)
{
  BSTR pRetVal;
  this->get_DisplayName((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAFileFilterDispT<T>::get_IDString(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("IDString"), DISPID(DISPID_UNKNOWN/*[1610743811]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAFileFilterDispT<T>::get_IDString(void)
{
  BSTR pRetVal;
  this->get_IDString((BSTR*)&pRetVal);
  return pRetVal;
}

// *********************************************************************//
// DispIntf:  IOTAFileSystem
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3FA129A8-AD94-4606-91FD-95E2DBCB5BD7}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAFileSystemDispT<T>::GetFileStream(BSTR fileName/*[in]*/, long Mode/*[in]*/, 
                                      Mscorlib_tlb::_Stream** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetFileStream"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<2> _args;
  _args[1] = fileName /*[VT_BSTR:0]*/;
  _args[2] = Mode /*[VT_I4:0]*/;
  return OutRetValSetterPtr((LPDISPATCH*)(Mscorlib_tlb::_Stream**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Mscorlib_tlb::_Stream* __fastcall
IOTAFileSystemDispT<T>::GetFileStream(BSTR fileName/*[in]*/, long Mode/*[in]*/)
{
  Mscorlib_tlb::_Stream* pRetVal;
  this->GetFileStream(fileName, Mode, (Mscorlib_tlb::_Stream**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAFileSystemDispT<T>::FileAge(BSTR fileName/*[in]*/, long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("FileAge"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<1> _args;
  _args[1] = fileName /*[VT_BSTR:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> long __fastcall
IOTAFileSystemDispT<T>::FileAge(BSTR fileName/*[in]*/)
{
  long pRetVal;
  this->FileAge(fileName, (long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAFileSystemDispT<T>::RenameFile(BSTR OldName/*[in]*/, BSTR NewName/*[in]*/, 
                                   VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("RenameFile"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<2> _args;
  _args[1] = OldName /*[VT_BSTR:0]*/;
  _args[2] = NewName /*[VT_BSTR:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAFileSystemDispT<T>::RenameFile(BSTR OldName/*[in]*/, BSTR NewName/*[in]*/)
{
  VARIANT_BOOL pRetVal;
  this->RenameFile(OldName, NewName, (VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAFileSystemDispT<T>::IsReadOnly(BSTR fileName/*[in]*/, VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("IsReadOnly"), DISPID(DISPID_UNKNOWN/*[1610743811]*/));
  TAutoArgs<1> _args;
  _args[1] = fileName /*[VT_BSTR:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAFileSystemDispT<T>::IsReadOnly(BSTR fileName/*[in]*/)
{
  VARIANT_BOOL pRetVal;
  this->IsReadOnly(fileName, (VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAFileSystemDispT<T>::IsFileBased(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("IsFileBased"), DISPID(DISPID_UNKNOWN/*[1610743812]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAFileSystemDispT<T>::IsFileBased(void)
{
  VARIANT_BOOL pRetVal;
  this->IsFileBased((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAFileSystemDispT<T>::DeleteFile(BSTR fileName/*[in]*/, VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("DeleteFile"), DISPID(DISPID_UNKNOWN/*[1610743813]*/));
  TAutoArgs<1> _args;
  _args[1] = fileName /*[VT_BSTR:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAFileSystemDispT<T>::DeleteFile(BSTR fileName/*[in]*/)
{
  VARIANT_BOOL pRetVal;
  this->DeleteFile(fileName, (VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAFileSystemDispT<T>::FileExists(BSTR fileName/*[in]*/, VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("FileExists"), DISPID(DISPID_UNKNOWN/*[1610743814]*/));
  TAutoArgs<1> _args;
  _args[1] = fileName /*[VT_BSTR:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAFileSystemDispT<T>::FileExists(BSTR fileName/*[in]*/)
{
  VARIANT_BOOL pRetVal;
  this->FileExists(fileName, (VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAFileSystemDispT<T>::GetTempFileName(BSTR fileName/*[in]*/, BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetTempFileName"), DISPID(DISPID_UNKNOWN/*[1610743815]*/));
  TAutoArgs<1> _args;
  _args[1] = fileName /*[VT_BSTR:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAFileSystemDispT<T>::GetTempFileName(BSTR fileName/*[in]*/)
{
  BSTR pRetVal;
  this->GetTempFileName(fileName, (BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAFileSystemDispT<T>::GetBackupFileName(BSTR fileName/*[in]*/, BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetBackupFileName"), DISPID(DISPID_UNKNOWN/*[1610743816]*/));
  TAutoArgs<1> _args;
  _args[1] = fileName /*[VT_BSTR:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAFileSystemDispT<T>::GetBackupFileName(BSTR fileName/*[in]*/)
{
  BSTR pRetVal;
  this->GetBackupFileName(fileName, (BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAFileSystemDispT<T>::GetIDString(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetIDString"), DISPID(DISPID_UNKNOWN/*[1610743817]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAFileSystemDispT<T>::GetIDString(void)
{
  BSTR pRetVal;
  this->GetIDString((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAFileSystemDispT<T>::GetFilter(Borland_studio_toolsapi_tlb::IOTAFileFilter** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetFilter"), DISPID(DISPID_UNKNOWN/*[1610743818]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAFileFilter**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAFileFilter* __fastcall
IOTAFileSystemDispT<T>::GetFilter(void)
{
  Borland_studio_toolsapi_tlb::IOTAFileFilter* pRetVal;
  this->GetFilter((Borland_studio_toolsapi_tlb::IOTAFileFilter**)&pRetVal);
  return pRetVal;
}

// *********************************************************************//
// DispIntf:  INTAPalettePaintIcon
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {18544EF7-B617-4225-9FD7-31FEFB77861E}
// *********************************************************************//
template <class T> HRESULT __fastcall
INTAPalettePaintIconDispT<T>::Paint(LPUNKNOWN graphics/*[in]*/, long X/*[in]*/, long Y/*[in]*/, 
                                    Borland_studio_toolsapi_tlb::NTAPaintIconSize iconSize/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Paint"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<4> _args;
  _args[1] = graphics /*[VT_UNKNOWN:0]*/;
  _args[2] = X /*[VT_I4:0]*/;
  _args[3] = Y /*[VT_I4:0]*/;
  _args[4] = (int)iconSize /*[VT_USERDEFINED:0]*/;
  return OleFunction(_dispid, _args);
}

// *********************************************************************//
// DispIntf:  IOTAPaletteDragAcceptor
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {971ABE7B-ED20-476B-9E96-CBA792B87BF2}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAPaletteDragAcceptorDispT<T>::get_Handle(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Handle"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> long __fastcall
IOTAPaletteDragAcceptorDispT<T>::get_Handle(void)
{
  long pRetVal;
  this->get_Handle((long*)&pRetVal);
  return pRetVal;
}

// *********************************************************************//
// DispIntf:  IOTADesignerDragAcceptor
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E79FE430-EFE0-4C54-AB09-103124344394}
// *********************************************************************//
// *********************************************************************//
// DispIntf:  IOTACodeEditorDragAcceptor
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3BF605F3-4634-4CA7-9C72-8AC9AF350B05}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTACodeEditorDragAcceptorDispT<T>::get_EditorControl(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("EditorControl"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> long __fastcall
IOTACodeEditorDragAcceptorDispT<T>::get_EditorControl(void)
{
  long pRetVal;
  this->get_EditorControl((long*)&pRetVal);
  return pRetVal;
}

// *********************************************************************//
// DispIntf:  IOTAPaletteDragDropOp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FE6AE3E9-F514-4CD7-BFD9-21CAD6FB42AA}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAPaletteDragDropOpDispT<T>::DragOver(Borland_studio_toolsapi_tlb::IOTAPaletteDragAcceptor* target/*[in]*/
                                        , long X/*[in]*/, long Y/*[in]*/, 
                                        Borland_studio_toolsapi_tlb::PalDragState state/*[in]*/, 
                                        VARIANT_BOOL* accept/*[in,out]*/)
{
  _TDispID _dispid(*this, OLETEXT("DragOver"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<5> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTAPaletteDragAcceptor*)target /*[VT_USERDEFINED:1]*/;
  _args[2] = X /*[VT_I4:0]*/;
  _args[3] = Y /*[VT_I4:0]*/;
  _args[4] = (int)state /*[VT_USERDEFINED:0]*/;
  _args[5] = accept /*[VT_BOOL:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAPaletteDragDropOpDispT<T>::DragDrop(Borland_studio_toolsapi_tlb::IOTAPaletteDragAcceptor* target/*[in]*/
                                        , long X/*[in]*/, long Y/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("DragDrop"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<3> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTAPaletteDragAcceptor*)target /*[VT_USERDEFINED:1]*/;
  _args[2] = X /*[VT_I4:0]*/;
  _args[3] = Y /*[VT_I4:0]*/;
  return OleFunction(_dispid, _args);
}

// *********************************************************************//
// DispIntf:  IOTABasePaletteItem
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {91097078-4B81-47DC-A4DB-569EA5AC7194}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTABasePaletteItemDispT<T>::get_CanDelete(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("CanDelete"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTABasePaletteItemDispT<T>::get_CanDelete(void)
{
  VARIANT_BOOL pRetVal;
  this->get_CanDelete((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTABasePaletteItemDispT<T>::get_HelpName(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("HelpName"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTABasePaletteItemDispT<T>::get_HelpName(void)
{
  BSTR pRetVal;
  this->get_HelpName((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTABasePaletteItemDispT<T>::set_HelpName(BSTR pRetVal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("HelpName"), DISPID(1610743809));
  TAutoArgs<1> _args;
  _args[1] = pRetVal /*[VT_BSTR:0]*/;
  return OlePropertyPut(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTABasePaletteItemDispT<T>::get_hintText(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("hintText"), DISPID(DISPID_UNKNOWN/*[1610743811]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTABasePaletteItemDispT<T>::get_hintText(void)
{
  BSTR pRetVal;
  this->get_hintText((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTABasePaletteItemDispT<T>::set_hintText(BSTR pRetVal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("hintText"), DISPID(1610743811));
  TAutoArgs<1> _args;
  _args[1] = pRetVal /*[VT_BSTR:0]*/;
  return OlePropertyPut(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTABasePaletteItemDispT<T>::get_IDString(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("IDString"), DISPID(DISPID_UNKNOWN/*[1610743813]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTABasePaletteItemDispT<T>::get_IDString(void)
{
  BSTR pRetVal;
  this->get_IDString((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTABasePaletteItemDispT<T>::get_Name(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Name"), DISPID(DISPID_UNKNOWN/*[1610743814]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTABasePaletteItemDispT<T>::get_Name(void)
{
  BSTR pRetVal;
  this->get_Name((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTABasePaletteItemDispT<T>::set_Name(BSTR pRetVal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Name"), DISPID(1610743814));
  TAutoArgs<1> _args;
  _args[1] = pRetVal /*[VT_BSTR:0]*/;
  return OlePropertyPut(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTABasePaletteItemDispT<T>::get_Visible(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Visible"), DISPID(DISPID_UNKNOWN/*[1610743816]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTABasePaletteItemDispT<T>::get_Visible(void)
{
  VARIANT_BOOL pRetVal;
  this->get_Visible((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTABasePaletteItemDispT<T>::set_Visible(VARIANT_BOOL pRetVal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Visible"), DISPID(1610743816));
  TAutoArgs<1> _args;
  _args[1] = pRetVal /*[VT_BOOL:0]*/;
  return OlePropertyPut(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTABasePaletteItemDispT<T>::Execute()
{
  _TDispID _dispid(*this, OLETEXT("Execute"), DISPID(DISPID_UNKNOWN/*[1610743818]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTABasePaletteItemDispT<T>::Delete()
{
  _TDispID _dispid(*this, OLETEXT("Delete"), DISPID(DISPID_UNKNOWN/*[1610743819]*/));
  return OleFunction(_dispid);
}

// *********************************************************************//
// DispIntf:  IOTAComponentPaletteItem
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7B7807E5-9C1A-4140-86DB-BF47B3B52FE3}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAComponentPaletteItemDispT<T>::get_PackageName(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("PackageName"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAComponentPaletteItemDispT<T>::get_PackageName(void)
{
  BSTR pRetVal;
  this->get_PackageName((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAComponentPaletteItemDispT<T>::set_PackageName(BSTR pRetVal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("PackageName"), DISPID(1610743808));
  TAutoArgs<1> _args;
  _args[1] = pRetVal /*[VT_BSTR:0]*/;
  return OlePropertyPut(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAComponentPaletteItemDispT<T>::get_className(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("className"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAComponentPaletteItemDispT<T>::get_className(void)
{
  BSTR pRetVal;
  this->get_className((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAComponentPaletteItemDispT<T>::set_className(BSTR pRetVal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("className"), DISPID(1610743810));
  TAutoArgs<1> _args;
  _args[1] = pRetVal /*[VT_BSTR:0]*/;
  return OlePropertyPut(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAComponentPaletteItemDispT<T>::get_UnitName(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("UnitName"), DISPID(DISPID_UNKNOWN/*[1610743812]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAComponentPaletteItemDispT<T>::get_UnitName(void)
{
  BSTR pRetVal;
  this->get_UnitName((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAComponentPaletteItemDispT<T>::set_UnitName(BSTR pRetVal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("UnitName"), DISPID(1610743812));
  TAutoArgs<1> _args;
  _args[1] = pRetVal /*[VT_BSTR:0]*/;
  return OlePropertyPut(_dispid, _args);
}

// *********************************************************************//
// DispIntf:  IOTAPaletteGroup
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2900C9C3-3F4C-441C-BD46-995239F812C5}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAPaletteGroupDispT<T>::get_Count(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Count"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> long __fastcall
IOTAPaletteGroupDispT<T>::get_Count(void)
{
  long pRetVal;
  this->get_Count((long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAPaletteGroupDispT<T>::GetItem(long index/*[in]*/, 
                                  Borland_studio_toolsapi_tlb::IOTABasePaletteItem** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetItem"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<1> _args;
  _args[1] = index /*[VT_I4:0]*/;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTABasePaletteItem**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTABasePaletteItem* __fastcall
IOTAPaletteGroupDispT<T>::GetItem(long index/*[in]*/)
{
  Borland_studio_toolsapi_tlb::IOTABasePaletteItem* pRetVal;
  this->GetItem(index, (Borland_studio_toolsapi_tlb::IOTABasePaletteItem**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAPaletteGroupDispT<T>::AddGroup(BSTR Name/*[in]*/, BSTR IDString/*[in]*/, 
                                   Borland_studio_toolsapi_tlb::IOTAPaletteGroup** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("AddGroup"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<2> _args;
  _args[1] = Name /*[VT_BSTR:0]*/;
  _args[2] = IDString /*[VT_BSTR:0]*/;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAPaletteGroup**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAPaletteGroup* __fastcall
IOTAPaletteGroupDispT<T>::AddGroup(BSTR Name/*[in]*/, BSTR IDString/*[in]*/)
{
  Borland_studio_toolsapi_tlb::IOTAPaletteGroup* pRetVal;
  this->AddGroup(Name, IDString, (Borland_studio_toolsapi_tlb::IOTAPaletteGroup**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAPaletteGroupDispT<T>::AddItem(Borland_studio_toolsapi_tlb::IOTABasePaletteItem* Item/*[in]*/, 
                                  long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("AddItem"), DISPID(DISPID_UNKNOWN/*[1610743811]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTABasePaletteItem*)Item /*[VT_USERDEFINED:1]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> long __fastcall
IOTAPaletteGroupDispT<T>::AddItem(Borland_studio_toolsapi_tlb::IOTABasePaletteItem* Item/*[in]*/)
{
  long pRetVal;
  this->AddItem(Item, (long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAPaletteGroupDispT<T>::Clear()
{
  _TDispID _dispid(*this, OLETEXT("Clear"), DISPID(DISPID_UNKNOWN/*[1610743812]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAPaletteGroupDispT<T>::FindItem(BSTR IDString/*[in]*/, VARIANT_BOOL recurse/*[in]*/, 
                                   Borland_studio_toolsapi_tlb::IOTABasePaletteItem** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("FindItem"), DISPID(DISPID_UNKNOWN/*[1610743813]*/));
  TAutoArgs<2> _args;
  _args[1] = IDString /*[VT_BSTR:0]*/;
  _args[2] = recurse /*[VT_BOOL:0]*/;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTABasePaletteItem**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTABasePaletteItem* __fastcall
IOTAPaletteGroupDispT<T>::FindItem(BSTR IDString/*[in]*/, VARIANT_BOOL recurse/*[in]*/)
{
  Borland_studio_toolsapi_tlb::IOTABasePaletteItem* pRetVal;
  this->FindItem(IDString, recurse, (Borland_studio_toolsapi_tlb::IOTABasePaletteItem**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAPaletteGroupDispT<T>::FindItemByName(BSTR Name/*[in]*/, VARIANT_BOOL recurse/*[in]*/, 
                                         Borland_studio_toolsapi_tlb::IOTABasePaletteItem** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("FindItemByName"), DISPID(DISPID_UNKNOWN/*[1610743814]*/));
  TAutoArgs<2> _args;
  _args[1] = Name /*[VT_BSTR:0]*/;
  _args[2] = recurse /*[VT_BOOL:0]*/;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTABasePaletteItem**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTABasePaletteItem* __fastcall
IOTAPaletteGroupDispT<T>::FindItemByName(BSTR Name/*[in]*/, VARIANT_BOOL recurse/*[in]*/)
{
  Borland_studio_toolsapi_tlb::IOTABasePaletteItem* pRetVal;
  this->FindItemByName(Name, recurse, (Borland_studio_toolsapi_tlb::IOTABasePaletteItem**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAPaletteGroupDispT<T>::FindItemGroup(BSTR IDString/*[in]*/, 
                                        Borland_studio_toolsapi_tlb::IOTAPaletteGroup** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("FindItemGroup"), DISPID(DISPID_UNKNOWN/*[1610743815]*/));
  TAutoArgs<1> _args;
  _args[1] = IDString /*[VT_BSTR:0]*/;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAPaletteGroup**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAPaletteGroup* __fastcall
IOTAPaletteGroupDispT<T>::FindItemGroup(BSTR IDString/*[in]*/)
{
  Borland_studio_toolsapi_tlb::IOTAPaletteGroup* pRetVal;
  this->FindItemGroup(IDString, (Borland_studio_toolsapi_tlb::IOTAPaletteGroup**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAPaletteGroupDispT<T>::FindItemGroupByName(BSTR Name/*[in]*/, 
                                              Borland_studio_toolsapi_tlb::IOTAPaletteGroup** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("FindItemGroupByName"), DISPID(DISPID_UNKNOWN/*[1610743816]*/));
  TAutoArgs<1> _args;
  _args[1] = Name /*[VT_BSTR:0]*/;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAPaletteGroup**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAPaletteGroup* __fastcall
IOTAPaletteGroupDispT<T>::FindItemGroupByName(BSTR Name/*[in]*/)
{
  Borland_studio_toolsapi_tlb::IOTAPaletteGroup* pRetVal;
  this->FindItemGroupByName(Name, (Borland_studio_toolsapi_tlb::IOTAPaletteGroup**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAPaletteGroupDispT<T>::InsertItem(long index/*[in]*/, 
                                     Borland_studio_toolsapi_tlb::IOTABasePaletteItem* Item/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("InsertItem"), DISPID(DISPID_UNKNOWN/*[1610743817]*/));
  TAutoArgs<2> _args;
  _args[1] = index /*[VT_I4:0]*/;
  _args[2] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTABasePaletteItem*)Item /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAPaletteGroupDispT<T>::IndexOf(Borland_studio_toolsapi_tlb::IOTABasePaletteItem* Item/*[in]*/, 
                                  long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("IndexOf"), DISPID(DISPID_UNKNOWN/*[1610743818]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTABasePaletteItem*)Item /*[VT_USERDEFINED:1]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> long __fastcall
IOTAPaletteGroupDispT<T>::IndexOf(Borland_studio_toolsapi_tlb::IOTABasePaletteItem* Item/*[in]*/)
{
  long pRetVal;
  this->IndexOf(Item, (long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAPaletteGroupDispT<T>::Move(long CurIndex/*[in]*/, long NewIndex/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Move"), DISPID(DISPID_UNKNOWN/*[1610743819]*/));
  TAutoArgs<2> _args;
  _args[1] = CurIndex /*[VT_I4:0]*/;
  _args[2] = NewIndex /*[VT_I4:0]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAPaletteGroupDispT<T>::RemoveItem(BSTR IDString/*[in]*/, VARIANT_BOOL recurse/*[in]*/, 
                                     VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("RemoveItem"), DISPID(DISPID_UNKNOWN/*[1610743820]*/));
  TAutoArgs<2> _args;
  _args[1] = IDString /*[VT_BSTR:0]*/;
  _args[2] = recurse /*[VT_BOOL:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAPaletteGroupDispT<T>::RemoveItem(BSTR IDString/*[in]*/, VARIANT_BOOL recurse/*[in]*/)
{
  VARIANT_BOOL pRetVal;
  this->RemoveItem(IDString, recurse, (VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

// *********************************************************************//
// DispIntf:  IOTAPaletteColorScheme
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D449A0A3-BCCC-4D7D-9BCD-7F86183AE09C}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAPaletteColorSchemeDispT<T>::get_ButtonColors(/*AUTO_PARAM_ERROR(Borland_studio_toolsapi_tlb::OTAPaletteButtonColors* pRetVal)*/ VARIANT*  pRetVal)
{
  _TDispID _dispid(*this, OLETEXT("ButtonColors"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_USERDEFINED:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> HRESULT __fastcall
IOTAPaletteColorSchemeDispT<T>::GetColor(long index/*[in]*/, 
                                         /*AUTO_PARAM_ERROR(Borland_studio_toolsapi_tlb::OTAPaletteColorItem* pRetVal)*/ VARIANT*  pRetVal)
{
  _TDispID _dispid(*this, OLETEXT("GetColor"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<1> _args;
  _args[1] = index /*[VT_I4:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_USERDEFINED:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> HRESULT __fastcall
IOTAPaletteColorSchemeDispT<T>::get_Count(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Count"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> long __fastcall
IOTAPaletteColorSchemeDispT<T>::get_Count(void)
{
  long pRetVal;
  this->get_Count((long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAPaletteColorSchemeDispT<T>::get_IDString(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("IDString"), DISPID(DISPID_UNKNOWN/*[1610743811]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAPaletteColorSchemeDispT<T>::get_IDString(void)
{
  BSTR pRetVal;
  this->get_IDString((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAPaletteColorSchemeDispT<T>::get_Name(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Name"), DISPID(DISPID_UNKNOWN/*[1610743812]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAPaletteColorSchemeDispT<T>::get_Name(void)
{
  BSTR pRetVal;
  this->get_Name((BSTR*)&pRetVal);
  return pRetVal;
}

// *********************************************************************//
// SmartIntf: TCOM_ItemEventArgs
// Interface: _ItemEventArgs
// *********************************************************************//
// *********************************************************************//
// DispIntf:  _ItemEventArgs
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {695DA742-994C-3BA7-8C80-6FB078C1F9DD}
// *********************************************************************//
// *********************************************************************//
// SmartIntf: TCOM_SelectedEventArgs
// Interface: _SelectedEventArgs
// *********************************************************************//
// *********************************************************************//
// DispIntf:  _SelectedEventArgs
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {071E7A2C-C20C-39F9-ADB4-F774D3E3D92B}
// *********************************************************************//
// *********************************************************************//
// SmartIntf: TCOM_ItemEventHandler
// Interface: _ItemEventHandler
// *********************************************************************//
// *********************************************************************//
// DispIntf:  _ItemEventHandler
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {4EBF472F-B506-308F-8CFD-C7F554ED1233}
// *********************************************************************//
// *********************************************************************//
// SmartIntf: TCOM_SelectedEventHandler
// Interface: _SelectedEventHandler
// *********************************************************************//
// *********************************************************************//
// DispIntf:  _SelectedEventHandler
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {550527A4-F53E-32DA-9AD9-F4497B17A7EB}
// *********************************************************************//
// *********************************************************************//
// DispIntf:  IOTAPaletteServices
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D1F0E26A-7EF1-4390-B86E-8A24CB61FF1B}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAPaletteServicesDispT<T>::get_SelectedTool(Borland_studio_toolsapi_tlb::IOTABasePaletteItem** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("SelectedTool"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTABasePaletteItem**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTABasePaletteItemPtr __fastcall
IOTAPaletteServicesDispT<T>::get_SelectedTool(void)
{
  Borland_studio_toolsapi_tlb::IOTABasePaletteItemPtr pRetVal;
  this->get_SelectedTool(&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAPaletteServicesDispT<T>::_set_SelectedTool(Borland_studio_toolsapi_tlb::IOTABasePaletteItem* pRetVal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("SelectedTool"), DISPID(1610743808));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTABasePaletteItem*)pRetVal /*[VT_USERDEFINED:1]*/;
  return OlePropertyPut(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAPaletteServicesDispT<T>::get_BaseGroup(Borland_studio_toolsapi_tlb::IOTAPaletteGroup** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("BaseGroup"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAPaletteGroup**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAPaletteGroupPtr __fastcall
IOTAPaletteServicesDispT<T>::get_BaseGroup(void)
{
  Borland_studio_toolsapi_tlb::IOTAPaletteGroupPtr pRetVal;
  this->get_BaseGroup(&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAPaletteServicesDispT<T>::OnBeginUpdate()
{
  _TDispID _dispid(*this, OLETEXT("OnBeginUpdate"), DISPID(DISPID_UNKNOWN/*[1610743811]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAPaletteServicesDispT<T>::OnEndUpdate()
{
  _TDispID _dispid(*this, OLETEXT("OnEndUpdate"), DISPID(DISPID_UNKNOWN/*[1610743812]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAPaletteServicesDispT<T>::OnItemAdded(Borland_studio_toolsapi_tlb::IOTAPaletteGroup* group/*[in]*/
                                         , 
                                         Borland_studio_toolsapi_tlb::IOTABasePaletteItem* Item/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("OnItemAdded"), DISPID(DISPID_UNKNOWN/*[1610743813]*/));
  TAutoArgs<2> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTAPaletteGroup*)group /*[VT_USERDEFINED:1]*/;
  _args[2] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTABasePaletteItem*)Item /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAPaletteServicesDispT<T>::OnItemRemoved(Borland_studio_toolsapi_tlb::IOTAPaletteGroup* gorup/*[in]*/
                                           , 
                                           Borland_studio_toolsapi_tlb::IOTABasePaletteItem* Item/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("OnItemRemoved"), DISPID(DISPID_UNKNOWN/*[1610743814]*/));
  TAutoArgs<2> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTAPaletteGroup*)gorup /*[VT_USERDEFINED:1]*/;
  _args[2] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTABasePaletteItem*)Item /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAPaletteServicesDispT<T>::OnSelectedToolChanged(Borland_studio_toolsapi_tlb::IOTABasePaletteItem* Item/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("OnSelectedToolChanged"), DISPID(DISPID_UNKNOWN/*[1610743815]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTABasePaletteItem*)Item /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAPaletteServicesDispT<T>::OnModified()
{
  _TDispID _dispid(*this, OLETEXT("OnModified"), DISPID(DISPID_UNKNOWN/*[1610743816]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAPaletteServicesDispT<T>::RegisterColorScheme(Borland_studio_toolsapi_tlb::IOTAPaletteColorScheme* ColorScheme/*[in]*/
                                                 , long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("RegisterColorScheme"), DISPID(DISPID_UNKNOWN/*[1610743817]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTAPaletteColorScheme*)ColorScheme /*[VT_USERDEFINED:1]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> long __fastcall
IOTAPaletteServicesDispT<T>::RegisterColorScheme(Borland_studio_toolsapi_tlb::IOTAPaletteColorScheme* ColorScheme/*[in]*/)
{
  long pRetVal;
  this->RegisterColorScheme(ColorScheme, (long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAPaletteServicesDispT<T>::UnregisterColorScheme(long index/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("UnregisterColorScheme"), DISPID(DISPID_UNKNOWN/*[1610743818]*/));
  TAutoArgs<1> _args;
  _args[1] = index /*[VT_I4:0]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAPaletteServicesDispT<T>::GetColorScheme(long index/*[in]*/, 
                                            Borland_studio_toolsapi_tlb::IOTAPaletteColorScheme** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetColorScheme"), DISPID(DISPID_UNKNOWN/*[1610743819]*/));
  TAutoArgs<1> _args;
  _args[1] = index /*[VT_I4:0]*/;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAPaletteColorScheme**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAPaletteColorScheme* __fastcall
IOTAPaletteServicesDispT<T>::GetColorScheme(long index/*[in]*/)
{
  Borland_studio_toolsapi_tlb::IOTAPaletteColorScheme* pRetVal;
  this->GetColorScheme(index, (Borland_studio_toolsapi_tlb::IOTAPaletteColorScheme**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAPaletteServicesDispT<T>::RegisterDragAcceptor(Borland_studio_toolsapi_tlb::IOTAPaletteDragAcceptor* acceptor/*[in]*/
                                                  , long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("RegisterDragAcceptor"), DISPID(DISPID_UNKNOWN/*[1610743820]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTAPaletteDragAcceptor*)acceptor /*[VT_USERDEFINED:1]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> long __fastcall
IOTAPaletteServicesDispT<T>::RegisterDragAcceptor(Borland_studio_toolsapi_tlb::IOTAPaletteDragAcceptor* acceptor/*[in]*/)
{
  long pRetVal;
  this->RegisterDragAcceptor(acceptor, (long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAPaletteServicesDispT<T>::UnregisterDragAcceptor(long index/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("UnregisterDragAcceptor"), DISPID(DISPID_UNKNOWN/*[1610743821]*/));
  TAutoArgs<1> _args;
  _args[1] = index /*[VT_I4:0]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAPaletteServicesDispT<T>::GetDragAcceptor(long index/*[in]*/, 
                                             Borland_studio_toolsapi_tlb::IOTAPaletteDragAcceptor** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetDragAcceptor"), DISPID(DISPID_UNKNOWN/*[1610743822]*/));
  TAutoArgs<1> _args;
  _args[1] = index /*[VT_I4:0]*/;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAPaletteDragAcceptor**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAPaletteDragAcceptor* __fastcall
IOTAPaletteServicesDispT<T>::GetDragAcceptor(long index/*[in]*/)
{
  Borland_studio_toolsapi_tlb::IOTAPaletteDragAcceptor* pRetVal;
  this->GetDragAcceptor(index, (Borland_studio_toolsapi_tlb::IOTAPaletteDragAcceptor**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAPaletteServicesDispT<T>::AddPaletteState(BSTR state/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("AddPaletteState"), DISPID(DISPID_UNKNOWN/*[1610743823]*/));
  TAutoArgs<1> _args;
  _args[1] = state /*[VT_BSTR:0]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAPaletteServicesDispT<T>::RemovePaletteState(BSTR state/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("RemovePaletteState"), DISPID(DISPID_UNKNOWN/*[1610743824]*/));
  TAutoArgs<1> _args;
  _args[1] = state /*[VT_BSTR:0]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAPaletteServicesDispT<T>::ContainsPaletteState(BSTR state/*[in]*/, 
                                                  VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("ContainsPaletteState"), DISPID(DISPID_UNKNOWN/*[1610743825]*/));
  TAutoArgs<1> _args;
  _args[1] = state /*[VT_BSTR:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAPaletteServicesDispT<T>::ContainsPaletteState(BSTR state/*[in]*/)
{
  VARIANT_BOOL pRetVal;
  this->ContainsPaletteState(state, (VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAPaletteServicesDispT<T>::get_PaletteState(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("PaletteState"), DISPID(DISPID_UNKNOWN/*[1610743826]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAPaletteServicesDispT<T>::get_PaletteState(void)
{
  BSTR pRetVal;
  this->get_PaletteState((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAPaletteServicesDispT<T>::add_Modified(Mscorlib_tlb::_EventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("add_Modified"), DISPID(DISPID_UNKNOWN/*[1610743827]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Mscorlib_tlb::_EventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAPaletteServicesDispT<T>::remove_Modified(Mscorlib_tlb::_EventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("remove_Modified"), DISPID(DISPID_UNKNOWN/*[1610743828]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Mscorlib_tlb::_EventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAPaletteServicesDispT<T>::add_Closed(Mscorlib_tlb::_EventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("add_Closed"), DISPID(DISPID_UNKNOWN/*[1610743829]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Mscorlib_tlb::_EventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAPaletteServicesDispT<T>::remove_Closed(Mscorlib_tlb::_EventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("remove_Closed"), DISPID(DISPID_UNKNOWN/*[1610743830]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Mscorlib_tlb::_EventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAPaletteServicesDispT<T>::add_ItemAdded(Borland_studio_toolsapi_tlb::_ItemEventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("add_ItemAdded"), DISPID(DISPID_UNKNOWN/*[1610743831]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::_ItemEventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAPaletteServicesDispT<T>::remove_ItemAdded(Borland_studio_toolsapi_tlb::_ItemEventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("remove_ItemAdded"), DISPID(DISPID_UNKNOWN/*[1610743832]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::_ItemEventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAPaletteServicesDispT<T>::add_ItemRemoved(Borland_studio_toolsapi_tlb::_ItemEventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("add_ItemRemoved"), DISPID(DISPID_UNKNOWN/*[1610743833]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::_ItemEventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAPaletteServicesDispT<T>::remove_ItemRemoved(Borland_studio_toolsapi_tlb::_ItemEventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("remove_ItemRemoved"), DISPID(DISPID_UNKNOWN/*[1610743834]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::_ItemEventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAPaletteServicesDispT<T>::add_SelectedToolChanged(Borland_studio_toolsapi_tlb::_SelectedEventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("add_SelectedToolChanged"), DISPID(DISPID_UNKNOWN/*[1610743835]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::_SelectedEventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAPaletteServicesDispT<T>::remove_SelectedToolChanged(Borland_studio_toolsapi_tlb::_SelectedEventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("remove_SelectedToolChanged"), DISPID(DISPID_UNKNOWN/*[1610743836]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::_SelectedEventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAPaletteServicesDispT<T>::add_BeginUpdate(Mscorlib_tlb::_EventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("add_BeginUpdate"), DISPID(DISPID_UNKNOWN/*[1610743837]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Mscorlib_tlb::_EventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAPaletteServicesDispT<T>::remove_BeginUpdate(Mscorlib_tlb::_EventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("remove_BeginUpdate"), DISPID(DISPID_UNKNOWN/*[1610743838]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Mscorlib_tlb::_EventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAPaletteServicesDispT<T>::add_EndUpdate(Mscorlib_tlb::_EventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("add_EndUpdate"), DISPID(DISPID_UNKNOWN/*[1610743839]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Mscorlib_tlb::_EventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAPaletteServicesDispT<T>::remove_EndUpdate(Mscorlib_tlb::_EventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("remove_EndUpdate"), DISPID(DISPID_UNKNOWN/*[1610743840]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Mscorlib_tlb::_EventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

// *********************************************************************//
// DispIntf:  IOTAPackageInstallService
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B3345543-6C48-4C54-B24E-57F81FAB4BA9}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAPackageInstallServiceDispT<T>::get_InstalledPackages(LPSAFEARRAY* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("InstalledPackages"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_SAFEARRAY:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> LPSAFEARRAY __fastcall
IOTAPackageInstallServiceDispT<T>::get_InstalledPackages(void)
{
  LPSAFEARRAY pRetVal;
  this->get_InstalledPackages((LPSAFEARRAY*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAPackageInstallServiceDispT<T>::GetPackageInformation(BSTR fileName/*[in]*/, 
                                                         Borland_studio_toolsapi_tlb::IOTAPackageInformation** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetPackageInformation"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<1> _args;
  _args[1] = fileName /*[VT_BSTR:0]*/;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAPackageInformation**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAPackageInformation* __fastcall
IOTAPackageInstallServiceDispT<T>::GetPackageInformation(BSTR fileName/*[in]*/)
{
  Borland_studio_toolsapi_tlb::IOTAPackageInformation* pRetVal;
  this->GetPackageInformation(fileName, (Borland_studio_toolsapi_tlb::IOTAPackageInformation**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAPackageInstallServiceDispT<T>::RemovePackageInformation(Borland_studio_toolsapi_tlb::IOTAPackageInformation* info/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("RemovePackageInformation"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTAPackageInformation*)info /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAPackageInstallServiceDispT<T>::Load()
{
  _TDispID _dispid(*this, OLETEXT("Load"), DISPID(DISPID_UNKNOWN/*[1610743811]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAPackageInstallServiceDispT<T>::Save()
{
  _TDispID _dispid(*this, OLETEXT("Save"), DISPID(DISPID_UNKNOWN/*[1610743812]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAPackageInstallServiceDispT<T>::GetPackageFromUnit(BSTR UnitName/*[in]*/, 
                                                      BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetPackageFromUnit"), DISPID(DISPID_UNKNOWN/*[1610743813]*/));
  TAutoArgs<1> _args;
  _args[1] = UnitName /*[VT_BSTR:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAPackageInstallServiceDispT<T>::GetPackageFromUnit(BSTR UnitName/*[in]*/)
{
  BSTR pRetVal;
  this->GetPackageFromUnit(UnitName, (BSTR*)&pRetVal);
  return pRetVal;
}

// *********************************************************************//
// DispIntf:  IOTAPackageInformation
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5B75654E-A005-474A-9456-5A675EDFA100}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAPackageInformationDispT<T>::get_PackageLocation(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("PackageLocation"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAPackageInformationDispT<T>::get_PackageLocation(void)
{
  BSTR pRetVal;
  this->get_PackageLocation((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAPackageInformationDispT<T>::get_DisplayName(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("DisplayName"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAPackageInformationDispT<T>::get_DisplayName(void)
{
  BSTR pRetVal;
  this->get_DisplayName((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAPackageInformationDispT<T>::get_Enabled(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Enabled"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAPackageInformationDispT<T>::get_Enabled(void)
{
  VARIANT_BOOL pRetVal;
  this->get_Enabled((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAPackageInformationDispT<T>::set_Enabled(VARIANT_BOOL pRetVal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Enabled"), DISPID(1610743810));
  TAutoArgs<1> _args;
  _args[1] = pRetVal /*[VT_BOOL:0]*/;
  return OlePropertyPut(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAPackageInformationDispT<T>::get_Components(LPSAFEARRAY* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Components"), DISPID(DISPID_UNKNOWN/*[1610743812]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_SAFEARRAY:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> LPSAFEARRAY __fastcall
IOTAPackageInformationDispT<T>::get_Components(void)
{
  LPSAFEARRAY pRetVal;
  this->get_Components((LPSAFEARRAY*)&pRetVal);
  return pRetVal;
}

// *********************************************************************//
// DispIntf:  IOTAPackageComponent
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {16C35C1D-DD6E-493D-9CF7-0F405045EA54}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAPackageComponentDispT<T>::get_Name(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Name"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAPackageComponentDispT<T>::get_Name(void)
{
  BSTR pRetVal;
  this->get_Name((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAPackageComponentDispT<T>::get_Unit(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Unit"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAPackageComponentDispT<T>::get_Unit(void)
{
  BSTR pRetVal;
  this->get_Unit((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAPackageComponentDispT<T>::get_Page(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Page"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAPackageComponentDispT<T>::get_Page(void)
{
  BSTR pRetVal;
  this->get_Page((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAPackageComponentDispT<T>::get_Qualified(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Qualified"), DISPID(DISPID_UNKNOWN/*[1610743811]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAPackageComponentDispT<T>::get_Qualified(void)
{
  BSTR pRetVal;
  this->get_Qualified((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAPackageComponentDispT<T>::get_Image(System_drawing_tlb::_Bitmap** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Image"), DISPID(DISPID_UNKNOWN/*[1610743812]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr((LPDISPATCH*)(System_drawing_tlb::_Bitmap**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> System_drawing_tlb::_BitmapPtr __fastcall
IOTAPackageComponentDispT<T>::get_Image(void)
{
  System_drawing_tlb::_BitmapPtr pRetVal;
  this->get_Image(&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAPackageComponentDispT<T>::AddReferencesToProject(Borland_studio_toolsapi_tlb::IOTAProject* project/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("AddReferencesToProject"), DISPID(DISPID_UNKNOWN/*[1610743813]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTAProject*)project /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAPackageComponentDispT<T>::ComponentImage(Borland_studio_toolsapi_tlb::OTAComponentImageSize Size/*[in]*/
                                             , System_drawing_tlb::_Bitmap** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("ComponentImage"), DISPID(DISPID_UNKNOWN/*[1610743814]*/));
  TAutoArgs<1> _args;
  _args[1] = (int)Size /*[VT_USERDEFINED:0]*/;
  return OutRetValSetterPtr((LPDISPATCH*)(System_drawing_tlb::_Bitmap**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> System_drawing_tlb::_Bitmap* __fastcall
IOTAPackageComponentDispT<T>::ComponentImage(Borland_studio_toolsapi_tlb::OTAComponentImageSize Size/*[in]*/)
{
  System_drawing_tlb::_Bitmap* pRetVal;
  this->ComponentImage(Size, (System_drawing_tlb::_Bitmap**)&pRetVal);
  return pRetVal;
}

// *********************************************************************//
// DispIntf:  IOTAComponentList
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1F82ECAB-F49E-48D4-BD9E-97A01B14206B}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAComponentListDispT<T>::get_ComponentList(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("ComponentList"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAComponentListDispT<T>::get_ComponentList(void)
{
  BSTR pRetVal;
  this->get_ComponentList((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAComponentListDispT<T>::GetPackageFromComponent(BSTR ComponentName/*[in]*/, 
                                                   BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetPackageFromComponent"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<1> _args;
  _args[1] = ComponentName /*[VT_BSTR:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAComponentListDispT<T>::GetPackageFromComponent(BSTR ComponentName/*[in]*/)
{
  BSTR pRetVal;
  this->GetPackageFromComponent(ComponentName, (BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAComponentListDispT<T>::GetUnitFromComponent(BSTR ComponentName/*[in]*/, 
                                                BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetUnitFromComponent"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<1> _args;
  _args[1] = ComponentName /*[VT_BSTR:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAComponentListDispT<T>::GetUnitFromComponent(BSTR ComponentName/*[in]*/)
{
  BSTR pRetVal;
  this->GetUnitFromComponent(ComponentName, (BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAComponentListDispT<T>::GetPackageFromUnitName(BSTR UnitName/*[in]*/, 
                                                  VARIANT_BOOL UseNameSpace/*[in]*/, 
                                                  BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetPackageFromUnitName"), DISPID(DISPID_UNKNOWN/*[1610743811]*/));
  TAutoArgs<2> _args;
  _args[1] = UnitName /*[VT_BSTR:0]*/;
  _args[2] = UseNameSpace /*[VT_BOOL:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAComponentListDispT<T>::GetPackageFromUnitName(BSTR UnitName/*[in]*/, 
                                                  VARIANT_BOOL UseNameSpace/*[in]*/)
{
  BSTR pRetVal;
  this->GetPackageFromUnitName(UnitName, UseNameSpace, (BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAComponentListDispT<T>::AddReferencesToProject(Borland_studio_toolsapi_tlb::IOTAProject* project/*[in]*/
                                                  , BSTR ComponentName/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("AddReferencesToProject"), DISPID(DISPID_UNKNOWN/*[1610743812]*/));
  TAutoArgs<2> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTAProject*)project /*[VT_USERDEFINED:1]*/;
  _args[2] = ComponentName /*[VT_BSTR:0]*/;
  return OleFunction(_dispid, _args);
}

// *********************************************************************//
// DispIntf:  IOTAPackageRequires
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F8310D0E-48CC-4235-A002-0556700B1B10}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAPackageRequiresDispT<T>::UpdateRequires(Borland_studio_toolsapi_tlb::IOTAProject* project/*[in]*/
                                            , BSTR Name/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("UpdateRequires"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<2> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTAProject*)project /*[VT_USERDEFINED:1]*/;
  _args[2] = Name /*[VT_BSTR:0]*/;
  return OleFunction(_dispid, _args);
}

// *********************************************************************//
// DispIntf:  IOTASymbolHelp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D4FD47E3-3DA5-4FA3-A1F4-24EF81B72F4C}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTASymbolHelpDispT<T>::GetHelpSymbolType(long pos/*[in]*/, BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetHelpSymbolType"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<1> _args;
  _args[1] = pos /*[VT_I4:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTASymbolHelpDispT<T>::GetHelpSymbolType(long pos/*[in]*/)
{
  BSTR pRetVal;
  this->GetHelpSymbolType(pos, (BSTR*)&pRetVal);
  return pRetVal;
}

// *********************************************************************//
// DispIntf:  IOTAStructureContext
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {67FD6512-C50F-4C83-8C2F-4E60340668D1}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAStructureContextDispT<T>::get_ContextIdent(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("ContextIdent"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAStructureContextDispT<T>::get_ContextIdent(void)
{
  BSTR pRetVal;
  this->get_ContextIdent((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAStructureContextDispT<T>::get_StructureType(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("StructureType"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAStructureContextDispT<T>::get_StructureType(void)
{
  BSTR pRetVal;
  this->get_StructureType((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAStructureContextDispT<T>::get_ViewOptions(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("ViewOptions"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> long __fastcall
IOTAStructureContextDispT<T>::get_ViewOptions(void)
{
  long pRetVal;
  this->get_ViewOptions((long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAStructureContextDispT<T>::get_RootNodeCount(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("RootNodeCount"), DISPID(DISPID_UNKNOWN/*[1610743811]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> long __fastcall
IOTAStructureContextDispT<T>::get_RootNodeCount(void)
{
  long pRetVal;
  this->get_RootNodeCount((long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAStructureContextDispT<T>::GetRootStructureNode(long index/*[in]*/, 
                                                   Borland_studio_toolsapi_tlb::IOTAStructureNode** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetRootStructureNode"), DISPID(DISPID_UNKNOWN/*[1610743812]*/));
  TAutoArgs<1> _args;
  _args[1] = index /*[VT_I4:0]*/;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAStructureNode**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAStructureNode* __fastcall
IOTAStructureContextDispT<T>::GetRootStructureNode(long index/*[in]*/)
{
  Borland_studio_toolsapi_tlb::IOTAStructureNode* pRetVal;
  this->GetRootStructureNode(index, (Borland_studio_toolsapi_tlb::IOTAStructureNode**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAStructureContextDispT<T>::NodeEdited(Borland_studio_toolsapi_tlb::IOTAStructureNode* node/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("NodeEdited"), DISPID(DISPID_UNKNOWN/*[1610743813]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTAStructureNode*)node /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAStructureContextDispT<T>::NodeFocused(Borland_studio_toolsapi_tlb::IOTAStructureNode* node/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("NodeFocused"), DISPID(DISPID_UNKNOWN/*[1610743814]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTAStructureNode*)node /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAStructureContextDispT<T>::NodeSelected(Borland_studio_toolsapi_tlb::IOTAStructureNode* node/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("NodeSelected"), DISPID(DISPID_UNKNOWN/*[1610743815]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTAStructureNode*)node /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAStructureContextDispT<T>::DefaultNodeAction(Borland_studio_toolsapi_tlb::IOTAStructureNode* node/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("DefaultNodeAction"), DISPID(DISPID_UNKNOWN/*[1610743816]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTAStructureNode*)node /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAStructureContextDispT<T>::SameContext(Borland_studio_toolsapi_tlb::IOTAStructureContext* aContext/*[in]*/
                                          , VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("SameContext"), DISPID(DISPID_UNKNOWN/*[1610743817]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTAStructureContext*)aContext /*[VT_USERDEFINED:1]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAStructureContextDispT<T>::SameContext(Borland_studio_toolsapi_tlb::IOTAStructureContext* aContext/*[in]*/)
{
  VARIANT_BOOL pRetVal;
  this->SameContext(aContext, (VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAStructureContextDispT<T>::InitPopupMenu(Borland_studio_toolsapi_tlb::IOTAStructureNode* node/*[in]*/
                                            , 
                                            Borland_studio_toolsapi_tlb::IOTAStructureNodeMenuItem* popupMenu/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("InitPopupMenu"), DISPID(DISPID_UNKNOWN/*[1610743818]*/));
  TAutoArgs<2> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTAStructureNode*)node /*[VT_USERDEFINED:1]*/;
  _args[2] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTAStructureNodeMenuItem*)popupMenu /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAStructureContextDispT<T>::AddRootNode(Borland_studio_toolsapi_tlb::IOTAStructureNode* ANode/*[in]*/
                                          , long index/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("AddRootNode"), DISPID(DISPID_UNKNOWN/*[1610743819]*/));
  TAutoArgs<2> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTAStructureNode*)ANode /*[VT_USERDEFINED:1]*/;
  _args[2] = index /*[VT_I4:0]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAStructureContextDispT<T>::RemoveRootNode(Borland_studio_toolsapi_tlb::IOTAStructureNode* ANode/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("RemoveRootNode"), DISPID(DISPID_UNKNOWN/*[1610743820]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTAStructureNode*)ANode /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

// *********************************************************************//
// DispIntf:  IOTAStructureNodeStatePreserver
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F6189580-87EE-4985-8866-7712D8DB4872}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAStructureNodeStatePreserverDispT<T>::get_NodePreservationMode(Borland_studio_toolsapi_tlb::OTANodePreservationMode* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("NodePreservationMode"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr((int*)pRetVal /*[VT_USERDEFINED:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::OTANodePreservationMode __fastcall
IOTAStructureNodeStatePreserverDispT<T>::get_NodePreservationMode(void)
{
  Borland_studio_toolsapi_tlb::OTANodePreservationMode pRetVal;
  this->get_NodePreservationMode((Borland_studio_toolsapi_tlb::OTANodePreservationMode*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAStructureNodeStatePreserverDispT<T>::PreserveNodeStates()
{
  _TDispID _dispid(*this, OLETEXT("PreserveNodeStates"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAStructureNodeStatePreserverDispT<T>::RestoreNodeState(Borland_studio_toolsapi_tlb::IOTAStructureNode* node/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("RestoreNodeState"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTAStructureNode*)node /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

// *********************************************************************//
// DispIntf:  IOTAStructureContextToolbar
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {55C848EB-2197-4B17-A9D0-696D3331B3CC}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAStructureContextToolbarDispT<T>::get_ButtonCount(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("ButtonCount"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> long __fastcall
IOTAStructureContextToolbarDispT<T>::get_ButtonCount(void)
{
  long pRetVal;
  this->get_ButtonCount((long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAStructureContextToolbarDispT<T>::GetButtonCaption(long index/*[in]*/, 
                                                      BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetButtonCaption"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<1> _args;
  _args[1] = index /*[VT_I4:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAStructureContextToolbarDispT<T>::GetButtonCaption(long index/*[in]*/)
{
  BSTR pRetVal;
  this->GetButtonCaption(index, (BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAStructureContextToolbarDispT<T>::GetButtonEnabled(long index/*[in]*/, 
                                                      VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetButtonEnabled"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<1> _args;
  _args[1] = index /*[VT_I4:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAStructureContextToolbarDispT<T>::GetButtonEnabled(long index/*[in]*/)
{
  VARIANT_BOOL pRetVal;
  this->GetButtonEnabled(index, (VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAStructureContextToolbarDispT<T>::GetButtonEnableDropDown(long index/*[in]*/, 
                                                             VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetButtonEnableDropDown"), DISPID(DISPID_UNKNOWN/*[1610743811]*/));
  TAutoArgs<1> _args;
  _args[1] = index /*[VT_I4:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAStructureContextToolbarDispT<T>::GetButtonEnableDropDown(long index/*[in]*/)
{
  VARIANT_BOOL pRetVal;
  this->GetButtonEnableDropDown(index, (VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAStructureContextToolbarDispT<T>::GetButtonHasDropDown(long index/*[in]*/, 
                                                          VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetButtonHasDropDown"), DISPID(DISPID_UNKNOWN/*[1610743812]*/));
  TAutoArgs<1> _args;
  _args[1] = index /*[VT_I4:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAStructureContextToolbarDispT<T>::GetButtonHasDropDown(long index/*[in]*/)
{
  VARIANT_BOOL pRetVal;
  this->GetButtonHasDropDown(index, (VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAStructureContextToolbarDispT<T>::GetButtonHint(long index/*[in]*/, BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetButtonHint"), DISPID(DISPID_UNKNOWN/*[1610743813]*/));
  TAutoArgs<1> _args;
  _args[1] = index /*[VT_I4:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAStructureContextToolbarDispT<T>::GetButtonHint(long index/*[in]*/)
{
  BSTR pRetVal;
  this->GetButtonHint(index, (BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAStructureContextToolbarDispT<T>::GetButtonImageIndex(long index/*[in]*/, 
                                                         long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetButtonImageIndex"), DISPID(DISPID_UNKNOWN/*[1610743814]*/));
  TAutoArgs<1> _args;
  _args[1] = index /*[VT_I4:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> long __fastcall
IOTAStructureContextToolbarDispT<T>::GetButtonImageIndex(long index/*[in]*/)
{
  long pRetVal;
  this->GetButtonImageIndex(index, (long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAStructureContextToolbarDispT<T>::GetButtonMenu(long index/*[in]*/, 
                                                   Borland_studio_toolsapi_tlb::IOTAStructureNodeMenuItem** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetButtonMenu"), DISPID(DISPID_UNKNOWN/*[1610743815]*/));
  TAutoArgs<1> _args;
  _args[1] = index /*[VT_I4:0]*/;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAStructureNodeMenuItem**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAStructureNodeMenuItem* __fastcall
IOTAStructureContextToolbarDispT<T>::GetButtonMenu(long index/*[in]*/)
{
  Borland_studio_toolsapi_tlb::IOTAStructureNodeMenuItem* pRetVal;
  this->GetButtonMenu(index, (Borland_studio_toolsapi_tlb::IOTAStructureNodeMenuItem**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAStructureContextToolbarDispT<T>::GetButtonSeparator(long index/*[in]*/, 
                                                        VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetButtonSeparator"), DISPID(DISPID_UNKNOWN/*[1610743816]*/));
  TAutoArgs<1> _args;
  _args[1] = index /*[VT_I4:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAStructureContextToolbarDispT<T>::GetButtonSeparator(long index/*[in]*/)
{
  VARIANT_BOOL pRetVal;
  this->GetButtonSeparator(index, (VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAStructureContextToolbarDispT<T>::GetButtonVisible(long index/*[in]*/, 
                                                      VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetButtonVisible"), DISPID(DISPID_UNKNOWN/*[1610743817]*/));
  TAutoArgs<1> _args;
  _args[1] = index /*[VT_I4:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAStructureContextToolbarDispT<T>::GetButtonVisible(long index/*[in]*/)
{
  VARIANT_BOOL pRetVal;
  this->GetButtonVisible(index, (VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAStructureContextToolbarDispT<T>::Invoke_2(long index/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Invoke_2"), DISPID(DISPID_UNKNOWN/*[1610743818]*/));
  TAutoArgs<1> _args;
  _args[1] = index /*[VT_I4:0]*/;
  return OleFunction(_dispid, _args);
}

// *********************************************************************//
// DispIntf:  IOTAStructureContextEditActions
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EF0F0981-8E1B-468F-B063-4A5956EB4BDA}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAStructureContextEditActionsDispT<T>::EditAction(long action/*[in]*/, 
                                                    VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("EditAction"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<1> _args;
  _args[1] = action /*[VT_I4:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAStructureContextEditActionsDispT<T>::EditAction(long action/*[in]*/)
{
  VARIANT_BOOL pRetVal;
  this->EditAction(action, (VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAStructureContextEditActionsDispT<T>::GetEditState(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetEditState"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> long __fastcall
IOTAStructureContextEditActionsDispT<T>::GetEditState(void)
{
  long pRetVal;
  this->GetEditState((long*)&pRetVal);
  return pRetVal;
}

// *********************************************************************//
// DispIntf:  IOTAStructureContextKeyHandler
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {17A71EDB-A2FE-4358-ABD2-362011A8D547}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAStructureContextKeyHandlerDispT<T>::KeyDown(Borland_studio_toolsapi_tlb::IOTAStructureNode* node/*[in]*/
                                                , long keyState/*[in]*/, short* keyCode/*[in,out]*/)
{
  _TDispID _dispid(*this, OLETEXT("KeyDown"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<3> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTAStructureNode*)node /*[VT_USERDEFINED:1]*/;
  _args[2] = keyState /*[VT_I4:0]*/;
  _args[3] = keyCode /*[VT_I2:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAStructureContextKeyHandlerDispT<T>::KeyPressed(Borland_studio_toolsapi_tlb::IOTAStructureNode* node/*[in]*/
                                                   , long keyState/*[in]*/, 
                                                   unsigned_short* keyChar/*[in,out]*/)
{
  _TDispID _dispid(*this, OLETEXT("KeyPressed"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<3> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTAStructureNode*)node /*[VT_USERDEFINED:1]*/;
  _args[2] = keyState /*[VT_I4:0]*/;
  _args[3] = keyChar /*[VT_UI2:1]*/;
  return OleFunction(_dispid, _args);
}

// *********************************************************************//
// DispIntf:  IOTADragStructureContext
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {03DC0E9A-DED1-4E2A-BECE-328CB27D19B9}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTADragStructureContextDispT<T>::DragAllowed(Borland_studio_toolsapi_tlb::IOTAStructureNode* node/*[in]*/
                                              , VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("DragAllowed"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTAStructureNode*)node /*[VT_USERDEFINED:1]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTADragStructureContextDispT<T>::DragAllowed(Borland_studio_toolsapi_tlb::IOTAStructureNode* node/*[in]*/)
{
  VARIANT_BOOL pRetVal;
  this->DragAllowed(node, (VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTADragStructureContextDispT<T>::DragDrop(Borland_studio_toolsapi_tlb::IOTAStructureNode* node/*[in]*/
                                           , VARIANT dataObject/*[in]*/, BSTR formatArray/*[in]*/, 
                                           long X/*[in]*/, long Y/*[in]*/, long keyState/*[in]*/, 
                                           Borland_studio_toolsapi_tlb::OTADropMode Mode/*[in]*/, 
                                           long* effect/*[in,out]*/)
{
  _TDispID _dispid(*this, OLETEXT("DragDrop"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<8> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTAStructureNode*)node /*[VT_USERDEFINED:1]*/;
  _args[2] = dataObject /*[VT_VARIANT:0]*/;
  _args[3] = formatArray /*[VT_BSTR:0]*/;
  _args[4] = X /*[VT_I4:0]*/;
  _args[5] = Y /*[VT_I4:0]*/;
  _args[6] = keyState /*[VT_I4:0]*/;
  _args[7] = (int)Mode /*[VT_USERDEFINED:0]*/;
  _args[8] = effect /*[VT_I4:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTADragStructureContextDispT<T>::DragOver(Borland_studio_toolsapi_tlb::IOTAStructureNode* node/*[in]*/
                                           , VARIANT dataObject/*[in]*/, 
                                           Borland_studio_toolsapi_tlb::OTADragState state/*[in]*/, 
                                           long X/*[in]*/, long Y/*[in]*/, long keyState/*[in]*/, 
                                           Borland_studio_toolsapi_tlb::OTADropMode Mode/*[in]*/, 
                                           long* effect/*[in,out]*/, 
                                           VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("DragOver"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<8> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTAStructureNode*)node /*[VT_USERDEFINED:1]*/;
  _args[2] = dataObject /*[VT_VARIANT:0]*/;
  _args[3] = (int)state /*[VT_USERDEFINED:0]*/;
  _args[4] = X /*[VT_I4:0]*/;
  _args[5] = Y /*[VT_I4:0]*/;
  _args[6] = keyState /*[VT_I4:0]*/;
  _args[7] = (int)Mode /*[VT_USERDEFINED:0]*/;
  _args[8] = effect /*[VT_I4:1]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTADragStructureContextDispT<T>::DragOver(Borland_studio_toolsapi_tlb::IOTAStructureNode* node/*[in]*/, 
                                           VARIANT dataObject/*[in]*/, 
                                           Borland_studio_toolsapi_tlb::OTADragState state/*[in]*/, 
                                           long X/*[in]*/, long Y/*[in]*/, long keyState/*[in]*/, 
                                           Borland_studio_toolsapi_tlb::OTADropMode Mode/*[in]*/, 
                                           long* effect/*[in,out]*/)
{
  VARIANT_BOOL pRetVal;
  this->DragOver(node, dataObject, state, X, Y, keyState, Mode, effect, (VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTADragStructureContextDispT<T>::GetDataObject(VARIANT* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetDataObject"), DISPID(DISPID_UNKNOWN/*[1610743811]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_VARIANT:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT __fastcall
IOTADragStructureContextDispT<T>::GetDataObject(void)
{
  VARIANT pRetVal;
  this->GetDataObject((VARIANT*)&pRetVal);
  return pRetVal;
}

// *********************************************************************//
// DispIntf:  IOTAStructureNode
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8A0802F5-C26C-4902-9D1F-8323F2F48F8C}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAStructureNodeDispT<T>::AddChildNode(Borland_studio_toolsapi_tlb::IOTAStructureNode* node/*[in]*/
                                        , long index/*[in]*/, long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("AddChildNode"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<2> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTAStructureNode*)node /*[VT_USERDEFINED:1]*/;
  _args[2] = index /*[VT_I4:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> long __fastcall
IOTAStructureNodeDispT<T>::AddChildNode(Borland_studio_toolsapi_tlb::IOTAStructureNode* node/*[in]*/, 
                                        long index/*[in]*/)
{
  long pRetVal;
  this->AddChildNode(node, index, (long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAStructureNodeDispT<T>::get_Caption(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Caption"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAStructureNodeDispT<T>::get_Caption(void)
{
  BSTR pRetVal;
  this->get_Caption((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAStructureNodeDispT<T>::get_ChildCount(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("ChildCount"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> long __fastcall
IOTAStructureNodeDispT<T>::get_ChildCount(void)
{
  long pRetVal;
  this->get_ChildCount((long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAStructureNodeDispT<T>::Get_Child(long index/*[in]*/, 
                                     Borland_studio_toolsapi_tlb::IOTAStructureNode** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Get_Child"), DISPID(DISPID_UNKNOWN/*[1610743811]*/));
  TAutoArgs<1> _args;
  _args[1] = index /*[VT_I4:0]*/;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAStructureNode**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAStructureNode* __fastcall
IOTAStructureNodeDispT<T>::Get_Child(long index/*[in]*/)
{
  Borland_studio_toolsapi_tlb::IOTAStructureNode* pRetVal;
  this->Get_Child(index, (Borland_studio_toolsapi_tlb::IOTAStructureNode**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAStructureNodeDispT<T>::get_Expanded(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Expanded"), DISPID(DISPID_UNKNOWN/*[1610743812]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAStructureNodeDispT<T>::get_Expanded(void)
{
  VARIANT_BOOL pRetVal;
  this->get_Expanded((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAStructureNodeDispT<T>::set_Expanded(VARIANT_BOOL pRetVal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Expanded"), DISPID(1610743812));
  TAutoArgs<1> _args;
  _args[1] = pRetVal /*[VT_BOOL:0]*/;
  return OlePropertyPut(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAStructureNodeDispT<T>::get_Focused(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Focused"), DISPID(DISPID_UNKNOWN/*[1610743814]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAStructureNodeDispT<T>::get_Focused(void)
{
  VARIANT_BOOL pRetVal;
  this->get_Focused((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAStructureNodeDispT<T>::set_Focused(VARIANT_BOOL pRetVal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Focused"), DISPID(1610743814));
  TAutoArgs<1> _args;
  _args[1] = pRetVal /*[VT_BOOL:0]*/;
  return OlePropertyPut(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAStructureNodeDispT<T>::get_Hint(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Hint"), DISPID(DISPID_UNKNOWN/*[1610743816]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAStructureNodeDispT<T>::get_Hint(void)
{
  BSTR pRetVal;
  this->get_Hint((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAStructureNodeDispT<T>::get_ImageIndex(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("ImageIndex"), DISPID(DISPID_UNKNOWN/*[1610743817]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> long __fastcall
IOTAStructureNodeDispT<T>::get_ImageIndex(void)
{
  long pRetVal;
  this->get_ImageIndex((long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAStructureNodeDispT<T>::get_Name(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Name"), DISPID(DISPID_UNKNOWN/*[1610743818]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAStructureNodeDispT<T>::get_Name(void)
{
  BSTR pRetVal;
  this->get_Name((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAStructureNodeDispT<T>::get_parent(Borland_studio_toolsapi_tlb::IOTAStructureNode** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("parent"), DISPID(DISPID_UNKNOWN/*[1610743819]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAStructureNode**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAStructureNodePtr __fastcall
IOTAStructureNodeDispT<T>::get_parent(void)
{
  Borland_studio_toolsapi_tlb::IOTAStructureNodePtr pRetVal;
  this->get_parent(&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAStructureNodeDispT<T>::get_Selected(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Selected"), DISPID(DISPID_UNKNOWN/*[1610743820]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAStructureNodeDispT<T>::get_Selected(void)
{
  VARIANT_BOOL pRetVal;
  this->get_Selected((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAStructureNodeDispT<T>::set_Selected(VARIANT_BOOL pRetVal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Selected"), DISPID(1610743820));
  TAutoArgs<1> _args;
  _args[1] = pRetVal /*[VT_BOOL:0]*/;
  return OlePropertyPut(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAStructureNodeDispT<T>::get_StateIndex(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("StateIndex"), DISPID(DISPID_UNKNOWN/*[1610743822]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> long __fastcall
IOTAStructureNodeDispT<T>::get_StateIndex(void)
{
  long pRetVal;
  this->get_StateIndex((long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAStructureNodeDispT<T>::get_Data(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Data"), DISPID(DISPID_UNKNOWN/*[1610743823]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> long __fastcall
IOTAStructureNodeDispT<T>::get_Data(void)
{
  long pRetVal;
  this->get_Data((long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAStructureNodeDispT<T>::set_Data(long pRetVal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Data"), DISPID(1610743823));
  TAutoArgs<1> _args;
  _args[1] = pRetVal /*[VT_I4:0]*/;
  return OlePropertyPut(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAStructureNodeDispT<T>::RemoveChildNode(long index/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("RemoveChildNode"), DISPID(DISPID_UNKNOWN/*[1610743825]*/));
  TAutoArgs<1> _args;
  _args[1] = index /*[VT_I4:0]*/;
  return OleFunction(_dispid, _args);
}

// *********************************************************************//
// DispIntf:  IOTASortableStructureNode
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {24451294-D128-47E6-A8A5-00C3547C2F9C}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTASortableStructureNodeDispT<T>::get_SortByIndex(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("SortByIndex"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTASortableStructureNodeDispT<T>::get_SortByIndex(void)
{
  VARIANT_BOOL pRetVal;
  this->get_SortByIndex((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTASortableStructureNodeDispT<T>::get_ItemIndex(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("ItemIndex"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> long __fastcall
IOTASortableStructureNodeDispT<T>::get_ItemIndex(void)
{
  long pRetVal;
  this->get_ItemIndex((long*)&pRetVal);
  return pRetVal;
}

// *********************************************************************//
// DispIntf:  IOTAEditableStructureNode
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B2CF6C45-4151-4B1A-B56B-B23534BB053E}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAEditableStructureNodeDispT<T>::get_CanEdit(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("CanEdit"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAEditableStructureNodeDispT<T>::get_CanEdit(void)
{
  VARIANT_BOOL pRetVal;
  this->get_CanEdit((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditableStructureNodeDispT<T>::get_EditCaption(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("EditCaption"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAEditableStructureNodeDispT<T>::get_EditCaption(void)
{
  BSTR pRetVal;
  this->get_EditCaption((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAEditableStructureNodeDispT<T>::SetValue(BSTR value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("SetValue"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<1> _args;
  _args[1] = value /*[VT_BSTR:0]*/;
  return OleFunction(_dispid, _args);
}

// *********************************************************************//
// DispIntf:  IOTANavigableStructureNode
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {81B1557A-E3F2-4E9C-AA69-CEBBA99D923F}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTANavigableStructureNodeDispT<T>::Navigate(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Navigate"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTANavigableStructureNodeDispT<T>::Navigate(void)
{
  VARIANT_BOOL pRetVal;
  this->Navigate((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

// *********************************************************************//
// DispIntf:  IOTADragStructureNode
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {679BCA19-150F-4CC5-9023-CE24F5580F5B}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTADragStructureNodeDispT<T>::DragAllowed(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("DragAllowed"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTADragStructureNodeDispT<T>::DragAllowed(void)
{
  VARIANT_BOOL pRetVal;
  this->DragAllowed((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTADragStructureNodeDispT<T>::DragDrop(VARIANT dataObject/*[in]*/, BSTR formatArray/*[in]*/, 
                                        long X/*[in]*/, long Y/*[in]*/, long keyState/*[in]*/, 
                                        Borland_studio_toolsapi_tlb::OTADropMode Mode/*[in]*/, 
                                        long* effect/*[in,out]*/)
{
  _TDispID _dispid(*this, OLETEXT("DragDrop"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<7> _args;
  _args[1] = dataObject /*[VT_VARIANT:0]*/;
  _args[2] = formatArray /*[VT_BSTR:0]*/;
  _args[3] = X /*[VT_I4:0]*/;
  _args[4] = Y /*[VT_I4:0]*/;
  _args[5] = keyState /*[VT_I4:0]*/;
  _args[6] = (int)Mode /*[VT_USERDEFINED:0]*/;
  _args[7] = effect /*[VT_I4:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTADragStructureNodeDispT<T>::DragOver(VARIANT dataObject/*[in]*/, 
                                        Borland_studio_toolsapi_tlb::OTADragState state/*[in]*/, 
                                        long X/*[in]*/, long Y/*[in]*/, long keyState/*[in]*/, 
                                        Borland_studio_toolsapi_tlb::OTADropMode Mode/*[in]*/, 
                                        long* effect/*[in,out]*/, 
                                        VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("DragOver"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<7> _args;
  _args[1] = dataObject /*[VT_VARIANT:0]*/;
  _args[2] = (int)state /*[VT_USERDEFINED:0]*/;
  _args[3] = X /*[VT_I4:0]*/;
  _args[4] = Y /*[VT_I4:0]*/;
  _args[5] = keyState /*[VT_I4:0]*/;
  _args[6] = (int)Mode /*[VT_USERDEFINED:0]*/;
  _args[7] = effect /*[VT_I4:1]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTADragStructureNodeDispT<T>::DragOver(VARIANT dataObject/*[in]*/, 
                                        Borland_studio_toolsapi_tlb::OTADragState state/*[in]*/, 
                                        long X/*[in]*/, long Y/*[in]*/, long keyState/*[in]*/, 
                                        Borland_studio_toolsapi_tlb::OTADropMode Mode/*[in]*/, 
                                        long* effect/*[in,out]*/)
{
  VARIANT_BOOL pRetVal;
  this->DragOver(dataObject, state, X, Y, keyState, Mode, effect, (VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

// *********************************************************************//
// DispIntf:  IOTAStructureNodePopup
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FAA6133B-F03F-4A93-9E86-C50EAD7348E6}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAStructureNodePopupDispT<T>::InitPopupMenu(Borland_studio_toolsapi_tlb::IOTAStructureNodeMenuItem* popupMenu/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("InitPopupMenu"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTAStructureNodeMenuItem*)popupMenu /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

// *********************************************************************//
// DispIntf:  IOTAStructureNodeMenuItem
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7BF39892-F3D3-48F7-B5F3-664FDD438581}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAStructureNodeMenuItemDispT<T>::DeleteItem(long index/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("DeleteItem"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<1> _args;
  _args[1] = index /*[VT_I4:0]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAStructureNodeMenuItemDispT<T>::get_Caption(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Caption"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAStructureNodeMenuItemDispT<T>::get_Caption(void)
{
  BSTR pRetVal;
  this->get_Caption((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAStructureNodeMenuItemDispT<T>::get_Checked(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Checked"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAStructureNodeMenuItemDispT<T>::get_Checked(void)
{
  VARIANT_BOOL pRetVal;
  this->get_Checked((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAStructureNodeMenuItemDispT<T>::get_Count(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Count"), DISPID(DISPID_UNKNOWN/*[1610743811]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> long __fastcall
IOTAStructureNodeMenuItemDispT<T>::get_Count(void)
{
  long pRetVal;
  this->get_Count((long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAStructureNodeMenuItemDispT<T>::get_Enabled(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Enabled"), DISPID(DISPID_UNKNOWN/*[1610743812]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAStructureNodeMenuItemDispT<T>::get_Enabled(void)
{
  VARIANT_BOOL pRetVal;
  this->get_Enabled((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAStructureNodeMenuItemDispT<T>::get_GroupIndex(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GroupIndex"), DISPID(DISPID_UNKNOWN/*[1610743813]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> long __fastcall
IOTAStructureNodeMenuItemDispT<T>::get_GroupIndex(void)
{
  long pRetVal;
  this->get_GroupIndex((long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAStructureNodeMenuItemDispT<T>::get_ImageIndex(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("ImageIndex"), DISPID(DISPID_UNKNOWN/*[1610743814]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> long __fastcall
IOTAStructureNodeMenuItemDispT<T>::get_ImageIndex(void)
{
  long pRetVal;
  this->get_ImageIndex((long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAStructureNodeMenuItemDispT<T>::Get_Item(long index/*[in]*/, 
                                            Borland_studio_toolsapi_tlb::IOTAStructureNodeMenuItem** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Get_Item"), DISPID(DISPID_UNKNOWN/*[1610743815]*/));
  TAutoArgs<1> _args;
  _args[1] = index /*[VT_I4:0]*/;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAStructureNodeMenuItem**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAStructureNodeMenuItem* __fastcall
IOTAStructureNodeMenuItemDispT<T>::Get_Item(long index/*[in]*/)
{
  Borland_studio_toolsapi_tlb::IOTAStructureNodeMenuItem* pRetVal;
  this->Get_Item(index, (Borland_studio_toolsapi_tlb::IOTAStructureNodeMenuItem**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAStructureNodeMenuItemDispT<T>::get_Name(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Name"), DISPID(DISPID_UNKNOWN/*[1610743816]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAStructureNodeMenuItemDispT<T>::get_Name(void)
{
  BSTR pRetVal;
  this->get_Name((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAStructureNodeMenuItemDispT<T>::get_RadioItem(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("RadioItem"), DISPID(DISPID_UNKNOWN/*[1610743817]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAStructureNodeMenuItemDispT<T>::get_RadioItem(void)
{
  VARIANT_BOOL pRetVal;
  this->get_RadioItem((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAStructureNodeMenuItemDispT<T>::get_Shortcut(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Shortcut"), DISPID(DISPID_UNKNOWN/*[1610743818]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> long __fastcall
IOTAStructureNodeMenuItemDispT<T>::get_Shortcut(void)
{
  long pRetVal;
  this->get_Shortcut((long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAStructureNodeMenuItemDispT<T>::get_Visible(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Visible"), DISPID(DISPID_UNKNOWN/*[1610743819]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAStructureNodeMenuItemDispT<T>::get_Visible(void)
{
  VARIANT_BOOL pRetVal;
  this->get_Visible((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAStructureNodeMenuItemDispT<T>::InsertItem(long index/*[in]*/, 
                                              Borland_studio_toolsapi_tlb::IOTAStructureNodeMenuItem* Item/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("InsertItem"), DISPID(DISPID_UNKNOWN/*[1610743820]*/));
  TAutoArgs<2> _args;
  _args[1] = index /*[VT_I4:0]*/;
  _args[2] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTAStructureNodeMenuItem*)Item /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAStructureNodeMenuItemDispT<T>::Invoke_2()
{
  _TDispID _dispid(*this, OLETEXT("Invoke_2"), DISPID(DISPID_UNKNOWN/*[1610743821]*/));
  return OleFunction(_dispid);
}

// *********************************************************************//
// SmartIntf: TCOM_ContextEventArgs
// Interface: _ContextEventArgs
// *********************************************************************//
// *********************************************************************//
// DispIntf:  _ContextEventArgs
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {0B3EF80C-C85B-3ED5-9059-8F0132E53A22}
// *********************************************************************//
// *********************************************************************//
// SmartIntf: TCOM_NodeEventArgs
// Interface: _NodeEventArgs
// *********************************************************************//
// *********************************************************************//
// DispIntf:  _NodeEventArgs
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {909E7F14-FBA0-348B-85C4-3968D2B7CBAA}
// *********************************************************************//
// *********************************************************************//
// SmartIntf: TCOM_VisibleEventArgs
// Interface: _VisibleEventArgs
// *********************************************************************//
// *********************************************************************//
// DispIntf:  _VisibleEventArgs
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {73A8FC94-5904-31B1-AA0F-0D5CE94CCF23}
// *********************************************************************//
// *********************************************************************//
// SmartIntf: TCOM_OTAStructureType
// Interface: _OTAStructureType
// *********************************************************************//
// *********************************************************************//
// DispIntf:  _OTAStructureType
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {30E1E914-AF92-3300-8A70-3E1F73129492}
// *********************************************************************//
// *********************************************************************//
// SmartIntf: TCOM_OTANodeType
// Interface: _OTANodeType
// *********************************************************************//
// *********************************************************************//
// DispIntf:  _OTANodeType
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {B0BC296A-7B1B-3C3F-BAF0-DA5B57EC0DEB}
// *********************************************************************//
// *********************************************************************//
// SmartIntf: TCOM_OTAStructureViewOptions
// Interface: _OTAStructureViewOptions
// *********************************************************************//
// *********************************************************************//
// DispIntf:  _OTAStructureViewOptions
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {70EC9140-E495-35BF-B600-B3F295E533B8}
// *********************************************************************//
// *********************************************************************//
// SmartIntf: TCOM_ContextEventHandler
// Interface: _ContextEventHandler
// *********************************************************************//
// *********************************************************************//
// DispIntf:  _ContextEventHandler
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {6659600D-A091-31D1-85D2-6C089622B256}
// *********************************************************************//
// *********************************************************************//
// SmartIntf: TCOM_NodeEventHandler
// Interface: _NodeEventHandler
// *********************************************************************//
// *********************************************************************//
// DispIntf:  _NodeEventHandler
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {BF7956DD-FBAE-3F1D-B976-1ABF761F894E}
// *********************************************************************//
// *********************************************************************//
// SmartIntf: TCOM_VisibleEventHandler
// Interface: _VisibleEventHandler
// *********************************************************************//
// *********************************************************************//
// DispIntf:  _VisibleEventHandler
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {5D4EBD34-0C25-3794-91C9-93AFF0E1A37E}
// *********************************************************************//
// *********************************************************************//
// DispIntf:  IOTAStructureView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9A4B002F-C7D6-4114-BC6D-704E5F323C48}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAStructureViewDispT<T>::BeginUpdate()
{
  _TDispID _dispid(*this, OLETEXT("BeginUpdate"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAStructureViewDispT<T>::ChildNodeUpdated(Borland_studio_toolsapi_tlb::IOTAStructureNode* ParentNode/*[in]*/
                                            , 
                                            Borland_studio_toolsapi_tlb::IOTAStructureNode* ChildNode/*[in]*/
                                            , 
                                            Borland_studio_toolsapi_tlb::OTAChildUpdateKind AUpdateKind/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("ChildNodeUpdated"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<3> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTAStructureNode*)ParentNode /*[VT_USERDEFINED:1]*/;
  _args[2] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTAStructureNode*)ChildNode /*[VT_USERDEFINED:1]*/;
  _args[3] = (int)AUpdateKind /*[VT_USERDEFINED:0]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAStructureViewDispT<T>::ClearSelection()
{
  _TDispID _dispid(*this, OLETEXT("ClearSelection"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAStructureViewDispT<T>::EndUpdate()
{
  _TDispID _dispid(*this, OLETEXT("EndUpdate"), DISPID(DISPID_UNKNOWN/*[1610743811]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAStructureViewDispT<T>::FocusNode(Borland_studio_toolsapi_tlb::IOTAStructureNode* node/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("FocusNode"), DISPID(DISPID_UNKNOWN/*[1610743812]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTAStructureNode*)node /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAStructureViewDispT<T>::GetFirstSelected(Borland_studio_toolsapi_tlb::IOTAStructureNode** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetFirstSelected"), DISPID(DISPID_UNKNOWN/*[1610743813]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAStructureNode**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAStructureNode* __fastcall
IOTAStructureViewDispT<T>::GetFirstSelected(void)
{
  Borland_studio_toolsapi_tlb::IOTAStructureNode* pRetVal;
  this->GetFirstSelected((Borland_studio_toolsapi_tlb::IOTAStructureNode**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAStructureViewDispT<T>::GetNextSelected(Borland_studio_toolsapi_tlb::IOTAStructureNode* node/*[in]*/
                                           , 
                                           Borland_studio_toolsapi_tlb::IOTAStructureNode** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetNextSelected"), DISPID(DISPID_UNKNOWN/*[1610743814]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTAStructureNode*)node /*[VT_USERDEFINED:1]*/;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAStructureNode**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAStructureNode* __fastcall
IOTAStructureViewDispT<T>::GetNextSelected(Borland_studio_toolsapi_tlb::IOTAStructureNode* node/*[in]*/)
{
  Borland_studio_toolsapi_tlb::IOTAStructureNode* pRetVal;
  this->GetNextSelected(node, (Borland_studio_toolsapi_tlb::IOTAStructureNode**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAStructureViewDispT<T>::GetSelectedCount(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetSelectedCount"), DISPID(DISPID_UNKNOWN/*[1610743815]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> long __fastcall
IOTAStructureViewDispT<T>::GetSelectedCount(void)
{
  long pRetVal;
  this->GetSelectedCount((long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAStructureViewDispT<T>::GetStructureContext(Borland_studio_toolsapi_tlb::IOTAStructureContext** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetStructureContext"), DISPID(DISPID_UNKNOWN/*[1610743816]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAStructureContext**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAStructureContext* __fastcall
IOTAStructureViewDispT<T>::GetStructureContext(void)
{
  Borland_studio_toolsapi_tlb::IOTAStructureContext* pRetVal;
  this->GetStructureContext((Borland_studio_toolsapi_tlb::IOTAStructureContext**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAStructureViewDispT<T>::GetStructureType(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetStructureType"), DISPID(DISPID_UNKNOWN/*[1610743817]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAStructureViewDispT<T>::GetStructureType(void)
{
  BSTR pRetVal;
  this->GetStructureType((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAStructureViewDispT<T>::RequestEdit(Borland_studio_toolsapi_tlb::IOTAStructureNode* node/*[in]*/
                                       , VARIANT_BOOL ForceEdit/*[in]*/, 
                                       VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("RequestEdit"), DISPID(DISPID_UNKNOWN/*[1610743818]*/));
  TAutoArgs<2> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTAStructureNode*)node /*[VT_USERDEFINED:1]*/;
  _args[2] = ForceEdit /*[VT_BOOL:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAStructureViewDispT<T>::RequestEdit(Borland_studio_toolsapi_tlb::IOTAStructureNode* node/*[in]*/, 
                                       VARIANT_BOOL ForceEdit/*[in]*/)
{
  VARIANT_BOOL pRetVal;
  this->RequestEdit(node, ForceEdit, (VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAStructureViewDispT<T>::SetStructureContext(Borland_studio_toolsapi_tlb::IOTAStructureContext* aContext/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("SetStructureContext"), DISPID(DISPID_UNKNOWN/*[1610743819]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTAStructureContext*)aContext /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAStructureViewDispT<T>::StructureChanged(VARIANT_BOOL Deferred/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("StructureChanged"), DISPID(DISPID_UNKNOWN/*[1610743820]*/));
  TAutoArgs<1> _args;
  _args[1] = Deferred /*[VT_BOOL:0]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAStructureViewDispT<T>::SelectNode(Borland_studio_toolsapi_tlb::IOTAStructureNode* node/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("SelectNode"), DISPID(DISPID_UNKNOWN/*[1610743821]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTAStructureNode*)node /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAStructureViewDispT<T>::AddBitmap(long BitMap/*[in]*/, long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("AddBitmap"), DISPID(DISPID_UNKNOWN/*[1610743822]*/));
  TAutoArgs<1> _args;
  _args[1] = BitMap /*[VT_I4:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> long __fastcall
IOTAStructureViewDispT<T>::AddBitmap(long BitMap/*[in]*/)
{
  long pRetVal;
  this->AddBitmap(BitMap, (long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAStructureViewDispT<T>::AddBitmap_2(long BitMap/*[in]*/, VARIANT_BOOL StateImage/*[in]*/, 
                                       long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("AddBitmap_2"), DISPID(DISPID_UNKNOWN/*[1610743823]*/));
  TAutoArgs<2> _args;
  _args[1] = BitMap /*[VT_I4:0]*/;
  _args[2] = StateImage /*[VT_BOOL:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> long __fastcall
IOTAStructureViewDispT<T>::AddBitmap_2(long BitMap/*[in]*/, VARIANT_BOOL StateImage/*[in]*/)
{
  long pRetVal;
  this->AddBitmap_2(BitMap, StateImage, (long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAStructureViewDispT<T>::AddIcon(long Icon/*[in]*/, long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("AddIcon"), DISPID(DISPID_UNKNOWN/*[1610743824]*/));
  TAutoArgs<1> _args;
  _args[1] = Icon /*[VT_I4:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> long __fastcall
IOTAStructureViewDispT<T>::AddIcon(long Icon/*[in]*/)
{
  long pRetVal;
  this->AddIcon(Icon, (long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAStructureViewDispT<T>::AddIcon_2(long Icon/*[in]*/, VARIANT_BOOL StateImage/*[in]*/, 
                                     long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("AddIcon_2"), DISPID(DISPID_UNKNOWN/*[1610743825]*/));
  TAutoArgs<2> _args;
  _args[1] = Icon /*[VT_I4:0]*/;
  _args[2] = StateImage /*[VT_BOOL:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> long __fastcall
IOTAStructureViewDispT<T>::AddIcon_2(long Icon/*[in]*/, VARIANT_BOOL StateImage/*[in]*/)
{
  long pRetVal;
  this->AddIcon_2(Icon, StateImage, (long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAStructureViewDispT<T>::AddImageList(long ImageList/*[in]*/, long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("AddImageList"), DISPID(DISPID_UNKNOWN/*[1610743826]*/));
  TAutoArgs<1> _args;
  _args[1] = ImageList /*[VT_I4:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> long __fastcall
IOTAStructureViewDispT<T>::AddImageList(long ImageList/*[in]*/)
{
  long pRetVal;
  this->AddImageList(ImageList, (long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAStructureViewDispT<T>::AddImageList_2(long ImageList/*[in]*/, VARIANT_BOOL StateImage/*[in]*/, 
                                          long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("AddImageList_2"), DISPID(DISPID_UNKNOWN/*[1610743827]*/));
  TAutoArgs<2> _args;
  _args[1] = ImageList /*[VT_I4:0]*/;
  _args[2] = StateImage /*[VT_BOOL:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> long __fastcall
IOTAStructureViewDispT<T>::AddImageList_2(long ImageList/*[in]*/, VARIANT_BOOL StateImage/*[in]*/)
{
  long pRetVal;
  this->AddImageList_2(ImageList, StateImage, (long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAStructureViewDispT<T>::ViewShowing(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("ViewShowing"), DISPID(DISPID_UNKNOWN/*[1610743828]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAStructureViewDispT<T>::ViewShowing(void)
{
  VARIANT_BOOL pRetVal;
  this->ViewShowing((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAStructureViewDispT<T>::add_StructureChangedEvent(Borland_studio_toolsapi_tlb::_ContextEventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("add_StructureChangedEvent"), DISPID(DISPID_UNKNOWN/*[1610743829]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::_ContextEventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAStructureViewDispT<T>::remove_StructureChangedEvent(Borland_studio_toolsapi_tlb::_ContextEventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("remove_StructureChangedEvent"), DISPID(DISPID_UNKNOWN/*[1610743830]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::_ContextEventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAStructureViewDispT<T>::add_NodeEdited(Borland_studio_toolsapi_tlb::_NodeEventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("add_NodeEdited"), DISPID(DISPID_UNKNOWN/*[1610743831]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::_NodeEventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAStructureViewDispT<T>::remove_NodeEdited(Borland_studio_toolsapi_tlb::_NodeEventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("remove_NodeEdited"), DISPID(DISPID_UNKNOWN/*[1610743832]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::_NodeEventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAStructureViewDispT<T>::add_NodeFocused(Borland_studio_toolsapi_tlb::_NodeEventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("add_NodeFocused"), DISPID(DISPID_UNKNOWN/*[1610743833]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::_NodeEventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAStructureViewDispT<T>::remove_NodeFocused(Borland_studio_toolsapi_tlb::_NodeEventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("remove_NodeFocused"), DISPID(DISPID_UNKNOWN/*[1610743834]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::_NodeEventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAStructureViewDispT<T>::add_NodeSelected(Borland_studio_toolsapi_tlb::_NodeEventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("add_NodeSelected"), DISPID(DISPID_UNKNOWN/*[1610743835]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::_NodeEventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAStructureViewDispT<T>::remove_NodeSelected(Borland_studio_toolsapi_tlb::_NodeEventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("remove_NodeSelected"), DISPID(DISPID_UNKNOWN/*[1610743836]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::_NodeEventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAStructureViewDispT<T>::add_DefaultNodeAction(Borland_studio_toolsapi_tlb::_NodeEventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("add_DefaultNodeAction"), DISPID(DISPID_UNKNOWN/*[1610743837]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::_NodeEventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAStructureViewDispT<T>::remove_DefaultNodeAction(Borland_studio_toolsapi_tlb::_NodeEventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("remove_DefaultNodeAction"), DISPID(DISPID_UNKNOWN/*[1610743838]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::_NodeEventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAStructureViewDispT<T>::add_VisibleChanged(Borland_studio_toolsapi_tlb::_VisibleEventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("add_VisibleChanged"), DISPID(DISPID_UNKNOWN/*[1610743839]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::_VisibleEventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAStructureViewDispT<T>::remove_VisibleChanged(Borland_studio_toolsapi_tlb::_VisibleEventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("remove_VisibleChanged"), DISPID(DISPID_UNKNOWN/*[1610743840]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::_VisibleEventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

// *********************************************************************//
// DispIntf:  IOTAFileHistoryManager
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3A5A2687-91FE-4D7C-B56B-FD3FB8D4096E}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAFileHistoryManagerDispT<T>::AddTemporaryLabel(BSTR ALabelName/*[in]*/, 
                                                  LPSAFEARRAY AFiles/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("AddTemporaryLabel"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<2> _args;
  _args[1] = ALabelName /*[VT_BSTR:0]*/;
  _args[2] = AFiles /*[VT_SAFEARRAY:0]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAFileHistoryManagerDispT<T>::get_Count(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Count"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> long __fastcall
IOTAFileHistoryManagerDispT<T>::get_Count(void)
{
  long pRetVal;
  this->get_Count((long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAFileHistoryManagerDispT<T>::GetFileHistoryProvider(long index/*[in]*/, 
                                                       Borland_studio_toolsapi_tlb::IOTAFileHistoryProvider** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetFileHistoryProvider"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<1> _args;
  _args[1] = index /*[VT_I4:0]*/;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAFileHistoryProvider**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAFileHistoryProvider* __fastcall
IOTAFileHistoryManagerDispT<T>::GetFileHistoryProvider(long index/*[in]*/)
{
  Borland_studio_toolsapi_tlb::IOTAFileHistoryProvider* pRetVal;
  this->GetFileHistoryProvider(index, (Borland_studio_toolsapi_tlb::IOTAFileHistoryProvider**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAFileHistoryManagerDispT<T>::RegisterHistoryProvider(Borland_studio_toolsapi_tlb::IOTAFileHistoryProvider* historyProvider/*[in]*/
                                                        , long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("RegisterHistoryProvider"), DISPID(DISPID_UNKNOWN/*[1610743811]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTAFileHistoryProvider*)historyProvider /*[VT_USERDEFINED:1]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> long __fastcall
IOTAFileHistoryManagerDispT<T>::RegisterHistoryProvider(Borland_studio_toolsapi_tlb::IOTAFileHistoryProvider* historyProvider/*[in]*/)
{
  long pRetVal;
  this->RegisterHistoryProvider(historyProvider, (long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAFileHistoryManagerDispT<T>::RevertTemporaryLabel(BSTR ALabelName/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("RevertTemporaryLabel"), DISPID(DISPID_UNKNOWN/*[1610743812]*/));
  TAutoArgs<1> _args;
  _args[1] = ALabelName /*[VT_BSTR:0]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAFileHistoryManagerDispT<T>::UnregisterHistoryProvider(long index/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("UnregisterHistoryProvider"), DISPID(DISPID_UNKNOWN/*[1610743813]*/));
  TAutoArgs<1> _args;
  _args[1] = index /*[VT_I4:0]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAFileHistoryManagerDispT<T>::UpdateProviders()
{
  _TDispID _dispid(*this, OLETEXT("UpdateProviders"), DISPID(DISPID_UNKNOWN/*[1610743814]*/));
  return OleFunction(_dispid);
}

template <class T> HRESULT __fastcall
IOTAFileHistoryManagerDispT<T>::add_ProvidersUpdated(Mscorlib_tlb::_EventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("add_ProvidersUpdated"), DISPID(DISPID_UNKNOWN/*[1610743815]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Mscorlib_tlb::_EventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAFileHistoryManagerDispT<T>::remove_ProvidersUpdated(Mscorlib_tlb::_EventHandler* value/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("remove_ProvidersUpdated"), DISPID(DISPID_UNKNOWN/*[1610743816]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Mscorlib_tlb::_EventHandler*)value /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

// *********************************************************************//
// DispIntf:  IOTAFileHistoryProvider
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B8CDB02D-93D8-4088-AE03-A28052AD0FAD}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAFileHistoryProviderDispT<T>::get_Ident(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Ident"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAFileHistoryProviderDispT<T>::get_Ident(void)
{
  BSTR pRetVal;
  this->get_Ident((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAFileHistoryProviderDispT<T>::get_Name(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Name"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAFileHistoryProviderDispT<T>::get_Name(void)
{
  BSTR pRetVal;
  this->get_Name((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAFileHistoryProviderDispT<T>::GetFileHistory(BSTR AFileName/*[in]*/, 
                                                Borland_studio_toolsapi_tlb::IOTAFileHistory** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetFileHistory"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<1> _args;
  _args[1] = AFileName /*[VT_BSTR:0]*/;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAFileHistory**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAFileHistory* __fastcall
IOTAFileHistoryProviderDispT<T>::GetFileHistory(BSTR AFileName/*[in]*/)
{
  Borland_studio_toolsapi_tlb::IOTAFileHistory* pRetVal;
  this->GetFileHistory(AFileName, (Borland_studio_toolsapi_tlb::IOTAFileHistory**)&pRetVal);
  return pRetVal;
}

// *********************************************************************//
// DispIntf:  IOTAFileHistory
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {92E624D2-A7CD-4C89-9B4E-71170955E96C}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAFileHistoryDispT<T>::get_Count(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Count"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> long __fastcall
IOTAFileHistoryDispT<T>::get_Count(void)
{
  long pRetVal;
  this->get_Count((long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAFileHistoryDispT<T>::GetAuthor(long index/*[in]*/, BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetAuthor"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<1> _args;
  _args[1] = index /*[VT_I4:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAFileHistoryDispT<T>::GetAuthor(long index/*[in]*/)
{
  BSTR pRetVal;
  this->GetAuthor(index, (BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAFileHistoryDispT<T>::GetComment(long index/*[in]*/, BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetComment"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<1> _args;
  _args[1] = index /*[VT_I4:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAFileHistoryDispT<T>::GetComment(long index/*[in]*/)
{
  BSTR pRetVal;
  this->GetComment(index, (BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAFileHistoryDispT<T>::GetContent(long index/*[in]*/, LPUNKNOWN* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetContent"), DISPID(DISPID_UNKNOWN/*[1610743811]*/));
  TAutoArgs<1> _args;
  _args[1] = index /*[VT_I4:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_UNKNOWN:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> LPUNKNOWN __fastcall
IOTAFileHistoryDispT<T>::GetContent(long index/*[in]*/)
{
  LPUNKNOWN pRetVal;
  this->GetContent(index, (LPUNKNOWN*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAFileHistoryDispT<T>::GetDate(long index/*[in]*/, DATE* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetDate"), DISPID(DISPID_UNKNOWN/*[1610743812]*/));
  TAutoArgs<1> _args;
  _args[1] = index /*[VT_I4:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_DATE:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> DATE __fastcall
IOTAFileHistoryDispT<T>::GetDate(long index/*[in]*/)
{
  DATE pRetVal;
  this->GetDate(index, (DATE*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAFileHistoryDispT<T>::GetIdent(long index/*[in]*/, BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetIdent"), DISPID(DISPID_UNKNOWN/*[1610743813]*/));
  TAutoArgs<1> _args;
  _args[1] = index /*[VT_I4:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAFileHistoryDispT<T>::GetIdent(long index/*[in]*/)
{
  BSTR pRetVal;
  this->GetIdent(index, (BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAFileHistoryDispT<T>::GetHistoryStyle(long index/*[in]*/, 
                                         Borland_studio_toolsapi_tlb::TOTAHistoryStyle* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetHistoryStyle"), DISPID(DISPID_UNKNOWN/*[1610743814]*/));
  TAutoArgs<1> _args;
  _args[1] = index /*[VT_I4:0]*/;
  return OutRetValSetterPtr((int*)pRetVal /*[VT_USERDEFINED:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::TOTAHistoryStyle __fastcall
IOTAFileHistoryDispT<T>::GetHistoryStyle(long index/*[in]*/)
{
  Borland_studio_toolsapi_tlb::TOTAHistoryStyle pRetVal;
  this->GetHistoryStyle(index, (Borland_studio_toolsapi_tlb::TOTAHistoryStyle*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAFileHistoryDispT<T>::GetLabelCount(long index/*[in]*/, long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetLabelCount"), DISPID(DISPID_UNKNOWN/*[1610743815]*/));
  TAutoArgs<1> _args;
  _args[1] = index /*[VT_I4:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> long __fastcall
IOTAFileHistoryDispT<T>::GetLabelCount(long index/*[in]*/)
{
  long pRetVal;
  this->GetLabelCount(index, (long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAFileHistoryDispT<T>::GetLabels(long index/*[in]*/, long labelIndex/*[in]*/, 
                                   BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetLabels"), DISPID(DISPID_UNKNOWN/*[1610743816]*/));
  TAutoArgs<2> _args;
  _args[1] = index /*[VT_I4:0]*/;
  _args[2] = labelIndex /*[VT_I4:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAFileHistoryDispT<T>::GetLabels(long index/*[in]*/, long labelIndex/*[in]*/)
{
  BSTR pRetVal;
  this->GetLabels(index, labelIndex, (BSTR*)&pRetVal);
  return pRetVal;
}

// *********************************************************************//
// DispIntf:  IInteropCodeEditorControl
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {61CD4309-303E-4A23-B260-266C2AA391FA}
// *********************************************************************//
template <class T> HRESULT __fastcall
IInteropCodeEditorControlDispT<T>::get_Text(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("Text"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OlePropertyGet(_dispid, _args));
}

template <class T> BSTR __fastcall
IInteropCodeEditorControlDispT<T>::get_Text(void)
{
  BSTR pRetVal;
  this->get_Text((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IInteropCodeEditorControlDispT<T>::set_Text(BSTR pRetVal/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("Text"), DISPID(1610743808));
  TAutoArgs<1> _args;
  _args[1] = pRetVal /*[VT_BSTR:0]*/;
  return OlePropertyPut(_dispid, _args);
}

template <class T> HRESULT __fastcall
IInteropCodeEditorControlDispT<T>::SetParent(long parent/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("SetParent"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<1> _args;
  _args[1] = parent /*[VT_I4:0]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IInteropCodeEditorControlDispT<T>::SetBounds(long left/*[in]*/, long top/*[in]*/, long width/*[in]*/
                                             , long height/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("SetBounds"), DISPID(DISPID_UNKNOWN/*[1610743811]*/));
  TAutoArgs<4> _args;
  _args[1] = left /*[VT_I4:0]*/;
  _args[2] = top /*[VT_I4:0]*/;
  _args[3] = width /*[VT_I4:0]*/;
  _args[4] = height /*[VT_I4:0]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IInteropCodeEditorControlDispT<T>::SetFocus(VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("SetFocus"), DISPID(DISPID_UNKNOWN/*[1610743812]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IInteropCodeEditorControlDispT<T>::SetFocus(void)
{
  VARIANT_BOOL pRetVal;
  this->SetFocus((VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IInteropCodeEditorControlDispT<T>::SetLocation(long left/*[in]*/, long top/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("SetLocation"), DISPID(DISPID_UNKNOWN/*[1610743813]*/));
  TAutoArgs<2> _args;
  _args[1] = left /*[VT_I4:0]*/;
  _args[2] = top /*[VT_I4:0]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IInteropCodeEditorControlDispT<T>::SetSize(long width/*[in]*/, long height/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("SetSize"), DISPID(DISPID_UNKNOWN/*[1610743814]*/));
  TAutoArgs<2> _args;
  _args[1] = width /*[VT_I4:0]*/;
  _args[2] = height /*[VT_I4:0]*/;
  return OleFunction(_dispid, _args);
}

// *********************************************************************//
// DispIntf:  IInteropCodeEditorControlCreator
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {72A5E09B-A046-47D1-95AA-15A333C7131B}
// *********************************************************************//
template <class T> HRESULT __fastcall
IInteropCodeEditorControlCreatorDispT<T>::CreateControl(Borland_studio_toolsapi_tlb::IInteropCodeEditorControl** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("CreateControl"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IInteropCodeEditorControl**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IInteropCodeEditorControl* __fastcall
IInteropCodeEditorControlCreatorDispT<T>::CreateControl(void)
{
  Borland_studio_toolsapi_tlb::IInteropCodeEditorControl* pRetVal;
  this->CreateControl((Borland_studio_toolsapi_tlb::IInteropCodeEditorControl**)&pRetVal);
  return pRetVal;
}

// *********************************************************************//
// DispIntf:  IOTARegistrationService
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4F23CBA5-3B8D-48B1-83A5-4F6E04C9F50C}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTARegistrationServiceDispT<T>::RegisterAssemblyWithRegistry(BSTR fileName/*[in]*/, 
                                                              VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("RegisterAssemblyWithRegistry"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<1> _args;
  _args[1] = fileName /*[VT_BSTR:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTARegistrationServiceDispT<T>::RegisterAssemblyWithRegistry(BSTR fileName/*[in]*/)
{
  VARIANT_BOOL pRetVal;
  this->RegisterAssemblyWithRegistry(fileName, (VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTARegistrationServiceDispT<T>::UnregisterAssemblyFromRegistry(BSTR fileName/*[in]*/, 
                                                                VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("UnregisterAssemblyFromRegistry"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<1> _args;
  _args[1] = fileName /*[VT_BSTR:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTARegistrationServiceDispT<T>::UnregisterAssemblyFromRegistry(BSTR fileName/*[in]*/)
{
  VARIANT_BOOL pRetVal;
  this->UnregisterAssemblyFromRegistry(fileName, (VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTARegistrationServiceDispT<T>::GenerateInteropAssembly(BSTR fileName/*[in]*/, BSTR* Files/*[out]*/
                                                         , VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GenerateInteropAssembly"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<2> _args;
  _args[1] = fileName /*[VT_BSTR:0]*/;
  _args[2] = Files /*[VT_BSTR:1]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTARegistrationServiceDispT<T>::GenerateInteropAssembly(BSTR fileName/*[in]*/, BSTR* Files/*[out]*/)
{
  VARIANT_BOOL pRetVal;
  this->GenerateInteropAssembly(fileName, Files, (VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTARegistrationServiceDispT<T>::GenerateInteropAssembly_2(BSTR fileName/*[in]*/, 
                                                           BSTR* Files/*[out]*/, 
                                                           BSTR AssemblyFileName/*[in]*/, 
                                                           VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GenerateInteropAssembly_2"), DISPID(DISPID_UNKNOWN/*[1610743811]*/));
  TAutoArgs<3> _args;
  _args[1] = fileName /*[VT_BSTR:0]*/;
  _args[2] = Files /*[VT_BSTR:1]*/;
  _args[3] = AssemblyFileName /*[VT_BSTR:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTARegistrationServiceDispT<T>::GenerateInteropAssembly_2(BSTR fileName/*[in]*/, 
                                                           BSTR* Files/*[out]*/, 
                                                           BSTR AssemblyFileName/*[in]*/)
{
  VARIANT_BOOL pRetVal;
  this->GenerateInteropAssembly_2(fileName, Files, AssemblyFileName, (VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

// *********************************************************************//
// DispIntf:  IOTAProjectFileStorageNotifier
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E1F55159-C7F3-4DA1-8E72-C17FA23D0C8C}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAProjectFileStorageNotifierDispT<T>::GetName(BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetName"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAProjectFileStorageNotifierDispT<T>::GetName(void)
{
  BSTR pRetVal;
  this->GetName((BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAProjectFileStorageNotifierDispT<T>::ProjectLoaded(Borland_studio_toolsapi_tlb::IOTAModule* ProjectOrGroup/*[in]*/
                                                      , BSTR Data/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("ProjectLoaded"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<2> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTAModule*)ProjectOrGroup /*[VT_USERDEFINED:1]*/;
  _args[2] = Data /*[VT_BSTR:0]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAProjectFileStorageNotifierDispT<T>::CreatingProject(Borland_studio_toolsapi_tlb::IOTAModule* ProjectOrGroup/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("CreatingProject"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTAModule*)ProjectOrGroup /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAProjectFileStorageNotifierDispT<T>::ProjectSaving(Borland_studio_toolsapi_tlb::IOTAModule* ProjectOrGroup/*[in]*/
                                                      , BSTR* Data/*[in,out]*/)
{
  _TDispID _dispid(*this, OLETEXT("ProjectSaving"), DISPID(DISPID_UNKNOWN/*[1610743811]*/));
  TAutoArgs<2> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTAModule*)ProjectOrGroup /*[VT_USERDEFINED:1]*/;
  _args[2] = Data /*[VT_BSTR:1]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAProjectFileStorageNotifierDispT<T>::ProjectClosing(Borland_studio_toolsapi_tlb::IOTAModule* ProjectOrGroup/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("ProjectClosing"), DISPID(DISPID_UNKNOWN/*[1610743812]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTAModule*)ProjectOrGroup /*[VT_USERDEFINED:1]*/;
  return OleFunction(_dispid, _args);
}

// *********************************************************************//
// DispIntf:  IOTAProjectFileStorage
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EB421DBB-D961-4041-B17D-8BFAEE4291A1}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAProjectFileStorageDispT<T>::AddNewSection(Borland_studio_toolsapi_tlb::IOTAModule* ProjectOrGroup/*[in]*/
                                              , BSTR SectionName/*[in]*/, 
                                              VARIANT_BOOL LocalProjectFile/*[in]*/, 
                                              BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("AddNewSection"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<3> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTAModule*)ProjectOrGroup /*[VT_USERDEFINED:1]*/;
  _args[2] = SectionName /*[VT_BSTR:0]*/;
  _args[3] = LocalProjectFile /*[VT_BOOL:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAProjectFileStorageDispT<T>::AddNewSection(Borland_studio_toolsapi_tlb::IOTAModule* ProjectOrGroup/*[in]*/, 
                                              BSTR SectionName/*[in]*/, 
                                              VARIANT_BOOL LocalProjectFile/*[in]*/)
{
  BSTR pRetVal;
  this->AddNewSection(ProjectOrGroup, SectionName, LocalProjectFile, (BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAProjectFileStorageDispT<T>::AddNotifier(Borland_studio_toolsapi_tlb::IOTAProjectFileStorageNotifier* Notifier/*[in]*/
                                            , long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("AddNotifier"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<1> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTAProjectFileStorageNotifier*)Notifier /*[VT_USERDEFINED:1]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> long __fastcall
IOTAProjectFileStorageDispT<T>::AddNotifier(Borland_studio_toolsapi_tlb::IOTAProjectFileStorageNotifier* Notifier/*[in]*/)
{
  long pRetVal;
  this->AddNotifier(Notifier, (long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAProjectFileStorageDispT<T>::GetNotifierCount(long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetNotifierCount"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<0> _args;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> long __fastcall
IOTAProjectFileStorageDispT<T>::GetNotifierCount(void)
{
  long pRetVal;
  this->GetNotifierCount((long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAProjectFileStorageDispT<T>::GetNotifier(long index/*[in]*/, 
                                            Borland_studio_toolsapi_tlb::IOTAProjectFileStorageNotifier** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetNotifier"), DISPID(DISPID_UNKNOWN/*[1610743811]*/));
  TAutoArgs<1> _args;
  _args[1] = index /*[VT_I4:0]*/;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAProjectFileStorageNotifier**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAProjectFileStorageNotifier* __fastcall
IOTAProjectFileStorageDispT<T>::GetNotifier(long index/*[in]*/)
{
  Borland_studio_toolsapi_tlb::IOTAProjectFileStorageNotifier* pRetVal;
  this->GetNotifier(index, (Borland_studio_toolsapi_tlb::IOTAProjectFileStorageNotifier**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAProjectFileStorageDispT<T>::RemoveNotifier(long index/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("RemoveNotifier"), DISPID(DISPID_UNKNOWN/*[1610743812]*/));
  TAutoArgs<1> _args;
  _args[1] = index /*[VT_I4:0]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAProjectFileStorageDispT<T>::GetProjectStorageData(Borland_studio_toolsapi_tlb::IOTAModule* ProjectOrGroup/*[in]*/
                                                      , BSTR SectionName/*[in]*/, 
                                                      VARIANT_BOOL LocalProjectFile/*[in]*/, 
                                                      BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetProjectStorageData"), DISPID(DISPID_UNKNOWN/*[1610743813]*/));
  TAutoArgs<3> _args;
  _args[1] = (LPDISPATCH)(Borland_studio_toolsapi_tlb::IOTAModule*)ProjectOrGroup /*[VT_USERDEFINED:1]*/;
  _args[2] = SectionName /*[VT_BSTR:0]*/;
  _args[3] = LocalProjectFile /*[VT_BOOL:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAProjectFileStorageDispT<T>::GetProjectStorageData(Borland_studio_toolsapi_tlb::IOTAModule* ProjectOrGroup/*[in]*/, 
                                                      BSTR SectionName/*[in]*/, 
                                                      VARIANT_BOOL LocalProjectFile/*[in]*/)
{
  BSTR pRetVal;
  this->GetProjectStorageData(ProjectOrGroup, SectionName, LocalProjectFile, (BSTR*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAProjectFileStorageDispT<T>::LoadNodeFromFile(BSTR fileName/*[in]*/, BSTR NodeName/*[in]*/, 
                                                 VARIANT_BOOL LocalProjectFile/*[in]*/, 
                                                 BSTR* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("LoadNodeFromFile"), DISPID(DISPID_UNKNOWN/*[1610743814]*/));
  TAutoArgs<3> _args;
  _args[1] = fileName /*[VT_BSTR:0]*/;
  _args[2] = NodeName /*[VT_BSTR:0]*/;
  _args[3] = LocalProjectFile /*[VT_BOOL:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BSTR:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> BSTR __fastcall
IOTAProjectFileStorageDispT<T>::LoadNodeFromFile(BSTR fileName/*[in]*/, BSTR NodeName/*[in]*/, 
                                                 VARIANT_BOOL LocalProjectFile/*[in]*/)
{
  BSTR pRetVal;
  this->LoadNodeFromFile(fileName, NodeName, LocalProjectFile, (BSTR*)&pRetVal);
  return pRetVal;
}

// *********************************************************************//
// DispIntf:  IOTACodeBrowsePreview
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {929C8812-4DB1-4338-B3B8-C1BE7969E2BF}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTACodeBrowsePreviewDispT<T>::GetCodePreviewInfo(long sourceLine/*[in]*/, long sourceCol/*[in]*/, 
                                                  BSTR* fileName/*[out]*/, long* offset/*[out]*/, 
                                                  long* length/*[out]*/, 
                                                  VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetCodePreviewInfo"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<5> _args;
  _args[1] = sourceLine /*[VT_I4:0]*/;
  _args[2] = sourceCol /*[VT_I4:0]*/;
  _args[3] = fileName /*[VT_BSTR:1]*/;
  _args[4] = offset /*[VT_I4:1]*/;
  _args[5] = length /*[VT_I4:1]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTACodeBrowsePreviewDispT<T>::GetCodePreviewInfo(long sourceLine/*[in]*/, long sourceCol/*[in]*/, 
                                                  BSTR* fileName/*[out]*/, long* offset/*[out]*/, 
                                                  long* length/*[out]*/)
{
  VARIANT_BOOL pRetVal;
  this->GetCodePreviewInfo(sourceLine, sourceCol, fileName, offset, length, (VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

// *********************************************************************//
// DispIntf:  IOTATimerServices
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CA12BE5C-FC9B-403A-BFB5-786562026ABD}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTATimerServicesDispT<T>::MarkElapsedTime(BSTR description/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("MarkElapsedTime"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<1> _args;
  _args[1] = description /*[VT_BSTR:0]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTATimerServicesDispT<T>::StartTimer(BSTR description/*[in]*/, BSTR category/*[in]*/, 
                                      long* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("StartTimer"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<2> _args;
  _args[1] = description /*[VT_BSTR:0]*/;
  _args[2] = category /*[VT_BSTR:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_I4:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> long __fastcall
IOTATimerServicesDispT<T>::StartTimer(BSTR description/*[in]*/, BSTR category/*[in]*/)
{
  long pRetVal;
  this->StartTimer(description, category, (long*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTATimerServicesDispT<T>::StopTimer(long timerID/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("StopTimer"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<1> _args;
  _args[1] = timerID /*[VT_I4:0]*/;
  return OleFunction(_dispid, _args);
}

// *********************************************************************//
// DispIntf:  IOTAHelpTrait
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DEE36173-1597-498A-A85A-C90BFCAE9B74}
// *********************************************************************//
// *********************************************************************//
// DispIntf:  IOTAPersonalityHelpTrait
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {914E82DB-4123-4AA8-91D9-DB105E1FEC64}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAPersonalityHelpTraitDispT<T>::ShowKeywordHelp(BSTR keyword/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("ShowKeywordHelp"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<1> _args;
  _args[1] = keyword /*[VT_BSTR:0]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAPersonalityHelpTraitDispT<T>::UnderstandsKeyword(BSTR keyword/*[in]*/, 
                                                     VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("UnderstandsKeyword"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<1> _args;
  _args[1] = keyword /*[VT_BSTR:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAPersonalityHelpTraitDispT<T>::UnderstandsKeyword(BSTR keyword/*[in]*/)
{
  VARIANT_BOOL pRetVal;
  this->UnderstandsKeyword(keyword, (VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

// *********************************************************************//
// DispIntf:  IOTAHelpServices
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {25F4CC12-EA93-4AEC-BC4A-DFDF427053B0}
// *********************************************************************//
template <class T> HRESULT __fastcall
IOTAHelpServicesDispT<T>::ShowKeywordHelp(BSTR keyword/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("ShowKeywordHelp"), DISPID(DISPID_UNKNOWN/*[1610743808]*/));
  TAutoArgs<1> _args;
  _args[1] = keyword /*[VT_BSTR:0]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAHelpServicesDispT<T>::UnderstandsKeyword(BSTR keyword/*[in]*/, 
                                             VARIANT_BOOL* pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("UnderstandsKeyword"), DISPID(DISPID_UNKNOWN/*[1610743809]*/));
  TAutoArgs<1> _args;
  _args[1] = keyword /*[VT_BSTR:0]*/;
  return OutRetValSetterPtr(pRetVal /*[VT_BOOL:1]*/, _args, OleFunction(_dispid, _args));
}

template <class T> VARIANT_BOOL __fastcall
IOTAHelpServicesDispT<T>::UnderstandsKeyword(BSTR keyword/*[in]*/)
{
  VARIANT_BOOL pRetVal;
  this->UnderstandsKeyword(keyword, (VARIANT_BOOL*)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAHelpServicesDispT<T>::ShowContextHelp(long contextID/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("ShowContextHelp"), DISPID(DISPID_UNKNOWN/*[1610743810]*/));
  TAutoArgs<1> _args;
  _args[1] = contextID /*[VT_I4:0]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAHelpServicesDispT<T>::ShowTopicHelp(BSTR topic/*[in]*/)
{
  _TDispID _dispid(*this, OLETEXT("ShowTopicHelp"), DISPID(DISPID_UNKNOWN/*[1610743811]*/));
  TAutoArgs<1> _args;
  _args[1] = topic /*[VT_BSTR:0]*/;
  return OleFunction(_dispid, _args);
}

template <class T> HRESULT __fastcall
IOTAHelpServicesDispT<T>::GetFileHelpTrait(BSTR fileName/*[in]*/, 
                                           Borland_studio_toolsapi_tlb::IOTAHelpTrait** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetFileHelpTrait"), DISPID(DISPID_UNKNOWN/*[1610743812]*/));
  TAutoArgs<1> _args;
  _args[1] = fileName /*[VT_BSTR:0]*/;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAHelpTrait**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAHelpTrait* __fastcall
IOTAHelpServicesDispT<T>::GetFileHelpTrait(BSTR fileName/*[in]*/)
{
  Borland_studio_toolsapi_tlb::IOTAHelpTrait* pRetVal;
  this->GetFileHelpTrait(fileName, (Borland_studio_toolsapi_tlb::IOTAHelpTrait**)&pRetVal);
  return pRetVal;
}

template <class T> HRESULT __fastcall
IOTAHelpServicesDispT<T>::GetPersonalityHelpTrait(BSTR personality/*[in]*/, 
                                                  Borland_studio_toolsapi_tlb::IOTAPersonalityHelpTrait** pRetVal/*[out,retval]*/)
{
  _TDispID _dispid(*this, OLETEXT("GetPersonalityHelpTrait"), DISPID(DISPID_UNKNOWN/*[1610743813]*/));
  TAutoArgs<1> _args;
  _args[1] = personality /*[VT_BSTR:0]*/;
  return OutRetValSetterPtr((LPDISPATCH*)(Borland_studio_toolsapi_tlb::IOTAPersonalityHelpTrait**)pRetVal /*[VT_USERDEFINED:2]*/, _args, OleFunction(_dispid, _args));
}

template <class T> Borland_studio_toolsapi_tlb::IOTAPersonalityHelpTrait* __fastcall
IOTAHelpServicesDispT<T>::GetPersonalityHelpTrait(BSTR personality/*[in]*/)
{
  Borland_studio_toolsapi_tlb::IOTAPersonalityHelpTrait* pRetVal;
  this->GetPersonalityHelpTrait(personality, (Borland_studio_toolsapi_tlb::IOTAPersonalityHelpTrait**)&pRetVal);
  return pRetVal;
}

// *********************************************************************//
// The following typedefs expose classes (named CoCoClassName) that       
// provide static Create() and CreateRemote(LPWSTR machineName) methods   
// for creating an instance of an exposed object. These functions can     
// be used by client wishing to automate CoClasses exposed by this        
// typelibrary.                                                           
// *********************************************************************//

// *********************************************************************//
// COCLASS DEFAULT INTERFACE CREATOR
// CoClass  : BorlandIDE
// Interface: TCOM_Object
// *********************************************************************//
typedef TCoClassCreatorT<TCOM_Object, _Object, &CLSID_BorlandIDE, &IID__Object> CoBorlandIDE;

// *********************************************************************//
// COCLASS DEFAULT INTERFACE CREATOR
// CoClass  : CodeUpdater
// Interface: TCOM_CodeUpdater
// *********************************************************************//
typedef TCoClassCreatorT<TCOM_CodeUpdater, _CodeUpdater, &CLSID_CodeUpdater, &IID__CodeUpdater> CoCodeUpdater;

// *********************************************************************//
// COCLASS DEFAULT INTERFACE CREATOR
// CoClass  : StringCollectionAdapter
// Interface: TCOM_StringCollectionAdapter
// *********************************************************************//
typedef TCoClassCreatorT<TCOM_StringCollectionAdapter, _StringCollectionAdapter, &CLSID_StringCollectionAdapter, &IID__StringCollectionAdapter> CoStringCollectionAdapter;

// *********************************************************************//
// COCLASS DEFAULT INTERFACE CREATOR
// CoClass  : DocumentationManager
// Interface: TCOM_DocumentationManager
// *********************************************************************//
typedef TCoClassCreatorT<TCOM_DocumentationManager, _DocumentationManager, &CLSID_DocumentationManager, &IID__DocumentationManager> CoDocumentationManager;

// *********************************************************************//
// COCLASS DEFAULT INTERFACE CREATOR
// CoClass  : RefactoringException
// Interface: TCOM_RefactoringException
// *********************************************************************//
typedef TCoClassCreatorT<TCOM_RefactoringException, _RefactoringException, &CLSID_RefactoringException, &IID__RefactoringException> CoRefactoringException;

// *********************************************************************//
// COCLASS DEFAULT INTERFACE CREATOR
// CoClass  : RefactoringKinds
// Interface: TCOM_RefactoringKinds
// *********************************************************************//
typedef TCoClassCreatorT<TCOM_RefactoringKinds, _RefactoringKinds, &CLSID_RefactoringKinds, &IID__RefactoringKinds> CoRefactoringKinds;

// *********************************************************************//
// COCLASS DEFAULT INTERFACE CREATOR
// CoClass  : RefactoringHelpContextIds
// Interface: TCOM_RefactoringHelpContextIds
// *********************************************************************//
typedef TCoClassCreatorT<TCOM_RefactoringHelpContextIds, _RefactoringHelpContextIds, &CLSID_RefactoringHelpContextIds, &IID__RefactoringHelpContextIds> CoRefactoringHelpContextIds;

// *********************************************************************//
// COCLASS DEFAULT INTERFACE CREATOR
// CoClass  : RefactoringEventArgs
// Interface: TCOM_RefactoringEventArgs
// *********************************************************************//
typedef TCoClassCreatorT<TCOM_RefactoringEventArgs, _RefactoringEventArgs, &CLSID_RefactoringEventArgs, &IID__RefactoringEventArgs> CoRefactoringEventArgs;

// *********************************************************************//
// COCLASS DEFAULT INTERFACE CREATOR
// CoClass  : RefactoringEvent
// Interface: TCOM_RefactoringEvent
// *********************************************************************//
typedef TCoClassCreatorT<TCOM_RefactoringEvent, _RefactoringEvent, &CLSID_RefactoringEvent, &IID__RefactoringEvent> CoRefactoringEvent;

// *********************************************************************//
// COCLASS DEFAULT INTERFACE CREATOR
// CoClass  : RefactoringRegistrarEventHandler
// Interface: TCOM_RefactoringRegistrarEventHandler
// *********************************************************************//
typedef TCoClassCreatorT<TCOM_RefactoringRegistrarEventHandler, _RefactoringRegistrarEventHandler, &CLSID_RefactoringRegistrarEventHandler, &IID__RefactoringRegistrarEventHandler> CoRefactoringRegistrarEventHandler;

// *********************************************************************//
// COCLASS DEFAULT INTERFACE CREATOR
// CoClass  : Platforms
// Interface: TCOM_Platforms
// *********************************************************************//
typedef TCoClassCreatorT<TCOM_Platforms, _Platforms, &CLSID_Platforms, &IID__Platforms> CoPlatforms;

// *********************************************************************//
// COCLASS DEFAULT INTERFACE CREATOR
// CoClass  : OTAEditorFileTypes
// Interface: TCOM_OTAEditorFileTypes
// *********************************************************************//
typedef TCoClassCreatorT<TCOM_OTAEditorFileTypes, _OTAEditorFileTypes, &CLSID_OTAEditorFileTypes, &IID__OTAEditorFileTypes> CoOTAEditorFileTypes;

// *********************************************************************//
// COCLASS DEFAULT INTERFACE CREATOR
// CoClass  : ViewActivatedEventArgs
// Interface: TCOM_ViewActivatedEventArgs
// *********************************************************************//
typedef TCoClassCreatorT<TCOM_ViewActivatedEventArgs, _ViewActivatedEventArgs, &CLSID_ViewActivatedEventArgs, &IID__ViewActivatedEventArgs> CoViewActivatedEventArgs;

// *********************************************************************//
// COCLASS DEFAULT INTERFACE CREATOR
// CoClass  : ViewNotificationEventArgs
// Interface: TCOM_ViewNotificationEventArgs
// *********************************************************************//
typedef TCoClassCreatorT<TCOM_ViewNotificationEventArgs, _ViewNotificationEventArgs, &CLSID_ViewNotificationEventArgs, &IID__ViewNotificationEventArgs> CoViewNotificationEventArgs;

// *********************************************************************//
// COCLASS DEFAULT INTERFACE CREATOR
// CoClass  : ViewActivatedEventHandler
// Interface: TCOM_ViewActivatedEventHandler
// *********************************************************************//
typedef TCoClassCreatorT<TCOM_ViewActivatedEventHandler, _ViewActivatedEventHandler, &CLSID_ViewActivatedEventHandler, &IID__ViewActivatedEventHandler> CoViewActivatedEventHandler;

// *********************************************************************//
// COCLASS DEFAULT INTERFACE CREATOR
// CoClass  : ViewNotificationEventHandler
// Interface: TCOM_ViewNotificationEventHandler
// *********************************************************************//
typedef TCoClassCreatorT<TCOM_ViewNotificationEventHandler, _ViewNotificationEventHandler, &CLSID_ViewNotificationEventHandler, &IID__ViewNotificationEventHandler> CoViewNotificationEventHandler;

// *********************************************************************//
// COCLASS DEFAULT INTERFACE CREATOR
// CoClass  : RenameNotificationEventArgs
// Interface: TCOM_RenameNotificationEventArgs
// *********************************************************************//
typedef TCoClassCreatorT<TCOM_RenameNotificationEventArgs, _RenameNotificationEventArgs, &CLSID_RenameNotificationEventArgs, &IID__RenameNotificationEventArgs> CoRenameNotificationEventArgs;

// *********************************************************************//
// COCLASS DEFAULT INTERFACE CREATOR
// CoClass  : RenameNotificationEventHandler
// Interface: TCOM_RenameNotificationEventHandler
// *********************************************************************//
typedef TCoClassCreatorT<TCOM_RenameNotificationEventHandler, _RenameNotificationEventHandler, &CLSID_RenameNotificationEventHandler, &IID__RenameNotificationEventHandler> CoRenameNotificationEventHandler;

// *********************************************************************//
// COCLASS DEFAULT INTERFACE CREATOR
// CoClass  : ModuleAddedRemovedEventArgs
// Interface: TCOM_ModuleAddedRemovedEventArgs
// *********************************************************************//
typedef TCoClassCreatorT<TCOM_ModuleAddedRemovedEventArgs, _ModuleAddedRemovedEventArgs, &CLSID_ModuleAddedRemovedEventArgs, &IID__ModuleAddedRemovedEventArgs> CoModuleAddedRemovedEventArgs;

// *********************************************************************//
// COCLASS DEFAULT INTERFACE CREATOR
// CoClass  : ModuleRenamedEventArgs
// Interface: TCOM_ModuleRenamedEventArgs
// *********************************************************************//
typedef TCoClassCreatorT<TCOM_ModuleRenamedEventArgs, _ModuleRenamedEventArgs, &CLSID_ModuleRenamedEventArgs, &IID__ModuleRenamedEventArgs> CoModuleRenamedEventArgs;

// *********************************************************************//
// COCLASS DEFAULT INTERFACE CREATOR
// CoClass  : ModuleAddedRemovedEventHandler
// Interface: TCOM_ModuleAddedRemovedEventHandler
// *********************************************************************//
typedef TCoClassCreatorT<TCOM_ModuleAddedRemovedEventHandler, _ModuleAddedRemovedEventHandler, &CLSID_ModuleAddedRemovedEventHandler, &IID__ModuleAddedRemovedEventHandler> CoModuleAddedRemovedEventHandler;

// *********************************************************************//
// COCLASS DEFAULT INTERFACE CREATOR
// CoClass  : ModuleRenamedEventHandler
// Interface: TCOM_ModuleRenamedEventHandler
// *********************************************************************//
typedef TCoClassCreatorT<TCOM_ModuleRenamedEventHandler, _ModuleRenamedEventHandler, &CLSID_ModuleRenamedEventHandler, &IID__ModuleRenamedEventHandler> CoModuleRenamedEventHandler;

// *********************************************************************//
// COCLASS DEFAULT INTERFACE CREATOR
// CoClass  : ToolboxItemEventArgs
// Interface: TCOM_ToolboxItemEventArgs
// *********************************************************************//
typedef TCoClassCreatorT<TCOM_ToolboxItemEventArgs, _ToolboxItemEventArgs, &CLSID_ToolboxItemEventArgs, &IID__ToolboxItemEventArgs> CoToolboxItemEventArgs;

// *********************************************************************//
// COCLASS DEFAULT INTERFACE CREATOR
// CoClass  : ToolboxItemAddedEventArgs
// Interface: TCOM_ToolboxItemAddedEventArgs
// *********************************************************************//
typedef TCoClassCreatorT<TCOM_ToolboxItemAddedEventArgs, _ToolboxItemAddedEventArgs, &CLSID_ToolboxItemAddedEventArgs, &IID__ToolboxItemAddedEventArgs> CoToolboxItemAddedEventArgs;

// *********************************************************************//
// COCLASS DEFAULT INTERFACE CREATOR
// CoClass  : TOTAHandle
// Interface: TCOM_TOTAHandle
// *********************************************************************//
typedef TCoClassCreatorT<TCOM_TOTAHandle, _TOTAHandle, &CLSID_TOTAHandle, &IID__TOTAHandle> CoTOTAHandle;

// *********************************************************************//
// COCLASS DEFAULT INTERFACE CREATOR
// CoClass  : gccEventArgs
// Interface: TCOM_gccEventArgs
// *********************************************************************//
typedef TCoClassCreatorT<TCOM_gccEventArgs, _gccEventArgs, &CLSID_gccEventArgs, &IID__gccEventArgs> CogccEventArgs;

// *********************************************************************//
// COCLASS DEFAULT INTERFACE CREATOR
// CoClass  : ToolboxItemEventHandler
// Interface: TCOM_ToolboxItemEventHandler
// *********************************************************************//
typedef TCoClassCreatorT<TCOM_ToolboxItemEventHandler, _ToolboxItemEventHandler, &CLSID_ToolboxItemEventHandler, &IID__ToolboxItemEventHandler> CoToolboxItemEventHandler;

// *********************************************************************//
// COCLASS DEFAULT INTERFACE CREATOR
// CoClass  : ToolboxItemAddedEventHandler
// Interface: TCOM_ToolboxItemAddedEventHandler
// *********************************************************************//
typedef TCoClassCreatorT<TCOM_ToolboxItemAddedEventHandler, _ToolboxItemAddedEventHandler, &CLSID_ToolboxItemAddedEventHandler, &IID__ToolboxItemAddedEventHandler> CoToolboxItemAddedEventHandler;

// *********************************************************************//
// COCLASS DEFAULT INTERFACE CREATOR
// CoClass  : AssemblyUnloadedEventArgs
// Interface: TCOM_AssemblyUnloadedEventArgs
// *********************************************************************//
typedef TCoClassCreatorT<TCOM_AssemblyUnloadedEventArgs, _AssemblyUnloadedEventArgs, &CLSID_AssemblyUnloadedEventArgs, &IID__AssemblyUnloadedEventArgs> CoAssemblyUnloadedEventArgs;

// *********************************************************************//
// COCLASS DEFAULT INTERFACE CREATOR
// CoClass  : AssemblyUnloadedEventHandler
// Interface: TCOM_AssemblyUnloadedEventHandler
// *********************************************************************//
typedef TCoClassCreatorT<TCOM_AssemblyUnloadedEventHandler, _AssemblyUnloadedEventHandler, &CLSID_AssemblyUnloadedEventHandler, &IID__AssemblyUnloadedEventHandler> CoAssemblyUnloadedEventHandler;

// *********************************************************************//
// COCLASS DEFAULT INTERFACE CREATOR
// CoClass  : MessageGroupEventArgs
// Interface: TCOM_MessageGroupEventArgs
// *********************************************************************//
typedef TCoClassCreatorT<TCOM_MessageGroupEventArgs, _MessageGroupEventArgs, &CLSID_MessageGroupEventArgs, &IID__MessageGroupEventArgs> CoMessageGroupEventArgs;

// *********************************************************************//
// COCLASS DEFAULT INTERFACE CREATOR
// CoClass  : MessageGroupHandler
// Interface: TCOM_MessageGroupHandler
// *********************************************************************//
typedef TCoClassCreatorT<TCOM_MessageGroupHandler, _MessageGroupHandler, &CLSID_MessageGroupHandler, &IID__MessageGroupHandler> CoMessageGroupHandler;

// *********************************************************************//
// COCLASS DEFAULT INTERFACE CREATOR
// CoClass  : FileNotificationEventArgs
// Interface: TCOM_FileNotificationEventArgs
// *********************************************************************//
typedef TCoClassCreatorT<TCOM_FileNotificationEventArgs, _FileNotificationEventArgs, &CLSID_FileNotificationEventArgs, &IID__FileNotificationEventArgs> CoFileNotificationEventArgs;

// *********************************************************************//
// COCLASS DEFAULT INTERFACE CREATOR
// CoClass  : BeforeCompileArgs
// Interface: TCOM_BeforeCompileArgs
// *********************************************************************//
typedef TCoClassCreatorT<TCOM_BeforeCompileArgs, _BeforeCompileArgs, &CLSID_BeforeCompileArgs, &IID__BeforeCompileArgs> CoBeforeCompileArgs;

// *********************************************************************//
// COCLASS DEFAULT INTERFACE CREATOR
// CoClass  : AfterCompileArgs
// Interface: TCOM_AfterCompileArgs
// *********************************************************************//
typedef TCoClassCreatorT<TCOM_AfterCompileArgs, _AfterCompileArgs, &CLSID_AfterCompileArgs, &IID__AfterCompileArgs> CoAfterCompileArgs;

// *********************************************************************//
// COCLASS DEFAULT INTERFACE CREATOR
// CoClass  : FileNotificationHandler
// Interface: TCOM_FileNotificationHandler
// *********************************************************************//
typedef TCoClassCreatorT<TCOM_FileNotificationHandler, _FileNotificationHandler, &CLSID_FileNotificationHandler, &IID__FileNotificationHandler> CoFileNotificationHandler;

// *********************************************************************//
// COCLASS DEFAULT INTERFACE CREATOR
// CoClass  : BeforeCompileHandler
// Interface: TCOM_BeforeCompileHandler
// *********************************************************************//
typedef TCoClassCreatorT<TCOM_BeforeCompileHandler, _BeforeCompileHandler, &CLSID_BeforeCompileHandler, &IID__BeforeCompileHandler> CoBeforeCompileHandler;

// *********************************************************************//
// COCLASS DEFAULT INTERFACE CREATOR
// CoClass  : AfterCompileHandler
// Interface: TCOM_AfterCompileHandler
// *********************************************************************//
typedef TCoClassCreatorT<TCOM_AfterCompileHandler, _AfterCompileHandler, &CLSID_AfterCompileHandler, &IID__AfterCompileHandler> CoAfterCompileHandler;

// *********************************************************************//
// COCLASS DEFAULT INTERFACE CREATOR
// CoClass  : OTAContainerTypes
// Interface: TCOM_OTAContainerTypes
// *********************************************************************//
typedef TCoClassCreatorT<TCOM_OTAContainerTypes, _OTAContainerTypes, &CLSID_OTAContainerTypes, &IID__OTAContainerTypes> CoOTAContainerTypes;

// *********************************************************************//
// COCLASS DEFAULT INTERFACE CREATOR
// CoClass  : OTADesignerTypes
// Interface: TCOM_OTADesignerTypes
// *********************************************************************//
typedef TCoClassCreatorT<TCOM_OTADesignerTypes, _OTADesignerTypes, &CLSID_OTADesignerTypes, &IID__OTADesignerTypes> CoOTADesignerTypes;

// *********************************************************************//
// COCLASS DEFAULT INTERFACE CREATOR
// CoClass  : OTACreatorTypes
// Interface: TCOM_OTACreatorTypes
// *********************************************************************//
typedef TCoClassCreatorT<TCOM_OTACreatorTypes, _OTACreatorTypes, &CLSID_OTACreatorTypes, &IID__OTACreatorTypes> CoOTACreatorTypes;

// *********************************************************************//
// COCLASS DEFAULT INTERFACE CREATOR
// CoClass  : OTAIDEPersonalities
// Interface: TCOM_OTAIDEPersonalities
// *********************************************************************//
typedef TCoClassCreatorT<TCOM_OTAIDEPersonalities, _OTAIDEPersonalities, &CLSID_OTAIDEPersonalities, &IID__OTAIDEPersonalities> CoOTAIDEPersonalities;

// *********************************************************************//
// COCLASS DEFAULT INTERFACE CREATOR
// CoClass  : OTAGalleryCategories
// Interface: TCOM_OTAGalleryCategories
// *********************************************************************//
typedef TCoClassCreatorT<TCOM_OTAGalleryCategories, _OTAGalleryCategories, &CLSID_OTAGalleryCategories, &IID__OTAGalleryCategories> CoOTAGalleryCategories;

// *********************************************************************//
// COCLASS DEFAULT INTERFACE CREATOR
// CoClass  : OTAFile
// Interface: TCOM_OTAFile
// *********************************************************************//
typedef TCoClassCreatorT<TCOM_OTAFile, _OTAFile, &CLSID_OTAFile, &IID__OTAFile> CoOTAFile;

// *********************************************************************//
// COCLASS DEFAULT INTERFACE CREATOR
// CoClass  : TOTAGetChildCallback
// Interface: TCOM_TOTAGetChildCallback
// *********************************************************************//
typedef TCoClassCreatorT<TCOM_TOTAGetChildCallback, _TOTAGetChildCallback, &CLSID_TOTAGetChildCallback, &IID__TOTAGetChildCallback> CoTOTAGetChildCallback;

// *********************************************************************//
// COCLASS DEFAULT INTERFACE CREATOR
// CoClass  : ComponentRenamedEventArgs
// Interface: TCOM_ComponentRenamedEventArgs
// *********************************************************************//
typedef TCoClassCreatorT<TCOM_ComponentRenamedEventArgs, _ComponentRenamedEventArgs, &CLSID_ComponentRenamedEventArgs, &IID__ComponentRenamedEventArgs> CoComponentRenamedEventArgs;

// *********************************************************************//
// COCLASS DEFAULT INTERFACE CREATOR
// CoClass  : ComponentRenamedEventHandler
// Interface: TCOM_ComponentRenamedEventHandler
// *********************************************************************//
typedef TCoClassCreatorT<TCOM_ComponentRenamedEventHandler, _ComponentRenamedEventHandler, &CLSID_ComponentRenamedEventHandler, &IID__ComponentRenamedEventHandler> CoComponentRenamedEventHandler;

// *********************************************************************//
// COCLASS DEFAULT INTERFACE CREATOR
// CoClass  : ItemEventArgs
// Interface: TCOM_ItemEventArgs
// *********************************************************************//
typedef TCoClassCreatorT<TCOM_ItemEventArgs, _ItemEventArgs, &CLSID_ItemEventArgs, &IID__ItemEventArgs> CoItemEventArgs;

// *********************************************************************//
// COCLASS DEFAULT INTERFACE CREATOR
// CoClass  : SelectedEventArgs
// Interface: TCOM_SelectedEventArgs
// *********************************************************************//
typedef TCoClassCreatorT<TCOM_SelectedEventArgs, _SelectedEventArgs, &CLSID_SelectedEventArgs, &IID__SelectedEventArgs> CoSelectedEventArgs;

// *********************************************************************//
// COCLASS DEFAULT INTERFACE CREATOR
// CoClass  : ItemEventHandler
// Interface: TCOM_ItemEventHandler
// *********************************************************************//
typedef TCoClassCreatorT<TCOM_ItemEventHandler, _ItemEventHandler, &CLSID_ItemEventHandler, &IID__ItemEventHandler> CoItemEventHandler;

// *********************************************************************//
// COCLASS DEFAULT INTERFACE CREATOR
// CoClass  : SelectedEventHandler
// Interface: TCOM_SelectedEventHandler
// *********************************************************************//
typedef TCoClassCreatorT<TCOM_SelectedEventHandler, _SelectedEventHandler, &CLSID_SelectedEventHandler, &IID__SelectedEventHandler> CoSelectedEventHandler;

// *********************************************************************//
// COCLASS DEFAULT INTERFACE CREATOR
// CoClass  : ContextEventArgs
// Interface: TCOM_ContextEventArgs
// *********************************************************************//
typedef TCoClassCreatorT<TCOM_ContextEventArgs, _ContextEventArgs, &CLSID_ContextEventArgs, &IID__ContextEventArgs> CoContextEventArgs;

// *********************************************************************//
// COCLASS DEFAULT INTERFACE CREATOR
// CoClass  : NodeEventArgs
// Interface: TCOM_NodeEventArgs
// *********************************************************************//
typedef TCoClassCreatorT<TCOM_NodeEventArgs, _NodeEventArgs, &CLSID_NodeEventArgs, &IID__NodeEventArgs> CoNodeEventArgs;

// *********************************************************************//
// COCLASS DEFAULT INTERFACE CREATOR
// CoClass  : VisibleEventArgs
// Interface: TCOM_VisibleEventArgs
// *********************************************************************//
typedef TCoClassCreatorT<TCOM_VisibleEventArgs, _VisibleEventArgs, &CLSID_VisibleEventArgs, &IID__VisibleEventArgs> CoVisibleEventArgs;

// *********************************************************************//
// COCLASS DEFAULT INTERFACE CREATOR
// CoClass  : OTAStructureType
// Interface: TCOM_OTAStructureType
// *********************************************************************//
typedef TCoClassCreatorT<TCOM_OTAStructureType, _OTAStructureType, &CLSID_OTAStructureType, &IID__OTAStructureType> CoOTAStructureType;

// *********************************************************************//
// COCLASS DEFAULT INTERFACE CREATOR
// CoClass  : OTANodeType
// Interface: TCOM_OTANodeType
// *********************************************************************//
typedef TCoClassCreatorT<TCOM_OTANodeType, _OTANodeType, &CLSID_OTANodeType, &IID__OTANodeType> CoOTANodeType;

// *********************************************************************//
// COCLASS DEFAULT INTERFACE CREATOR
// CoClass  : OTAStructureViewOptions
// Interface: TCOM_OTAStructureViewOptions
// *********************************************************************//
typedef TCoClassCreatorT<TCOM_OTAStructureViewOptions, _OTAStructureViewOptions, &CLSID_OTAStructureViewOptions, &IID__OTAStructureViewOptions> CoOTAStructureViewOptions;

// *********************************************************************//
// COCLASS DEFAULT INTERFACE CREATOR
// CoClass  : ContextEventHandler
// Interface: TCOM_ContextEventHandler
// *********************************************************************//
typedef TCoClassCreatorT<TCOM_ContextEventHandler, _ContextEventHandler, &CLSID_ContextEventHandler, &IID__ContextEventHandler> CoContextEventHandler;

// *********************************************************************//
// COCLASS DEFAULT INTERFACE CREATOR
// CoClass  : NodeEventHandler
// Interface: TCOM_NodeEventHandler
// *********************************************************************//
typedef TCoClassCreatorT<TCOM_NodeEventHandler, _NodeEventHandler, &CLSID_NodeEventHandler, &IID__NodeEventHandler> CoNodeEventHandler;

// *********************************************************************//
// COCLASS DEFAULT INTERFACE CREATOR
// CoClass  : VisibleEventHandler
// Interface: TCOM_VisibleEventHandler
// *********************************************************************//
typedef TCoClassCreatorT<TCOM_VisibleEventHandler, _VisibleEventHandler, &CLSID_VisibleEventHandler, &IID__VisibleEventHandler> CoVisibleEventHandler;
#endif  //   __TLB_NO_INTERFACE_WRAPPERS


};     // namespace Borland_studio_toolsapi_tlb

#if !defined(NO_IMPLICIT_NAMESPACE_USE)
using  namespace Borland_studio_toolsapi_tlb;
#endif

#pragma pack(pop)
#pragma option pop

#endif // Borland_Studio_ToolsAPI_TLBH
